<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C++标准模板库（STL）</title>
    <url>/butterflyblog/2023/10/22/C++%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF%E5%BA%93%EF%BC%88STL%EF%BC%89/</url>
    <content><![CDATA[<h1>C++标准模板库（STL）</h1>
<blockquote>
<p>参考来源：<a href="https://zhuanlan.zhihu.com/p/344558356">知乎：【C++】标准模板库（STL）：超快入门！算法竞赛必看！</a></p>
<p>参考来源：<a href="https://wyqz.top/p/870124582.html#toc-heading-2">C++ STL 总结-基于算法竞赛（悠享版）</a></p>
<p>2023.10.22@isSeymour</p>
</blockquote>
<h2 id="零、废话说在前头">零、废话说在前头</h2>
<h3 id="0-1-什么是C-标准模板库（STL）？">0.1 什么是C++标准模板库（STL）？</h3>
<ul>
<li>
<p><strong>标准模板库 STL</strong>（Standard Template Library），是 C++ 标准库的一部分，不需要单独安装，只需要<code>#include </code>头文件。</p>
</li>
<li>
<p>C++ 对模板（Template）支持得很好，STL 就是借助模板把常用的数据结构及其算法都实现了一遍，并且做到了<strong>数据结构和算法的分离</strong>。</p>
</li>
<li>
<p>C++ 语言的核心优势之一就是便于软件的复用。</p>
<p>C++ 语言有两个方面体现了复用：</p>
<ul>
<li>面向对象的继承和多态机制</li>
<li>通过模板的概念实现了对泛型程序设计的支持</li>
</ul>
</li>
<li>
<p>C++中的模板，就好比英语作文的模板，<strong>只换主题，不换句式和结构</strong>。对应到C++模板，就是<strong>只换类型，不换方法</strong>。</p>
</li>
</ul>
<h3 id="0-2-STL有什么优势？">0.2 STL有什么优势？</h3>
<ul>
<li>
<p>STL封装了很多实用的容器，省时省力，能够让你将更多心思放到解决问题的步骤上，而非费力去实现数据结构诸多细节上，<strong>像极了用python时候的酣畅淋漓</strong>。</p>
<p>P.S. 如果你对STL源码颇有兴趣，那你不妨拜读C++大师侯捷的杰作《<strong>STL源码剖析</strong>》。</p>
</li>
</ul>
<h3 id="0-3-STL六大部件">0.3 STL六大部件</h3>
<ul>
<li>容器（Containers）</li>
<li>分配器（Allocators）</li>
<li>算法（Algorithm）</li>
<li>迭代器（Iterators）</li>
<li>适配器（Adapters）</li>
<li>仿函数（Functors）</li>
</ul>
<p>要真正提高C++编程效率，需要将STL六大部件结合使用，才能大放异彩。所谓部件，也即是零件，需要将这六大零件组装在一起，配合使用，整整齐齐。</p>
<blockquote>
<p>STL的基本使用：</p>
<ul>
<li><code>vector</code></li>
<li><code>set</code></li>
<li><code>string</code></li>
<li><code>map</code></li>
<li><code>queue</code></li>
<li><code>priority_queue</code></li>
<li><code>stack</code></li>
<li><code>pair</code></li>
<li><code>algorithm</code></li>
</ul>
</blockquote>
<h1>第一部分 数据结构</h1>
<h2 id="一、vector">一、<code>vector</code></h2>
<blockquote>
<p>vector（矢量），是一种「<strong>变长数组</strong>」，即“自动改变数组长度的数组”。</p>
<p>注意：<strong>在局部区域中（比如局部函数里面）开vector数组，是在堆空间里面开的。</strong></p>
<p>在局部区域开数组是在栈空间开的，而栈空间比较小，如果开了非常长的数组就会发生爆栈。</p>
<p>故局部区域<strong>不可以</strong>开大长度数组，但是可以开大长度<code>vector</code>。</p>
</blockquote>
<h3 id="1-1-初始化">1.1 初始化</h3>
<p>要使用vector，需要添加头文件：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br></pre></td></tr></table></figure>
<h4 id="（1）一维初始化">（1）一维初始化</h4>
<p>像定义变量一样定义vector变量。类型名可以是int、double、char、struct，也可以是STL容器：vector、set、queue。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">vector&lt;类型名&gt; 变量名;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用例</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a;		<span class="comment">//定义了一个名为a的一维数组,数组存储int类型数据</span></span><br><span class="line">vector&lt;<span class="type">double</span>&gt; b;	<span class="comment">//定义了一个名为b的一维数组，数组存储double类型数据</span></span><br><span class="line">vector&lt;node&gt; c;		<span class="comment">//定义了一个名为c的一维数组，数组存储结构体类型数据，node是结构体类型</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt; &gt; name;	<span class="comment">//注意：&gt; &gt;之间要加空格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定长度和初始值的初始化</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n)</span></span>;	<span class="comment">//定义一个长度为n的数组，初始值默认为0，下标范围[0, n - 1]</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n, <span class="number">1</span>)</span></span>;<span class="comment">//v[0]到v[n-1]所有的元素初始值均为1</span></span><br><span class="line"><span class="comment">//注意：指定数组长度之后（指定长度后的数组就相当于正常的数组了）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化中有多个元素</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;<span class="comment">//数组a中有五个元素，数组长度就为5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 拷贝初始化</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(a)</span></span>;		<span class="comment">//两个数组中的类型必须相同,a和b都是长度为n+1，初始值都为0的数组</span></span><br></pre></td></tr></table></figure>
<h4 id="（2）二维初始化">（2）二维初始化</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义第一维固定长度为5，第二维可变化的二维数组。</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v[<span class="number">5</span>];</span><br><span class="line"><span class="comment">//注意：行不可变（只有5行）, 而列可变,可以在指定行添加元素</span></span><br><span class="line"><span class="comment">//第一维固定长度为5，第二维长度可以改变</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 理解：</span></span><br><span class="line"><span class="comment">// 长度为5的v数组，数组中存储的是vector&lt;int&gt;数据类型，而该类型就是数组形式，故v为二维数组。</span></span><br><span class="line"><span class="comment">// 其中每个数组元素均为空，因为没有指定长度，所以第二维可变长。可以进行下述操作：</span></span><br><span class="line">v[<span class="number">1</span>].<span class="built_in">push_back</span>(<span class="number">2</span>);</span><br><span class="line">v[<span class="number">2</span>].<span class="built_in">push_back</span>(<span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 行列均可变</span></span><br><span class="line"><span class="comment">// 初始化二维均可变长数组</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; v;<span class="comment">//定义一个行和列均可变的二维数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以在v数组里面装多个数组</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; t1&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; t2&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">v.<span class="built_in">push_back</span>(t1);</span><br><span class="line">v.<span class="built_in">push_back</span>(t2);</span><br><span class="line">v.<span class="built_in">push_back</span>(&#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;) <span class="comment">// &#123;3, 4, 5, 6&#125;可以作为vector的初始化,相当于一个无名vector</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 行列长度均固定 n + 1行 m + 1列初始值为0</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt; &gt; <span class="built_in">a</span>(n + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m + <span class="number">1</span>, <span class="number">0</span>));</span><br></pre></td></tr></table></figure>
<h3 id="1-2-方法函数">1.2 方法函数</h3>
<h4 id="（1）函数清单">（1）函数清单</h4>
<p><strong>c指定为数组名称</strong>，含义中会注明算法复杂度。</p>
<table>
<thead>
<tr>
<th>方法函数</th>
<th>含义</th>
<th>时间复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>c.front()</code></td>
<td>返回第一个数据</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>c.back()</code></td>
<td>返回数组中的最后一个数据</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>c.pop_back()</code></td>
<td>删除最后一个数据</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>c.push_back(element)</code></td>
<td>在尾部加一个数据</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>c.size()</code></td>
<td>返回实际数据个数（unsigned类型）</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>c.clear()</code></td>
<td>清空</td>
<td>O(N)，N为元素个数</td>
</tr>
<tr>
<td><code>c.resize(n, v)</code></td>
<td>改变数组大小为<code>n</code>,<code>n</code>个空间数值赋为<code>v</code>，如果没有默认赋值为<code>0</code></td>
<td></td>
</tr>
<tr>
<td><code>c.insert(it, x)</code></td>
<td>向任意迭代器<code>it</code>插入一个元素<code>x</code></td>
<td>O(N)</td>
</tr>
<tr>
<td><code>c.erase(__position)</code></td>
<td>删除一个元素</td>
<td></td>
</tr>
<tr>
<td><code>c.erase(first,last)</code></td>
<td>删除<code>[first,last)</code>的所有元素</td>
<td>O(N)</td>
</tr>
<tr>
<td><code>c.begin()</code></td>
<td>返回首元素的迭代器（通俗来说就是地址）</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>c.end()</code></td>
<td>返回最后一个元素后一个位置的迭代器（地址）</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>c.empty()</code></td>
<td>判断是否为空，为空返回真，反之返回假</td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<blockquote>
<p>注意：</p>
<ul>
<li>
<p><code>end()</code>返回的是最后一个元素的后一个位置的地址，不是最后一个元素的地址，<strong>所有STL容器均是如此</strong></p>
</li>
<li>
<p>删除一个的使用示例</p>
<ul>
<li><code>v.erase(v.begin()+3);</code>删除v[3]</li>
</ul>
</li>
</ul>
</blockquote>
<h4 id="（2）排序">（2）排序</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span>(c.<span class="built_in">begin</span>(), c.<span class="built_in">end</span>());</span><br><span class="line"><span class="comment">// 对所有元素进行排序，如果要对指定区间进行排序，可以对sort()里面的参数进行加减改动。</span></span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="built_in">sort</span>(a.<span class="built_in">begin</span>() + <span class="number">1</span>, a.<span class="built_in">end</span>()); <span class="comment">// 对[1, n]区间进行从小到大排序</span></span><br></pre></td></tr></table></figure>
<h3 id="1-3-访问">1.3 访问</h3>
<h4 id="（1）下标">（1）下标</h4>
<p>一维数组的下标是<code>从0到v.size()−1</code>，访问之外的数会出现越界错误</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//添加元素</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    vi.<span class="built_in">push_back</span>(i);</span><br><span class="line"></span><br><span class="line"><span class="comment">//下标访问 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    cout &lt;&lt; vi[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br></pre></td></tr></table></figure>
<h4 id="（2）迭代器">（2）迭代器</h4>
<p>类似指针一样的访问 ，首先需要声明迭代器变量，和声明指针变量一样</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//迭代器访问</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator it;   </span><br><span class="line"><span class="comment">//相当于声明了一个迭代器类型的变量it</span></span><br><span class="line"><span class="comment">//通俗来说就是声明了一个指针变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方式一：</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator it = vi.<span class="built_in">begin</span>(); </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    cout &lt;&lt; *(it + i) &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方式二：</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator it;</span><br><span class="line"><span class="keyword">for</span>(it = vi.<span class="built_in">begin</span>(); it != vi.<span class="built_in">end</span>();it ++)</span><br><span class="line">    cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="comment">//vi.end()指向尾元素地址的下一个地址</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：</p>
<ul>
<li><code>vi[i]</code> 和 <code>*(vi.begin() + i)</code> 等价</li>
<li><code>vector</code>和<code>string</code>的<code>STL</code>容器支持<code>*(it + i)</code>的元素访问，其它容器可能也可以支持这种方式访问，但用的不多，可自行尝试</li>
</ul>
</blockquote>
<h3 id="1-4-常见用途">1.4 常见用途</h3>
<p><strong>（1）储存数据</strong></p>
<p>vector本身可以作为数组使用，而且在一些元素个数不确定的场合可以很好地节省空间。</p>
<p><strong>（2）用邻接表存储图</strong></p>
<p>使用vector实现邻接表，更为简单。</p>
<h2 id="二、stack">二、<code>stack</code></h2>
<p>栈为数据结构的一种，是STL中实现的一个先进后出，后进先出的容器。</p>
<h3 id="2-1-初始化">2.1 初始化</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//头文件需要添加</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明</span></span><br><span class="line">stack&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">stack&lt;string&gt; s;</span><br><span class="line">stack&lt;node&gt; s;<span class="comment">//node是结构体类型</span></span><br></pre></td></tr></table></figure>
<h3 id="2-2-方法函数">2.2 方法函数</h3>
<h4 id="（1）函数清单-2">（1）函数清单</h4>
<table>
<thead>
<tr>
<th>方法函数</th>
<th>含义</th>
<th>时间复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>s.push(ele)</code></td>
<td>元素<code>ele</code>入栈</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>s.pop()</code></td>
<td>移除栈顶元素</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>s.top()</code></td>
<td>取得栈顶元素（但不删除）</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>s.empty()</code></td>
<td>检测栈内是否为空，空为真</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>s.size()</code></td>
<td>返回栈内元素的个数</td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h3 id="2-3-栈遍历">2.3 栈遍历</h3>
<h4 id="栈遍历">栈遍历</h4>
<ul>
<li>栈只能对栈顶元素进行操作，如果想要进行遍历，只能将栈中元素一个个取出来存在数组中</li>
</ul>
<h4 id="数组模拟栈进行遍历">数组模拟栈进行遍历</h4>
<ul>
<li>通过一个<strong>数组</strong>对栈进行模拟，一个存放下标的变量<code>top</code>模拟指向栈顶的指针。</li>
<li><strong>特点：</strong> 比<code>STL</code>的<code>stack</code>速度更快，遍历元素方便</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> s[<span class="number">100</span>]; <span class="comment">// 栈 从左至右为栈底到栈顶</span></span><br><span class="line"><span class="type">int</span> tt = <span class="number">-1</span>; <span class="comment">// tt 代表栈顶指针,初始栈内无元素，tt为-1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//入栈 </span></span><br><span class="line">    s[++tt] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 出栈</span></span><br><span class="line"><span class="type">int</span> top_element = s[tt--]; </span><br><span class="line"></span><br><span class="line"><span class="comment">//入栈操作示意</span></span><br><span class="line"><span class="comment">//  0  1  2  3  4  5  </span></span><br><span class="line"><span class="comment">//                tt</span></span><br><span class="line"><span class="comment">//出栈后示意</span></span><br><span class="line"><span class="comment">//  0  1  2  3  4 </span></span><br><span class="line"><span class="comment">//              tt</span></span><br></pre></td></tr></table></figure>
<h2 id="三、queue">三、<code>queue</code></h2>
<p>队列是一种先进先出的数据结构。</p>
<h3 id="3-1-初始化">3.1 初始化</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="comment">//定义初始化</span></span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br></pre></td></tr></table></figure>
<h3 id="3-2-方法函数">3.2 方法函数</h3>
<table>
<thead>
<tr>
<th>方法函数</th>
<th>含义</th>
<th>时间复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>q.front()</code></td>
<td>返回队首元素</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>q.back()</code></td>
<td>返回队尾元素</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>q.push(element)</code></td>
<td>尾部添加一个元素<code>element</code> 进队</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>q.pop()</code></td>
<td>删除第一个元素 出队</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>q.size()</code></td>
<td>返回队列中元素个数，返回值类型<code>unsigned int</code></td>
<td>O(1)</td>
</tr>
<tr>
<td><code>q.empty()</code></td>
<td>判断是否为空，队列为空，返回<code>true</code></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h3 id="3-3-队列模拟">3.3 队列模拟</h3>
<p>使用<code>q[]</code>数组模拟队列<br>
<code>hh</code>表示队首元素的下标，初始值为<code>0</code><br>
<code>tt</code>表示队尾元素的下标，初始值为<code>-1</code>，表示刚<strong>开始队列为空</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> hh = <span class="number">0</span>,tt = <span class="number">-1</span>;</span><br><span class="line">	<span class="comment">// 入队 </span></span><br><span class="line">    q[++tt] = <span class="number">1</span>;</span><br><span class="line">    q[++tt] = <span class="number">2</span>; </span><br><span class="line">    <span class="comment">// 将所有元素出队 </span></span><br><span class="line">    <span class="keyword">while</span>(hh &lt;= tt) &#123;</span><br><span class="line">        <span class="type">int</span> t = q[hh++];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h2 id="四、deque">四、<code>deque</code></h2>
<p>首尾都可插入和删除的队列为双端队列。</p>
<h3 id="4-1-初始化">4.1 初始化</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//添加头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="comment">//初始化定义</span></span><br><span class="line">deque&lt;<span class="type">int</span>&gt; dq;</span><br></pre></td></tr></table></figure>
<h3 id="4-2-方法函数">4.2 方法函数</h3>
<table>
<thead>
<tr>
<th>方法函数</th>
<th>含义</th>
<th>时间复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>push_back(x)/push_front(x)</code></td>
<td>把<code>x</code>插入队尾后 / 队首</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>back()/front()</code></td>
<td>返回队尾 / 队首元素</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>pop_back() / pop_front()</code></td>
<td>删除队尾 / 队首元素</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>erase(iterator it)</code></td>
<td>删除双端队列中的某一个元素</td>
<td></td>
</tr>
<tr>
<td><code>erase(iterator first,iterator last)</code></td>
<td>删除双端队列中<code>[first,last)</code>中的元素</td>
<td></td>
</tr>
<tr>
<td><code>empty()</code></td>
<td>判断deque是否空</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>size()</code></td>
<td>返回deque的元素数量</td>
<td>O(1)</td>
</tr>
<tr>
<td><code>clear()</code></td>
<td>清空deque</td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h3 id="4-3-排序">4.3 排序</h3>
<p>deque可以进行排序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//从小到大</span></span><br><span class="line"><span class="built_in">sort</span>(q.<span class="built_in">begin</span>(), q.<span class="built_in">end</span>())</span><br><span class="line"><span class="comment">//从大到小排序</span></span><br><span class="line"><span class="built_in">sort</span>(q.<span class="built_in">begin</span>(), q.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());<span class="comment">//deque里面的类型需要是int型</span></span><br><span class="line"><span class="built_in">sort</span>(q.<span class="built_in">begin</span>(), q.<span class="built_in">end</span>(), <span class="built_in">greater</span>());<span class="comment">//高版本C++才可以用</span></span><br></pre></td></tr></table></figure>
<h2 id="五、priority-queue">五、<code>priority_queue</code></h2>
<p>优先队列是在正常队列的基础上加了优先级，保证每次的队首元素都是优先级最大的。</p>
<p>可以实现每次从优先队列中取出的元素都是队列中<strong>优先级最大</strong>的一个。</p>
<p>它的底层是通过<strong>堆</strong>来实现的。</p>
<h3 id="5-1-初始化">5.1 初始化</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="comment">//初始化定义</span></span><br><span class="line">priority_queue&lt;<span class="type">int</span>&gt; q;</span><br></pre></td></tr></table></figure>
<h3 id="5-2-函数方法">5.2 函数方法</h3>
<table>
<thead>
<tr>
<th>方法函数</th>
<th>含义</th>
<th>时间复杂度</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>q.top()</code></td>
<td>访问队首元素</td>
<td></td>
</tr>
<tr>
<td><code>q.push()</code></td>
<td>入队</td>
<td></td>
</tr>
<tr>
<td><code>q.pop()</code></td>
<td>堆顶（队首）元素出队</td>
<td></td>
</tr>
<tr>
<td><code>q.size()</code></td>
<td>队列元素个数</td>
<td></td>
</tr>
<tr>
<td><code>q.empty()</code></td>
<td>是否为空</td>
<td></td>
</tr>
<tr>
<td><code>empty()</code></td>
<td>判断deque是否空</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<ul>
<li><strong>注意</strong>没有<code>clear()</code>！</li>
<li>优先队列只能通过<code>top()</code>访问队首元素（优先级最高的元素）</li>
</ul>
</blockquote>
<h3 id="5-3-设置优先级">5.3 设置优先级</h3>
<h4 id="5-3-1-基本数据类型的优先级">5.3.1 基本数据类型的优先级</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">priority_queue&lt;<span class="type">int</span>&gt; pq; <span class="comment">// 默认大根堆, 即每次取出的元素是队列中的最大值</span></span><br><span class="line">priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt; &gt; q; <span class="comment">// 小根堆, 每次取出的元素是队列中的最小值</span></span><br></pre></td></tr></table></figure>
<p><strong>参数解释：</strong></p>
<ul>
<li><strong>第二个参数：</strong><br>
<code>vector&lt; int &gt;</code> 是用来承载底层数据结构堆的容器，若优先队列中存放的是<code>double</code>型数据，就要填<code>vector&lt; double &gt;</code><br>
<strong>总之存的是什么类型的数据，就相应的填写对应类型。同时也要改动第三个参数里面的对应类型。</strong></li>
<li><strong>第三个参数：</strong><br>
<code>less&lt; int &gt;</code> 表示数字大的优先级大，堆顶为最大的数字<br>
<code>greater&lt; int &gt;</code>表示数字小的优先级大，堆顶为最小的数字<br>
<strong>int代表的是数据类型，也要填优先队列中存储的数据类型</strong></li>
</ul>
<h5 id="1-基础写法（非常常用）">1. 基础写法（非常常用）</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">priority_queue&lt;<span class="type">int</span>&gt; q1; <span class="comment">// 默认大根堆, 即每次取出的元素是队列中的最大值</span></span><br><span class="line">priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, less&lt;<span class="type">int</span>&gt; &gt; q2; <span class="comment">// 大根堆, 每次取出的元素是队列中的最大值，同第一行</span></span><br><span class="line">priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt; &gt; q3; <span class="comment">// 小根堆, 每次取出的元素是队列中的最小值</span></span><br></pre></td></tr></table></figure>
<h5 id="2-自定义排序（不常见，主要是写着麻烦）">2. 自定义排序（不常见，主要是写着麻烦）</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">cmp1</span> &#123;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &gt; y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cmp2</span> &#123;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> <span class="type">int</span> x,<span class="type">const</span> <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, cmp1&gt; q1; <span class="comment">// 小根堆</span></span><br><span class="line">priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, cmp2&gt; q2; <span class="comment">// 大根堆</span></span><br></pre></td></tr></table></figure>
<h4 id="5-3-2-结构体优先级设置">5.3.2 结构体优先级设置</h4>
<p>优先队列中存储结构体类型，必须要设置优先级，即结构体的比较运算（因为优先队列的堆中要比较大小，才能将对应最大或者最小元素移到堆顶）。</p>
<ul>
<li>优先级设置可以定义在<strong>结构体内</strong>进行小于号重载，也可以定义在<strong>结构体外</strong>。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//要排序的结构体（存储在优先队列里面的）</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 优先队列的定义</span></span><br><span class="line">priority_queue&lt;Point&gt; q;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>版本一：自定义全局比较规则</strong></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义的比较结构体</span></span><br><span class="line"><span class="comment">//注意：cmp是个结构体 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">cmp</span> &#123;<span class="comment">//自定义堆的排序规则 </span></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> Point&amp; a,<span class="type">const</span> Point&amp; b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.x &lt; b.x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//初始化定义， </span></span><br><span class="line">priority_queue&lt;Point, vector&lt;Point&gt;, cmp&gt; q; <span class="comment">// x大的在堆顶</span></span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><strong>版本二：直接在结构体里面写</strong></p>
<p>因为是在结构体内部自定义的规则，一旦需要比较结构体，自动调用结构体内部重载运算符规则。</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方式一</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    <span class="keyword">friend</span> <span class="type">bool</span> <span class="keyword">operator</span> &lt; (Point a, Point b) &#123;	<span class="comment">//为两个结构体参数，结构体调用一定要写上friend</span></span><br><span class="line">        <span class="keyword">return</span> a.x &lt; b.x;<span class="comment">//按x从小到大排，x大的在堆顶</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方式二</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> Point &amp;a) <span class="type">const</span> &#123;<span class="comment">//直接传入一个参数，不必要写friend</span></span><br><span class="line">        <span class="keyword">return</span> x &lt; a.x;<span class="comment">//按x升序排列，x大的在堆顶</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：</strong> 优先队列自定义排序规则和<code>sort()</code>函数定义<code>cmp</code>函数很相似，但是最后返回的情况是<strong>相反</strong>的。即相同的符号，最后定义的排列顺序是完全相反的。<br>
所以只需要记住<code>sort</code>的排序规则和优先队列的排序规则是相反的就可以了。</p>
</blockquote>
<h3 id="5-4-存储特殊类型的优先级">5.4 存储特殊类型的优先级</h3>
<h4 id="存储pair类型">存储pair类型</h4>
<ul>
<li>排序规则：<br>
默认先对<code>pair</code>的<code>first</code>进行降序排序，然后再对<code>second</code>降序排序<br>
对<code>first</code>先排序，大的排在前面，如果<code>first</code>元素相同，再对<code>second</code>元素排序，保持大的在前面。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; &gt;q;</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;<span class="number">7</span>, <span class="number">8</span>&#125;);</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;<span class="number">7</span>, <span class="number">9</span>&#125;);</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">8</span>, <span class="number">7</span>));</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        cout &lt;&lt; q.<span class="built_in">top</span>().first &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; q.<span class="built_in">top</span>().second &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">结果：</span><br><span class="line"><span class="number">8</span> <span class="number">7</span></span><br><span class="line"><span class="number">7</span> <span class="number">9</span></span><br><span class="line"><span class="number">7</span> <span class="number">8</span></span><br></pre></td></tr></table></figure>
<h2 id="六、map">六、<code>map</code></h2>
<p>未完待续…</p>
<h1>第二部分 算法</h1>
<h2 id="1-排序sort">1.排序sort</h2>
<p>未完待续…</p>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>STL</tag>
      </tags>
  </entry>
  <entry>
    <title>AAMS-同济教务系统</title>
    <url>/butterflyblog/2023/07/29/AAMS-%E5%90%8C%E6%B5%8E%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1>AAMS-同济教务系统</h1>
<blockquote>
<p><font color=red>网址入口：</font><a class="btn-beautify blue larger" href="http://isseymour.cn/" 
  title="AAMS-同济教务系统"><i class="far fa-hand-point-right"></i><span>AAMS-同济教务系统</span></a></p>
<p><font color=red>说明：账号密码请询问站长，谢谢配合！</font></p>
</blockquote>
<h3 id="0x01-AAMS是什么？">0x01 AAMS是什么？</h3>
<ul>
<li>Academic Affairs Management System</li>
<li>教务管理系统</li>
</ul>
<p>本次项目致力于搭建一个有数据库支持的、前后端分离的教务管理系统。</p>
<h3 id="0x02-技术栈">0x02 技术栈</h3>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams1.png" alt="aams技术栈"></p>
<ul>
<li>前端：Vue 2.x、Vue-Router、ElementUI、Axios</li>
<li>后端：Django、DRF、JWT</li>
<li>数据库：MySQL</li>
</ul>
<p>本次项目采用前后端分离的架构，前端采用 VUE 框架，后端采用Django 框架，前后端通过 AJAX 技术进行连接。</p>
<p>后端主要管理数据库、数据查询、数据操作等功能，构建数据模型、与数据库交互、业务流程处理、网络请求接收并响应等功能。其中网络请求部分，通过传输 JSON 格式数据给前端，前端接收 JSON 格式数据后，把数据传给前端渲染的 data 进行渲染并呈现给用户。</p>
<p>前端是 SPA 单页面应用，功能跳转通过 vue-router 来处理，本地身份认证与路由拦截也通过 vue-router 处理。其中关于网络请求有单独的文件结构，简洁明了。美化工作由 elementUI 和少量原生的 CSS 来处理。</p>
<h3 id="0x03-效果展示">0x03 效果展示</h3>
<h4 id="3-1-学生端">3.1 学生端</h4>
<h5 id="3-1-1-首页">3.1.1 首页</h5>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams2.png" alt="学生端首页"></p>
<p>说明：</p>
<p>（1）登录成功提示；</p>
<p>（2）主页分为头部信息、左侧菜单栏、中间主内容区域；</p>
<p>（3）主页会自动获取最近的几条通知广告，进行自动播放；</p>
<p>（4）右上角的“我的信息”可以退出登录；</p>
<p>（5）“通知公告”处可以打开通知查看详情；</p>
<p>（6）本学期进度是一些个人信息，其中进度圈是指当前的学期阶段（分为5阶段，2是开放选课阶段，未到选课阶段时，无法选课）。</p>
<h5 id="3-1-2-全校课程">3.1.2 全校课程</h5>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams3.png" alt="全校课程"></p>
<p>说明：</p>
<p>（1）可以输入学期代码、下拉选择校区，再点击查询；</p>
<p>（2）在右下角有每页几条、跳转数据、直接跳转数据的功能；</p>
<p>（3）每次查询会给出查询结果，是否成功查询、网络出错等。</p>
<h5 id="3-1-3-个人选课">3.1.3 个人选课</h5>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams4.png" alt="个人选课1"></p>
<p>说明：</p>
<p>（1）刚进入时，显示当前没有对您开放的选课，可以刷新；</p>
<p>（2）刷新若有选课会展示选课的轮次，以供选择；</p>
<p>（3）进入选课有确认阅读选课信息界面。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams5.png" alt="个人选课2"></p>
<p>说明：</p>
<p>（1）进入选课界面后，初始时，没有任何数据；</p>
<p>（2）点击“添加课程”，会在选课列表里添加所有可选的课程；</p>
<p>（3）下拉有在线课表的功能，可以查看；</p>
<p>（4）选课列表里的每个课程可以查看，然后进行具体课程班级的选择；</p>
<p>（5）前端自动进行选课是否冲突的判断，不冲突则选课成功，冲突会给出提示；</p>
<p>（6）选好的课程后，可以刷新课表，在下拉课表里查看当前的课程表；</p>
<p>（7）已选的课程会变成“深绿色”的课程序号，未选是“浅绿色”的课程序号；</p>
<p>（8）再次点击已选的课程，会进行退课，退课前会先提示是否确认退课操作；</p>
<p>（9）课程会自动排在课程表里对应时间位置，并写清楚课程名、教师、教室。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams6.png" alt="个人选课3"></p>
<p>说明：</p>
<p>（1）进入我的课表页面，点击左上角“学生课表”旁边的“刷新”；</p>
<p>（2）下拉有表格的课程列表，信息更加全面。</p>
<h5 id="3-1-4-成绩查询">3.1.4 成绩查询</h5>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams9.png" alt="成绩查询"></p>
<p>说明：</p>
<p>（1）会向后端查询当前账号的所有成绩单；</p>
<p>（2）成绩会按照学期先后进行排序展示，你可以点击“学期编号”旁边的箭头，更改排序的先后顺序；</p>
<p>教师端有录入成绩的功能（后面会展示）。</p>
<h4 id="3-2-教师端">3.2 教师端</h4>
<h5 id="3-2-1-首页">3.2.1 首页</h5>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams10.png" alt="教师端首页"></p>
<p>说明：</p>
<p>（1）该页面大体内容和学生端类似，为了作为区分，我更改了外围的主色调；</p>
<p>（2）教师端的侧边菜单栏功能与学生端不同。</p>
<p>（3）部分通知不一样，部分通知可能并不是发给教师，所以教师看不到。</p>
<h5 id="3-2-2-我的授课">3.2.2 我的授课</h5>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams12.png" alt="我的授课"></p>
<p>说明：</p>
<p>（1）教师授课的课程都会在该页面显示。</p>
<h5 id="3-2-3-录入成绩">3.2.3 录入成绩</h5>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams11.png" alt="录入成绩"></p>
<p>说明：</p>
<p>（1）教师可在该页面录入成绩；</p>
<p>（2）录入成绩有学期阶段限制，不是处于第5阶段：学期结束阶段，无法录入；</p>
<h3 id="0x04-杂谈">0x04 杂谈</h3>
<h4 id="4-1-心得">4.1 心得</h4>
<p>本次项目，我很早就开始准备了，也是最初一直学了好久的 B 站课程，我前端选的是 VUE，在 B 站上选了一个播放量比较大的，每天有空就学，也因为比较感兴趣，学的不算枯燥，会同时记录 notes，防止自己看了一遍就忘了，就白学了。（视频链接：<a href="https://www.bilibili.com/video/BV1Zy4y1K7SH/">b站尚硅谷Vue2.0+Vue3.0</a>）</p>
<p>尤其计算机操作类的课程，都是很容易生疏，因此，我每天看完的内容，一定会总结一下。大概在 5 月初的样子，把 VUE 教程看完了，对前端感觉了解深刻了很多。同时因为有了这次的经历，对自学新的知识开始转变思想，也比较有信心通过自学能学会新技术。后端原本打算使用Java，但是由于我没有学过 Java，可能 5 月才开始学，会有点晚了。所以，转向使用已学过的 Python 做后端，在 Flask 和 Django 之间，选择了 Django，主要是看重他的框架比较成型，也好让我对后端基本框架有一个更加成熟完备的了解，便于以后更好的学习其他后端框架。同时比较好的是 Django 不需要我直接操作数据库，这点对于我这个还没有学过数据库的同学来说，无疑是最大的好处。我的后端学的不如前端扎实，毕竟学前端时间也长，而学后端的时间少不说，还缺乏比较全面的教程。</p>
<p>在学完前端和后端基本框架之后，我开始着手做这个项目了。做项目的过程中，又引发很多问题。比如说遇到关于登陆后的认证问题，我就去学习了一下 JWT 认证，了解了原理，然后自己再编写；遇到关于后端规范化数据格式，我学习了 DRF，采用 APIView 和序列化器，使得交互数据非常简洁明了；遇到跨域请求问题，学习了解决跨域问题的前端、后端方法。</p>
<p>经历这么一遭，最终也是做好了，也算是比较满意吧。其实我发现，热爱很重要，其实想想学习的这一路还是比较痛苦的，但是由于迫切希望看到结果，我也一直快马加鞭的学了下来。希望以后还能保持这份热爱，继续前行！</p>
<h4 id="4-2-认知">4.2 认知</h4>
<p>最后，关于分析国内外的 web 技术，我可能说不出太多认知。我仅说说我学过的这些技术中，我的一些看法吧。</p>
<p>前端技术 vue 是尤雨溪开发出来的一套框架。我其实比较惊喜能够在计算机的某种技术里看到中国人的名字放在第一位。我的体会一直是中国在追赶国外的新兴技术，我们也能做到很好的使用，但是总是缺少开发新兴技术的人。所以，Vue 的出现，让我感到惊喜！</p>
<p>其他 web 技术，我了解的不多，我目前听到的说法是：中国比较庞大的 web 技术生态是微信生态系统，微信提供了许多 API 和开发工具，允许开发人员在其平台上构建应用程序和服务。国外比较多用的也几乎都是类似微信的一些社交媒体，如 Twitter、Facebook、Instagram 等。</p>
<p>我一直认为，能否推动某种技术大力发展取决于它的受众面是否广阔。希望今后能看到更多以中国人名字排头的 web 技术！</p>
]]></content>
      <categories>
        <category>开发项目</category>
      </categories>
      <tags>
        <tag>前后端分离</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/butterflyblog/2024/02/29/404/</url>
    <content><![CDATA[<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"><title>页面没有找到 | isSeymour</title><meta name="author" content="isSeymour"><meta name="copyright" content="isSeymour"><meta name="format-detection" content="telephone=no"><meta name="theme-color" content="#ffffff"><meta name="description" content="志之所趋，无远弗届，穷山距海，不能限也。">
<meta property="og:type" content="website">
<meta property="og:title" content="isSeymour">
<meta property="og:url" content="https://isseymour.github.io/butterflyblog/404.html">
<meta property="og:site_name" content="isSeymour">
<meta property="og:description" content="志之所趋，无远弗届，穷山距海，不能限也。">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/T4.jpg">
<meta property="article:author" content="isSeymour">
<meta property="article:tag" content="博客, 个人网站">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/T4.jpg"><link rel="shortcut icon" href="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/IC1010.ico"><link rel="canonical" href="https://isseymour.github.io/butterflyblog/404.html"><link rel="preconnect" href="//cdn.jsdelivr.net"/><link rel="preconnect" href="//busuanzi.ibruce.info"/><link rel="stylesheet" href="/butterflyblog/css/index.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css" media="print" onload="this.media='all'"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fancyapps/ui/dist/fancybox.min.css" media="print" onload="this.media='all'"><script>const GLOBAL_CONFIG = { 
  root: '/butterflyblog/',
  algolia: undefined,
  localSearch: {"path":"/butterflyblog/search.xml","preload":true,"languages":{"hits_empty":"找不到您查询的内容：${query}"}},
  translate: undefined,
  noticeOutdate: undefined,
  highlight: {"plugin":"highlighjs","highlightCopy":true,"highlightLang":true,"highlightHeightLimit":300},
  copy: {
    success: '复制成功',
    error: '复制错误',
    noSupport: '浏览器不支持'
  },
  relativeDate: {
    homepage: false,
    post: false
  },
  runtime: '天',
  date_suffix: {
    just: '刚刚',
    min: '分钟前',
    hour: '小时前',
    day: '天前',
    month: '个月前'
  },
  copyright: undefined,
  lightbox: 'fancybox',
  Snackbar: undefined,
  source: {
    justifiedGallery: {
      js: 'https://cdn.jsdelivr.net/npm/flickr-justified-gallery/dist/fjGallery.min.js',
      css: 'https://cdn.jsdelivr.net/npm/flickr-justified-gallery/dist/fjGallery.min.css'
    }
  },
  isPhotoFigcaption: true,
  islazyload: false,
  isAnchor: false,
  percent: {
    toc: true,
    rightside: true,
  }
}</script><script id="config-diff">var GLOBAL_CONFIG_SITE = {
  title: '页面没有找到',
  isPost: false,
  isHome: false,
  isHighlightShrink: false,
  isToc: false,
  postUpdate: '2024-02-29 20:56:55'
}</script><noscript><style type="text/css">
  #nav {
    opacity: 1
  }
  .justified-gallery img {
    opacity: 1
  }

  #recent-posts time,
  #post-meta time {
    display: inline !important
  }
</style></noscript><script>(win=>{
    win.saveToLocal = {
      set: function setWithExpiry(key, value, ttl) {
        if (ttl === 0) return
        const now = new Date()
        const expiryDay = ttl * 86400000
        const item = {
          value: value,
          expiry: now.getTime() + expiryDay,
        }
        localStorage.setItem(key, JSON.stringify(item))
      },

      get: function getWithExpiry(key) {
        const itemStr = localStorage.getItem(key)

        if (!itemStr) {
          return undefined
        }
        const item = JSON.parse(itemStr)
        const now = new Date()

        if (now.getTime() > item.expiry) {
          localStorage.removeItem(key)
          return undefined
        }
        return item.value
      }
    }
  
    win.getScript = url => new Promise((resolve, reject) => {
      const script = document.createElement('script')
      script.src = url
      script.async = true
      script.onerror = reject
      script.onload = script.onreadystatechange = function() {
        const loadState = this.readyState
        if (loadState && loadState !== 'loaded' && loadState !== 'complete') return
        script.onload = script.onreadystatechange = null
        resolve()
      }
      document.head.appendChild(script)
    })
  
    win.getCSS = (url,id = false) => new Promise((resolve, reject) => {
      const link = document.createElement('link')
      link.rel = 'stylesheet'
      link.href = url
      if (id) link.id = id
      link.onerror = reject
      link.onload = link.onreadystatechange = function() {
        const loadState = this.readyState
        if (loadState && loadState !== 'loaded' && loadState !== 'complete') return
        link.onload = link.onreadystatechange = null
        resolve()
      }
      document.head.appendChild(link)
    })
  
      win.activateDarkMode = function () {
        document.documentElement.setAttribute('data-theme', 'dark')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#0d0d0d')
        }
      }
      win.activateLightMode = function () {
        document.documentElement.setAttribute('data-theme', 'light')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#ffffff')
        }
      }
      const t = saveToLocal.get('theme')
    
          if (t === 'dark') activateDarkMode()
          else if (t === 'light') activateLightMode()
        
      const asideStatus = saveToLocal.get('aside-status')
      if (asideStatus !== undefined) {
        if (asideStatus === 'hide') {
          document.documentElement.classList.add('hide-aside')
        } else {
          document.documentElement.classList.remove('hide-aside')
        }
      }
    
    const detectApple = () => {
      if(/iPad|iPhone|iPod|Macintosh/.test(navigator.userAgent)){
        document.documentElement.classList.add('apple')
      }
    }
    detectApple()
    })(window)</script><link rel="stylesheet" href="/butterflyblog/code/style.css"><meta name="generator" content="Hexo 6.3.0"></head><body><div id="sidebar"><div id="menu-mask"></div><div id="sidebar-menus"><div class="avatar-img is-center"><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/T4.jpg" onerror="onerror=null;src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/friend_404.gif'" alt="avatar"/></div><div class="sidebar-site-data site-data is-center"><a href="/butterflyblog/archives/"><div class="headline">文章</div><div class="length-num">36</div></a><a href="/butterflyblog/tags/"><div class="headline">标签</div><div class="length-num">24</div></a><a href="/butterflyblog/categories/"><div class="headline">分类</div><div class="length-num">14</div></a></div><hr/><div class="menus_items"><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-solid fa-book"></i><span> 文章</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/archives/"><i class="fa-fw fa-solid fa-timeline"></i><span> 总览</span></a></li><li><a class="site-page child" href="/butterflyblog/tags/"><i class="fa-fw fa-sharp fa-solid fa-hashtag"></i><span> 标签</span></a></li><li><a class="site-page child" href="/butterflyblog/categories/"><i class="fa-fw fa-sharp fa-solid fa-folder"></i><span> 分类</span></a></li></ul></div><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-sharp fa-solid fa-list"></i><span> 功能</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/ctf/"><i class="fa-fw fa-solid fa-shield-halved"></i><span> CTF</span></a></li><li><a class="site-page child" href="/butterflyblog/music/"><i class="fa-fw fa-solid fa-music"></i><span> 音乐</span></a></li><li><a class="site-page child" href="/butterflyblog/tools/"><i class="fa-fw fa-solid fa-screwdriver-wrench"></i><span> 下载</span></a></li><li><a class="site-page child" href="/butterflyblog/link/"><i class="fa-fw fa-solid fa-paper-plane"></i><span> 链接</span></a></li></ul></div><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-regular fa-user"></i><span> 关于</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/about/"><i class="fa-fw fa-regular fa-user"></i><span> 关于我</span></a></li><li><a class="site-page child" href="/butterflyblog/message/"><i class="fa-fw fa-solid fa-message"></i><span> 留言板</span></a></li><li><a class="site-page child" href="/butterflyblog/develop/"><i class="fa-fw fa-brands fa-windows"></i><span> 开发日志</span></a></li></ul></div></div></div></div><div class="error404" id="body-wrap"><header class="not-top-img" id="page-header"><nav id="nav"><span id="blog-info"><a href="/butterflyblog/" title="isSeymour"><span class="site-name">isSeymour</span></a></span><div id="menus"><div id="search-button"><a class="site-page social-icon search" href="javascript:void(0);"><i class="fas fa-search fa-fw"></i><span> 搜索</span></a></div><div class="menus_items"><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-solid fa-book"></i><span> 文章</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/archives/"><i class="fa-fw fa-solid fa-timeline"></i><span> 总览</span></a></li><li><a class="site-page child" href="/butterflyblog/tags/"><i class="fa-fw fa-sharp fa-solid fa-hashtag"></i><span> 标签</span></a></li><li><a class="site-page child" href="/butterflyblog/categories/"><i class="fa-fw fa-sharp fa-solid fa-folder"></i><span> 分类</span></a></li></ul></div><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-sharp fa-solid fa-list"></i><span> 功能</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/ctf/"><i class="fa-fw fa-solid fa-shield-halved"></i><span> CTF</span></a></li><li><a class="site-page child" href="/butterflyblog/music/"><i class="fa-fw fa-solid fa-music"></i><span> 音乐</span></a></li><li><a class="site-page child" href="/butterflyblog/tools/"><i class="fa-fw fa-solid fa-screwdriver-wrench"></i><span> 下载</span></a></li><li><a class="site-page child" href="/butterflyblog/link/"><i class="fa-fw fa-solid fa-paper-plane"></i><span> 链接</span></a></li></ul></div><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-regular fa-user"></i><span> 关于</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/about/"><i class="fa-fw fa-regular fa-user"></i><span> 关于我</span></a></li><li><a class="site-page child" href="/butterflyblog/message/"><i class="fa-fw fa-solid fa-message"></i><span> 留言板</span></a></li><li><a class="site-page child" href="/butterflyblog/develop/"><i class="fa-fw fa-brands fa-windows"></i><span> 开发日志</span></a></li></ul></div></div><div id="toggle-menu"><a class="site-page" href="javascript:void(0);"><i class="fas fa-bars fa-fw"></i></a></div></div></nav></header><div id="error-wrap"><div class="error-content"><div class="error-img"><img src="https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png" alt="Page not found"></div><div class="error-info"><h1 class="error_title">404</h1><div class="error_subtitle">Page Not Found - 地铁线路出错</div></div></div></div></div><div id="rightside"><div id="rightside-config-hide"><button id="darkmode" type="button" title="浅色和深色模式转换"><i class="fas fa-adjust"></i></button><button id="hide-aside-btn" type="button" title="单栏和双栏切换"><i class="fas fa-arrows-alt-h"></i></button></div><div id="rightside-config-show"><button id="rightside_config" type="button" title="设置"><i class="fas fa-cog fa-spin"></i></button><button id="go-up" type="button" title="回到顶部"><span class="scroll-percent"></span><i class="fas fa-arrow-up"></i></button></div></div><div><script src="/butterflyblog/js/utils.js"></script><script src="/butterflyblog/js/main.js"></script><script src="https://cdn.jsdelivr.net/npm/@fancyapps/ui/dist/fancybox.umd.min.js"></script><div class="js-pjax"></div><script id="canvas_nest" defer="defer" color="0,0,255" opacity="0.7" zIndex="-1" count="99" mobile="false" src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/dist/canvas-nest.min.js"></script><script id="click-heart" src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/dist/click-heart.min.js" async="async" mobile="false"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css" media="print" onload="this.media='all'"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/metingjs/dist/Meting.min.js"></script><script async data-pjax src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script></div><div id="local-search"><div class="search-dialog"><nav class="search-nav"><span class="search-dialog-title">搜索</span><span id="loading-status"></span><button class="search-close-button"><i class="fas fa-times"></i></button></nav><div class="is-center" id="loading-database"><i class="fas fa-spinner fa-pulse"></i><span>  数据库加载中</span></div><div class="search-wrap"><div id="local-search-input"><div class="local-search-box"><input class="local-search-box--input" placeholder="搜索文章" type="text"/></div></div><hr/><div id="local-search-results"></div></div></div><div id="search-mask"></div><script src="/butterflyblog/js/search/local-search.js"></script></div></body></html>]]></content>
  </entry>
  <entry>
    <title>JWT身份认证原理</title>
    <url>/butterflyblog/2023/07/26/JWT%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1>JWT身份认证原理</h1>
<blockquote>
<h4 id="官网：Json-Web-Token">官网：<a href="https://jwt.io/">Json Web Token</a></h4>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/jwt1.png" alt="JWT官方"></p>
</blockquote>
<h3 id="0x01-认证原理">0x01 认证原理</h3>
<p>JWT，Json Web Token。用户登陆成功后，服务端返回一个 jwt 的 token，服务端不储存，客户端储存。此后客户端每次请求，都带上 token。服务端会 jwt校验 token 的有效性。优点显而易见，是不需要在服务端储存 token，服务端只需要做校验有效性的工作即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/jwt2.png" alt="JWT官方解释"></p>
<p><strong>JWT 格式：</strong></p>
<p>点分三段的字符串：</p>
<p><strong>第一段：HEADER</strong></p>
<p>base64url 加密的密文，可解密。</p>
<p>jwt 头部，包含说明第三段不可解密的编码算法名 HS256、字段数据类型标识 JWT。</p>
<p><strong>第二段：PAYLOAD</strong></p>
<p>base64url 加密的密文，可解密。</p>
<p>jwt 数据，包含自定义的数据。</p>
<p><strong>第三段：VERIFY SIGNATURE</strong></p>
<p>HS256 加密的密文，无法解密</p>
<p>校验签名，第一段密文.第二段密文“盐”进行 HS256 加密，生成密文，再做base64url 加密。</p>
<h3 id="0x02-代码实例">0x02 代码实例</h3>
<p>为了实现用户登录之后的身份认证和授权管理，采用 JWT 认证。</p>
<p><code>pip install pyjwt</code></p>
<h4 id="颁发-token">颁发 token</h4>
<p><code>release.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_token</span>(<span class="params">payload,timeout=<span class="number">30</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    创建token的部分</span></span><br><span class="line"><span class="string">    payload 外部传入payload，即用户信息在外部写，传入这里输出token即可</span></span><br><span class="line"><span class="string">    timeout 超时时间，默认30s</span></span><br><span class="line"><span class="string">    返回值：token</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 构造header</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;alg&quot;</span>:<span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">        <span class="string">&quot;typ&quot;</span>:<span class="string">&quot;jwt&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#构造payload</span></span><br><span class="line">    payload[<span class="string">&#x27;exp&#x27;</span>] = datetime.datetime.utcnow() + datetime.timedelta(seconds=timeout)</span><br><span class="line">    token = jwt.encode(payload=payload,key=settings.SECRET_KEY,algorithm=<span class="string">&quot;HS256&quot;</span>,headers=headers)</span><br><span class="line">    <span class="keyword">return</span> token</span><br></pre></td></tr></table></figure>
<h4 id="认证-token">认证 token</h4>
<p><code>auth.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> rest_framework.authentication <span class="keyword">import</span> BaseAuthentication</span><br><span class="line"><span class="keyword">from</span> rest_framework.exceptions <span class="keyword">import</span> AuthenticationFailed</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">from</span> jwt <span class="keyword">import</span> exceptions</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JwtAuthentication</span>(<span class="title class_ inherited__">BaseAuthentication</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">authenticate</span>(<span class="params">self, request</span>):</span><br><span class="line">        token = request.META.get(<span class="string">&quot;HTTP_AAMS_TOKEN&quot;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = jwt.decode(token, settings.SECRET_KEY, algorithms=<span class="string">&quot;HS256&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> exceptions.ExpiredSignatureError:</span><br><span class="line">            <span class="keyword">raise</span> AuthenticationFailed(&#123;<span class="string">&quot;code&quot;</span>: <span class="number">400</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;token已失效&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">except</span> jwt.DecodeError:</span><br><span class="line">            <span class="keyword">raise</span> AuthenticationFailed(&#123;<span class="string">&quot;code&quot;</span>: <span class="number">400</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;token认证失败&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">raise</span> AuthenticationFailed(&#123;<span class="string">&quot;code&quot;</span>: <span class="number">400</span>, <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;token无效&quot;</span>&#125;)</span><br><span class="line">        <span class="comment"># 这个return是会放行的，并不是直接返回。</span></span><br><span class="line">        <span class="comment"># 这里的意思是会把payload和token挂载在request上</span></span><br><span class="line">        <span class="comment"># payload:储存了username(用户账号)和exp(过期时间)，挂载在request.user</span></span><br><span class="line">        <span class="comment"># token:储存了token信息，挂载在request.auth上</span></span><br><span class="line">        <span class="keyword">return</span> (payload, token)</span><br></pre></td></tr></table></figure>
<h4 id="配置在全局">配置在全局</h4>
<p>若是要哪个请求需要认证才能进行后续业务，那么：</p>
<p><code>views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> myserver.mytoken.auth <span class="keyword">import</span> JwtAuthentication</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">aView</span>(...):</span><br><span class="line">	authentication_class = [JwtAuthentication,]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self,request</span>):</span><br><span class="line">        ..</span><br></pre></td></tr></table></figure>
<p>因为基本上所有的请求，都是要认证再进行业务的。所以可以配置在</p>
<p><code>settings.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">SECRET_KEY = <span class="string">&quot;xxxxxxxxxxxx自己设置即可xxxxxxxxxxxxx&quot;</span>	<span class="comment"># 前面设置的密钥（盐）</span></span><br><span class="line"></span><br><span class="line">REST_FRAMEWORK = [</span><br><span class="line">    <span class="string">&quot;DEFAULT_AUTHENTICATION_CLASS&quot;</span>:[</span><br><span class="line">        <span class="string">&quot;myserver.mytoken.JwtAuthentication&quot;</span>,</span><br><span class="line">    ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>注意，要在登陆视图函数取消认证配置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LoginView</span>(...):</span><br><span class="line">    authentication_class = [] <span class="comment">#这里设置的优先级会高于全局设置，所以最终Login会取消认证的操作，直接放行</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">...</span>):</span><br></pre></td></tr></table></figure>
<h4 id="login视图函数">login视图函数</h4>
<p><code>views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.views.decorators.csrf <span class="keyword">import</span> ensure_csrf_cookie</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"><span class="keyword">from</span> .mytoken.release <span class="keyword">import</span> create_token</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Major,User</span><br><span class="line"><span class="keyword">from</span> .serializers <span class="keyword">import</span> CourseSerializer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Login</span>(<span class="title class_ inherited__">APIView</span>):</span><br><span class="line">    authentication_classes = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self,request</span>):</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&quot;code&quot;</span>:<span class="number">400</span>, <span class="string">&quot;msg&quot;</span>:<span class="string">&quot;后端没有login的get&quot;</span>&#125;,status=status.HTTP_200_OK)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">self,request</span>):</span><br><span class="line">        username = request.POST.get(<span class="string">&quot;username&quot;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&quot;password&quot;</span>)</span><br><span class="line"></span><br><span class="line">        exists = User.objects.<span class="built_in">filter</span>(username=username,password=password).exists()</span><br><span class="line">        <span class="keyword">if</span> exists:</span><br><span class="line">            token = create_token(&#123;<span class="string">&quot;username&quot;</span>:username&#125;)</span><br><span class="line">            res = &#123;</span><br><span class="line">                <span class="string">&quot;code&quot;</span>:<span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span>:<span class="string">&quot;登陆成功！&quot;</span>,</span><br><span class="line">                <span class="string">&quot;data&quot;</span>:&#123;</span><br><span class="line">                    <span class="string">&quot;aams-token&quot;</span>:token,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Response(res,status=status.HTTP_200_OK)</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">&quot;code&quot;</span>:<span class="number">400</span>, <span class="string">&quot;msg&quot;</span>:<span class="string">&quot;登陆失败！&quot;</span>&#125;,status=status.HTTP_400_BAD_REQUEST)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>若想一天不失效，可以：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">token = create_token(&#123;<span class="string">&quot;username&quot;</span>:username&#125;,timeout=<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>)    <span class="comment">#一天不失效</span></span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="0x03-认证测试">0x03 认证测试</h3>
<p>正如前面所说，我们采用JWT认证，那么测试登录和认证十分重要。</p>
<p>在第一次登录成功之后，应该由后端颁发一个token（我的系统命名为aams-token）。此后，每次网络请求必须带上这个aams-token作为请求头，后端会在请求头里取到aams-token，由中间件进行认证拦截，认证成功则会放行，否则请求失败。</p>
<h4 id="登录测试">登录测试</h4>
<p>首先看一下能否在登录成功后得到一个正确的token：</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/jwt3.png" alt="登陆测试"></p>
<h4 id="认证测试">认证测试</h4>
<p>除登录API，随便选择一个API，发起请求，分别看在没有token和带有token的情况下，会收到什么响应：</p>
<p>注：以下所有API的response都是自行设计的code和msg。</p>
<p>为了方便测试，我只采用了少量的code（同时也尽量贴合状态码的原意）和msg。</p>
<blockquote>
<p>code 状态码：200 处理成功；400 处理失败；301 重定向；202 接收处理但等待创建。</p>
<p>msg 状态信息：解释每种情况下的具体信息。</p>
</blockquote>
<h5 id="情况1：不带token">情况1：不带token</h5>
<p>如下图，可见code状态码为400，msg状态信息为token认证失败。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/jwt4.png" alt="情况1：不带token"></p>
<h5 id="情况2：带失效的token">情况2：带失效的token</h5>
<p>如下图，可见code状态码为400，msg状态信息为token已失效。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/jwt5.png" alt="情况2：带失效的token"></p>
<h5 id="情况3：带有效的token">情况3：带有效的token</h5>
<p>如下图，可见code状态码为200，msg状态信息为获取成功。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/jwt6.png" alt="情况3：带有效的token"></p>
]]></content>
      <categories>
        <category>Web技术</category>
      </categories>
      <tags>
        <tag>身份认证</tag>
      </tags>
  </entry>
  <entry>
    <title>CC++习题与知识</title>
    <url>/butterflyblog/2022/12/24/CC++%E4%B9%A0%E9%A2%98%E4%B8%8E%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h2 id="CC-习题与知识">CC++习题与知识</h2>
<p>[TOC]</p>
<h3 id="【1】输入错误处理">【1】输入错误处理</h3>
<h4 id="cin-int-型变量（C">cin &gt;&gt; int 型变量（C++)</h4>
<p><strong>三种情况：</strong></p>
<ol>
<li>输入非法：非数字、超上下限</li>
<li>输入合法，但不在用户要求范围内</li>
<li>输入合法且在用户要求范围内 √</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;请输入x的值[0-100] : &quot;</span>;</span><br><span class="line">		cin &gt;&gt; x;</span><br><span class="line">		<span class="keyword">if</span> (!cin.<span class="built_in">good</span>()) &#123;			<span class="comment">//或！cin. /cin.fail()</span></span><br><span class="line">			cin.<span class="built_in">clear</span>();			<span class="comment">//清除内部错误状态标记位</span></span><br><span class="line">			cin.<span class="built_in">ignore</span>(<span class="number">65536</span>, <span class="string">&#x27;\n&#x27;</span>);<span class="comment">//清除缓冲区中字符，到\n为止，最多清65536个，可改</span></span><br><span class="line">			<span class="keyword">continue</span>;				<span class="comment">//也可#include &lt;limits&gt;后INT_MAX，或直接2147483647，</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; x &lt;= <span class="number">100</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">/*cin.ignore(cin.rdbuf()-&gt;in_avail(),&#x27;\n&#x27;); </span></span><br><span class="line"><span class="comment">	返回缓冲区中现有字符数</span></span><br><span class="line"><span class="comment">	VS  :可用</span></span><br><span class="line"><span class="comment">	Dev :无论缓冲区中现有多少字符，均返回0，不可用</span></span><br><span class="line"><span class="comment">  cin.ignore(numeric_limits&lt;streamsize&gt;::max(),&#x27;\n&#x27;);</span></span><br><span class="line"><span class="comment">	返回流缓冲区的最大容量</span></span><br><span class="line"><span class="comment">	VS  :直接可用（64位整数）</span></span><br><span class="line"><span class="comment">		当 #include &lt;Window.h&gt; 时不可用</span></span><br><span class="line"><span class="comment">	Dev :加 #include &lt;limits&gt;（32位整数）</span></span><br></pre></td></tr></table></figure>
<p>实际上也可不要continue，改用else if</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;请输入x的值[0-100] : &quot;</span>;</span><br><span class="line">		cin &gt;&gt; x;</span><br><span class="line">		<span class="keyword">if</span> (!cin.<span class="built_in">good</span>()) &#123;</span><br><span class="line">			cin.<span class="built_in">clear</span>();</span><br><span class="line">			cin.<span class="built_in">ignore</span>(<span class="number">65536</span>, <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; x &lt;= <span class="number">100</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p><strong>模板：</strong></p>
<p>while (1) {<br>
提示并输入x<br>
if (输入错误) {<br>
<strong>清除错误标记</strong><br>
<strong>清空缓冲区</strong><br>
}<br>
<strong>else</strong> if (x &gt;= 0 &amp;&amp; x &lt;= 100)<br>
break;<br>
}</p>
<h4 id="scanf-“-d”-int变量-C方式">scanf(“%d”, &amp;int变量)  (C方式)</h4>
<p><strong>scanf返回值：<strong>正确按指定格式输入变量的个数，也即</strong>能正确接收到值的变量个数</strong>。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;请输入x的值[0-100] : &quot;</span>);</span><br><span class="line">		ret = ;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x) != <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="built_in">getchar</span>()!=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                ;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; x &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;输入有错[ret=%d x=%d],请重新输入\n&quot;</span>, ret, x); <span class="comment">//这句不一定要，看情况</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">/*scanf(&quot;%*[^\n]&quot;); 清缓冲区</span></span><br><span class="line"><span class="comment">  setbuf(stdin,NULL); 清缓冲区时，setbuf可用，但是只能用一次</span></span><br><span class="line"><span class="comment">  char ch;</span></span><br><span class="line"><span class="comment">  while(((ch=getchar())!=EOF) &amp;&amp; ch != &#x27;\n&#x27;)</span></span><br><span class="line"><span class="comment">  	; 也是正确的，EOF = end of file,暂时不了解，可避免用.dat文件重定向输入会出问题（否则死循环非法）</span></span><br></pre></td></tr></table></figure>
<h4 id="cin-与-scanf-在输入超上下限时有差异">==cin 与 scanf 在输入超上下限时有差异==</h4>
<p>**cin	:**状态 false，值上限/随机</p>
<p>**scanf:**无状态观察，返回正确的1，截断赋值</p>
<h4 id="由此引申出错误输入处理的通用规则">由此引申出错误输入处理的通用规则</h4>
<ol>
<li>
<p>上述处理规则适用于各种int</p>
<p>不含char/unsigned char，因为输入方式不同。（只是说，运算时可以当作一字节整数处理）</p>
</li>
<li>
<p>如何判断char/unsigned char 型的输入错误？</p>
</li>
<li>
<p>如何判断float/double 型的输入错误？</p>
</li>
<li>
<p>如何判断bool 型的输入错误？</p>
</li>
</ol>
<h4 id="计算机的思维">计算机的思维</h4>
<ol>
<li>读入1.1时，读完&quot;1&quot;正确，&quot;.1&quot;后续留在缓冲区</li>
<li>读入126abc，同理</li>
</ol>
<p>所以一般来说，我们都依次处理每个输入，</p>
<p>若本次输入正确，后续则留在缓冲区</p>
<p>否则，清空全部缓冲区</p>
<h4 id="其他问题">其他问题</h4>
<ol>
<li>
<p>对于多个输入，有没有标准处理非法？</p>
<p>没有</p>
</li>
<li>
<p>无特殊约定下的错误处理准则？</p>
<p>一次读一个，cin若false则清空缓冲区，否则不清</p>
</li>
<li>
<p>在实际应用中，如何尽可能地避免输入错误？</p>
<p>多选择，少输入，从用户角度避免输入错误，而不是错误后纠正</p>
</li>
</ol>
<h3 id="【2】打印月历">【2】打印月历</h3>
<h4 id="闰年表达式">闰年表达式</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">leap = (y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span> || y % <span class="number">400</span> == <span class="number">0</span>)? <span class="number">1</span> : <span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<h4 id="控制输出">控制输出</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(week == <span class="number">6</span>)</span><br><span class="line">    cout &lt;&lt; endl;		<span class="comment">//周六换行</span></span><br><span class="line">week = (++week) % <span class="number">7</span>;	<span class="comment">//使得week在0-6间反复</span></span><br></pre></td></tr></table></figure>
<h3 id="【3】光标移动">【3】光标移动</h3>
<h4 id="键盘键">键盘键</h4>
<ol>
<li>
<p>普通字符：</p>
<p>一键单码（ASCII码）</p>
</li>
<li>
<p>箭头键：</p>
<p>一键双码</p>
<p>224 + 72/80/75/77（上下左右）</p>
<p>​			H  P   K   M</p>
</li>
</ol>
<h4 id="用户选项与参数用法">用户选项与参数用法</h4>
<p>有时比如用户要输入的选项是0-6，那我们可以用这种选项来作为必要的参数输入给函数，控制函数的某种功能是否开启</p>
<h4 id="习惯培养">习惯培养</h4>
<ol>
<li>
<p>多用<strong>符号常量（宏定义）<strong>和</strong>全局常量（const)</strong></p>
<p>对于一些固定的参数，虽然说对于本题固定，但是尽量不要写死参数</p>
<p>不允许使用全局变量，但是鼓励多用全局常量</p>
</li>
<li>
<p><strong>条件运算符</strong></p>
<p>对于只有两个出口的函数，往往可以用？：来代替，简化代码，看起来也方便</p>
</li>
<li>
<p>多条件的int 整数选择，用<strong>switch-case</strong></p>
</li>
<li>
<p>循环的选择，用1，用loop？</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(loop)&#123;</span><br><span class="line">    sel = <span class="built_in">menu</span>();</span><br><span class="line">    <span class="keyword">switch</span>(sel)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            <span class="built_in">move</span>(hout, <span class="number">0</span>, sel-<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            <span class="built_in">move</span>(hout, <span class="number">1</span>, sel-<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            loop = <span class="number">0</span>;	<span class="comment">//巧妙</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(loop)&#123;</span><br><span class="line">    <span class="keyword">switch</span>(_getch())&#123;</span><br><span class="line">    	<span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;l&#x27;</span>:				<span class="comment">//两个连用，遇到break才会出switch</span></span><br><span class="line">        	<span class="keyword">if</span>(++x &gt; MAX_X)</span><br><span class="line">                x = rool ? <span class="number">1</span> : MAX_X;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;J&#x27;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;j&#x27;</span>:</span><br><span class="line">            ...</span><br><span class="line">        	...</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        	<span class="keyword">continue</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">224</span>:</span><br><span class="line">	<span class="keyword">if</span>(!move_by_arrow)</span><br><span class="line">        <span class="keyword">continue</span>;	<span class="comment">//奇妙控制是否能够箭头，在要动用的前面截路，加个判断+continue</span></span><br><span class="line">	<span class="keyword">switch</span>(_getch())&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">72</span>:<span class="comment">//&#x27;H&#x27;</span></span><br><span class="line">            <span class="comment">//上</span></span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">break</span>;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="【4】递归分解正整数">【4】递归分解正整数</h3>
<h4 id="预备知识">预备知识</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">-2147483648</span>, b = -a;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;<span class="comment">//得到-2147483648</span></span><br><span class="line">cout &lt;&lt; -a &lt;&lt; endl;<span class="comment">//得到-2147483648</span></span><br><span class="line">cout &lt;&lt; b &lt;&lt; endl;<span class="comment">//得到-2147483648</span></span><br></pre></td></tr></table></figure>
<h4 id="正序">正序</h4>
<p>输入：12345</p>
<p>输出：1 2 3 4 5</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">convert</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n/<span class="number">10</span>)</span><br><span class="line">        <span class="built_in">convert</span>(n/<span class="number">10</span>);</span><br><span class="line">    cout &lt;&lt; (<span class="type">char</span>)(<span class="string">&#x27;0&#x27;</span> + n%<span class="number">10</span>) &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//记住 整数转字符 输出的方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="逆序">逆序</h4>
<p>输入：12345</p>
<p>输出：5 4 3 2 1</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">convert</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; (<span class="type">char</span>)(<span class="string">&#x27;0&#x27;</span> + n%<span class="number">10</span>) &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//把输出放前面，会导致先输出个位数字！</span></span><br><span class="line">    <span class="keyword">if</span>(n/<span class="number">10</span>)</span><br><span class="line">        <span class="built_in">convert</span>(n/<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C/C++ 必要记忆知识点</title>
    <url>/butterflyblog/2022/12/25/CC++%20%E5%BF%85%E8%A6%81%E8%AE%B0%E5%BF%86%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<h3 id="C-C-必要记忆知识点">C/C++ 必要记忆知识点</h3>
<h3 id="常用简记">常用简记</h3>
<h4 id="一、头文件-主要针对C">一、头文件(主要针对C++)</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//防止VS安全报错</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//C++ 输入输出流</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">cout &lt;&lt;  ...  &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//C 方式输入输出流(包含文件流)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line"><span class="built_in">fopen</span>(...);		<span class="built_in">fcolse</span>(...);</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++ 输出格式控制符</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line">cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">5</span>) &lt;&lt; ...</span><br><span class="line"></span><br><span class="line"><span class="comment">//C++ 文件输入输出流</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="function">ifstream <span class="title">in</span><span class="params">(<span class="string">&quot;a.txt&quot;</span>,ios::in)</span></span>;</span><br><span class="line"><span class="function">ofstream <span class="title">out</span><span class="params">(<span class="string">&quot;b.txt&quot;</span>,ios::out)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符数组处理函数库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span><span class="comment">//C++</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span><span class="comment">//C 方式</span></span></span><br><span class="line"><span class="built_in">strcpy</span>(s1,s2);</span><br><span class="line"><span class="built_in">strcmp</span>(s1,s2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//数学函数库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span><span class="comment">//C++ </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span><span class="comment">//C 方式</span></span></span><br><span class="line"><span class="built_in">sqrt</span>(x);</span><br><span class="line"><span class="built_in">exp</span>(<span class="number">10</span>);	<span class="built_in">pow</span>(<span class="number">2.717</span>,<span class="number">10</span>);</span><br><span class="line"><span class="built_in">log</span>(<span class="number">2.717</span>);	<span class="built_in">log10</span>(<span class="number">100</span>);<span class="comment">//分别以e、10为底</span></span><br><span class="line"><span class="built_in">sin</span>(x);		<span class="built_in">asin</span>(x);</span><br><span class="line"><span class="built_in">abs</span>(n);		<span class="built_in">fabs</span>(x);</span><br><span class="line"><span class="built_in">floor</span>(x);	<span class="built_in">ceil</span>(x);<span class="comment">//向下取整、向上取整</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//控制台输入输出函数库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="built_in">getchar</span>(ch);	_getche(ch);	_getch(ch);<span class="comment">//等待、有回显；不等，有回显；不等、无回显</span></span><br><span class="line"><span class="built_in">putchar</span>(ch);</span><br><span class="line"><span class="built_in">kbhit</span>();<span class="comment">//检查是否有键盘输入，有则非0，无则0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//时间函数库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//辅助函数库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span><span class="comment">//C 方式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span><span class="comment">//C++</span></span></span><br><span class="line"><span class="built_in">malloc</span>(...);		<span class="built_in">free</span>(...);<span class="comment">//分配</span></span><br><span class="line"><span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));	<span class="built_in">rand</span>();<span class="comment">//随机数</span></span><br><span class="line"><span class="built_in">exit</span>(ret);			<span class="built_in">system</span>(...);<span class="comment">//系统</span></span><br><span class="line"><span class="built_in">atof</span>(<span class="string">&quot;3.14&quot;</span>);		<span class="built_in">atoi</span>(<span class="string">&quot;25&quot;</span>);<span class="comment">//转换。字符串-&gt;浮点数，并返回。字符串-&gt;整数，并返回。</span></span><br><span class="line"><span class="built_in">itoa</span>(<span class="number">25</span>,str,<span class="number">16</span>);<span class="comment">//以16进制，把整数25转换到字符串中并返回</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符类型函数库</span></span><br><span class="line"><span class="meta">#incldue <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="built_in">isdigit</span>(...);	<span class="built_in">isalpha</span>(...);<span class="comment">//是数字？是字母？是则返回非0，否则0</span></span><br><span class="line"><span class="built_in">islower</span>(...);	<span class="built_in">isupper</span>(...);<span class="comment">//是小写字母？是大写字母？是则返回非0，否则0</span></span><br><span class="line"><span class="built_in">isalnum</span>(...);	<span class="built_in">isxdigit</span>(...);<span class="comment">//数字字母？十六进制数？</span></span><br><span class="line"><span class="built_in">isspace</span>(...);	<span class="built_in">iscntrl</span>(...);<span class="comment">//white space?是DEL字符（0x7F）？</span></span><br><span class="line"><span class="built_in">tolower</span>(...);	<span class="built_in">toupper</span>(...);<span class="comment">//返回值转换大小写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Windows基础函数库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Window.h&gt;</span></span></span><br><span class="line"><span class="built_in">Sleep</span>(<span class="number">100</span>);<span class="comment">//当前程序睡眠100ms</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="本文档开始">本文档开始</h3>
<h4 id="一、原码与补码">一、原码与补码</h4>
<p>十进制数字 -&gt; 补码</p>
<p>（1）取绝对值，转二进制  --&gt; <strong>原码</strong></p>
<p>（2）正数：                         --&gt;<strong>补码</strong></p>
<p>​		  负数：取反+1            --&gt; <strong>补码</strong></p>
<p>（0不论看作正还是负，最终都会得到补码为00000000 00000000，其中看作负数时由高位溢出得到）</p>
<p>例：</p>
<table>
<thead>
<tr>
<th>十进制数</th>
<th>取绝对值，转二进制：原码</th>
<th>正数不动，负数取反加一：补码</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>00000000 00000000</td>
<td>00000000 00000000</td>
</tr>
<tr>
<td>10</td>
<td>00000000 00001010</td>
<td>00000000 00001010</td>
</tr>
<tr>
<td>-10</td>
<td>00000000 00001010</td>
<td>11111111 11110110</td>
</tr>
<tr>
<td>32767</td>
<td>01111111 11111111</td>
<td>01111111 11111111</td>
</tr>
<tr>
<td>-32767</td>
<td>01111111 11111111</td>
<td>10000000 00000001</td>
</tr>
<tr>
<td>-32768</td>
<td>10000000 00000000</td>
<td>10000000 00000000</td>
</tr>
</tbody>
</table>
<blockquote>
<p>（1）计算机的整数均用补码表示</p>
<p>（2）可以发现，不论原码还是补码，开头第一位的数字都一定遵循：</p>
<p>​		正数 0</p>
<p>​		负数 1</p>
<p>​	开头第一位称为”符号位“</p>
</blockquote>
<h4 id="二、各数据类型所占字节及表示范围">二、各数据类型所占字节及表示范围</h4>
<p>​	以VS2022 x86/32bit 为基准：</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>类型标识符</th>
<th>字节</th>
<th>数值范围</th>
<th>数值范围</th>
</tr>
</thead>
<tbody>
<tr>
<td>整型</td>
<td>[signed] int</td>
<td>4</td>
<td>-2147483648 ~ +2147483647</td>
<td>-2^31^ ~ +2^31^-1</td>
</tr>
<tr>
<td>无符号整型</td>
<td>unsigned int</td>
<td>4</td>
<td>0 ~ +4294967295</td>
<td>0 ~ 2^32^-1</td>
</tr>
<tr>
<td>短整型</td>
<td>short [int]</td>
<td>2</td>
<td>-32768 ~ +32767</td>
<td>-2^15^ ~ +2^15^-1</td>
</tr>
<tr>
<td>无符号短整型</td>
<td>unsigned short [int]</td>
<td>2</td>
<td>0 ~ 65535</td>
<td>0 ~ 2^16^-1</td>
</tr>
<tr>
<td>长整型</td>
<td>long [int]</td>
<td>4</td>
<td>-2147483648 ~ +2147483647</td>
<td>-2^31^ ~ +2^31^-1</td>
</tr>
<tr>
<td>无符号长整型</td>
<td>unsigned long [int]</td>
<td>4</td>
<td>0 ~ 4294967295</td>
<td>0 ~ 2^32^-1</td>
</tr>
<tr>
<td>长长整型</td>
<td>long long [int]</td>
<td>8</td>
<td>-9223372036854775808 ~ +92…807</td>
<td>-2^63^ ~ +2^63^-1</td>
</tr>
<tr>
<td>无符号…</td>
<td>unsigned long long [int]</td>
<td>8</td>
<td>0 ~ 18446744073709551616</td>
<td>0 ~ 2^64^-1</td>
</tr>
<tr>
<td>字符型</td>
<td>[signed] char</td>
<td>1</td>
<td>-128 ~ +127</td>
<td>-2^7^ ~ +2^7^-1</td>
</tr>
<tr>
<td>无符号字符型</td>
<td>unsigned char</td>
<td>1</td>
<td>0 ~ 255</td>
<td>0 ~ 2^8^-1</td>
</tr>
<tr>
<td>单精度型</td>
<td>float</td>
<td>4</td>
<td>-3.4×10^38^ ~ +3.4×10^38^</td>
<td></td>
</tr>
<tr>
<td>双精度型</td>
<td>double</td>
<td>8</td>
<td>-1.7×10^308^ ~ +1.7×10^308^</td>
<td></td>
</tr>
<tr>
<td>长双精度型</td>
<td>long double</td>
<td>8</td>
<td>-1.7×10^308^ ~ +1.7×10^308^</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p>（1）求字节数：</p>
<p>​		sizeof(   )</p>
<p>（2）头文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climits&gt;</span>  <span class="comment">//头文件中有预置定义</span></span></span><br><span class="line">cout &lt;&lt; INT_MIN &lt;&lt; endl;</span><br></pre></td></tr></table></figure>
<p>（3）浮点数有 有效位数 的限定，可能存在一定的误差</p>
</blockquote>
<h4 id="三、常量">三、常量</h4>
<p>cout &lt;&lt; typeid(123LU).name() &lt;&lt; endl;</p>
<p><strong>1、整型常量</strong></p>
<ul>
<li>4种表示方法</li>
</ul>
<p>二进制：0b + 0~1</p>
<p>八进制：0 + 0~7</p>
<p>十进制：正常</p>
<p>十六进制：0x/0X + 0~9, a~f, A~F</p>
<ul>
<li>缺省为int 型，其他可加后缀</li>
</ul>
<p>123</p>
<p>123L  123l</p>
<p>123U  123u</p>
<p>123UL  123ul  123LU  123lu</p>
<p><strong>2、浮点型常量</strong></p>
<ul>
<li>仅可用十进制，但有 2 种形式
<ul>
<li>十进制数（带小数点的数字）</li>
<li>指数形式（科学计数法）</li>
</ul>
</li>
<li>e 前 e 后
<ul>
<li>e 前：尾数部分，必须有数</li>
<li>e 后：指数部分，必须整数</li>
</ul>
</li>
</ul>
<p>​		可：1.23e4   1.23e-4   -1.23e-4</p>
<p>​		不可：e4  1.23e4.5</p>
<ul>
<li>
<p>浮点数在内存中的存储分三部分：符号位、指数部分、尾数部分</p>
<ul>
<li>
<p>float 单精度：</p>
<p>31：0/1 符号位</p>
<p>23~30：8 bit 指数</p>
<p>0~22：23 bit 尾数</p>
</li>
<li>
<p>double 双精度：</p>
<p>63：0/1 符号位</p>
<p>52~62：11 bit 指数</p>
<p>0~51：52 bit 尾数</p>
</li>
</ul>
<img src="https://pic4.zhimg.com/80/v2-e319c25ffdd4b40f34096dde45ced77b_720w.webp" alt="img" style="zoom:80%;" />
</li>
<li>
<p>浮点数的存储遵从 <strong>IEEE 754</strong> 规范</p>
</li>
<li>
<p>浮点数有<strong>指定有效位数（float：6位，double：15位）</strong></p>
<ul>
<li>
<p>超出有效位数则舍去（四舍五入），因此会产生误差</p>
<p>常量1：123456.789012345<strong>6</strong>e5</p>
<p>常量2：123456.789012345<strong>7</strong>e5</p>
<p>上述两个常量在内存中存储都是0.123456789012346e11</p>
<p>1.0 / 3 * 3 = ?</p>
</li>
</ul>
</li>
<li>
<p>浮点常量缺省为double 型，如需表示为float 型，可加后缀 f/F</p>
<ul>
<li>1.23	：double 型	8 字节</li>
<li>1.23F  ：float 型        4 字节</li>
<li>可用 sizeof(1.23) 或 typeif(1.23).name() 验证</li>
</ul>
</li>
</ul>
<p><strong>3、字符常量</strong></p>
<ul>
<li>
<p>ASCII 码占用 1 字节，共可表示 256 个字符</p>
<p>0xxxxxxx	：基本ASCII 码	128 个（0~127）</p>
<p>1xxxxxxx	：扩展ASCII 码	128 个（128~255）</p>
</li>
<li>
<p>基本ASCII 码分为“图形字符”和”控制字符”</p>
<p>0~32、127	：控制字符，34个</p>
<p>33~126		  ：图形字符，94个</p>
</li>
<li>
<p>几个基本的ASCII 码值</p>
<table>
<thead>
<tr>
<th>空格</th>
<th>数字0</th>
<th>字母A</th>
<th>字母a</th>
</tr>
</thead>
<tbody>
<tr>
<td>32</td>
<td>48</td>
<td>65</td>
<td>97</td>
</tr>
<tr>
<td>0x20</td>
<td>0x30</td>
<td>0x41</td>
<td>0x61</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>汉字表示</p>
<p>GBK	：2字节</p>
</li>
<li>
<p>输出表示方法</p>
<ul>
<li>
<p>一般表示’     ’</p>
<p>可放空格、大多可见图形字符</p>
</li>
<li>
<p>转义符表示’\   ’</p>
<p>放字符、八进制、十六进制数</p>
<p>八进制：‘\ddd’        （三位）</p>
<p>十六进制：‘\xhh’     （两位，x 必须小写）</p>
</li>
</ul>
</li>
<li>
<p>一个字符常量多种表达形式</p>
<ul>
<li>
<p>A</p>
<p>‘A’	‘\101’	‘\x41’</p>
</li>
<li>
<p>ESC（ASCII = 27）</p>
<p>‘\33’	‘\033’	‘\x16’	‘\x1B’</p>
</li>
<li>
<p>换行（ASCII = 10）</p>
<p>‘\n’	‘\12’	‘\012’	‘\xA’	‘\xa’	‘\x0A’	‘\x0a’</p>
</li>
<li>
<p>双引号（ASCII = 34）</p>
<p>’ \“ ’	‘\42’	‘\042’	‘\x22’</p>
</li>
</ul>
</li>
<li>
<p><strong>‘0’ 与 '\0’的区别</strong></p>
<ul>
<li>‘0’	：ASCII = 48	‘\60’	‘\060’	‘\x30’</li>
<li>‘\0’   ：ASCII = 0      ‘\00’  ‘\000’  ‘\x0’  ‘\x00’</li>
</ul>
</li>
<li>
<p>控制字符中，除空格外，都不能直接表示，\  ’  &quot;  等特殊字符也不能直接表示</p>
</li>
<li>
<p>C/C++ 严格区分字符、字符串，不可用’ 汉’</p>
<ul>
<li>单引号：字符</li>
<li>双引号：字符串</li>
</ul>
</li>
</ul>
<p><strong>4、字符串常量</strong></p>
<ul>
<li>连续多个字符组成的字符序列
<ul>
<li>“abc123*#”</li>
<li>“\x61\x62\x63\061\62\x2a\043”</li>
<li>“\r\n\t \ \ A \ \ t \x1b \ &quot; \1234\xft\x2f\33”</li>
</ul>
</li>
<li>字符串常量方式可表示汉字&quot;同济&quot;</li>
<li>字符串常量在内存中的存放：每个字符的ASCII 码 + 字符串结束标志’\0’</li>
<li>数字0，ASCII = 48；尾零’\0’，ASCII = 0</li>
<li>区别：
<ul>
<li>空字符串长度为0，但有尾零’\0’存在</li>
<li>'A’字符常量，内存占 1 字节</li>
<li>&quot;A&quot;字符串常量，内存占 2 字节</li>
</ul>
</li>
</ul>
<p><strong>5、符号常量</strong></p>
<ul>
<li>
<p>用一个标识符代表的常量</p>
<p>#define  pi  3.14159</p>
</li>
<li>
<p>优点：含义清晰，修改方便</p>
</li>
</ul>
<h4 id="四、变量">四、变量</h4>
<ul>
<li>
<p>标识符：用来标识变量名、符号常量名、函数名、数组名、结构体名、类名等的有效字符序列，称为标识符。</p>
<p><strong>由字母或下划线开头</strong>，由字母、数字、下划线组成</p>
<p>标识符区分大小写（大小写敏感）</p>
<p>长度 &lt;= 32</p>
</li>
<li>
<p>变量</p>
<p>同级不能同名</p>
<p>不能与关键字（int / float 等）同名</p>
<p>VS2022允许使用中文做变量名，通用性差，不建议</p>
<p>C++11标准支持auto自动定义类型，由初值决定类型，易错，不建议</p>
<p><strong>多个变量赋同一初值，要分开进行</strong></p>
</li>
</ul>
<p><strong>1、整型变量</strong></p>
<ul>
<li>
<p><strong>数据的溢出在C++中不认为是错误</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">short</span> a=<span class="number">32767</span>, b=a+<span class="number">1</span>;	<span class="comment">//b得到为-32768</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>赋值：<strong>短 =&gt; 长：低位 赋值，高位 填充符号位（短为signed）/ 填充0（短为unsigned）</strong></p>
</li>
<li>
<p>赋值：<strong>长 =&gt; 短：低位 赋值，高位 丢弃</strong></p>
</li>
</ul>
<p><strong>2、浮点型变量</strong></p>
<ul>
<li>
<p><strong>float 赋值给 double 一定正确</strong></p>
</li>
<li>
<p><strong>double 赋值给 float 不一定正确，且不同于整型的高位丢弃</strong></p>
<p>（VS2022会有inf（infinity 无穷）的形式，有warning）</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> d = <span class="number">1.23456e38</span>;	<span class="comment">//d    1.23456e+38</span></span><br><span class="line"><span class="type">float</span> f1 = d;			<span class="comment">//f1   1.23456e+38</span></span><br><span class="line"><span class="type">float</span> f2 = d * <span class="number">10</span>;		<span class="comment">//f2   inf</span></span><br></pre></td></tr></table></figure>
<p><strong>3、字符型变量</strong></p>
<ul>
<li>注意变量与常量的区别</li>
<li>与整数的互通性：可当作1字节的整数参与运算（signed、unsigned）</li>
</ul>
<p><strong>4、字符串型变量</strong></p>
<ul>
<li>C++无</li>
<li>可用一维字符数组来表示字符串变量</li>
</ul>
<p><strong>5、常变量</strong></p>
<ul>
<li>
<p>在程序执行过程中值不能改变的变量</p>
</li>
<li>
<p>const  数据类型  变量名  =  初值;</p>
</li>
<li>
<p>常变量有分号，符号常量不用带分号</p>
</li>
<li>
<p>必须在定义时赋初值，且执行过程中不能再次赋值，否则编译错误</p>
</li>
<li>
<p>常变量与符号常量使用方法相似，但有本质区别</p>
<p>（推荐使用常变量）</p>
<p>常变量：有类型、有空间、有初始值（除了值不可变，其余同变量）</p>
<p>符号常量：一个标识符替代一串字符</p>
</li>
</ul>
<h4 id="五、运算符">五、运算符</h4>
<ul>
<li>
<p>参与运算的操作数的个数不同，有：一元、二元、三元运算符（单目、双目、三目运算符）</p>
</li>
<li>
<p>唯一的三目运算符是第15组的” ：？“</p>
</li>
<li>
<p>优先级：<strong>优先级越小，意为高，先运算</strong>。最高为1，最低为18。</p>
</li>
<li>
<p>结合性：同级混合运算的结合方向。<strong>右结合</strong>意为<strong>从右到左</strong>进行运算。</p>
</li>
</ul>
<p><strong>1、算术运算符与算数表达式</strong></p>
<ul>
<li>
<p>注意：整数相除，得到整数，不会是小数</p>
<p>V1 = 1 / 3   ==&gt;  0</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">+ -			<span class="comment">//5级</span></span><br><span class="line">* / %		<span class="comment">//6级</span></span><br><span class="line">均是双目，均是左结合</span><br></pre></td></tr></table></figure>
<p><strong>转换的优先级与整型提升</strong></p>
<p>整型提升表示必定的转换，参与运算的最小数据类型是int</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">long</span> <span class="type">double</span>			<span class="comment">//高</span></span><br><span class="line"><span class="type">double</span></span><br><span class="line"><span class="type">float</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span></span><br><span class="line"><span class="type">long</span>				<span class="comment">//低</span></span><br><span class="line"><span class="type">unsigned</span> [<span class="type">int</span>]		<span class="comment">//整型提升</span></span><br><span class="line"><span class="type">int</span>  &lt;--------------<span class="type">char</span>/u_char/<span class="type">short</span>/u_short</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>这种类型转换，由系统隐式进行</p>
</li>
<li>
<p>类型转换时，不是一次全部转换成最高级，而是依次转换</p>
<p>（正是依次转换，才使得 V1 = 1 / 3 * pi 得到0）</p>
</li>
<li>
<p>类型转换不完全如此，这是简易规则</p>
</li>
</ul>
<p><strong>2、自增、自减运算符</strong></p>
<p><strong>前缀</strong>（优先级3，右结合）</p>
<p>++ 变量名		– 变量名		==》 先自增、减1，后使用</p>
<p><strong>后缀</strong>（优先级2，左结合）</p>
<p>变量名 ++		变量名 –		==》先使用，后自增、减1</p>
<ul>
<li>不能对常量、表达式使用</li>
<li>不主张对同一个变量的多个+±-出现在同一个表达式中（不同编译器处理可能不同）</li>
</ul>
<p><strong>3、强制类型转换</strong></p>
<ul>
<li>必须在程序中显式使用</li>
<li>强制类型转换后，原变量的值、类型不变（只是要转换后存在别的变量里）</li>
</ul>
<table>
<thead>
<tr>
<th>（类型名）（表达式）</th>
<th>类型名（表达式）</th>
<th>static_cast&lt;类型名&gt;（表达式）</th>
</tr>
</thead>
<tbody>
<tr>
<td>(int)(a+b)</td>
<td>int(a+b)</td>
<td>static_cast<int>(a+b)</td>
</tr>
<tr>
<td>(int)a</td>
<td>int(a)</td>
<td>static_cast<int>(a+b)</td>
</tr>
<tr>
<td>C方式</td>
<td>C++方式</td>
<td>C++方式</td>
</tr>
</tbody>
</table>
<p><strong>4、赋值运算符与赋值表达式</strong></p>
<ul>
<li>
<p>赋值表达式左边必须是变量名</p>
</li>
<li>
<p>若赋值表达式左右类型不同，以左值为基准进行转换（会报错或warning）</p>
</li>
<li>
<p><strong>复合的赋值运算符</strong>：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">a += b;			<span class="comment">//a=a+b;</span></span><br><span class="line">a *= b + <span class="number">1</span>;		<span class="comment">//a=a*(b+1);</span></span><br><span class="line"></span><br><span class="line">+=  -=  *=  /=  %=	<span class="comment">//优先级均16</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>赋值表达式的值和变量的值相等</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a=b=c=<span class="number">5</span>;		<span class="comment">//×</span></span><br><span class="line"><span class="type">int</span> a=<span class="number">5</span>,b=<span class="number">5</span>,c=<span class="number">5</span>;	<span class="comment">//√</span></span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line">a=b=c=<span class="number">5</span>;			<span class="comment">//√</span></span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>赋值表达式的值可以参与其他表达式的运算</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a=<span class="number">12</span>;</span><br><span class="line">a+=a-=a*a;		<span class="comment">//得到a=-264</span></span><br><span class="line">       <span class="number">1</span></span><br><span class="line">    <span class="number">2</span></span><br><span class="line"> <span class="number">3</span></span><br><span class="line">(a=<span class="number">3</span>*<span class="number">5</span>)=<span class="number">4</span>*<span class="number">3</span>;	<span class="comment">//√</span></span><br><span class="line">a=<span class="number">3</span>*<span class="number">5</span>=<span class="number">4</span>*<span class="number">3</span>;		<span class="comment">//×</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>5、逗号表达式</strong></p>
<ul>
<li>C++中级别最低的运算符（又称顺序求值运算符）</li>
<li>整个逗号表达式的值为最后一个表达式的值</li>
</ul>
<p><strong>C++中任意类型的表达式均有值</strong></p>
<p>算术表达式</p>
<p>赋值表达式、复合赋值表达式</p>
<p>逗号表达式</p>
<p><strong>表达式类型由最后一个运算决定</strong></p>
<h4 id="六、C-输入输出格式化控制">六、C++ 输入输出格式化控制</h4>
<p>​	<strong>头文件：</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>格式控制符</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>oct</td>
<td>设置整数为8进制</td>
</tr>
<tr>
<td>dec</td>
<td>设置整数为10进制</td>
</tr>
<tr>
<td>hex</td>
<td>设置整数为16进制</td>
</tr>
<tr>
<td>setbase(n)</td>
<td>设置整数为n进制(n=8,10,16)</td>
</tr>
<tr>
<td>setfill(‘c’)</td>
<td>设置填充字符，c可以是字符常量或字符变量</td>
</tr>
<tr>
<td>setprecision(n)</td>
<td>设置实数的精度为n位。在以一般十进制形式输出时，n代表有效数字。在以fixed(固定小数位)形式和scientific(指数)形式输出时，n为小数位数</td>
</tr>
<tr>
<td>setw(n)</td>
<td>设置字段宽度为n</td>
</tr>
<tr>
<td>setiosflags(ios::fixed)</td>
<td>设置浮点数以固定的小数位数显示</td>
</tr>
<tr>
<td>setiosflags(ios::scientific)</td>
<td>设置浮点数以科学计数法（即指数形式）显示</td>
</tr>
<tr>
<td>setiosflags(ios::left)</td>
<td>输出数据左对齐</td>
</tr>
<tr>
<td>setiosflags(ios::right)</td>
<td>输出数据右对齐</td>
</tr>
<tr>
<td>setiosflags(ios::skipws)</td>
<td>忽略前导的空格</td>
</tr>
<tr>
<td>setiosflags(ios::uppercase)</td>
<td>在以科学计数法输出E和十六进制输出字母X时，以大写表示</td>
</tr>
<tr>
<td>setiosflags(ios::showpos)</td>
<td>输出正数时，给出“+”号</td>
</tr>
<tr>
<td>resetiosflags( * )</td>
<td>终止已设置的输出格式状态，括号内为具体内容(本处用 * 替代)</td>
</tr>
</tbody>
</table>
<blockquote>
<p>（1）只有十进制有负数形式</p>
<p>（2）cin 读入char型时，空格是否有效由ios::skipws 决定</p>
<p>（3）ctrl + C 是结束程序</p>
<p>​		  ctrl + Z 只有在一行的最开始才有效</p>
</blockquote>
<h4 id="七、C-方式输入输出格式化控制">七、C 方式输入输出格式化控制</h4>
<p><strong>1、printf(“%d”,a);</strong></p>
<p>printf所用的格式字符的种类：</p>
<table>
<thead>
<tr>
<th>格式字符</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>d,</strong> <strong>i</strong></td>
<td>带符号的十进制形式整数(正数不带+)</td>
</tr>
<tr>
<td><strong>o</strong></td>
<td>八进制无符号形式输出整数(不带前导0)</td>
</tr>
<tr>
<td><strong>x, X</strong></td>
<td>十六进制无符号形式输出整数(不带前导0x)</td>
</tr>
<tr>
<td><strong>u</strong></td>
<td>十进制无符号形式输出整数</td>
</tr>
<tr>
<td><strong>c</strong></td>
<td>以字符形式输出(一个字符)</td>
</tr>
<tr>
<td><strong>s</strong></td>
<td>输出字符串</td>
</tr>
<tr>
<td><strong>f</strong></td>
<td>以小数形式输出浮点数</td>
</tr>
<tr>
<td><strong>e, E</strong></td>
<td>以指数形式输出浮点数</td>
</tr>
<tr>
<td><strong>g, G</strong></td>
<td>从f，e中选择宽度较短的形式输出浮点数</td>
</tr>
</tbody>
</table>
<p>printf所用的附加格式字符的种类：</p>
<table>
<thead>
<tr>
<th>附加格式字符</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>字母l  字母h</td>
<td>表示长整型整数，用于d,o,x,u前表示短整型整数，用于d,o,x,u前</td>
</tr>
<tr>
<td>正整数m</td>
<td>表示输出数据的宽度</td>
</tr>
<tr>
<td>正整数.n</td>
<td>对浮点数，表示n位小数对字符串，表示前n个字符</td>
</tr>
<tr>
<td><strong>-</strong></td>
<td>输出左对齐</td>
</tr>
</tbody>
</table>
<p><strong>2、scanf(“%d”,&amp;a);</strong></p>
<p>&amp;表示取地址</p>
<p>&amp;不能跟表达式/常量(理由与=、++、–等相同)</p>
<p>scanf所用的格式字符的种类：</p>
<table>
<thead>
<tr>
<th>格式字符</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>d,</strong> <strong>i</strong></td>
<td>输入带符号的十进制形式整数</td>
</tr>
<tr>
<td><strong>o</strong></td>
<td>输入八进制无符号形式整数(不带前导0)</td>
</tr>
<tr>
<td><strong>x, X</strong></td>
<td>输入十六进制无符号形式整数(不带前导0x)</td>
</tr>
<tr>
<td><strong>u</strong></td>
<td>输入十进制无符号形式整数</td>
</tr>
<tr>
<td><strong>c</strong></td>
<td>输入单个字符</td>
</tr>
<tr>
<td><strong>s</strong></td>
<td>输入字符串</td>
</tr>
<tr>
<td><strong>f</strong></td>
<td>输入小数/指数形式的浮点数</td>
</tr>
<tr>
<td><strong>e,E,g,G</strong></td>
<td>同f</td>
</tr>
</tbody>
</table>
<p>scanf所用的附加格式字符的种类：</p>
<table>
<thead>
<tr>
<th>附加格式字符</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>字母l</strong></td>
<td>输入长整型数，用于d,o,x,u前输入double型数，用于f,e,g前</td>
</tr>
<tr>
<td><strong>h</strong></td>
<td>输入短整型数，用于d,o,x,u前</td>
</tr>
<tr>
<td><strong>正整数n</strong></td>
<td>指定输入数据所占的宽度</td>
</tr>
<tr>
<td>*****</td>
<td>本输入项不赋给相应的变量</td>
</tr>
</tbody>
</table>
<blockquote>
<p>特别说明：</p>
<p>VS系列认为scanf函数是不安全的输入，因此缺省禁止使用(编译报error)，如果想继续使用，必须在源程序一开始加定义</p>
<p>#define _CRT_SECURE_NO_WARNINGS</p>
<p>为了和其它编译器兼容，以及方便后续课程的学习，我们仍然会继续使用scanf</p>
<p>另：加 _CRT_SECURE_NO_WARNINGS 的程序在其它编译器中可正常使用</p>
<p>注：VS系列中C语言用于安全输入的函数是scanf_s，</p>
<p>使用方法同scanf，考虑到兼容性，不建议大家使用scanf_s，有兴    趣可以自行查阅有关资料</p>
</blockquote>
<h4 id="八、常用库函数">八、常用库函数</h4>
<h4 id="九、字符集与ASCII字符集">九、字符集与ASCII字符集</h4>
<blockquote>
<p>32-126是可显示字符</p>
<p>其余不可见，是控制字符或功能码</p>
</blockquote>
<table>
<thead>
<tr>
<th>二进制</th>
<th>十进制</th>
<th>十六进制</th>
<th>字符/缩写</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>00000000</td>
<td>0</td>
<td>00</td>
<td>NUL (NULL)</td>
<td>空字符</td>
</tr>
<tr>
<td>00000001</td>
<td>1</td>
<td>01</td>
<td>SOH (Start Of Headling)</td>
<td>标题开始</td>
</tr>
<tr>
<td>00000010</td>
<td>2</td>
<td>02</td>
<td>STX (Start Of Text)</td>
<td>正文开始</td>
</tr>
<tr>
<td>00000011</td>
<td>3</td>
<td>03</td>
<td>ETX (End Of Text)</td>
<td>正文结束</td>
</tr>
<tr>
<td>00000100</td>
<td>4</td>
<td>04</td>
<td>EOT (End Of Transmission)</td>
<td>传输结束</td>
</tr>
<tr>
<td>00000101</td>
<td>5</td>
<td>05</td>
<td>ENQ (Enquiry)</td>
<td>请求</td>
</tr>
<tr>
<td>00000110</td>
<td>6</td>
<td>06</td>
<td>ACK (Acknowledge)</td>
<td>回应/响应/收到通知</td>
</tr>
<tr>
<td>00000111</td>
<td>7</td>
<td>07</td>
<td>BEL (Bell)</td>
<td>响铃</td>
</tr>
<tr>
<td>00001000</td>
<td>8</td>
<td>08</td>
<td>BS (Backspace)</td>
<td>退格</td>
</tr>
<tr>
<td>00001001</td>
<td>9</td>
<td>09</td>
<td>HT (Horizontal Tab)</td>
<td>水平制表符</td>
</tr>
<tr>
<td>00001010</td>
<td>10</td>
<td>0A</td>
<td>LF/NL(Line Feed/New Line)</td>
<td>换行键</td>
</tr>
<tr>
<td>00001011</td>
<td>11</td>
<td>0B</td>
<td>VT (Vertical Tab)</td>
<td>垂直制表符</td>
</tr>
<tr>
<td>00001100</td>
<td>12</td>
<td>0C</td>
<td>FF/NP (Form Feed/New Page)</td>
<td>换页键</td>
</tr>
<tr>
<td>00001101</td>
<td>13</td>
<td>0D</td>
<td>CR (Carriage Return)</td>
<td>回车键</td>
</tr>
<tr>
<td>00001110</td>
<td>14</td>
<td>0E</td>
<td>SO (Shift Out)</td>
<td>不用切换</td>
</tr>
<tr>
<td>00001111</td>
<td>15</td>
<td>0F</td>
<td>SI (Shift In)</td>
<td>启用切换</td>
</tr>
<tr>
<td>00010000</td>
<td>16</td>
<td>10</td>
<td>DLE (Data Link Escape)</td>
<td>数据链路转义</td>
</tr>
<tr>
<td>00010001</td>
<td>17</td>
<td>11</td>
<td>DC1/XON (Device Control 1/Transmission On)</td>
<td>设备控制1/传输开始</td>
</tr>
<tr>
<td>00010010</td>
<td>18</td>
<td>12</td>
<td>DC2 (Device Control 2)</td>
<td>设备控制2</td>
</tr>
<tr>
<td>00010011</td>
<td>19</td>
<td>13</td>
<td>DC3/XOFF (Device Control 3/Transmission Off)</td>
<td>设备控制3/传输中断</td>
</tr>
<tr>
<td>00010100</td>
<td>20</td>
<td>14</td>
<td>DC4 (Device Control 4)</td>
<td>设备控制4</td>
</tr>
<tr>
<td>00010101</td>
<td>21</td>
<td>15</td>
<td>NAK (Negative Acknowledge)</td>
<td>无响应/非正常响应/拒绝接收</td>
</tr>
<tr>
<td>00010110</td>
<td>22</td>
<td>16</td>
<td>SYN (Synchronous Idle)</td>
<td>同步空闲</td>
</tr>
<tr>
<td>00010111</td>
<td>23</td>
<td>17</td>
<td>ETB (End of Transmission Block)</td>
<td>传输块结束/块传输终止</td>
</tr>
<tr>
<td>00011000</td>
<td>24</td>
<td>18</td>
<td>CAN (Cancel)</td>
<td>取消</td>
</tr>
<tr>
<td>00011001</td>
<td>25</td>
<td>19</td>
<td>EM (End of Medium)</td>
<td>已到介质末端/介质存储已满/介质中断</td>
</tr>
<tr>
<td>00011010</td>
<td>26</td>
<td>1A</td>
<td>SUB (Substitute)</td>
<td>替补/替换</td>
</tr>
<tr>
<td>00011011</td>
<td>27</td>
<td>1B</td>
<td>ESC (Escape)</td>
<td>逃离/取消</td>
</tr>
<tr>
<td>00011100</td>
<td>28</td>
<td>1C</td>
<td>FS (File Separator)</td>
<td>文件分割符</td>
</tr>
<tr>
<td>00011101</td>
<td>29</td>
<td>1D</td>
<td>GS (Group Separator)</td>
<td>组分隔符/分组符</td>
</tr>
<tr>
<td>00011110</td>
<td>30</td>
<td>1E</td>
<td>RS (Record Separator)</td>
<td>记录分离符</td>
</tr>
<tr>
<td>00011111</td>
<td>31</td>
<td>1F</td>
<td>US (Unit Separator)</td>
<td>单元分隔符</td>
</tr>
<tr>
<td>00100000</td>
<td>32</td>
<td>20</td>
<td>(Space)</td>
<td>空格</td>
</tr>
<tr>
<td>00100001</td>
<td>33</td>
<td>21</td>
<td>!</td>
<td></td>
</tr>
<tr>
<td>00100010</td>
<td>34</td>
<td>22</td>
<td>&quot;</td>
<td></td>
</tr>
<tr>
<td>00100011</td>
<td>35</td>
<td>23</td>
<td>#</td>
<td></td>
</tr>
<tr>
<td>00100100</td>
<td>36</td>
<td>24</td>
<td>$</td>
<td></td>
</tr>
<tr>
<td>00100101</td>
<td>37</td>
<td>25</td>
<td>%</td>
<td></td>
</tr>
<tr>
<td>00100110</td>
<td>38</td>
<td>26</td>
<td>&amp;</td>
<td></td>
</tr>
<tr>
<td>00100111</td>
<td>39</td>
<td>27</td>
<td>’</td>
<td></td>
</tr>
<tr>
<td>00101000</td>
<td>40</td>
<td>28</td>
<td>(</td>
<td></td>
</tr>
<tr>
<td>00101001</td>
<td>41</td>
<td>29</td>
<td>)</td>
<td></td>
</tr>
<tr>
<td>00101010</td>
<td>42</td>
<td>2A</td>
<td>*</td>
<td></td>
</tr>
<tr>
<td>00101011</td>
<td>43</td>
<td>2B</td>
<td>+</td>
<td></td>
</tr>
<tr>
<td>00101100</td>
<td>44</td>
<td>2C</td>
<td>,</td>
<td></td>
</tr>
<tr>
<td>00101101</td>
<td>45</td>
<td>2D</td>
<td>-</td>
<td></td>
</tr>
<tr>
<td>00101110</td>
<td>46</td>
<td>2E</td>
<td>.</td>
<td></td>
</tr>
<tr>
<td>00101111</td>
<td>47</td>
<td>2F</td>
<td>/</td>
<td></td>
</tr>
<tr>
<td>00110000</td>
<td>48</td>
<td>30</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>00110001</td>
<td>49</td>
<td>31</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>00110010</td>
<td>50</td>
<td>32</td>
<td>2</td>
<td></td>
</tr>
<tr>
<td>00110011</td>
<td>51</td>
<td>33</td>
<td>3</td>
<td></td>
</tr>
<tr>
<td>00110100</td>
<td>52</td>
<td>34</td>
<td>4</td>
<td></td>
</tr>
<tr>
<td>00110101</td>
<td>53</td>
<td>35</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>00110110</td>
<td>54</td>
<td>36</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td>00110111</td>
<td>55</td>
<td>37</td>
<td>7</td>
<td></td>
</tr>
<tr>
<td>00111000</td>
<td>56</td>
<td>38</td>
<td>8</td>
<td></td>
</tr>
<tr>
<td>00111001</td>
<td>57</td>
<td>39</td>
<td>9</td>
<td></td>
</tr>
<tr>
<td>00111010</td>
<td>58</td>
<td>3A</td>
<td>:</td>
<td></td>
</tr>
<tr>
<td>00111011</td>
<td>59</td>
<td>3B</td>
<td>;</td>
<td></td>
</tr>
<tr>
<td>00111100</td>
<td>60</td>
<td>3C</td>
<td>&lt;</td>
<td></td>
</tr>
<tr>
<td>00111101</td>
<td>61</td>
<td>3D</td>
<td>=</td>
<td></td>
</tr>
<tr>
<td>00111110</td>
<td>62</td>
<td>3E</td>
<td>&gt;</td>
<td></td>
</tr>
<tr>
<td>00111111</td>
<td>63</td>
<td>3F</td>
<td>?</td>
<td></td>
</tr>
<tr>
<td>01000000</td>
<td>64</td>
<td>40</td>
<td>@</td>
<td></td>
</tr>
<tr>
<td>01000001</td>
<td>65</td>
<td>41</td>
<td>A</td>
<td></td>
</tr>
<tr>
<td>01000010</td>
<td>66</td>
<td>42</td>
<td>B</td>
<td></td>
</tr>
<tr>
<td>01000011</td>
<td>67</td>
<td>43</td>
<td>C</td>
<td></td>
</tr>
<tr>
<td>01000100</td>
<td>68</td>
<td>44</td>
<td>D</td>
<td></td>
</tr>
<tr>
<td>01000101</td>
<td>69</td>
<td>45</td>
<td>E</td>
<td></td>
</tr>
<tr>
<td>01000110</td>
<td>70</td>
<td>46</td>
<td>F</td>
<td></td>
</tr>
<tr>
<td>01000111</td>
<td>71</td>
<td>47</td>
<td>G</td>
<td></td>
</tr>
<tr>
<td>01001000</td>
<td>72</td>
<td>48</td>
<td>H</td>
<td></td>
</tr>
<tr>
<td>01001001</td>
<td>73</td>
<td>49</td>
<td>I</td>
<td></td>
</tr>
<tr>
<td>01001010</td>
<td>74</td>
<td>4A</td>
<td>J</td>
<td></td>
</tr>
<tr>
<td>01001011</td>
<td>75</td>
<td>4B</td>
<td>K</td>
<td></td>
</tr>
<tr>
<td>01001100</td>
<td>76</td>
<td>4C</td>
<td>L</td>
<td></td>
</tr>
<tr>
<td>01001101</td>
<td>77</td>
<td>4D</td>
<td>M</td>
<td></td>
</tr>
<tr>
<td>01001110</td>
<td>78</td>
<td>4E</td>
<td>N</td>
<td></td>
</tr>
<tr>
<td>01001111</td>
<td>79</td>
<td>4F</td>
<td>O</td>
<td></td>
</tr>
<tr>
<td>01010000</td>
<td>80</td>
<td>50</td>
<td>P</td>
<td></td>
</tr>
<tr>
<td>01010001</td>
<td>81</td>
<td>51</td>
<td>Q</td>
<td></td>
</tr>
<tr>
<td>01010010</td>
<td>82</td>
<td>52</td>
<td>R</td>
<td></td>
</tr>
<tr>
<td>01010011</td>
<td>83</td>
<td>53</td>
<td>S</td>
<td></td>
</tr>
<tr>
<td>01010100</td>
<td>84</td>
<td>54</td>
<td>T</td>
<td></td>
</tr>
<tr>
<td>01010101</td>
<td>85</td>
<td>55</td>
<td>U</td>
<td></td>
</tr>
<tr>
<td>01010110</td>
<td>86</td>
<td>56</td>
<td>V</td>
<td></td>
</tr>
<tr>
<td>01010111</td>
<td>87</td>
<td>57</td>
<td>W</td>
<td></td>
</tr>
<tr>
<td>01011000</td>
<td>88</td>
<td>58</td>
<td>X</td>
<td></td>
</tr>
<tr>
<td>01011001</td>
<td>89</td>
<td>59</td>
<td>Y</td>
<td></td>
</tr>
<tr>
<td>01011010</td>
<td>90</td>
<td>5A</td>
<td>Z</td>
<td></td>
</tr>
<tr>
<td>01011011</td>
<td>91</td>
<td>5B</td>
<td>[</td>
<td></td>
</tr>
<tr>
<td>01011100</td>
<td>92</td>
<td>5C</td>
<td>\</td>
<td></td>
</tr>
<tr>
<td>01011101</td>
<td>93</td>
<td>5D</td>
<td>]</td>
<td></td>
</tr>
<tr>
<td>01011110</td>
<td>94</td>
<td>5E</td>
<td>^</td>
<td></td>
</tr>
<tr>
<td>01011111</td>
<td>95</td>
<td>5F</td>
<td>_</td>
<td></td>
</tr>
<tr>
<td>01100000</td>
<td>96</td>
<td>60</td>
<td>`</td>
<td></td>
</tr>
<tr>
<td>01100001</td>
<td>97</td>
<td>61</td>
<td>a</td>
<td></td>
</tr>
<tr>
<td>01100010</td>
<td>98</td>
<td>62</td>
<td>b</td>
<td></td>
</tr>
<tr>
<td>01100011</td>
<td>99</td>
<td>63</td>
<td>c</td>
<td></td>
</tr>
<tr>
<td>01100100</td>
<td>100</td>
<td>64</td>
<td>d</td>
<td></td>
</tr>
<tr>
<td>01100101</td>
<td>101</td>
<td>65</td>
<td>e</td>
<td></td>
</tr>
<tr>
<td>01100110</td>
<td>102</td>
<td>66</td>
<td>f</td>
<td></td>
</tr>
<tr>
<td>01100111</td>
<td>103</td>
<td>67</td>
<td>g</td>
<td></td>
</tr>
<tr>
<td>01101000</td>
<td>104</td>
<td>68</td>
<td>h</td>
<td></td>
</tr>
<tr>
<td>01101001</td>
<td>105</td>
<td>69</td>
<td>i</td>
<td></td>
</tr>
<tr>
<td>01101010</td>
<td>106</td>
<td>6A</td>
<td>j</td>
<td></td>
</tr>
<tr>
<td>01101011</td>
<td>107</td>
<td>6B</td>
<td>k</td>
<td></td>
</tr>
<tr>
<td>01101100</td>
<td>108</td>
<td>6C</td>
<td>l</td>
<td></td>
</tr>
<tr>
<td>01101101</td>
<td>109</td>
<td>6D</td>
<td>m</td>
<td></td>
</tr>
<tr>
<td>01101110</td>
<td>110</td>
<td>6E</td>
<td>n</td>
<td></td>
</tr>
<tr>
<td>01101111</td>
<td>111</td>
<td>6F</td>
<td>o</td>
<td></td>
</tr>
<tr>
<td>01110000</td>
<td>112</td>
<td>70</td>
<td>p</td>
<td></td>
</tr>
<tr>
<td>01110001</td>
<td>113</td>
<td>71</td>
<td>q</td>
<td></td>
</tr>
<tr>
<td>01110010</td>
<td>114</td>
<td>72</td>
<td>r</td>
<td></td>
</tr>
<tr>
<td>01110011</td>
<td>115</td>
<td>73</td>
<td>s</td>
<td></td>
</tr>
<tr>
<td>01110100</td>
<td>116</td>
<td>74</td>
<td>t</td>
<td></td>
</tr>
<tr>
<td>01110101</td>
<td>117</td>
<td>75</td>
<td>u</td>
<td></td>
</tr>
<tr>
<td>01110110</td>
<td>118</td>
<td>76</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>01110111</td>
<td>119</td>
<td>77</td>
<td>w</td>
<td></td>
</tr>
<tr>
<td>01111000</td>
<td>120</td>
<td>78</td>
<td>x</td>
<td></td>
</tr>
<tr>
<td>01111001</td>
<td>121</td>
<td>79</td>
<td>y</td>
<td></td>
</tr>
<tr>
<td>01111010</td>
<td>122</td>
<td>7A</td>
<td>z</td>
<td></td>
</tr>
<tr>
<td>01111011</td>
<td>123</td>
<td>7B</td>
<td>{</td>
<td></td>
</tr>
<tr>
<td>01111100</td>
<td>124</td>
<td>7C</td>
<td>|</td>
<td></td>
</tr>
<tr>
<td>01111101</td>
<td>125</td>
<td>7D</td>
<td>}</td>
<td></td>
</tr>
<tr>
<td>01111110</td>
<td>126</td>
<td>7E</td>
<td>~</td>
<td></td>
</tr>
<tr>
<td>01111111</td>
<td>127</td>
<td>7F</td>
<td>DEL (Delete)</td>
<td>删除</td>
</tr>
</tbody>
</table>
<h4 id="十、运算符优先级">十、运算符优先级</h4>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>例子</th>
<th>可重载性</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>第一级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>::</td>
<td>作用域解析符</td>
<td>Class::age = 2;</td>
<td>不可重载</td>
</tr>
<tr>
<td><strong>第二级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>()</td>
<td>函数调用</td>
<td>isdigit(‘1’)</td>
<td>可重载</td>
</tr>
<tr>
<td>()</td>
<td>成员初始化</td>
<td>c_tor(int x, int y) : _x(x), _y(y*10){};</td>
<td>可重载</td>
</tr>
<tr>
<td>[]</td>
<td>数组数据获取</td>
<td>array[4] = 2;</td>
<td>可重载</td>
</tr>
<tr>
<td>-&gt;</td>
<td>指针型成员调用</td>
<td>ptr-&gt;age = 34;</td>
<td>可重载</td>
</tr>
<tr>
<td>.</td>
<td>对象型成员调用</td>
<td>obj.age = 34;</td>
<td>不可重载</td>
</tr>
<tr>
<td>++</td>
<td>后自增运算符</td>
<td>for( int i = 0; i &lt; 10; i++ ) cout</td>
<td>可重载</td>
</tr>
<tr>
<td>–</td>
<td>后自减运算符</td>
<td>for( int i = 10; i &gt; 0; i-- ) cout</td>
<td>可重载</td>
</tr>
<tr>
<td>const_cast</td>
<td>特殊属性转换</td>
<td>const_cast(type_from);</td>
<td>不可重载</td>
</tr>
<tr>
<td>dynamic_cast</td>
<td>特殊属性转换</td>
<td>dynamic_cast(type_from);</td>
<td>不可重载</td>
</tr>
<tr>
<td>static_cast</td>
<td>特殊属性转换</td>
<td>static_cast(type_from);</td>
<td>不可重载</td>
</tr>
<tr>
<td>reinterpret_cast</td>
<td>特殊属性转换</td>
<td>reinterpret_cast(type_from);</td>
<td>不可重载</td>
</tr>
<tr>
<td>typeid</td>
<td>对象类型符</td>
<td>cout « typeid(var).name();cout « typeid(type).name();</td>
<td>不可重载</td>
</tr>
<tr>
<td><strong>第三级别</strong>(具有右结合性)</td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>!</td>
<td>逻辑取反</td>
<td>if( !done ) …</td>
<td>可重载</td>
</tr>
<tr>
<td>not</td>
<td>! 的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>~</td>
<td>按位取反</td>
<td>flags = ~flags;</td>
<td>可重载</td>
</tr>
<tr>
<td>compl</td>
<td>~的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>++</td>
<td>预自增运算符</td>
<td>for( i = 0; i &lt; 10; ++i ) cout</td>
<td>可重载</td>
</tr>
<tr>
<td>–</td>
<td>预自减运算符</td>
<td>for( i = 10; i &gt; 0; --i ) cout</td>
<td>可重载</td>
</tr>
<tr>
<td>-</td>
<td>负号</td>
<td>int i = -1;</td>
<td>可重载</td>
</tr>
<tr>
<td>+</td>
<td>正号</td>
<td>int i = +1;</td>
<td>可重载</td>
</tr>
<tr>
<td>*</td>
<td>指针取值</td>
<td>int data = *intPtr;</td>
<td>可重载</td>
</tr>
<tr>
<td>&amp;</td>
<td>值取指针</td>
<td>int *intPtr = &amp;data;</td>
<td>可重载</td>
</tr>
<tr>
<td>new</td>
<td>动态元素内存分配</td>
<td>long *pVar = new long;MyClass *ptr = new MyClass(args);</td>
<td>可重载</td>
</tr>
<tr>
<td>new []</td>
<td>动态数组内存分配</td>
<td>long *array = new long[n];</td>
<td>可重载</td>
</tr>
<tr>
<td>delete</td>
<td>动态析构元素内存</td>
<td>delete pVar;</td>
<td>可重载</td>
</tr>
<tr>
<td>delete []</td>
<td>动态析构数组内存</td>
<td>delete [] array;</td>
<td>可重载</td>
</tr>
<tr>
<td>(type)</td>
<td>强制类型转换</td>
<td>int i = (int) floatNum;</td>
<td>可重载</td>
</tr>
<tr>
<td>sizeof</td>
<td>返回类型内存</td>
<td>int size = sizeof floatNum;int size = sizeof(float);</td>
<td>不可重载</td>
</tr>
<tr>
<td><strong>第四级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>-&gt;*</td>
<td>类指针成员引用</td>
<td>ptr-&gt;*var = 24;</td>
<td>可重载</td>
</tr>
<tr>
<td>.*</td>
<td>类对象成员引用</td>
<td>obj.*var = 24;</td>
<td>不可重载</td>
</tr>
<tr>
<td><strong>第五级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>*</td>
<td>乘法</td>
<td>int i = 2 * 4;</td>
<td>可重载</td>
</tr>
<tr>
<td>/</td>
<td>除法</td>
<td>float f = 10.0 / 3.0;</td>
<td>可重载</td>
</tr>
<tr>
<td>%</td>
<td>取余数(模运算)</td>
<td>int rem = 4 % 3;</td>
<td>可重载</td>
</tr>
<tr>
<td><strong>第六级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>+</td>
<td>加法</td>
<td>int i = 2 + 3;</td>
<td>可重载</td>
</tr>
<tr>
<td>-</td>
<td>减法</td>
<td>int i = 5 - 1;</td>
<td>可重载</td>
</tr>
<tr>
<td><strong>第七级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>&lt;&lt;</td>
<td>位左移</td>
<td>int flags = 33</td>
<td>可重载</td>
</tr>
<tr>
<td>&gt;&gt;</td>
<td>位右移</td>
<td>int flags = 33 &gt;&gt; 1;</td>
<td>可重载</td>
</tr>
<tr>
<td><strong>第八级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
<td>if( i &lt; 42 ) …</td>
<td>可重载</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于等于</td>
<td>if( i</td>
<td>可重载</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
<td>if( i &gt; 42 ) …</td>
<td>可重载</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于等于</td>
<td>if( i &gt;= 42 ) …</td>
<td>可重载</td>
</tr>
<tr>
<td><strong>第九级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>==</td>
<td>恒等于</td>
<td>if( i == 42 ) …</td>
<td>可重载</td>
</tr>
<tr>
<td>eq</td>
<td>== 的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>!=</td>
<td>不等于</td>
<td>if( i != 42 ) …</td>
<td>可重载</td>
</tr>
<tr>
<td>not_eq</td>
<td>!=的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td><strong>第十级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>&amp;</td>
<td>位且运算</td>
<td>flags = flags &amp; 42;</td>
<td>可重载</td>
</tr>
<tr>
<td>bitand</td>
<td>&amp;的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td><strong>第十一级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>^</td>
<td>位异或运算</td>
<td>flags = flags ^ 42;</td>
<td>可重载</td>
</tr>
<tr>
<td>xor</td>
<td>^的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td><strong>第十二级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>|</td>
<td>位或运算</td>
<td>flags = flags | 42;</td>
<td>可重载</td>
</tr>
<tr>
<td>bitor</td>
<td>|的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td><strong>第十三级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>&amp;&amp;</td>
<td>逻辑且运算</td>
<td>if( conditionA &amp;&amp; conditionB ) …</td>
<td>可重载</td>
</tr>
<tr>
<td>and</td>
<td>&amp;&amp;的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td><strong>第十四级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>||</td>
<td>逻辑或运算</td>
<td>if( conditionA || conditionB ) …</td>
<td>可重载</td>
</tr>
<tr>
<td>or</td>
<td>||的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td><strong>第十五级别</strong>(具有右结合性)</td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>? :</td>
<td>条件运算符</td>
<td>int i = (a &gt; b) ? a : b;</td>
<td>不可重载</td>
</tr>
<tr>
<td><strong>第十六级别</strong>(具有右结合性)</td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>=</td>
<td>赋值</td>
<td>int a = b;</td>
<td>可重载</td>
</tr>
<tr>
<td>+=</td>
<td>加赋值运算</td>
<td>a += 3;</td>
<td>可重载</td>
</tr>
<tr>
<td>-=</td>
<td>减赋值运算</td>
<td>b -= 4;</td>
<td>可重载</td>
</tr>
<tr>
<td>*=</td>
<td>乘赋值运算</td>
<td>a *= 5;</td>
<td>可重载</td>
</tr>
<tr>
<td>/=</td>
<td>除赋值运算</td>
<td>a /= 2;</td>
<td>可重载</td>
</tr>
<tr>
<td>%=</td>
<td>模赋值运算</td>
<td>a %= 3;</td>
<td>可重载</td>
</tr>
<tr>
<td>&amp;=</td>
<td>位且赋值运算</td>
<td>flags &amp;= new_flags;</td>
<td>可重载</td>
</tr>
<tr>
<td>and_eq</td>
<td>&amp;= 的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>^=</td>
<td>位异或赋值运算</td>
<td>flags ^= new_flags;</td>
<td>可重载</td>
</tr>
<tr>
<td>xor_eq</td>
<td>^=的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>|=</td>
<td>位或赋值运算</td>
<td>flags |= new_flags;</td>
<td>可重载</td>
</tr>
<tr>
<td>or_eq</td>
<td>|=的另一种表达</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>&lt;&lt;=</td>
<td>位左移赋值运算</td>
<td>flags &lt;&lt;=2;</td>
<td>可重载</td>
</tr>
<tr>
<td>&gt;&gt;=</td>
<td>位右移赋值运算</td>
<td>flags &gt;&gt;= 2;</td>
<td>可重载</td>
</tr>
<tr>
<td><strong>第十七级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>throw</td>
<td>异常抛出</td>
<td>throw EClass(“Message”);</td>
<td>不可重载</td>
</tr>
<tr>
<td><strong>第十八级别</strong></td>
<td>-----</td>
<td>-----</td>
<td>-----</td>
</tr>
<tr>
<td>,</td>
<td>逗号分隔符</td>
<td>for( i = 0, j = 0; i &lt; 10; i++, j++ ) …</td>
<td>可重载</td>
</tr>
</tbody>
</table>
<h4 id="十一、常用的字符串处理函数">十一、常用的字符串处理函数</h4>
<p>★ 常用字符串处理函数</p>
<p>① strlen (const char s[]);</p>
<p>② strcat (char dst[], const char src[]);</p>
<p>③ strncat(char dst[], const char src[], const unsigned int len);</p>
<p>④ strcpy (char dst[], const char src[]);</p>
<p>⑤ strncpy(char dst[], const char src[], const unsigned int len);</p>
<p>⑥ strcmp (const char s1[], const char s2[]);</p>
<p>⑦ strncmp(const char s1[], const char s2[], const unsigned int len);</p>
<p>● 更多的字符串处理函数通过作业完成并理解</p>
<p>● 教材/参考资料中，很多形式是 const char *s，暂时忽略，待学习指针后再进一步理解</p>
<p>● 先不要考虑这些函数的返回值，待学习指针后再进一步理解</p>
<p><strong>加头文件</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS <span class="comment">//若全是只读操作，不需要加_CRT_SECURE_NO_WARNINGS</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>1.strlen(const char s[])</p>
<p>功    能：求字符串的长度</p>
<p>输入参数：存放字符串的字符数组</p>
<p>返 回 值：整型值表示的长度</p>
<p>注意事项：返回第一个’\0’前的字符数量,不含’\0’</p>
<p>2.strcat(char dst[], const char src[])</p>
<p>功    能：将字符串src连接到字符串dst的尾部(含尾零)</p>
<p>输入参数：存放字符串dst的字符数组dst</p>
<p>​                   存放字符串src的字符数组src(只读)</p>
<p>返 回 值：改变后的字符数组dst</p>
<p>注意事项：字符数组dst要有足够的空间(两串总长+1)</p>
<p>3.strncat(char dst[], const char src[], const unsigned int n)</p>
<p>功    能：将字符串src的前n个字符连接到字符串dst的尾部</p>
<p>输入参数：存放字符串dst的字符数组dst</p>
<p>​				   存放字符串src的字符数组src(只读)</p>
<p>​				   要复制的长度n(只读，如果n超过src长度，则只连接src个)</p>
<p>返 回 值：改变后的字符数组dst</p>
<p>注意事项：字符数组dst要有足够的空间(原dst长度+n+1)</p>
<p>4.strcpy(char dst[], const char src[])</p>
<p>功    能：将字符串src复制到字符串dst中,覆盖原dst串</p>
<p>输入参数：存放字符串dst的字符数组dst</p>
<p>​                   存放字符串src的字符数组src(只读)</p>
<p>返 回 值：改变后的字符数组dst</p>
<p>注意事项：字符数组dst要有足够的空间(串src长+1)</p>
<p>5.strncpy(char dst[], const char src[], unsigned int n)</p>
<p>功    能：将字符串src的前n个复制到字符串dst中,覆盖原dst串</p>
<p>输入参数：存放字符串dst的字符数组dst</p>
<p>​                   存放字符串src的字符数组src(只读)</p>
<p>​                   要复制的长度n(只读，如果n超过src长度，则只复制src个)</p>
<p>返 回 值：改变后的字符数组dst</p>
<p>注意事项：字符数组dst要有足够的空间(min(串src长,n)+1)</p>
<p>6.strcmp(const char s1[], const char s2[])</p>
<p>功    能：比较字符串s1和字符串s2的大小</p>
<p>输入参数：存放字符串s1的字符数组s1(只读)</p>
<p>​                   存放字符串s2的字符数组s2(只读)</p>
<p>返 回 值：整型值(0:相等  &gt;0:串1大  &lt;0:串1小)</p>
<p>7.strncmp(const char s1[], const char s2[], const unsigned int n)</p>
<p>功    能：比较字符串s1和字符串s2的前n个字符的大小</p>
<p>输入参数：存放字符串s1的字符数组s1(只读)</p>
<p>​                   存放字符串s2的字符数组s2(只读)</p>
<p>​                   要比较的长度n(只读)</p>
<p>返 回 值：整型值(0:相等  &gt;0:串1大  &lt;0:串1小)</p>
]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/butterflyblog/2024/02/29/index/</url>
    <content><![CDATA[<!DOCTYPE html><html lang="zh-CN" data-theme="light"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0"><title>isSeymour - 细水长流</title><meta name="author" content="isSeymour"><meta name="copyright" content="isSeymour"><meta name="format-detection" content="telephone=no"><meta name="theme-color" content="#ffffff"><meta name="description" content="志之所趋，无远弗届，穷山距海，不能限也。">
<meta property="og:type" content="website">
<meta property="og:title" content="isSeymour">
<meta property="og:url" content="https://isseymour.github.io/butterflyblog/index.html">
<meta property="og:site_name" content="isSeymour">
<meta property="og:description" content="志之所趋，无远弗届，穷山距海，不能限也。">
<meta property="og:locale" content="zh_CN">
<meta property="og:image" content="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/T4.jpg">
<meta property="article:author" content="isSeymour">
<meta property="article:tag" content="博客, 个人网站">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/T4.jpg"><link rel="shortcut icon" href="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/IC1010.ico"><link rel="canonical" href="https://isseymour.github.io/butterflyblog/index.html"><link rel="preconnect" href="//cdn.jsdelivr.net"/><link rel="preconnect" href="//busuanzi.ibruce.info"/><link rel="stylesheet" href="/butterflyblog/css/index.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css" media="print" onload="this.media='all'"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fancyapps/ui/dist/fancybox.min.css" media="print" onload="this.media='all'"><script>const GLOBAL_CONFIG = { 
  root: '/butterflyblog/',
  algolia: undefined,
  localSearch: {"path":"/butterflyblog/search.xml","preload":true,"languages":{"hits_empty":"找不到您查询的内容：${query}"}},
  translate: undefined,
  noticeOutdate: undefined,
  highlight: {"plugin":"highlighjs","highlightCopy":true,"highlightLang":true,"highlightHeightLimit":300},
  copy: {
    success: '复制成功',
    error: '复制错误',
    noSupport: '浏览器不支持'
  },
  relativeDate: {
    homepage: false,
    post: false
  },
  runtime: '天',
  date_suffix: {
    just: '刚刚',
    min: '分钟前',
    hour: '小时前',
    day: '天前',
    month: '个月前'
  },
  copyright: undefined,
  lightbox: 'fancybox',
  Snackbar: undefined,
  source: {
    justifiedGallery: {
      js: 'https://cdn.jsdelivr.net/npm/flickr-justified-gallery/dist/fjGallery.min.js',
      css: 'https://cdn.jsdelivr.net/npm/flickr-justified-gallery/dist/fjGallery.min.css'
    }
  },
  isPhotoFigcaption: true,
  islazyload: false,
  isAnchor: false,
  percent: {
    toc: true,
    rightside: true,
  }
}</script><script id="config-diff">var GLOBAL_CONFIG_SITE = {
  title: 'isSeymour',
  isPost: false,
  isHome: true,
  isHighlightShrink: false,
  isToc: false,
  postUpdate: '2024-02-29 20:56:57'
}</script><noscript><style type="text/css">
  #nav {
    opacity: 1
  }
  .justified-gallery img {
    opacity: 1
  }

  #recent-posts time,
  #post-meta time {
    display: inline !important
  }
</style></noscript><script>(win=>{
    win.saveToLocal = {
      set: function setWithExpiry(key, value, ttl) {
        if (ttl === 0) return
        const now = new Date()
        const expiryDay = ttl * 86400000
        const item = {
          value: value,
          expiry: now.getTime() + expiryDay,
        }
        localStorage.setItem(key, JSON.stringify(item))
      },

      get: function getWithExpiry(key) {
        const itemStr = localStorage.getItem(key)

        if (!itemStr) {
          return undefined
        }
        const item = JSON.parse(itemStr)
        const now = new Date()

        if (now.getTime() > item.expiry) {
          localStorage.removeItem(key)
          return undefined
        }
        return item.value
      }
    }
  
    win.getScript = url => new Promise((resolve, reject) => {
      const script = document.createElement('script')
      script.src = url
      script.async = true
      script.onerror = reject
      script.onload = script.onreadystatechange = function() {
        const loadState = this.readyState
        if (loadState && loadState !== 'loaded' && loadState !== 'complete') return
        script.onload = script.onreadystatechange = null
        resolve()
      }
      document.head.appendChild(script)
    })
  
    win.getCSS = (url,id = false) => new Promise((resolve, reject) => {
      const link = document.createElement('link')
      link.rel = 'stylesheet'
      link.href = url
      if (id) link.id = id
      link.onerror = reject
      link.onload = link.onreadystatechange = function() {
        const loadState = this.readyState
        if (loadState && loadState !== 'loaded' && loadState !== 'complete') return
        link.onload = link.onreadystatechange = null
        resolve()
      }
      document.head.appendChild(link)
    })
  
      win.activateDarkMode = function () {
        document.documentElement.setAttribute('data-theme', 'dark')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#0d0d0d')
        }
      }
      win.activateLightMode = function () {
        document.documentElement.setAttribute('data-theme', 'light')
        if (document.querySelector('meta[name="theme-color"]') !== null) {
          document.querySelector('meta[name="theme-color"]').setAttribute('content', '#ffffff')
        }
      }
      const t = saveToLocal.get('theme')
    
          if (t === 'dark') activateDarkMode()
          else if (t === 'light') activateLightMode()
        
      const asideStatus = saveToLocal.get('aside-status')
      if (asideStatus !== undefined) {
        if (asideStatus === 'hide') {
          document.documentElement.classList.add('hide-aside')
        } else {
          document.documentElement.classList.remove('hide-aside')
        }
      }
    
    const detectApple = () => {
      if(/iPad|iPhone|iPod|Macintosh/.test(navigator.userAgent)){
        document.documentElement.classList.add('apple')
      }
    }
    detectApple()
    })(window)</script><link rel="stylesheet" href="/butterflyblog/code/style.css"><meta name="generator" content="Hexo 6.3.0"></head><body><div id="sidebar"><div id="menu-mask"></div><div id="sidebar-menus"><div class="avatar-img is-center"><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/T4.jpg" onerror="onerror=null;src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/friend_404.gif'" alt="avatar"/></div><div class="sidebar-site-data site-data is-center"><a href="/butterflyblog/archives/"><div class="headline">文章</div><div class="length-num">36</div></a><a href="/butterflyblog/tags/"><div class="headline">标签</div><div class="length-num">24</div></a><a href="/butterflyblog/categories/"><div class="headline">分类</div><div class="length-num">14</div></a></div><hr/><div class="menus_items"><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-solid fa-book"></i><span> 文章</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/archives/"><i class="fa-fw fa-solid fa-timeline"></i><span> 总览</span></a></li><li><a class="site-page child" href="/butterflyblog/tags/"><i class="fa-fw fa-sharp fa-solid fa-hashtag"></i><span> 标签</span></a></li><li><a class="site-page child" href="/butterflyblog/categories/"><i class="fa-fw fa-sharp fa-solid fa-folder"></i><span> 分类</span></a></li></ul></div><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-sharp fa-solid fa-list"></i><span> 功能</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/ctf/"><i class="fa-fw fa-solid fa-shield-halved"></i><span> CTF</span></a></li><li><a class="site-page child" href="/butterflyblog/music/"><i class="fa-fw fa-solid fa-music"></i><span> 音乐</span></a></li><li><a class="site-page child" href="/butterflyblog/tools/"><i class="fa-fw fa-solid fa-screwdriver-wrench"></i><span> 下载</span></a></li><li><a class="site-page child" href="/butterflyblog/link/"><i class="fa-fw fa-solid fa-paper-plane"></i><span> 链接</span></a></li></ul></div><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-regular fa-user"></i><span> 关于</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/about/"><i class="fa-fw fa-regular fa-user"></i><span> 关于我</span></a></li><li><a class="site-page child" href="/butterflyblog/message/"><i class="fa-fw fa-solid fa-message"></i><span> 留言板</span></a></li><li><a class="site-page child" href="/butterflyblog/develop/"><i class="fa-fw fa-brands fa-windows"></i><span> 开发日志</span></a></li></ul></div></div></div></div><div class="page" id="body-wrap"><header class="full_page" id="page-header" style="background-image: url('https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/PG1053.jpg')"><nav id="nav"><span id="blog-info"><a href="/butterflyblog/" title="isSeymour"><span class="site-name">isSeymour</span></a></span><div id="menus"><div id="search-button"><a class="site-page social-icon search" href="javascript:void(0);"><i class="fas fa-search fa-fw"></i><span> 搜索</span></a></div><div class="menus_items"><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-solid fa-book"></i><span> 文章</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/archives/"><i class="fa-fw fa-solid fa-timeline"></i><span> 总览</span></a></li><li><a class="site-page child" href="/butterflyblog/tags/"><i class="fa-fw fa-sharp fa-solid fa-hashtag"></i><span> 标签</span></a></li><li><a class="site-page child" href="/butterflyblog/categories/"><i class="fa-fw fa-sharp fa-solid fa-folder"></i><span> 分类</span></a></li></ul></div><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-sharp fa-solid fa-list"></i><span> 功能</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/ctf/"><i class="fa-fw fa-solid fa-shield-halved"></i><span> CTF</span></a></li><li><a class="site-page child" href="/butterflyblog/music/"><i class="fa-fw fa-solid fa-music"></i><span> 音乐</span></a></li><li><a class="site-page child" href="/butterflyblog/tools/"><i class="fa-fw fa-solid fa-screwdriver-wrench"></i><span> 下载</span></a></li><li><a class="site-page child" href="/butterflyblog/link/"><i class="fa-fw fa-solid fa-paper-plane"></i><span> 链接</span></a></li></ul></div><div class="menus_item"><a class="site-page group" href="javascript:void(0);"><i class="fa-fw fa-regular fa-user"></i><span> 关于</span><i class="fas fa-chevron-down"></i></a><ul class="menus_item_child"><li><a class="site-page child" href="/butterflyblog/about/"><i class="fa-fw fa-regular fa-user"></i><span> 关于我</span></a></li><li><a class="site-page child" href="/butterflyblog/message/"><i class="fa-fw fa-solid fa-message"></i><span> 留言板</span></a></li><li><a class="site-page child" href="/butterflyblog/develop/"><i class="fa-fw fa-brands fa-windows"></i><span> 开发日志</span></a></li></ul></div></div><div id="toggle-menu"><a class="site-page" href="javascript:void(0);"><i class="fas fa-bars fa-fw"></i></a></div></div></nav><div id="site-info"><h1 id="site-title">isSeymour</h1><div id="site-subtitle"><span id="subtitle"></span></div><div id="site_social_icons"><a class="social-icon" href="https://github.com/isSeymour/" target="_blank" title="Github"><i class="fab fa-github"></i></a><a class="social-icon" href="https://space.bilibili.com/79699613/" target="_blank" title="B站"><i class="fa-brands fa-bilibili"></i></a><a class="social-icon" href="https://blog.csdn.net/m0_63205991/" target="_blank" title="CSDN"><i class="fa-solid fa-code"></i></a><a class="social-icon" href="mailto:isSeymour@163.com" target="_blank" title="Email"><i class="fas fa-envelope"></i></a></div></div><div id="scroll-down"><i class="fas fa-angle-down scroll-down-effects"></i></div></header><main class="layout" id="content-inner"><div class="recent-posts" id="recent-posts"><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/02/16/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0Notes/" title="《统计学习方法》监督学习Notes"><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/A-Page-%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《统计学习方法》监督学习Notes"></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/02/16/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0Notes/" title="《统计学习方法》监督学习Notes">《统计学习方法》监督学习Notes</a><div class="article-meta-wrap"><span class="article-meta"><i class="fas fa-thumbtack sticky"></i><span class="sticky">置顶</span><span class="article-meta-separator">|</span></span><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-02-15T16:00:00.000Z" title="发表于 2024-02-16 00:00:00">2024-02-16</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-02-22T16:00:00.000Z" title="更新于 2024-02-23 00:00:00">2024-02-23</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/">机器学习</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E7%90%86%E8%AE%BA/">监督学习理论</a></span></div><div class="content">《统计学习方法》监督学习Notes

来源：

[《统计学习方法》书籍-第1篇 监督学习（链接缺失…）]

2024-01-16@isSeymour

 
第1章 统计学习及监督学习概论
1.1 统计学习


统计学习 statistical learning
是关于计算机基于数据构建概率统计模型并运用模型对数据进行预测与分析的一门学科。亦称统计机器学习 statistical machine learning。



“如果一个系统能够通过执行某个过程改进它的性能，这就是学习”
——Herbert A.Simon



统计学习的基本假设（前提）
同类数据具有一定的统计规律性。


1.2 统计学习的分类
监督学习 supervised learning
指从标注数据中学习预测模型的机器学习问题。


本质
学习输入到输出的映射的统计规律。


基本假设
训练数据和测试数据是依联合概率分布 P(X, Y) 独立同分布的。


模型

条件概率分布 P(Y∣X)P(Y|X)P(Y∣X)
决策函数 Y=f(X)Y = f(X)Y=f(X)



预测
输入 xN+1x_{N+1}xN+1 ...</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2023/07/29/AAMS-%E5%90%8C%E6%B5%8E%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F/" title="AAMS-同济教务系统"><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/aams0.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="AAMS-同济教务系统"></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2023/07/29/AAMS-%E5%90%8C%E6%B5%8E%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F/" title="AAMS-同济教务系统">AAMS-同济教务系统</a><div class="article-meta-wrap"><span class="article-meta"><i class="fas fa-thumbtack sticky"></i><span class="sticky">置顶</span><span class="article-meta-separator">|</span></span><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2023-07-28T16:00:00.000Z" title="发表于 2023-07-29 00:00:00">2023-07-29</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2023-07-28T16:00:00.000Z" title="更新于 2023-07-29 00:00:00">2023-07-29</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/">开发项目</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/">前后端分离</a></span></div><div class="content">AAMS-同济教务系统

网址入口：AAMS-同济教务系统
说明：账号密码请询问站长，谢谢配合！

0x01 AAMS是什么？

Academic Affairs Management System
教务管理系统

本次项目致力于搭建一个有数据库支持的、前后端分离的教务管理系统。
0x02 技术栈


前端：Vue 2.x、Vue-Router、ElementUI、Axios
后端：Django、DRF、JWT
数据库：MySQL

本次项目采用前后端分离的架构，前端采用 VUE 框架，后端采用Django 框架，前后端通过 AJAX 技术进行连接。
后端主要管理数据库、数据查询、数据操作等功能，构建数据模型、与数据库交互、业务流程处理、网络请求接收并响应等功能。其中网络请求部分，通过传输 JSON 格式数据给前端，前端接收 JSON 格式数据后，把数据传给前端渲染的 data 进行渲染并呈现给用户。
前端是 SPA 单页面应用，功能跳转通过 vue-router 来处理，本地身份认证与路由拦截也通过 vue-router 处理。其中关于网络请求有单独的文件结构，简洁明了。美化工作由  ...</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/03/01/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《计算机组成原理》Notes_持续更新..."><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/ComputerOrganization/CoverPage.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《计算机组成原理》Notes_持续更新..."></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/03/01/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《计算机组成原理》Notes_持续更新...">《计算机组成原理》Notes_持续更新...</a><div class="article-meta-wrap"><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-03-01T05:00:00.000Z" title="发表于 2024-03-01 13:00:00">2024-03-01</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-02-29T16:00:00.000Z" title="更新于 2024-03-01 00:00:00">2024-03-01</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E5%A4%A7%E5%AD%A6%E8%AF%BE%E7%A8%8B/">大学课程</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/">计算机组成原理</a></span></div><div class="content">《计算机组成原理》Notes_持续更新…

来源：同济大学计算机系《计算机组成原理》课程 ComputerOrganization
2024-03-01@isSeymour

第1章 计算机系统概述
</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/03/01/%E3%80%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《算法设计与分析》Notes_持续更新..."><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/CoverPage-3.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《算法设计与分析》Notes_持续更新..."></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/03/01/%E3%80%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《算法设计与分析》Notes_持续更新...">《算法设计与分析》Notes_持续更新...</a><div class="article-meta-wrap"><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-03-01T04:00:00.000Z" title="发表于 2024-03-01 12:00:00">2024-03-01</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-02-29T16:00:00.000Z" title="更新于 2024-03-01 00:00:00">2024-03-01</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E5%A4%A7%E5%AD%A6%E8%AF%BE%E7%A8%8B/">大学课程</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/">算法设计与分析</a></span></div><div class="content">《算法设计与分析》Notes_持续更新…

来源：同济大学计算机系《算法分析与设计》课程 Algorithm
2024-03-01@isSeymour

第1章 算法概述
</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/03/01/%E3%80%8A%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《现代密码学》Notes_持续更新..."><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Cryptology/CoverPage.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《现代密码学》Notes_持续更新..."></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/03/01/%E3%80%8A%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《现代密码学》Notes_持续更新...">《现代密码学》Notes_持续更新...</a><div class="article-meta-wrap"><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-03-01T03:00:00.000Z" title="发表于 2024-03-01 11:00:00">2024-03-01</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-02-29T16:00:00.000Z" title="更新于 2024-03-01 00:00:00">2024-03-01</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E5%A4%A7%E5%AD%A6%E8%AF%BE%E7%A8%8B/">大学课程</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/">现代密码学</a></span></div><div class="content">《现代密码学》Notes_持续更新…

来源：同济大学计算机系《现代密码学》课程 Cryptology
2024-03-01@isSeymour

第1章 古典密码
</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/03/01/%E3%80%8A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《信息安全数学基础》Notes_持续更新..."><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SecurityMath/CoverPage.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《信息安全数学基础》Notes_持续更新..."></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/03/01/%E3%80%8A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《信息安全数学基础》Notes_持续更新...">《信息安全数学基础》Notes_持续更新...</a><div class="article-meta-wrap"><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-03-01T02:00:00.000Z" title="发表于 2024-03-01 10:00:00">2024-03-01</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-02-29T16:00:00.000Z" title="更新于 2024-03-01 00:00:00">2024-03-01</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E5%A4%A7%E5%AD%A6%E8%AF%BE%E7%A8%8B/">大学课程</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/">信息安全数学基础</a></span></div><div class="content">《信息安全数学基础》Notes_持续更新…

来源：同济大学计算机系《信息安全数学基础》课程 SecurityMath
2024-03-01@isSeymour

一、密码学数学基础引论
</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/03/01/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《数据库系统原理》Notes_持续更新..."><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DatabaseSystemPrinciples/CoverPage.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《数据库系统原理》Notes_持续更新..."></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/03/01/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《数据库系统原理》Notes_持续更新...">《数据库系统原理》Notes_持续更新...</a><div class="article-meta-wrap"><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-03-01T01:00:00.000Z" title="发表于 2024-03-01 09:00:00">2024-03-01</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-02-29T16:00:00.000Z" title="更新于 2024-03-01 00:00:00">2024-03-01</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E5%A4%A7%E5%AD%A6%E8%AF%BE%E7%A8%8B/">大学课程</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/">计算机组成原理</a></span></div><div class="content">《数据库系统原理》Notes_持续更新…

来源：同济大学计算机系《数据库系统原理》课程 DatabaseSystemPrinciples
2024-03-01@isSeymour

Ch1-数据库系统概述
</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/02/01/%E3%80%8APyTorch%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%E3%80%8B/" title="《PyTorch入门教程》"><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/PyTorch00.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《PyTorch入门教程》"></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/02/01/%E3%80%8APyTorch%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%E3%80%8B/" title="《PyTorch入门教程》">《PyTorch入门教程》</a><div class="article-meta-wrap"><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-01-31T16:00:00.000Z" title="发表于 2024-02-01 00:00:00">2024-02-01</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-02-02T16:00:00.000Z" title="更新于 2024-02-03 00:00:00">2024-02-03</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/">机器学习</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/Python/">Python</a></span></div><div class="content">《PyTorch入门教程》

来源 : PyTorch深度学习快速入门教程（绝对通俗易懂！）【小土堆】
代码参考：Github | PyTorch-Tutorial 代码
2024-01-30@isSeymour

一、安装初步

关于环境问题，下面这个文章讲的挺好的：
001-深度学习Pytorch环境搭建(Anaconda , PyCharm导入)

1.1 安装与环境
Anaconda


安装Anaconda官网


镜像源


12345678910查看镜像源conda config --show添加镜像源conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/设置搜索时显示通道地址conda config --set show_channel_urls yes若要删除镜像源conda config  ...</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/01/31/%E3%80%8AMatplotlib%E3%80%8BNotes/" title="《Matplotlib》Notes"><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Matplotlib.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《Matplotlib》Notes"></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/01/31/%E3%80%8AMatplotlib%E3%80%8BNotes/" title="《Matplotlib》Notes">《Matplotlib》Notes</a><div class="article-meta-wrap"><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-01-30T16:00:00.000Z" title="发表于 2024-01-31 00:00:00">2024-01-31</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-01-30T16:00:00.000Z" title="更新于 2024-01-31 00:00:00">2024-01-31</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/">编程语言</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/Python/">Python</a></span></div><div class="content">《Matplotlib》Notes

来源：https://www.runoob.com/matplotlib/matplotlib-tutorial.html
2024-02-15@isSeymour

[TOC]
一、初步
Matplotlib 是 Python 的绘图库，它能让使用者很轻松地将数据图形化，并且提供多样化的输出格式。
Matplotlib 可以用来绘制各种静态，动态，交互式的图表。
Matplotlib 是一个非常强大的 Python 画图工具，我们可以使用该工具将很多数据通过图表的形式更直观的呈现出来。
Matplotlib 可以绘制线图、散点图、等高线图、条形图、柱状图、3D 图形、甚至是图形动画等等。
1.1 安装
1pip install matplotlib

验证

123import matplotlibprint(matplotlib.__version__)
13.4.2
1.2 Pyplot
Pyplot 是 Matplotlib 的子库，提供了和 MATLAB 类似的绘图 API。
Pyplot 是常用的绘图模块，能很方便让用户绘制 2D 图表 ...</div></div></div><div class="recent-post-item"><div class="post_cover right"><a href="/butterflyblog/2024/01/30/%E3%80%8ASciPy%E3%80%8BNotes/" title="《SciPy》Notes"><img class="post-bg" src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/SciPy.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《SciPy》Notes"></a></div><div class="recent-post-info"><a class="article-title" href="/butterflyblog/2024/01/30/%E3%80%8ASciPy%E3%80%8BNotes/" title="《SciPy》Notes">《SciPy》Notes</a><div class="article-meta-wrap"><span class="post-meta-date"><i class="far fa-calendar-alt"></i><span class="article-meta-label">发表于</span><time class="post-meta-date-created" datetime="2024-01-29T16:00:00.000Z" title="发表于 2024-01-30 00:00:00">2024-01-30</time><span class="article-meta-separator">|</span><i class="fas fa-history"></i><span class="article-meta-label">更新于</span><time class="post-meta-date-updated" datetime="2024-01-29T16:00:00.000Z" title="更新于 2024-01-30 00:00:00">2024-01-30</time></span><span class="article-meta"><span class="article-meta-separator">|</span><i class="fas fa-inbox"></i><a class="article-meta__categories" href="/butterflyblog/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/">编程语言</a></span><span class="article-meta tags"><span class="article-meta-separator">|</span><i class="fas fa-tag"></i><a class="article-meta__tags" href="/butterflyblog/tags/Python/">Python</a></span></div><div class="content">《SciPy》Notes

来源：

https://www.runoob.com/scipy/scipy-tutorial.html
https://docs.scipy.org/doc/scipy/reference/

2024-02-14@isSeymour

一、简介
SciPy 是一个开源的 Python 算法库和数学工具包。
Scipy 是基于 Numpy 的科学计算库，用于数学、科学、工程学等领域，很多有一些高阶抽象和物理模型需要使用 Scipy。
SciPy 包含的模块有最优化、线性代数、积分、插值、特殊函数、快速傅里叶变换、信号处理和图像处理、常微分方程求解和其他科学与工程中常用的计算。
1.1 安装
1pip install scipy
使用示例：
123import scipyprint(scipy.__version__)	# 输出版本号1.7.0
1234from scipy import constants# 一英亩等于多少平方米print(constants.acre)	# 4046.8564223999992
1.2 模块列表
以下列出了 SciPy  ...</div></div></div><nav id="pagination"><div class="pagination"><span class="page-number current">1</span><a class="page-number" href="/butterflyblog/page/2/#content-inner">2</a><span class="space">&hellip;</span><a class="page-number" href="/butterflyblog/page/4/#content-inner">4</a><a class="extend next" rel="next" href="/butterflyblog/page/2/#content-inner"><i class="fas fa-chevron-right fa-fw"></i></a></div></nav></div><div class="aside-content" id="aside-content"><div class="card-widget card-info"><div class="is-center"><div class="avatar-img"><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/T4.jpg" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/friend_404.gif'" alt="avatar"/></div><div class="author-info__name">isSeymour</div><div class="author-info__description">志之所趋，无远弗届，穷山距海，不能限也。</div></div><div class="card-info-data site-data is-center"><a href="/butterflyblog/archives/"><div class="headline">文章</div><div class="length-num">36</div></a><a href="/butterflyblog/tags/"><div class="headline">标签</div><div class="length-num">24</div></a><a href="/butterflyblog/categories/"><div class="headline">分类</div><div class="length-num">14</div></a></div><a id="card-info-btn" target="_blank" rel="noopener" href="https://github.com/isSeymour/"><i class="fab fa-github"></i><span>Follow Me</span></a><div class="card-info-social-icons is-center"><a class="social-icon" href="https://github.com/isSeymour/" target="_blank" title="Github"><i class="fab fa-github"></i></a><a class="social-icon" href="https://space.bilibili.com/79699613/" target="_blank" title="B站"><i class="fa-brands fa-bilibili"></i></a><a class="social-icon" href="https://blog.csdn.net/m0_63205991/" target="_blank" title="CSDN"><i class="fa-solid fa-code"></i></a><a class="social-icon" href="mailto:isSeymour@163.com" target="_blank" title="Email"><i class="fas fa-envelope"></i></a></div></div><div class="card-widget card-announcement"><div class="item-headline"><i class="fas fa-bullhorn fa-shake"></i><span>公告</span></div><div class="announcement_content">评论区更新啦，输入QQ邮箱，不用登陆，即可评论！</div></div><div class="sticky_layout"><div class="card-widget card-recent-post"><div class="item-headline"><i class="fas fa-history"></i><span>最新文章</span></div><div class="aside-list"><div class="aside-list-item"><a class="thumbnail" href="/butterflyblog/2024/03/01/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《计算机组成原理》Notes_持续更新..."><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/ComputerOrganization/CoverPage.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《计算机组成原理》Notes_持续更新..."/></a><div class="content"><a class="title" href="/butterflyblog/2024/03/01/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《计算机组成原理》Notes_持续更新...">《计算机组成原理》Notes_持续更新...</a><time datetime="2024-03-01T05:00:00.000Z" title="发表于 2024-03-01 13:00:00">2024-03-01</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/butterflyblog/2024/03/01/%E3%80%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《算法设计与分析》Notes_持续更新..."><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/CoverPage-3.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《算法设计与分析》Notes_持续更新..."/></a><div class="content"><a class="title" href="/butterflyblog/2024/03/01/%E3%80%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《算法设计与分析》Notes_持续更新...">《算法设计与分析》Notes_持续更新...</a><time datetime="2024-03-01T04:00:00.000Z" title="发表于 2024-03-01 12:00:00">2024-03-01</time></div></div><div class="aside-list-item"><a class="thumbnail" href="/butterflyblog/2024/03/01/%E3%80%8A%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《现代密码学》Notes_持续更新..."><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Cryptology/CoverPage.png" onerror="this.onerror=null;this.src='https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/404.jpg'" alt="《现代密码学》Notes_持续更新..."/></a><div class="content"><a class="title" href="/butterflyblog/2024/03/01/%E3%80%8A%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/" title="《现代密码学》Notes_持续更新...">《现代密码学》Notes_持续更新...</a><time datetime="2024-03-01T03:00:00.000Z" title="发表于 2024-03-01 11:00:00">2024-03-01</time></div></div></div></div><div class="card-widget card-categories"><div class="item-headline">
            <i class="fas fa-folder-open"></i>
            <span>分类</span>
            <a class="card-more-btn" href="/butterflyblog/categories/" title="查看更多">
    <i class="fas fa-angle-right"></i></a>
            </div>
            <ul class="card-category-list" id="aside-cat-list">
            <li class="card-category-list-item "><a class="card-category-list-link" href="/butterflyblog/categories/C-C/"><span class="card-category-list-name">C/C++</span><span class="card-category-list-count">3</span></a></li><li class="card-category-list-item "><a class="card-category-list-link" href="/butterflyblog/categories/Web%E6%8A%80%E6%9C%AF/"><span class="card-category-list-name">Web技术</span><span class="card-category-list-count">2</span></a></li><li class="card-category-list-item "><a class="card-category-list-link" href="/butterflyblog/categories/%E5%90%8E%E7%AB%AF/"><span class="card-category-list-name">后端</span><span class="card-category-list-count">3</span></a></li><li class="card-category-list-item "><a class="card-category-list-link" href="/butterflyblog/categories/%E5%A4%A7%E5%AD%A6%E8%AF%BE%E7%A8%8B/"><span class="card-category-list-name">大学课程</span><span class="card-category-list-count">8</span></a></li><li class="card-category-list-item "><a class="card-category-list-link" href="/butterflyblog/categories/%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/"><span class="card-category-list-name">开发项目</span><span class="card-category-list-count">1</span></a></li><li class="card-category-list-item "><a class="card-category-list-link" href="/butterflyblog/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"><span class="card-category-list-name">操作系统</span><span class="card-category-list-count">1</span></a></li><li class="card-category-list-item "><a class="card-category-list-link" href="/butterflyblog/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"><span class="card-category-list-name">数据库</span><span class="card-category-list-count">1</span></a></li><li class="card-category-list-item "><a class="card-category-list-link" href="/butterflyblog/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"><span class="card-category-list-name">数据结构</span><span class="card-category-list-count">1</span></a></li>
            </ul></div><div class="card-widget card-tags"><div class="item-headline"><i class="fas fa-tags"></i><span>标签</span></div><div class="card-tag-cloud"><a href="/butterflyblog/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/" style="font-size: 1.15em; color: rgb(69, 104, 99)">前后端分离</a><a href="/butterflyblog/tags/%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/" style="font-size: 1.15em; color: rgb(66, 145, 120)">身份认证</a><a href="/butterflyblog/tags/C-C/" style="font-size: 1.38em; color: rgb(43, 7, 119)">C/C++</a><a href="/butterflyblog/tags/STL/" style="font-size: 1.15em; color: rgb(199, 191, 136)">STL</a><a href="/butterflyblog/tags/%E8%AE%A1%E7%BD%91%E5%AE%9E%E9%AA%8C/" style="font-size: 1.22em; color: rgb(123, 54, 185)">计网实验</a><a href="/butterflyblog/tags/Django/" style="font-size: 1.3em; color: rgb(32, 122, 91)">Django</a><a href="/butterflyblog/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80Assembly/" style="font-size: 1.15em; color: rgb(9, 52, 58)">汇编语言Assembly</a><a href="/butterflyblog/tags/LaTeX/" style="font-size: 1.22em; color: rgb(58, 161, 19)">LaTeX</a><a href="/butterflyblog/tags/Linux/" style="font-size: 1.15em; color: rgb(200, 162, 100)">Linux</a><a href="/butterflyblog/tags/Python/" style="font-size: 1.45em; color: rgb(168, 179, 74)">Python</a><a href="/butterflyblog/tags/PHP/" style="font-size: 1.15em; color: rgb(33, 105, 148)">PHP</a><a href="/butterflyblog/tags/SQL/" style="font-size: 1.15em; color: rgb(95, 196, 44)">SQL</a><a href="/butterflyblog/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/" style="font-size: 1.15em; color: rgb(194, 160, 142)">正则表达式</a><a href="/butterflyblog/tags/sqlmap/" style="font-size: 1.15em; color: rgb(22, 29, 61)">sqlmap</a><a href="/butterflyblog/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/" style="font-size: 1.15em; color: rgb(76, 173, 6)">信息安全数学基础</a><a href="/butterflyblog/tags/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/" style="font-size: 1.15em; color: rgb(38, 183, 142)">现代密码学</a><a href="/butterflyblog/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/" style="font-size: 1.22em; color: rgb(150, 125, 163)">计算机组成原理</a><a href="/butterflyblog/tags/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/" style="font-size: 1.15em; color: rgb(157, 13, 127)">算法设计与分析</a><a href="/butterflyblog/tags/%E9%A2%9C%E8%89%B2%E7%B4%A0%E6%9D%90/" style="font-size: 1.15em; color: rgb(192, 70, 183)">颜色素材</a><a href="/butterflyblog/tags/flex%E5%B8%83%E5%B1%80/" style="font-size: 1.15em; color: rgb(24, 122, 158)">flex布局</a><a href="/butterflyblog/tags/%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E7%90%86%E8%AE%BA/" style="font-size: 1.15em; color: rgb(160, 184, 127)">监督学习理论</a><a href="/butterflyblog/tags/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%AE%9E%E9%AA%8C/" style="font-size: 1.15em; color: rgb(0, 8, 84)">数字逻辑实验</a><a href="/butterflyblog/tags/%E5%8E%9F%E7%A5%9E/" style="font-size: 1.15em; color: rgb(67, 192, 124)">原神</a><a href="/butterflyblog/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" style="font-size: 1.15em; color: rgb(79, 27, 178)">数据结构</a></div></div><div class="card-widget card-archives"><div class="item-headline"><i class="fas fa-archive"></i><span>归档</span><a class="card-more-btn" href="/butterflyblog/archives/" title="查看更多">
    <i class="fas fa-angle-right"></i></a></div><ul class="card-archive-list"><li class="card-archive-list-item"><a class="card-archive-list-link" href="/butterflyblog/archives/2024/03/"><span class="card-archive-list-date">三月 2024</span><span class="card-archive-list-count">5</span></a></li><li class="card-archive-list-item"><a class="card-archive-list-link" href="/butterflyblog/archives/2024/02/"><span class="card-archive-list-date">二月 2024</span><span class="card-archive-list-count">2</span></a></li><li class="card-archive-list-item"><a class="card-archive-list-link" href="/butterflyblog/archives/2024/01/"><span class="card-archive-list-date">一月 2024</span><span class="card-archive-list-count">4</span></a></li><li class="card-archive-list-item"><a class="card-archive-list-link" href="/butterflyblog/archives/2023/11/"><span class="card-archive-list-date">十一月 2023</span><span class="card-archive-list-count">1</span></a></li><li class="card-archive-list-item"><a class="card-archive-list-link" href="/butterflyblog/archives/2023/10/"><span class="card-archive-list-date">十月 2023</span><span class="card-archive-list-count">1</span></a></li><li class="card-archive-list-item"><a class="card-archive-list-link" href="/butterflyblog/archives/2023/09/"><span class="card-archive-list-date">九月 2023</span><span class="card-archive-list-count">5</span></a></li><li class="card-archive-list-item"><a class="card-archive-list-link" href="/butterflyblog/archives/2023/08/"><span class="card-archive-list-date">八月 2023</span><span class="card-archive-list-count">8</span></a></li><li class="card-archive-list-item"><a class="card-archive-list-link" href="/butterflyblog/archives/2023/07/"><span class="card-archive-list-date">七月 2023</span><span class="card-archive-list-count">3</span></a></li></ul></div><div class="card-widget card-webinfo"><div class="item-headline"><i class="fas fa-chart-line"></i><span>网站资讯</span></div><div class="webinfo"><div class="webinfo-item"><div class="item-name">文章数目 :</div><div class="item-count">36</div></div><div class="webinfo-item"><div class="item-name">已运行时间 :</div><div class="item-count" id="runtimeshow" data-publishDate="2023-07-31T16:00:00.000Z"><i class="fa-solid fa-spinner fa-spin"></i></div></div><div class="webinfo-item"><div class="item-name">本站总字数 :</div><div class="item-count">251.8k</div></div><div class="webinfo-item"><div class="item-name">本站访客数 :</div><div class="item-count" id="busuanzi_value_site_uv"><i class="fa-solid fa-spinner fa-spin"></i></div></div><div class="webinfo-item"><div class="item-name">本站总访问量 :</div><div class="item-count" id="busuanzi_value_site_pv"><i class="fa-solid fa-spinner fa-spin"></i></div></div><div class="webinfo-item"><div class="item-name">最后更新时间 :</div><div class="item-count" id="last-push-date" data-lastPushDate="2024-02-29T12:56:56.190Z"><i class="fa-solid fa-spinner fa-spin"></i></div></div></div></div></div></div></main><footer id="footer" style="background-image: url('https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/blog/page_img/PG1053.jpg')"><div id="footer-wrap"><div class="copyright">&copy;2023 - 2024 By isSeymour</div><div class="footer_custom_text">欢迎乘坐我的生活地铁！</div></div></footer></div><div id="rightside"><div id="rightside-config-hide"><button id="darkmode" type="button" title="浅色和深色模式转换"><i class="fas fa-adjust"></i></button><button id="hide-aside-btn" type="button" title="单栏和双栏切换"><i class="fas fa-arrows-alt-h"></i></button></div><div id="rightside-config-show"><button id="rightside_config" type="button" title="设置"><i class="fas fa-cog fa-spin"></i></button><button id="go-up" type="button" title="回到顶部"><span class="scroll-percent"></span><i class="fas fa-arrow-up"></i></button></div></div><div><script src="/butterflyblog/js/utils.js"></script><script src="/butterflyblog/js/main.js"></script><script src="https://cdn.jsdelivr.net/npm/@fancyapps/ui/dist/fancybox.umd.min.js"></script><div class="js-pjax"><script>window.typedJSFn = {
  init: (str) => {
    window.typed = new Typed('#subtitle', Object.assign({
      strings: str,
      startDelay: 300,
      typeSpeed: 150,
      loop: true,
      backSpeed: 50,
    }, null))
  },
  run: (subtitleType) => {
    if (true) {
      if (typeof Typed === 'function') {
        subtitleType()
      } else {
        getScript('https://cdn.jsdelivr.net/npm/typed.js/lib/typed.min.js').then(subtitleType)
      }
    } else {
      subtitleType()
    }
  }
}
</script><script>function subtitleType () {
  if (true) {
    typedJSFn.init(["志之所趋，无远弗届，穷山距海，不能限也。"])
  } else {
    document.getElementById("subtitle").innerHTML = '志之所趋，无远弗届，穷山距海，不能限也。'
  }
}
typedJSFn.run(subtitleType)</script></div><script id="canvas_nest" defer="defer" color="0,0,255" opacity="0.7" zIndex="-1" count="99" mobile="false" src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/dist/canvas-nest.min.js"></script><script id="click-heart" src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/dist/click-heart.min.js" async="async" mobile="false"></script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css" media="print" onload="this.media='all'"><script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/butterfly-extsrc/metingjs/dist/Meting.min.js"></script><script async data-pjax src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script></div><div id="local-search"><div class="search-dialog"><nav class="search-nav"><span class="search-dialog-title">搜索</span><span id="loading-status"></span><button class="search-close-button"><i class="fas fa-times"></i></button></nav><div class="is-center" id="loading-database"><i class="fas fa-spinner fa-pulse"></i><span>  数据库加载中</span></div><div class="search-wrap"><div id="local-search-input"><div class="local-search-box"><input class="local-search-box--input" placeholder="搜索文章" type="text"/></div></div><hr/><div id="local-search-results"></div></div></div><div id="search-mask"></div><script src="/butterflyblog/js/search/local-search.js"></script></div></body></html>]]></content>
  </entry>
  <entry>
    <title>《Cisco计网实验》速查助记</title>
    <url>/butterflyblog/2023/08/12/%E3%80%8ACisco%E8%AE%A1%E7%BD%91%E5%AE%9E%E9%AA%8C%E3%80%8B%E9%80%9F%E6%9F%A5%E5%8A%A9%E8%AE%B0/</url>
    <content><![CDATA[<h1>《Cisco计网实验》速查助记</h1>
<h2 id="【速查助记】">【速查助记】</h2>
<h3 id="1-查看配置">1. 查看配置</h3>
<ul>
<li>
<p>查看信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show running-config			查看配置信息</span><br><span class="line">show ip route				查看路由信息</span><br><span class="line">show ip protocols			查看路由协议信息</span><br><span class="line">show vlan					查看vlan信息</span><br><span class="line">show int vlan 1				查看vlan 1 详细信息</span><br><span class="line">show ip nat translations	查看NAT转换情况</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-配置IP">2. 配置IP</h3>
<ul>
<li>
<p>交换机的 ip 设置是设置在vlan里的（创建vlan，划分vlan端口，设置vlan的IP，开启）</p>
<p>所以说，一般来说，交换机（二层、三层交换机）都是需要划分vlan的（默认全在vlan 1 内）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vlan 10</span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">int fa 0/1</span><br><span class="line">switchport access vlan 10</span><br><span class="line">exit</span><br><span class="line">int vlan 10</span><br><span class="line">ip address 192.168.1.1 255.255.255.0</span><br><span class="line">no shutdown</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>路由器的 ip 设置是设置在端口上的（进入端口，设置端口的IP，开启）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int fa 1/0</span><br><span class="line">ip address 192.168.2.1 255.255.255.0</span><br><span class="line">no shutdown</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>ip设置之后，都必须开启<code>no shutdown</code></p>
</li>
</ul>
<h3 id="3-配置路由">3. 配置路由</h3>
<ul>
<li>
<p>三层交换机需要自行开启路由模块<code>ip routing</code></p>
</li>
<li>
<p>静态路由</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip route 172.16.4.0 255.255.255.0 172.16.3.2	网段 掩码 下一跳</span><br><span class="line">ip route 0.0.0.0 0.0.0.0 172.16.3.1		设置默认路由</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>动态路由</p>
<p>配置RIP协议直连网段，只需要写网段IP，但要改版本号为2；</p>
<p>配置OSPF协议直连网段，需要网段IP、反掩码、骨干区域。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">router rip</span><br><span class="line">verson 2</span><br><span class="line">network 192.168.2.0</span><br><span class="line"></span><br><span class="line">router ospf</span><br><span class="line">network 192.168.2.0 0.0.0.255 area 0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-防火墙-ACL">4. 防火墙 ACL</h3>
<ul>
<li>
<p>访问控制列表</p>
<ul>
<li>标准</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip access-list standard 1		这里1的意思是编号，可以为1-99</span><br><span class="line">permit 172.16.1.0 0.0.0.255 	注意要用反掩码</span><br><span class="line">deny 172.16.2.0 0.0.0.255</span><br><span class="line"></span><br><span class="line">int fa 0/0</span><br><span class="line">ip access-group 1 out</span><br></pre></td></tr></table></figure>
<ul>
<li>扩展</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">access-list 访问控制列表号 &#123;deny/permit&#125; 协议类型 源网络地址 [通配符掩码(反掩码)] 目的网络地址 [通配符掩码] [运算符 端口号]</span><br><span class="line"></span><br><span class="line">access-list 100 permit tcp any host 172.16.4.2 eq 80 </span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-内外网-NAT">5. 内外网 NAT</h3>
<ul>
<li>
<p>网络地址转换NAT</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置静态NAT</span><br><span class="line">ip nat inside 		指定内部端口（int下）</span><br><span class="line">ip nat outside 		指定外部端口（int下）</span><br><span class="line">ip nat inside source static 192.168.1.2 222.0.1.2	配置静态网络地址映射（config下）</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>网络端口地址转换NAPT</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip nat inside 		指定内部端口（int下）</span><br><span class="line">ip nat outside 		指定外部端口（int下）</span><br><span class="line">access-list 1 permit 192.168.1.0 0.0.0.255 			创建访问列表（config下）</span><br><span class="line">ip nat pool mypool 200.0.1.3 200.0.1.3 netmask 255.255.255.0 	创建IP地址池（config下）</span><br><span class="line">ip nat inside source list 1 pool mypool overload 	配置NAPT：从访问列表映射到IP地址池（config下）</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="6-碎碎念">6. 碎碎念</h3>
<ul>
<li>
<p>连线</p>
<ul>
<li>与交换机连线：直连线 Copper Straight-Through</li>
<li>与路由器连线：交叉线 Copper Cross-Over</li>
<li>路由器之间：串口线 Serial DCE</li>
<li>串口线的 DCE 端需要设置时钟频率<code>clock rate 64000</code></li>
</ul>
</li>
<li>
<p>两个地方会用反掩码，而不是掩码</p>
<ol>
<li>动态路由协议OSPF协议直连网段设置</li>
<li>访问控制列表ACL配置IP设置</li>
</ol>
</li>
<li>
<p>计算机网络实验无非就是两件事</p>
<ul>
<li>配置 IP：主机IP、服务器IP、端口IP</li>
<li>配置 路由：直连网段（自动）、静态路由（含默认路由）、动态路由（RIP/OSPF）</li>
</ul>
<p>做完上面两个内容，就能ping通了。</p>
<p>另外，就是配置 访问控制列表ACL、网络地址转换NAT。</p>
</li>
<li>
<p>忘记命令，记住一些重要简称</p>
<p>善用 tab 补全键，善用 ? 进行提示</p>
</li>
</ul>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计网实验</tag>
      </tags>
  </entry>
  <entry>
    <title>《Django》入门 Notes（下）</title>
    <url>/butterflyblog/2023/06/03/%E3%80%8ADjango%E3%80%8B%E5%85%A5%E9%97%A8%20Notes%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
    <content><![CDATA[<h1>《Django》入门 Notes（下）</h1>
<p>@Seymour0314 来源官方文档<code>https://docs.djangoproject.com/zh-hans/4.2/intro/</code></p>
<blockquote>
<p>本文是Django 后端技术初级入门教程。</p>
<p>编程语言：Python</p>
</blockquote>
<h2 id="第-6-部分">第 6 部分</h2>
<blockquote>
<ul>
<li>
<p>本教程从 教程第 5 部分结束的地方开始。</p>
<p>我们已经建立了一个经过测试的网络投票应用程序，现在我们将添加一个样式表和一个图像。</p>
</li>
<li>
<p>除了服务端生成的 HTML 以外，网络应用通常需要一些额外的文件——比如图片，脚本和样式表——来帮助渲染网络页面。</p>
<p>在 Django 中，我们把这些文件统称为“静态文件”。</p>
</li>
<li>
<p>对于小项目来说，这个问题没什么大不了的，因为你可以把这些静态文件随便放在哪，只要服务程序能够找到它们就行。然而在大项目——特别是由好几个应用组成的大项目——中，处理不同应用所需要的静态文件的工作就显得有点麻烦了。</p>
</li>
<li>
<p>这就是 <code>django.contrib.staticfiles</code> 存在的意义：</p>
<p>它将各个应用的静态文件（和一些你指明的目录里的文件）统一收集起来，</p>
<p>这样一来，在生产环境中，这些文件就会集中在一个便于分发的地方。</p>
</li>
</ul>
</blockquote>
<h3 id="6-1-自定义-应用-的界面和风格">6.1 自定义 <em>应用</em> 的界面和风格</h3>
<ul>
<li>
<p>首先，在你的 <code>polls</code> 目录下创建一个名为 <code>static</code> 的目录。</p>
<blockquote>
<ul>
<li>
<p>Django 将在该目录下查找静态文件，这种方式和 Diango 在 <code>polls/templates/</code> 目录下查找 template 的方式类似。</p>
</li>
<li>
<p>Django 的 <code>STATICFILES_FINDERS</code> 设置包含了一系列的查找器，它们知道去哪里找到 static 文件。</p>
<ul>
<li>
<p><code>AppDirectoriesFinder</code> 是默认查找器中的一个，</p>
<p>它会在每个 <code>INSTALLED_APPS</code> 中指定的应用的子文件中寻找名称为 <code>static</code> 的特定文件夹，</p>
<p>就像我们在 <code>polls</code> 中刚创建的那个一样。管理后台采用相同的目录结构管理它的静态文件。</p>
</li>
</ul>
</li>
</ul>
</blockquote>
</li>
<li>
<p>在你刚创建的 <code>static</code> 文件夹中创建一个名为 <code>polls</code> 的文件夹，再在 <code>polls</code> 文件夹中创建一个名为 <code>style.css</code> 的文件。</p>
<blockquote>
<p>换句话说，你的样式表路径应是 <code>polls/static/polls/style.css</code>。</p>
<p>因为 <code>AppDirectoriesFinder</code> 的存在，</p>
<p>你可以在 Django 中以 <code>polls/style.css</code> 的形式引用此文件，类似你引用模板路径的方式。</p>
<blockquote>
<ul>
<li>静态文件命名空间</li>
</ul>
<p>虽然我们 <em>可以</em> 像管理模板文件一样，把 static 文件直接放入 <code>polls/static</code> （而不是创建另一个名为 <code>polls</code> 的子文件夹），不过这实际上是一个很蠢的做法。Django 只会使用第一个找到的静态文件。如果你在 <em>其它</em> 应用中有一个相同名字的静态文件，Django 将无法区分它们。我们需要指引 Django 选择正确的静态文件，而最好的方式就是把它们放入各自的 <em>命名空间</em> 。也就是把这些静态文件放入 <em>另一个</em> 与应用名相同的目录中。</p>
</blockquote>
</blockquote>
</li>
<li>
<p>将以下代码放入样式表：</p>
<p><code>polls/static/polls/style.css</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>下一步，在 对应的的文件头添加以下内容：</p>
<p><code>polls/templates/polls/index.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;polls/style.css&#x27; %&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>&#123;% static %&#125;</code> 模板标签会生成静态文件的绝对路径。</p>
<p>这就是你开发所需要做的所有事情了。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512101159792.png" alt="image-20230512101159792" style="zoom:50%;" /> 
</blockquote>
</li>
<li>
<p>启动服务器(如果它正在运行中，重新启动一次):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py runserver</span><br></pre></td></tr></table></figure>
<p>重新载入 <code>http://localhost:8000/polls/</code> ，</p>
<p>你会发现有问题的链接是绿色的 （这是 Django 自己的问题标注方式），这意味着你追加的样式表起作用了。</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512101240072.png" alt="image-20230512101240072" style="zoom:80%;" /> 
</blockquote>
</li>
</ul>
<h3 id="6-2-添加一个背景图">6.2 添加一个背景图</h3>
<blockquote>
<p>接下来，我们将为图像创建一个子目录。</p>
</blockquote>
<ul>
<li>
<p>在 <code>polls/static/polls/</code> 目录中创建 <code>images</code> 子目录。</p>
<blockquote>
<p>在此目录中，添加您想用作背景的任何图像文件。</p>
</blockquote>
<p>出于本教程的目的，我们使用了一个名为“background.png”的文件，</p>
<p>它的完整路径为“polls/static/polls/images/background.png”。</p>
<blockquote>
<p>注意：我这里测试使用的是jpg格式！</p>
</blockquote>
</li>
<li>
<p>然后，在样式表中添加对图像的引用：</p>
<p><code>polls/static/polls/style.css</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: white <span class="built_in">url</span>(<span class="string">&quot;images/background.png&quot;</span>) no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>浏览器重载 <code>http://localhost:8000/polls/</code>，你将在屏幕的左上角见到这张背景图。</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512102107329.png" alt="image-20230512102107329" style="zoom:67%;" /> 
</blockquote>
<blockquote>
<p>警告</p>
<p><code>&#123;% static %&#125;</code> 模板标签在静态文件（例如样式表）中是不可用的，因为它们不是由 Django 生成的。</p>
<p>你应该始终使用 <strong>相对路径</strong> 在你的静态文件之间相互引用，</p>
<p>因为这样你可以更改 <code>STATIC_URL</code>（由 <code>static</code> 模板标签使用来生成 URL），而无需修改大量的静态文件。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>这些只是 <strong>基础</strong> 。</p>
<p>更多关于设置和框架的资料，参考 <a href="https://docs.djangoproject.com/zh-hans/4.2/howto/static-files/">静态文件解惑</a> 和 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/staticfiles/">静态文件指南</a>。</p>
<p><a href="https://docs.djangoproject.com/zh-hans/4.2/howto/static-files/deployment/">部署静态文件</a> 介绍了如何在真实服务器上使用静态文件。</p>
<p>当你熟悉静态文件后，阅读 此教程的第 7 部分 来学习如何自定义 Django 自动生成后台网页的过程。</p>
</blockquote>
<h2 id="第-7-部分">第 7 部分</h2>
<blockquote>
<p>本教程从 教程第 6 部分 结束的地方开始。</p>
<p>我们继续修改在线投票应用，这次我们专注于自定义我们在 教程第 2 部分初见过的 Django 自动生成后台的过程。</p>
</blockquote>
<h3 id="7-1-自定义后台表单">7.1 自定义后台表单</h3>
<blockquote>
<p>通过 <code>admin.site.register(Question)</code> 注册 <code>Question</code> 模型，Django 能够构建一个默认的表单用于展示。</p>
<p>通常来说，你期望能自定义表单的外观和工作方式。你可以在注册模型时将这些设置告诉 Django。</p>
</blockquote>
<ul>
<li>
<p>让我们通过重排列表单上的字段来看看它是怎么工作的。</p>
<p>用以下内容替换 <code>admin.site.register(Question)</code>：</p>
<p><code>polls/admin.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QuestionAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    fields = [<span class="string">&quot;pub_date&quot;</span>, <span class="string">&quot;question_text&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">admin.site.register(Question, QuestionAdmin)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>更改对比：</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512102642172.png" alt="image-20230512102642172" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512103023119.png" alt="image-20230512103023119" style="zoom:50%;" /></p>
</blockquote>
</li>
<li>
<p>你需要遵循以下流程：</p>
<p>创建一个模型后台类，</p>
<p>接着将其作为第二个参数传给 <code>admin.site.register()</code> ——在你需要修改模型的后台管理选项时这么做。</p>
<p>以上修改使得 “Publication date” 字段显示在 “Question” 字段之前：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512102844334.png" alt="image-20230512102844334" style="zoom: 43%;" /> 
</blockquote>
<p>这在只有两个字段时显得没啥卵用，</p>
<p>但对于拥有数十个字段的表单来说，为表单选择一个直观的排序方法就显得你的针很细了。</p>
<p>说到拥有数十个字段的表单，你可能更期望将表单分为几个字段集：</p>
<p><code>polls/admin.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QuestionAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="literal">None</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;question_text&quot;</span>]&#125;),</span><br><span class="line">        (<span class="string">&quot;Date information&quot;</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;pub_date&quot;</span>]&#125;),</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">admin.site.register(Question, QuestionAdmin)</span><br></pre></td></tr></table></figure>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512103111825.png" alt="image-20230512103111825" style="zoom:50%;" /> 
</blockquote>
<p><code>fieldsets</code>元组中的第一个元素是字段集的标题。以下是我们的表单现在的样子：</p>
<blockquote>
<p>效果：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512103234752.png" alt="image-20230512103234752" style="zoom: 43%;" />
</blockquote>
</li>
</ul>
<h3 id="7-2-添加关联的对象">7.2 添加关联的对象</h3>
<ul>
<li>
<p>好了，现在我们有了投票的后台页。不过，一个 <code>Question</code> 有多个 <code>Choice</code>，但后台页却没有显示多个选项。</p>
<p>有两个方法可以解决这个问题。</p>
</li>
<li>
<p>（方法一）第一个就是仿照我们向后台注册 <code>Question</code> 一样注册 <code>Choice</code> ：</p>
<p><code>polls/admin.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">admin.site.register(Choice)</span><br></pre></td></tr></table></figure>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512103532211.png" alt="image-20230512103532211" style="zoom:50%;" /> 
</blockquote>
<p>现在 “Choices” 在 Django 后台页中是一个可用的选项了。</p>
<p>“添加选项”的表单看起来像这样：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512103605727.png" alt="image-20230512103605727" style="zoom:50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512103628352.png" alt="image-20230512103628352" style="zoom:43%;" /> 
</blockquote>
<p>在这个表单中，“Question” 字段是一个包含数据库中所有投票的选择框。</p>
<p>Django 知道要将 <code>ForeignKey</code> 在后台中以选择框 <code>&lt;select&gt;</code> 的形式展示。</p>
<p>此时，我们只有一个投票。</p>
<blockquote>
<p>还请注意“问题”旁边的“添加另一个问题”链接。</p>
<p>每个与另一个具有<code>ForeignKey</code>关系的对象都可以免费获得此链接。</p>
<p>当你点击“添加另一个问题”时，你会看到一个带有“添加问题”表单的弹出窗口。如果你在该窗口中添加问题并点击“保存”，Django会将问题保存到数据库中，并将其动态添加为你正在查看的“添加选项”表单上的选定选项。</p>
</blockquote>
<p>不过，这是一种很低效地添加“选项”的方法。更好的办法是在你创建“投票”对象时直接添加好几个选项。让我们实现它。</p>
</li>
<li>
<p>（方法二）移除调用 <code>register()</code> 注册 <code>Choice</code> 模型的代码。</p>
<p>随后，像这样修改 <code>Question</code> 的注册代码：</p>
<p><code>polls/admin.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChoiceInline</span>(admin.StackedInline):</span><br><span class="line">    model = Choice</span><br><span class="line">    extra = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QuestionAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    fieldsets = [</span><br><span class="line">        (<span class="literal">None</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;question_text&quot;</span>]&#125;),</span><br><span class="line">        (<span class="string">&quot;Date information&quot;</span>, &#123;<span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;pub_date&quot;</span>], <span class="string">&quot;classes&quot;</span>: [<span class="string">&quot;collapse&quot;</span>]&#125;),</span><br><span class="line">    ]</span><br><span class="line">    inlines = [ChoiceInline]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">admin.site.register(Question, QuestionAdmin)</span><br></pre></td></tr></table></figure>
<p>这会告诉 Django：“<code>Choice</code> 对象要在 <code>Question</code> 后台页面编辑。默认提供 3 个足够的选项字段。”</p>
<p>加载“添加投票”页面来看看它长啥样：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512104313357.png" alt="image-20230512104313357" style="zoom:43%;" /> 
</blockquote>
<p>它看起来像这样：</p>
<p>有三个关联的选项插槽——由 <code>extra</code> 定义，且每次你返回任意已创建的对象的“修改”页面时，你会见到三个新的插槽。</p>
<p>在三个插槽的末端，你会看到一个“添加新选项”的按钮。</p>
<p>如果你单击它，一个新的插槽会被添加。</p>
<p>如果你想移除已有的插槽，可以点击插槽右上角的X。以下图片展示了一个已添加的插槽：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512104421724.png" alt="image-20230512104421724" style="zoom:50%;" /> 
</blockquote>
</li>
<li>
<p>不过，仍然有点小问题。</p>
<p>它占据了大量的屏幕区域来显示所有关联的 <code>Choice</code> 对象的字段。</p>
<p>对于这个问题，Django 提供了一种表格式的单行显示关联对象的方法。</p>
<p>要使用它，只需按如下形式修改 <code>ChoiceInline</code> 申明：</p>
<p><code>polls/admin.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ChoiceInline</span>(admin.TabularInline):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>
<p>通过 <code>TabularInline</code> （替代 <code>StackedInline</code> ），关联对象以一种表格式的方式展示，显得更加紧凑：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512104611002.png" alt="image-20230512104611002" style="zoom: 43%;" /> 
</blockquote>
<p>请注意，有一个额外的“删除？”列，允许删除使用“添加另一个选项”按钮添加的行和已保存的行。</p>
</li>
</ul>
<h3 id="7-3-自定义后台更改列表">7.3 自定义后台更改列表</h3>
<ul>
<li>
<p>现在投票的后台页看起来很不错，让我们对“更改列表”页面进行一些调整——改成一个能展示系统中所有投票的页面。</p>
<p>以下是它此时的外观：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512180544903.png" alt="image-20230512180544903" style="zoom: 67%;" /> 
<p>默认情况下，Django 显示每个对象的 <code>str()</code> 返回的值。但有时如果我们能够显示单个字段，它会更有帮助。</p>
</li>
<li>
<p>为此，使用 <code>list_display</code>后台选项，它是一个包含要显示的字段名的元组，在更改列表页中以列的形式展示这个对象：</p>
<p>另外，让我们把 教程第 2 部分中的 <code>was_published_recently()</code> 方法也加上：</p>
<p><code>polls/admin.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">QuestionAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    list_display = [<span class="string">&quot;question_text&quot;</span>, <span class="string">&quot;pub_date&quot;</span>, <span class="string">&quot;was_published_recently&quot;</span>]</span><br></pre></td></tr></table></figure>
<p>现在修改投票的列表页看起来像这样：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512180954199.png" alt="image-20230512180954199" style="zoom: 67%;" />
<p>你可以点击列标题来对这些行进行排序——除了 <code>was_published_recently</code> 这个列，因为没有实现排序方法。</p>
<p>顺便看下这个列的标题 <code>was_published_recently</code>，默认就是方法名（用空格替换下划线），该列的每行都以字符串形式展示出处。</p>
</li>
<li>
<p>你可以通过在该方法上（在 <code>polls/models.py</code> 中）使用 <code>display()</code>装饰器来改进，如下图所示：</p>
<p><code>polls/models.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Question</span>(models.Model):</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="meta">    @admin.display(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="meta">        boolean=<span class="literal">True</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">        ordering=<span class="string">&quot;pub_date&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">        description=<span class="string">&quot;Published recently?&quot;</span>,</span></span></span><br><span class="line"><span class="params"><span class="meta">    </span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">was_published_recently</span>(<span class="params">self</span>):</span><br><span class="line">        now = timezone.now()</span><br><span class="line">        <span class="keyword">return</span> now - datetime.timedelta(days=<span class="number">1</span>) &lt;= self.pub_date &lt;= now</span><br></pre></td></tr></table></figure>
<blockquote>
<p>更多关于可通过装饰器设置的属性的信息，请参见 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_display"><code>list_display</code></a>。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512181647755.png" alt="image-20230512181647755" style="zoom:50%;" /> 
</blockquote>
</li>
<li>
<p>再次编辑文件 <code>polls/admin.py</code>，优化 <code>Question</code> 变更页：过滤器，使用 <code>list_filter</code>。</p>
<p>将以下代码添加至 <code>QuestionAdmin</code>：</p>
<p><code>polls/admin.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list_filter = [<span class="string">&quot;pub_date&quot;</span>]</span><br></pre></td></tr></table></figure>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512181427536.png" alt="image-20230512181427536" style="zoom:50%;" /> 
</blockquote>
<p>这样做添加了一个“过滤器”侧边栏，允许人们以 <code>pub_date</code> 字段来过滤列表：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512181720442.png" alt="image-20230512181720442" style="zoom: 50%;" /> 
</blockquote>
<p>展示的过滤器类型取决你你要过滤的字段的类型。</p>
<p>因为 <code>pub_date</code> 是类 <code>DateTimeField</code>，Django 知道要提供哪个过滤器：“任意时间”，“今天”，“过去7天”，“这个月”和“今年”。</p>
</li>
<li>
<p>这已经弄的很好了。让我们再扩充些功能:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">search_fields = [<span class="string">&quot;question_text&quot;</span>]</span><br></pre></td></tr></table></figure>
<p>在列表的顶部增加一个搜索框。当输入待搜项时，Django 将搜索 <code>question_text</code> 字段。</p>
<p>你可以使用任意多的字段——由于后台使用 <code>LIKE</code> 来查询数据，将待搜索的字段数限制为一个不会出问题大小，会便于数据库进行查询操作。</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512182208186.png" alt="image-20230512182208186" style="zoom:50%;" /> 
</blockquote>
</li>
<li>
<p>现在是给你的修改列表页增加分页功能的好时机。</p>
<p>默认每页显示 100 项。</p>
<p><a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_per_page"><code>变更页分页</code></a>, <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/admin/#django.contrib.admin.ModelAdmin.search_fields"><code>搜索框</code></a>, <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter"><code>过滤器</code></a>, <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/admin/#django.contrib.admin.ModelAdmin.date_hierarchy"><code>日期层次结构</code></a>, 和 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_display"><code>列标题排序</code></a> 均以你期望的方式合作运行。</p>
</li>
</ul>
<h3 id="7-4-自定义后台界面和风格">7.4 自定义后台界面和风格</h3>
<blockquote>
<p>在每个后台页顶部显示“Django 管理员”显得很滑稽。这只是一串占位文本。</p>
<p>不过，你可以通过 Django 的模板系统来修改。</p>
<p>Django 的后台由自己驱动，且它的交互接口采用 Django 自己的模板系统。</p>
</blockquote>
<h4 id="自定义你的-工程的-模板">自定义你的 <em>工程的</em> 模板</h4>
<ul>
<li>
<p>在你的工程目录（指包含 <code>manage.py</code> 的那个文件夹）内创建一个名为 <code>templates</code> 的目录。</p>
<blockquote>
<p>模板可放在你系统中任何 Django 能找到的位置。（谁启动了 Django，Django 就以他的用户身份运行。）</p>
<p>不过，把你的模板放在工程内会带来很大便利，推荐你这样做。</p>
</blockquote>
</li>
<li>
<p>打开你的设置文件（<code>mysite/settings.py</code>，牢记），在 <code>TEMPLATES</code>设置中添加 <code>DIRS</code>选项：</p>
<p><code>mysite/settings.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;BACKEND&quot;</span>: <span class="string">&quot;django.template.backends.django.DjangoTemplates&quot;</span>,</span><br><span class="line">        <span class="string">&quot;DIRS&quot;</span>: [BASE_DIR / <span class="string">&quot;templates&quot;</span>],</span><br><span class="line">        <span class="string">&quot;APP_DIRS&quot;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&quot;OPTIONS&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;context_processors&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;django.template.context_processors.debug&quot;</span>,</span><br><span class="line">                <span class="string">&quot;django.template.context_processors.request&quot;</span>,</span><br><span class="line">                <span class="string">&quot;django.contrib.auth.context_processors.auth&quot;</span>,</span><br><span class="line">                <span class="string">&quot;django.contrib.messages.context_processors.messages&quot;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://docs.djangoproject.com/zh-hans/4.2/ref/settings/#std-setting-TEMPLATES-DIRS"><code>DIRS</code></a> 是一个包含多个系统目录的文件列表，用于在载入 Django 模板时使用，是一个待搜索路径。</p>
<blockquote>
<p>组织模板</p>
<p>就像静态文件一样，我们 <em>可以</em> 把所有的模板文件放在一个大模板目录内，这样它也能工作的很好。</p>
<p>但是，属于特定应用的模板文件最好放在应用所属的模板目录（例如 <code>polls/templates</code>），而不是工程的模板目录（<code>templates</code>）。我们会在 <a href="https://docs.djangoproject.com/zh-hans/4.2/intro/reusable-apps/">创建可复用的应用教程</a> 中讨论 <em>为什么</em> 我们要这样做。</p>
</blockquote>
<blockquote>
<p>Django 的源文件在哪里？</p>
<p>如果你不知道 Django 源码在你系统的哪个位置，运行以下命令：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">...\&gt; py -c <span class="string">&quot;import django; print(django.__path__)&quot;</span></span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
</li>
<li>
<p>接着，用你网页站点的名字编辑替换文件内的 <code>&#123;&#123; site_header|default:_('Django administration') &#125;&#125;</code> （包含大括号）。</p>
<p>完成后，你应该看到如下代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% block branding %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;site-name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;admin:index&#x27; %&#125;&quot;</span>&gt;</span>Polls Administration<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>我们会用这个方法来教你复写模板。</p>
<p>在一个实际工程中，你可能更期望使用 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/admin/#django.contrib.admin.AdminSite.site_header"><code>django.contrib.admin.AdminSite.site_header</code></a> 来进行简单的定制。</p>
<p>这个模板文件包含很多类似 <code>&#123;% block branding %&#125;</code> 和 <code>&#123;&#123; title &#125;&#125;</code> 的文本。</p>
<p>`</p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>《汇编语言》Notes</title>
    <url>/butterflyblog/2023/09/05/%E3%80%8AAssembly%20Language%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《汇编语言》Notes</h1>
<blockquote>
<p>知识来源：同济大学汇编教学课件</p>
<p>2023.9.5@Seymour0314</p>
</blockquote>
<h2 id="前言：重点跳转">前言：重点跳转</h2>
<blockquote>
<ul>
<li>
<p>基本指令</p>
<h5 id="3-3-MOV指令、PUSH指令、POP指令、LEA指令等"><a href="#jump_move">3.3 MOV指令、PUSH指令、POP指令、LEA指令等</a></h5>
</li>
<li>
<p>DOS功能调用</p>
<h5 id="3-13-DOS系统功能调用"><a href="#jump_dos">3.13 DOS系统功能调用</a></h5>
</li>
<li>
<p>基础知识</p>
<h5 id="4-2-常数、变量和标号"><a href="#%E5%B8%B8%E6%95%B0%E3%80%81%E5%8F%98%E9%87%8F%E5%92%8C%E6%A0%87%E5%8F%B7">4.2 常数、变量和标号</a></h5>
</li>
<li>
<p>更多指令</p>
<h5 id="4-9-算术运算指令"><a href="#jump_count">4.9 算术运算指令</a></h5>
<h5 id="4-10-逻辑运算指令"><a href="#jump_logic">4.10 逻辑运算指令</a></h5>
<h5 id="5-1-转移指令"><a href="#jump_jmp">5.1 转移指令</a></h5>
<h5 id="5-2-循环指令"><a href="#jump_loop">5.2 循环指令</a></h5>
</li>
<li>
<p>模板使用</p>
<h5 id="一、模板"><a href="#jump_temp">一、模板</a></h5>
</li>
</ul>
</blockquote>
<h2 id="第一课-基础知识">第一课 基础知识</h2>
<h3 id="1-1-信息单位与数据类型">1.1 信息单位与数据类型</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903202323153.png" alt="image-20230903202323153" style="zoom:50%;" /> 
<h3 id="1-2-进制转换">1.2 进制转换</h3>
<ul>
<li>进制
<ul>
<li>十六进制 Hexadecimal，简写H</li>
<li>十进制 Decimal，简写D</li>
<li>八进制 Octonary，简写Q</li>
<li>二进制 Binary，简写B</li>
</ul>
</li>
</ul>
<h4 id="（1）X进制-转-十进制">（1）X进制 转 十进制</h4>
<ul>
<li>位权法</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903201906663.png" alt="image-20230903201906663" style="zoom: 50%;" /> 
<h4 id="（2）十进制-转换-X进制">（2）十进制 转换 X进制</h4>
<ul>
<li>整数部分：除X取余，逆序排列</li>
<li>小数部分：乘X取整，顺序排列</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903202121187.png" alt="image-20230903202121187" style="zoom:50%;" />  
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903202104467.png" alt="image-20230903202104467" style="zoom: 50%;" /> 
<h3 id="1-3-编码">1.3 编码</h3>
<ul>
<li>编码
<ul>
<li>数值类型编码
<ul>
<li>无符号数
<ul>
<li>本身就是数值</li>
</ul>
</li>
<li>补码（有符号数）
<ul>
<li>正数：最高位0，本身就是数值</li>
<li>负数：最高位1，取反加1得到的是其绝对值。</li>
</ul>
</li>
</ul>
</li>
<li>非数值类型编码
<ul>
<li>ASCII码</li>
<li>Unicode编码</li>
<li>…</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="1-4-溢出">1.4 溢出</h3>
<ul>
<li>
<p>人为理解：</p>
<ul>
<li>超出表示范围即是溢出。</li>
</ul>
</li>
<li>
<p>汇编体现：</p>
<ul>
<li>无符号数：CF位置1，溢出。</li>
<li>有符号数（补码）：OF位置1，溢出。</li>
</ul>
</li>
<li>
<p>最值：</p>
<ul>
<li>无符号数：</li>
</ul>
<table>
<thead>
<tr>
<th>位数</th>
<th>最小</th>
<th>对应十进制</th>
<th>最大</th>
<th>对应十进制</th>
</tr>
</thead>
<tbody>
<tr>
<td>8bit</td>
<td>0000 0000 B</td>
<td>0 D</td>
<td>1111 1111 B</td>
<td>255 D</td>
</tr>
<tr>
<td>16bit</td>
<td>0000 0000 0000 0000 B</td>
<td>0 D</td>
<td>1111 1111 1111 1111 B</td>
<td>65535D</td>
</tr>
</tbody>
</table>
<ul>
<li>有符号数（补码）：</li>
</ul>
<table>
<thead>
<tr>
<th>位数</th>
<th>最小</th>
<th>对应十进制</th>
<th>最大</th>
<th>对应十进制</th>
</tr>
</thead>
<tbody>
<tr>
<td>8bit</td>
<td>1000 0000 B</td>
<td>-128 D</td>
<td>0111 1111 B</td>
<td>+127 D</td>
</tr>
<tr>
<td>16bit</td>
<td>1000 0000 0000 0000 B</td>
<td>-32768 D</td>
<td>0111 1111 1111 1111 B</td>
<td>+32767 D</td>
</tr>
</tbody>
</table>
<blockquote>
<ul>
<li>补码范围
<ul>
<li>1B（8bit）：-128 ~ +127</li>
<li>2B（16bit）：-32768 ~ +32767</li>
<li>4B（32bit）：-2147483648 ~ +2147483647</li>
<li>8B（64bit）：-2^32^ ~ 2^32^-1</li>
</ul>
</li>
</ul>
</blockquote>
</li>
<li>
<p>特点</p>
<ul>
<li>
<p>对于二进制数，保持位数不变计算（8bit计算后仍然取8bit），</p>
<p>那么，<code>取反加一</code> 和 <code>减一取反</code> 效果一样。</p>
</li>
<li>
<p>正数x求补，得到对应的负数-x；</p>
<p>负数-x求补，得到对应的正数x。</p>
<blockquote>
<p>求补是取反加一。</p>
</blockquote>
</li>
<li>
<p>无符号数 和 补码数，使用相同的加减法运算规则，</p>
<p>其中补码的符号位参与运算，结果正确。</p>
</li>
<li>
<p>无符号数 和 补码数，使用不同的溢出判断方法。</p>
</li>
</ul>
</li>
<li>
<p>分析溢出</p>
<ul>
<li>无符号数
<ul>
<li>相加时，两数的最高位的数都是 1，则会溢出；</li>
<li>相减时，被减数更小，会溢出。</li>
</ul>
</li>
<li>有符号数
<ul>
<li>相加时，若两个数是相同符号位，计算结果的符号位却变化了，则是溢出；</li>
<li>相减时，若两个数是不同符号位，计算结果的符号位与被减数不同，则是溢出。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="1-5-字符表示">1.5 字符表示</h3>
<ul>
<li>
<p>采用非数值类编码的一种——ASCII码</p>
</li>
<li>
<p>8bit信息，其中7bit编码，最高位0。</p>
<p>能表示出128个字符。</p>
</li>
<li>
<p>常用ASCII码</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>十进制</th>
<th>十六进制</th>
<th>字符</th>
<th>十进制</th>
<th>十六进制</th>
</tr>
</thead>
<tbody>
<tr>
<td><code> </code></td>
<td>32 D</td>
<td>20 H</td>
<td><code>CR回车</code></td>
<td>13 D</td>
<td>0D H</td>
</tr>
<tr>
<td><code>0</code></td>
<td>48 D</td>
<td>30 H</td>
<td><code>LF换行</code></td>
<td>10 D</td>
<td>0A H</td>
</tr>
<tr>
<td><code>A</code></td>
<td>65 D</td>
<td>41 H</td>
<td><code>Tab</code></td>
<td>9 D</td>
<td>09 H</td>
</tr>
<tr>
<td><code>a</code></td>
<td>97 D</td>
<td>61 H</td>
<td><code>BS退格</code></td>
<td>8 D</td>
<td>08 H</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h3 id="1-6-基本逻辑运算">1.6 基本逻辑运算</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903205019789.png" alt="image-20230903205019789" style="zoom:50%;" /> 
<h3 id="1-7-BCD码">1.7 BCD码</h3>
<ul>
<li>
<p>压缩BCD码</p>
<p>每一位用4位二进制表示，一个字节表示两位十进制数</p>
</li>
<li>
<p>非压缩BCD码</p>
<p>用1个字节表示一位十进制数，高四位总是0000，低4位的0000到1001表示0到9</p>
</li>
</ul>
<h2 id="第二课-x86微机系统的组成">第二课 x86微机系统的组成</h2>
<h3 id="2-1-x86寄存器组">2.1 x86寄存器组</h3>
<ul>
<li>
<p>寄存器</p>
<p>用以临时存放指令执行所产生的中间结果存储单元</p>
</li>
<li>
<p>x86基本寄存器</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903205223350.png" alt="image-20230903205223350" style="zoom:50%;" /> 
<h3 id="2-2-通用寄存器（数据寄存器）">2.2 通用寄存器（数据寄存器）</h3>
<ul>
<li>
<p>用于算术运算、逻辑运算和数据的传送</p>
</li>
<li>
<p>虽然是通用寄存器，但各自又有专用用途</p>
<p>(1)  A。</p>
<p>作为累加器使用，是算术运算所使用的主要寄存器。8位、16位和32位累加器分别对应AL, AX和EAX。</p>
<p>(2)  B。</p>
<p>基址寄存器， 16位和32位基址寄存器分别对应BX,EBX。</p>
<p>(3)  C。</p>
<p>计数器。8位、16位和32位计数器分别对应CL，CX和ECX。</p>
<p>(4)  D。</p>
<p>数据寄存器。 8位、16位和32位数据寄存器分别对应DL, DX和EDX。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903205320087.png" alt="image-20230903205320087" style="zoom: 50%;" /> 
<h3 id="2-3-指针寄存器">2.3 指针寄存器</h3>
<ul>
<li>
<p>指针寄存器(Pointer Register):ESP和EBP</p>
</li>
<li>
<p>指针寄存器</p>
<ul>
<li>
<p>SP/ESP</p>
<p>堆栈指针。</p>
<p>专门用以访问堆栈上数据的寄存器。32位模式下使用ESP，16位模式下使用SP，其内容始终指向堆栈栈顶。从这一点上看，ESP/SP是专用的。</p>
</li>
<li>
<p>BP/EBP</p>
<p>基址指针。</p>
<p>可以用来存放数据，但更经常、更重要的用途是作为堆栈区的一个基地址，以便访问堆栈中的数据。</p>
</li>
</ul>
</li>
</ul>
<h3 id="2-4-变址寄存器">2.4 变址寄存器</h3>
<ul>
<li>
<p>变址寄存器(Index Register)包括ESI和EDI，其对应的16位寄存器分别是SI和DI。</p>
</li>
<li>
<p>变址寄存器</p>
<ul>
<li>
<p>SI/ESI</p>
<p>源变址寄存器，对应的16位寄存器是SI, 32位的是ESI。</p>
<p>可以存放数据，也可作为指针，存放内存单元地址。</p>
</li>
<li>
<p>DI/EDI</p>
<p>目的变址寄存器，对应的16位寄存器是DI, 32位的是EDI。</p>
<p>可以存放数据，也可作为指针，存放内存单元地址。</p>
</li>
</ul>
</li>
</ul>
<h3 id="2-5-控制寄存器">2.5 控制寄存器</h3>
<ul>
<li>
<p>控制寄存器(Control Register)包括EIP和EFLAGS</p>
</li>
<li>
<p>控制寄存器</p>
<ul>
<li>
<p>IP/EIP</p>
<p>用于指示待执行指令的位置。</p>
<ul>
<li>32位模式下是EIP，16位模式下是IP。</li>
<li>运行期间，CPU自动修改(E)IP，程序不直接修改(E)IP，随着指令的执行，(E)IP相应地变动。</li>
</ul>
</li>
<li>
<p>FLAGS/EFLAGS</p>
<p>一条指令执行后，CPU所处的状态</p>
<ul>
<li>16位模式下是FLAGS</li>
<li>主要有：运算结果标志、状态控制标志和系统状态标志等寄存器。</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903205830268.png" alt="image-20230903205830268" style="zoom: 50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903205956709.png" alt="image-20230903205956709" style="zoom: 67%;" /> 
</li>
</ul>
</li>
</ul>
<blockquote>
<p>记住：</p>
<ul>
<li>Overflow Flag（OF）：位序11，补码溢出。</li>
<li>Carry Flag（CF）：位序0，进位、借位（无符号数溢出）。</li>
<li>Sign Flag（SF）：位序7，符号位。</li>
<li>Zero Flag（ZF）：位序6，零位。</li>
</ul>
</blockquote>
<h3 id="2-6-段寄存器">2.6 段寄存器</h3>
<ul>
<li>一个连续单元的内存区域为段，段寄存器是用于存放指示该段首地址的相关内容</li>
<li>16位CPU有四个段寄存器：CS, DS, SS和ES，32位CPU又增加了两个：FS和GS
<ul>
<li>CS(Code Segment)，指示代码段</li>
<li>DS(Data Segment)，指示数据段</li>
<li>SS(Stack Segment)，指示堆栈段</li>
<li>ES(Extra Segment), FS, GS，指示附加段</li>
</ul>
</li>
</ul>
<h3 id="2-7-内存储器">2.7 内存储器</h3>
<ul>
<li>
<p>用途：存放执行的指令、所处理的数据</p>
</li>
<li>
<p>基本单位：字节(Byte)(8bit)</p>
</li>
<li>
<p>地址：每个字节单元的一个唯一编号</p>
<ul>
<li>寻址空间受限于地址总线宽度</li>
<li>20-bit地址总线，可访问00000h～FFFFFh，共2^20^字节(1MB)</li>
<li>32-bit，可访问00000000h～FFFFFFFFh，共2^32^字节(4GB)</li>
<li>指令访问地址范围受字长限制</li>
</ul>
<blockquote>
<p>注意区分 寻址编号、字节、比特。</p>
<p>这里说的寻址空间到FFFFFH，那就是2^20^的单位，而寻址空间的单位是B，所以说是2^20^字节。</p>
<p>也就是说，这里算寻址空间，你不要多此一举的算1B=8bit！</p>
</blockquote>
</li>
<li>
<p>内存单元与数据存放格式</p>
<p>存储单元：连续若干个字节存储空间</p>
<p>类型：</p>
<ul>
<li>字节单元</li>
<li>2字节单元，又叫做字(Word)单元</li>
<li>4字节单元，又叫双字(DWord)单元</li>
<li>8字节单元，又叫四字(QWord)单元</li>
</ul>
<p>标识：以内存块的起始地址来标识</p>
<p>存放格式：低位存入低单元，高位存入高单元(<strong>小端格式</strong>，Intel格式)</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903211135204.png" alt="image-20230903211135204" style="zoom:50%;" /> 
</li>
<li>
<p>示例</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903211215198.png" alt="image-20230903211215198" style="zoom:50%;" /> 
</li>
</ul>
<h3 id="2-8-内存与分段">2.8 内存与分段</h3>
<ul>
<li>
<p>内存的分段使用</p>
<ul>
<li>内存段：连续若干字节的内存区域</li>
<li>基地址由段寄存器来确定</li>
<li>地址形式为：段 : 偏移地址</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903211314155.png" alt="image-20230903211314155" style="zoom: 50%;" /> 
</li>
<li>
<p>矛盾</p>
<ul>
<li>
<p>20-bit地址线：寻址空间：00000h~FFFFFh</p>
</li>
<li>
<p>16-bit字长能表示范围：0000h ~ FFFFh</p>
</li>
<li>
<p>解决办法：</p>
<p>16位段地址和16位偏移地址，合成20位物理地址</p>
<p>规则: 20位地址＝段地址×16+偏移地址</p>
<blockquote>
<p>CPU 可以用不同的段地址和偏移地址形成同一个物理地址</p>
</blockquote>
</li>
<li>
<p>示例：</p>
<p>段地址：1000h，偏移地址：1234h</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903211613512.png" alt="image-20230903211613512" style="zoom:80%;" /> 
</li>
</ul>
</li>
</ul>
<h3 id="2-9-栈及操作">2.9 栈及操作</h3>
<ul>
<li>
<p>由连续若干个内存单元组成的、按FILO原则进行存取的数据结构</p>
<ul>
<li>栈底	堆栈中最先存入数据的单元栈顶</li>
<li>堆栈中最后存入数据的单元</li>
<li>进栈(PUSH)	将数据存入堆栈</li>
<li>出栈(POP)	从堆栈取出数据</li>
</ul>
</li>
<li>
<p>栈底固定不变，栈顶随进栈和出栈操作而变化，由堆栈指针(Stack Pointer, SP) 指示</p>
</li>
<li>
<p>x86堆栈</p>
<ul>
<li>基地址：寄存器SS专用于确定堆栈区的基地址</li>
<li>栈顶：(E)SP专门用于指示栈顶的位置，即总是指向最近进栈的数据位置。</li>
<li>栈底：栈底固定为栈区的最高地址单元。执行PUSH操作后，(E)SP向低地址方向移动，执行POP操作后，(E)SP要向高地址方向移动</li>
<li><strong>栈单元基本单位是字(2字节)</strong>
<ul>
<li>16位CPU，只能以2字节为单位进行进栈和出栈操作</li>
<li>32位CPU，存取单位默认是4字节，但也可以是2字节</li>
</ul>
</li>
</ul>
</li>
<li>
<p>说明</p>
<ul>
<li>栈操作主要指令是PUSH和POP指令</li>
<li>与(E)SP密切相关，不宜将(E)SP用作数据寄存器</li>
</ul>
</li>
</ul>
<h2 id="第三课-寻址方式及指令">第三课 寻址方式及指令</h2>
<h3 id="3-1-指令系统概述">3.1 指令系统概述</h3>
<ul>
<li>
<p>机器指令：</p>
<p>用二进制编码表示的指令，由操作码和操作数两部分组成</p>
</li>
<li>
<p>汇编指令：</p>
<p>用指令助记符和符号地址表示的指令</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903212249659.png" alt="image-20230903212249659" style="zoom:50%;" /> 
<h3 id="3-2-操作数寻址方式">3.2 操作数寻址方式</h3>
<ul>
<li>
<p>三种操作数</p>
<ul>
<li>立即操作数，对应立即寻址方式</li>
<li>寄存器操作数，对应的是寄存器寻址方式</li>
<li>内存操作数，对应的内存操作数寻址方式</li>
</ul>
</li>
<li>
<p>寻址方式</p>
<ul>
<li>
<p>立即寻址  如<code>1A2Bh</code></p>
</li>
<li>
<p>寄存器寻址  如<code>AX</code></p>
</li>
<li>
<p>内存操作数寻址</p>
<ul>
<li>
<p>直接寻址  如<code>[59A8h]</code></p>
</li>
<li>
<p>寄存器间接寻址  如<code>[BX]</code></p>
</li>
<li>
<p>寄存器相对寻址  如<code>4[BX]</code></p>
</li>
<li>
<p>基址变址寻址 如 <code>[BX][SI]</code></p>
<ul>
<li>基址：BX和BP，32-bit通用寄存器</li>
<li>变址：SI和DI，32-bit通用寄存器(ESP除外)</li>
</ul>
<blockquote>
<p>注意这里，不能交换位置！！！</p>
</blockquote>
</li>
<li>
<p>相对基址变址寻址  如<code>100[BX][DI]</code></p>
</li>
</ul>
<blockquote>
<p>以上内存操作数寻址方式，都是默认使用段寄存器DS。</p>
<p>但是以BP/EBP寻址，默认用段寄存器SS。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="3-3-span-id-jump-move-MOV指令-span">3.3 <span id="jump_move">MOV指令</span></h3>
<ul>
<li>
<p>格式：MOV 目的操作数，源操作数</p>
</li>
<li>
<p>功能：源操作数传送到目的储存单元(reg,seg,mem)</p>
</li>
<li>
<p>操作数的寻址方式：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903213407946.png" alt="image-20230903213407946" style="zoom: 50%;" /> 
<blockquote>
<p>重点：</p>
<ul>
<li>imm不能做目的操作数</li>
<li>CS不能用作目的操作数</li>
<li>类型必须一致且明确</li>
</ul>
<blockquote>
<p>seg是段地址，mem是具体内存地址，不一样！</p>
</blockquote>
</blockquote>
</li>
<li>
<p>说明</p>
<ul>
<li>一般情况下，指令源、目的操作数类型要一致</li>
<li>立即数要在目的操作数类型值范围内</li>
<li>类型均不明确时，须用Ptr指定操作数类型
<ul>
<li>Byte Ptr		指定字节类型(8位数据)</li>
<li>Word Ptr		指定2字节(字)类型(16位数据)</li>
<li>DWord Ptr	指定4字节(双字)类型(32位数据)</li>
<li>FWord Ptr	指定6字节类型(48位数据)</li>
<li>QWord Ptr 	指定8字节(四字)类型(64位数据)</li>
<li>TByte Ptr		指定10字节类型(80位数据)</li>
</ul>
</li>
</ul>
</li>
<li>
<p>示例</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903213530216.png" alt="image-20230903213530216" style="zoom:50%;" /> 
<h3 id="3-4-XCHG指令">3.4 XCHG指令</h3>
<ul>
<li>
<p>格式：XCHG 操作数1，操作数2</p>
</li>
<li>
<p>功能：数据交换，操作数1与操作数2单元的内容互相交换</p>
<p>由于两操作数即是源操作数，又是目的操作数，故它们的位置顺序无关紧要</p>
</li>
<li>
<p>操作数的寻址方式：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903213731391.png" alt="image-20230903213731391" style="zoom:50%;" /> 
<blockquote>
<p>重点：</p>
<ul>
<li>不能有imm</li>
<li>源操作数必须是reg</li>
<li>类型必须一致且明确</li>
</ul>
</blockquote>
</li>
<li>
<p>示例</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903213822325.png" alt="image-20230903213822325" style="zoom:50%;" /> 
<h3 id="3-5-PUSH指令">3.5 PUSH指令</h3>
<ul>
<li>
<p>格式：PUSH 源操作数</p>
</li>
<li>
<p>功能：数据进栈</p>
<ul>
<li>源操作数为16位，(E)SP内容减2</li>
<li>源操作数为32位，(E)SP中内容减4</li>
</ul>
<blockquote>
<p>注意，栈操作单位只能是16/32位。8086CPU只能是<strong>16位</strong>。</p>
<p>即，不可 PUSH AL，只能PUSH AX。</p>
</blockquote>
</li>
<li>
<p>操作数的寻址方式：</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903214216809.png" alt="image-20230903214216809" style="zoom: 50%;" /> 
<ul>
<li>示例</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903214257432.png" alt="image-20230903214257432" style="zoom: 50%;" /> 
<h3 id="3-6-POP指令">3.6 POP指令</h3>
<ul>
<li>
<p>格式：POP 目的操作数</p>
</li>
<li>
<p>功能：从栈中弹出数据到目的操作数所确定的单元中</p>
<ul>
<li>操作数为16位，(E)SP向高地址端调整2字节</li>
<li>操作数为32位，(E)SP向高地址端调整4字节</li>
</ul>
<blockquote>
<p>注意，栈操作单位只能是16/32位。8086CPU只能是<strong>16位</strong>。</p>
<p>即，不可 POP AL，只能POP AX。</p>
</blockquote>
</li>
<li>
<p>操作数寻址方式：</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903214456667.png" alt="image-20230903214456667" style="zoom:50%;" /> 
<ul>
<li>示例</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903214518927.png" alt="image-20230903214518927" style="zoom:50%;" /> 
<ul>
<li>使用实例</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用PUSH和POP指令，将字(16位)单元[1000h]内容和字单元[2000h]内容分别放入EAX低16位和高16位。</span><br><span class="line">解：先将两个16位数按存放顺序要求进栈，再从栈弹出一个32位数到EAX</span><br><span class="line">PUSH	Word Ptr[2000h]</span><br><span class="line">PUSH	Word Ptr[1000h]</span><br><span class="line">POP		EAX</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903214743932.png" alt="image-20230903214743932" style="zoom:50%;" /> 
<h3 id="3-7-XLAT指令">3.7 XLAT指令</h3>
<ul>
<li>
<p>格式：XLAT</p>
</li>
<li>
<p>功能：查表换码。</p>
<p>将以(E)BX基址，以AL内容为位移量的字节单元内容传送给AL。</p>
<p>这条指令使用隐含操作数。在指令执行前约定：必须已经建立一个字节表，表首地址已经放入基址寄存器(E)BX；查找项的位移量已经放入AL</p>
</li>
<li>
<p>实例</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903214910464.png" alt="image-20230903214910464" style="zoom:50%;" /> 
<h3 id="3-8-地址传送指令LEA">3.8 地址传送指令LEA</h3>
<ul>
<li>格式：LEA 寄存器，源内存操作数</li>
<li>功能：有效地址送寄存器。将内存操作数的偏移地址(EA)传送至目的寄存器中。</li>
<li>操作数的寻址方式：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903215004437.png" alt="image-20230903215004437" style="zoom:50%;" /> 
<ul>
<li>
<p>若是16位寄存器则只装入EA的低16位</p>
</li>
<li>
<p>实例</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1) LEA	AX, [EBX][ESI]</span><br><span class="line">(2) MOV	AX, [EBX][ESI]</span><br><span class="line">解：</span><br><span class="line">指令(1)取源操作数的EA，并存入AX，</span><br><span class="line">指令(2)取EA所对应的字字单元内容AX。</span><br></pre></td></tr></table></figure>
<h3 id="3-9-地址传送指令2">3.9 地址传送指令2</h3>
<ul>
<li>
<p>格式：LDS/LSS/LES/LFS/LGS 目的寄存器，源内存操作数</p>
</li>
<li>
<p>功能：</p>
<p>将源内存操作数中的低2/4字节内容 存入 目的寄存器</p>
<p>高2字节内容 存入 段寄存器DS/SS/ES/FS/GS</p>
</li>
<li>
<p>操作数的寻址方式：</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903215343729.png" alt="image-20230903215343729" style="zoom:50%;" /> 
<ul>
<li>示例</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903215437424.png" alt="image-20230903215437424" style="zoom:50%;" /> 
<h3 id="3-10-标志位传送指令">3.10 标志位传送指令</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1)  LAHF指令</span><br><span class="line">格式：LAHF</span><br><span class="line">功能：将FLAGS的低8位送至AH</span><br><span class="line">2)  SAHF指令</span><br><span class="line">格式：SAHF。</span><br><span class="line">功能：将AH内容送至标志寄存器低8位</span><br><span class="line">3)  PUSHF/PUSHFD指令</span><br><span class="line">格式：PUSHF/PUSHFD。</span><br><span class="line">功能：16/32位标志寄存器FLAGS/EFLAGS内容进栈</span><br><span class="line">4)  POPF/POPFD指令</span><br><span class="line">格式：POPF/POPFD。</span><br><span class="line">功能：从栈弹出16/32位数据FLAGS/EFLAGS </span><br></pre></td></tr></table></figure>
<h3 id="3-11-扩展指令">3.11 扩展指令</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CBW</span><br><span class="line">字节扩展到字，符号位填充，不影响真值</span><br><span class="line">AL扩展，AH填充，存在AX</span><br><span class="line"></span><br><span class="line">CWD </span><br><span class="line">字扩展到双字，符号位填充，不影响真值</span><br><span class="line">AX扩展，DX填充，存在DX:AX</span><br><span class="line"></span><br><span class="line">CWDE</span><br><span class="line">字扩展到双字，符号位填充，不影响真值</span><br><span class="line">AX扩展，EAX填充，存在EAX</span><br></pre></td></tr></table></figure>
<h3 id="3-12-输入输出指令">3.12 输入输出指令</h3>
<ul>
<li>IN、OUT指令专门用来读写I/O端口</li>
<li>只能使用累加器(AL/AX/EAX)来接收、发送数据</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1)  IN指令</span><br><span class="line">格式：IN 累加器，端口地址。</span><br><span class="line">功能：1/2/4字节端口数据AL/AX/EAX</span><br><span class="line">端口地址范围：0000h~FFFFh。</span><br><span class="line">imm8形式，指令中的端口范围：00h～FFh</span><br><span class="line">DX存放端口，指令中的端口：0000h~FFFFh</span><br><span class="line">和内存操作数不同的是，IN指令的源操作数据是来自I/O端口 </span><br><span class="line"></span><br><span class="line">2)  OUT指令</span><br><span class="line">格式：OUT 端口地址，累加器。</span><br><span class="line">功能：AL/AX/EAX内容1/2/4字节端口</span><br><span class="line">imm8形式，指令中的端口范围：00h～FFh</span><br><span class="line">DX存放端口，指令中的端口：0000h~FFFFh</span><br><span class="line">和内存操作数不同的是，OUT指令的目的操作数据将传送到I/O端口中去 </span><br></pre></td></tr></table></figure>
<ul>
<li>示例</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903215802562.png" alt="image-20230903215802562" style="zoom:50%;" /> 
<h3 id="3-13-span-id-jump-dos-DOS系统功能调用-span">3.13 <span id="jump_dos">DOS系统功能调用</span></h3>
<ul>
<li>介绍</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1) 01h。输入一个字符，有回显。</span><br><span class="line">入口：AH＝01h</span><br><span class="line">出口：AL＝输入字符的ASCII码</span><br><span class="line"></span><br><span class="line">(2) 02h。输出一个字符。</span><br><span class="line">入口：AH＝02h</span><br><span class="line">	 DL＝待输出字符的ASCII码</span><br><span class="line">出口：无</span><br><span class="line"></span><br><span class="line">(3) 08h。输入一个字符，无回显。</span><br><span class="line">入口：AH＝08h</span><br><span class="line">出口：AL＝输入字符的ASCII码</span><br><span class="line"></span><br><span class="line">(4) 09h。输出一个字符串。</span><br><span class="line">入口：AH＝09h</span><br><span class="line">	DS:DX＝字符串地址(以&#x27;$&#x27;作为结束标志)</span><br><span class="line">出口：无 </span><br><span class="line"></span><br><span class="line">(5) 0Ah。读入字符串(以回车结束，有回显)</span><br><span class="line">入口：AH＝0Ah</span><br><span class="line">	 DS:DX＝输入缓冲区地址(字节0允许字符数)</span><br><span class="line">出口：输入缓冲区字节1:字符数,字节2:字符串</span><br><span class="line"></span><br><span class="line">(6) 0Bh。检查是否有字符可读。</span><br><span class="line">入口：AH＝0Bh</span><br><span class="line">出口：AL＝00h,无；FFh,有</span><br><span class="line"></span><br><span class="line">(7) 4Ch。终止程序的执行，返回DOS。</span><br><span class="line">入口：AH＝4Ch</span><br><span class="line">	 AL＝返回的代码</span><br><span class="line">出口：无</span><br></pre></td></tr></table></figure>
<h3 id="3-14-汇编使用">3.14 汇编使用</h3>
<ul>
<li>前置操作</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOUNT C: D:\MASM</span><br><span class="line">PATH=%PATH%;D:\Work</span><br><span class="line">C:</span><br><span class="line">DIR</span><br></pre></td></tr></table></figure>
<ul>
<li>以编写的001.ASM为例介绍</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TYPE 001.ASM	查看类型信息</span><br><span class="line">MASM 001.ASM	汇编</span><br><span class="line">LINK 001.OBJ	连接</span><br><span class="line">DEBUG 001.EXE	调试</span><br><span class="line">001.EXE			运行</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903233053074.png" alt="image-20230903233053074" style="zoom:50%;" /> 
<blockquote>
<p>汇编ASM文件的文件名字不能过长，否则无法打开。</p>
</blockquote>
<ul>
<li>DEBUG操作</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看和修改寄存器内容的命令 R</span><br><span class="line">显示内存单元内容的命令 D</span><br><span class="line">输入汇编指令的命令 A</span><br><span class="line">反汇编命令 U</span><br><span class="line">执行命令 G</span><br><span class="line">追踪（单步执行）命令 T</span><br><span class="line">执行命令 P</span><br><span class="line">退出 DEBUG 命令 Q</span><br></pre></td></tr></table></figure>
<h2 id="第四课-源程序结构、运算指令">第四课 源程序结构、运算指令</h2>
<h3 id="4-1-源程序结构">4.1 源程序结构</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_STACK    SEGMENT  STACK  &#x27;STACK&#x27;</span><br><span class="line">	DB 1000H DUP(?)</span><br><span class="line">TOS	DW ?</span><br><span class="line">_STACK    ENDS</span><br><span class="line"></span><br><span class="line">_DATA    SEGMENT</span><br><span class="line">a	DW	10H</span><br><span class="line">b	DW	20H</span><br><span class="line">x	DW	?</span><br><span class="line">_DATA    ENDS</span><br><span class="line"></span><br><span class="line">_TEXT    SEGMENT</span><br><span class="line">	ASSUME  CS: _TEXT, DS: _DATA</span><br><span class="line">START: </span><br><span class="line">	MOV	AX, _DATA	; 设置数据段、堆栈 start</span><br><span class="line">	MOV	DS, AX</span><br><span class="line">	CLI</span><br><span class="line">	MOV	AX, _STACK</span><br><span class="line">	MOV	SS, AX</span><br><span class="line">	MOV	SP, OFFSET TOS</span><br><span class="line">	STI		; 设置数据段、堆栈 end</span><br><span class="line">	</span><br><span class="line">	; 比较ab大小</span><br><span class="line">	MOV	AX, a</span><br><span class="line">	CMP	AX, b	; 注意这里仍然是a</span><br><span class="line">	JG	loc1</span><br><span class="line">	MOV	AX, b</span><br><span class="line"></span><br><span class="line">loc1:</span><br><span class="line">	MOV	x, AX</span><br><span class="line"></span><br><span class="line">	MOV	AX, 4C00H  ; 退出</span><br><span class="line">	INT	21H</span><br><span class="line">_TEXT    ENDS</span><br><span class="line">	END START</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903233146848.png" alt="image-20230903233146848" style="zoom:50%;" /> 
<h3 id="4-2-span-id-jump-var-常数、变量和标号-span">4.2 <span id="jump_var">常数、变量和标号</span></h3>
<ul>
<li>
<p>相关内容</p>
<ul>
<li>与数据相关的常量与变量</li>
<li>与转移地址相关的标号与过程</li>
</ul>
</li>
<li>
<p>标识符</p>
<p>标号名、变量名、过程名、段名等称为标识符</p>
<ul>
<li>
<p>组成标识符字符：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字母(A～Z, a～z)、数字(0～9)及?、.、@、$和_(下画线)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>数字不能作首字符，'.'只能作为标识符的首字符。</p>
</li>
<li>
<p>标识符的长度没有严格限制，一般不应超过31字符</p>
</li>
<li>
<p>保留字不能作为标识符使用。</p>
</li>
</ul>
</li>
</ul>
<h4 id="（1）常数">（1）常数</h4>
<ul>
<li>
<p>常量是数的本身，不对应任何存储单元(寄存器或内存单元)，</p>
<p>其数值在汇编期间已能够完全确定，且在程序运行期间也不会发生变化。</p>
</li>
<li>
<p>常量一般可分为：</p>
<ul>
<li>
<p>数值常数</p>
<ul>
<li>
<p>整数常数</p>
<p>各种进制均可，如： 255D，0B8h，1100B，144Q</p>
<blockquote>
<p>为区别于标识符，字母开头的十六进制数前须加0</p>
<p>通常常数默认为十进制，此时后面D或d可省略</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可以用伪指令RADIX改变默认的数制，其格式为：</span><br><span class="line">.RADIX  用十进制形式表示的基数 </span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li>
<p>实数常数</p>
<p>实数其实就是带小数点的数，有两种形式表示：</p>
<p>（1）带小数点的十进制数形式，例如： -1.414</p>
<p>（2）指数形式，例如： 4.56E-2, -1.732E+10</p>
<p>实常数以浮点格式存放。</p>
</li>
</ul>
</li>
<li>
<p>字符串常数</p>
<p>字符串常数是用<code>‘(单撇号)</code>或<code>&quot;(双撇号)</code>括起来的单个字符或多个字符</p>
<p>(1）对于ASCII字符来说，其数值是字符对应的ASCII码的值</p>
<ul>
<li>'d’对应的是64h</li>
<li>'AB’对应的是41h, 42h</li>
</ul>
<p>（2）对于汉字来说，其数值是汉字的内码</p>
<ul>
<li>‘你好!’，对应是：0C4h, 0E3h 0Bah, 0C3h, 21h</li>
</ul>
</li>
</ul>
</li>
<li>
<p>使用</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1) 作为立即数出现在指令中</span><br><span class="line">MOV	AX, 1234h</span><br><span class="line">SUB	AL, &#x27;0&#x27;</span><br><span class="line">AND	EAX, 7FFFFFFFh</span><br><span class="line"></span><br><span class="line">(2) 作为内存操作数的位移量(地址编号)</span><br><span class="line">MOV	AX, [1000h]</span><br><span class="line">ADD	100h[BX], AL</span><br><span class="line">TEST	EAX, [1000h+EBX+EDX*4]</span><br><span class="line"></span><br><span class="line">(3) 为数据定义预置初始值</span><br><span class="line">Variable	DW	1234h</span><br><span class="line">Str		DB	&quot;Hello, World!&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">x			DQ	4.756E3 </span><br></pre></td></tr></table></figure>
<h4 id="（2）变量">（2）变量</h4>
<ul>
<li>
<p>变量是存放数据的内存单元名称</p>
<ul>
<li>变量名是符号地址</li>
<li>具有类型属性：字节、字、双字…</li>
</ul>
</li>
<li>
<p>定义格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[变量名]  数据定义伪指令  初值表  [;注释] </span><br><span class="line"></span><br><span class="line">DB、DW、DD、DF、DQ、DT</span><br><span class="line">1B、2B、4B、6B、8B、10B类型</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>分配一个或多个指定类型的内存单元，并可用变量表示该内存单元</p>
</li>
<li>
<p>如果有变量名，那么它仅代表所定义的数据存储区的第一个单元地址</p>
</li>
</ul>
</li>
<li>
<p>定义的形式——初值表</p>
<ol>
<li>
<p>常数或常数表达式</p>
</li>
<li>
<p>“?”形式：内容不确定。一般情况下，程序在汇编时以0填充。</p>
</li>
<li>
<p>符号地址及地址表达式：符号地址对应的地址编号，是无符号整型常数。</p>
</li>
<li>
<p>可用DUP把某项重复n次：其格式为 <code>n  DUP(数据项) </code></p>
</li>
</ol>
</li>
<li>
<p>属性</p>
<ul>
<li>
<p>地址属性</p>
<ul>
<li>
<p>段地址可由<strong>运算符SEG</strong>返回</p>
</li>
<li>
<p>偏移地址可由<strong>运算符OFFSET</strong>返回</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOV AX,SEG Msg	;将Msg的段地址送到AX</span><br><span class="line">MOV BX,OFFSET Msg	;将Msg的偏移地址送到BX</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注：当需要存取某一变量时，必须先将该段的段地址放到相应的段寄存器(如DS、ES等)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOV	AX, _DATA</span><br><span class="line">MOV	DS, AX</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li>
<p>类型属性</p>
<p>伪指令DB, DW, DD, DF, DQ, DT可定义1, 2, 4, 6, 8, 10字节类型</p>
<p>可以指定数据类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Byte Ptr	指定数据或变量为字节类型(8位)</span><br><span class="line">Word Ptr	指定数据或变量为2字节(字)类型(16位)</span><br><span class="line">DWord Ptr	指定数据或变量为4字节(双字)类型(32位)</span><br><span class="line">FWord Ptr	指定数据或变量为6字节类型(48位)</span><br><span class="line">QWord Ptr 	指定数据或变量为8字节(四字)类型(64位)</span><br><span class="line">TByte Ptr	指定数据或变量为10字节类型(80位)</span><br></pre></td></tr></table></figure>
<p>变量名对应的是内存单元地址，是无符号符号整常数，</p>
<p>加、减一个整常数就是地址编号加、减一个整常数，</p>
<p>仍然对应一个内存单元地址，其类型与原变量相同。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">L	DD	1234A1B2h, 87654321h</span><br><span class="line">L是4字节类型单元，L+1对应的也是4字节类型单元，其内容是211234A1h</span><br><span class="line">L+1可以写成L[1]，注意，L[1]是L的偏移地址加1而不是加1×4</span><br></pre></td></tr></table></figure>
<p>每种数据类型的类型值就是其占用的字节数，可用<strong>运算符TYPE</strong>将它分离出来</p>
</li>
</ul>
</li>
<li>
<p>示例1</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Msg		DB	 	&quot;Hello&quot;     	;定义变量,分配5个1B空间,置初值</span><br><span class="line">		DB		13, 10, &#x27;$&#x27;   	;分配3个B空间,置初值</span><br><span class="line">Cnt		DW		5*20, -2    	;定义变量,分配2个2B空间,置初值</span><br><span class="line">S1		DB		?, ?, ?, ?     	;定义变量,分配4个1B空间,未置初值</span><br><span class="line">		DD		123456h,? 		;分配2个4B空间</span><br><span class="line"></span><br><span class="line">取’H‘：</span><br><span class="line">MOV AL, Msg</span><br><span class="line">取’e’：</span><br><span class="line">MOV AL, Msg+1</span><br></pre></td></tr></table></figure>
<ul>
<li>示例2</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Msg		DB		&quot;Hello&quot;</span><br><span class="line">		DB		13, 10, &quot;$&quot;</span><br><span class="line">Cnt		DW		5*20, -2</span><br><span class="line">L		DD		1234A1B2h, 87654321h</span><br><span class="line">F		DQ		1.5</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903234937787.png" alt="image-20230903234937787" style="zoom:50%;" /> 
<ul>
<li>示例3</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Msg	DB	&quot;Hello&quot; 13, 10, &quot;$&quot;</span><br><span class="line">p1	DW	Msg, Msg+5</span><br><span class="line">p2	DD	Msg, Msg+5</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903235205880.png" alt="image-20230903235205880" style="zoom:50%;" /> 
<ul>
<li>示例4</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s1	DB	&quot;你好&quot;, 2 DUP(&#x27;!&#x27;), 2 DUP (&#x27;A&#x27;, &#x27;B&#x27;), 3 DUP(1, 2, 2 DUP(&#x27;$&#x27;))</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230903235425341.png" alt="image-20230903235425341" style="zoom:50%;" /> 
<ul>
<li>示例5</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Variable	DW	100 DUP(0)</span><br><span class="line">用变量名表示的内存操作数寻址为</span><br><span class="line">直接寻址：			 MOV	AX, Variable</span><br><span class="line">寄存器相对寻址：	   MOV	  AX, Variable [SI]</span><br><span class="line">相对基址变址寻址：	  MOV	 AX, Variable [BX][DI]</span><br><span class="line">比例因子寻址：			MOV	   EAX, DWord Ptr Variable [EBX][4*ECX]</span><br></pre></td></tr></table></figure>
<h4 id="（3）标号">（3）标号</h4>
<ul>
<li>
<p>定义</p>
<ul>
<li>
<p>标号表示的是指令在内存中存放的位置</p>
</li>
<li>
<p>标号定义的格式是：</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">标号名:</span><br></pre></td></tr></table></figure>
<p>表示标号后首条指令在内存中地址。</p>
<blockquote>
<p>标号既可以定义在目的指令同一行的最前面，</p>
<p>也可以在目的指令前一行单独用一行定义。</p>
</blockquote>
</li>
<li>
<p>属性</p>
<ul>
<li>
<p>地址属性</p>
<p>标号代表的是其后首条指令在内存中地址</p>
<ul>
<li>用<strong>SEG</strong>来返回标号所在段的段地址</li>
<li>用<strong>OFFSET</strong>来返回标号所在段的偏移地址</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MOV AX,SEG loc1			;将loc1的段地址送到AX</span><br><span class="line">MOV BX,OFFSET loc1		;将loc1的偏移地址送到BX</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>类型属性</p>
<p>标号具有NEAR和FAR两种属性，其类型值分别为-1和-2</p>
<p>可用<strong>运算符TYPE</strong>返回其类型值</p>
</li>
</ul>
</li>
</ul>
<h4 id="（4）变量名和标号的其他定义方式">（4）变量名和标号的其他定义方式</h4>
<ul>
<li>
<p>用LABEL和EQU来定义变量名或标号</p>
<ul>
<li>标识符 LABEL 类型</li>
<li>标识符 EQU THIS 类型</li>
</ul>
</li>
<li>
<p>功能：</p>
<ul>
<li>
<p>定义一个指定类型的变量名或标号类型为BYTE, WORD, DWORD, FWORD, QWORD和TBYTE等，则定义变量名</p>
</li>
<li>
<p>类型是NEAR和FAR，则定义标号</p>
</li>
</ul>
</li>
<li>
<p>只是<strong>将当前地址定义为一个变量名或标号</strong>，<strong>并不为它们分配内存空间</strong></p>
</li>
<li>
<p>示例1</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bVariable	LABEL	BYTE</span><br><span class="line">wVariable	DW	100</span><br><span class="line">第一条伪指令仅仅定义了一个具有字节类型的变量名，但并没有为它分配存储空间；</span><br><span class="line">第二条伪指令定义了一个字类型的变量，而且为它分配了2字节的存储空间。</span><br><span class="line">符号地址bVariable与wVariable代表的是同一个地址，但具有不同的数据类型属性。</span><br><span class="line"></span><br><span class="line">Loc   LABEL   FAR</span><br><span class="line">定义了一个具有远转移类型的标号，该标号指向其后第一条汇编指令的存放地址。</span><br></pre></td></tr></table></figure>
<ul>
<li>示例2</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wVariable	EQU THIS	DWORD</span><br><span class="line">dwVariable	DD			100</span><br><span class="line">第一条伪指令仅仅定义了一个具有2字节类型的变量名，但并没有为它分配存储空间；</span><br><span class="line">第二条伪指令定义了一个4字节类型的变量，而且为它分配了4字节的存储空间。</span><br><span class="line">符号地址dwVariable与wVariable代表的是同一个地址，但具有不同的数据类型属性。</span><br><span class="line"></span><br><span class="line">Loc   EQU THIS   NEAR</span><br><span class="line">定义了一个具有近转移类型的标号，该标号指向其后第一条汇编指令的存放地址。</span><br></pre></td></tr></table></figure>
<h3 id="4-3-表达式和运算符">4.3 表达式和运算符</h3>
<ul>
<li>
<p>将常数、符号地址及其符号常量用运算符连接起来的有意义的式子</p>
</li>
<li>
<p>值的计算是在源程序汇编过程中完成的</p>
</li>
<li>
<p>运算符分为：</p>
<ul>
<li>算术运算符</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230904012401011.png" alt="image-20230904012401011" style="zoom:50%;" /> 
<ul>
<li>逻辑运算符</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230904012425615.png" alt="image-20230904012425615" style="zoom:50%;" /> 
<ul>
<li>关系运算符</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230904012444725.png" alt="image-20230904012444725" style="zoom:50%;" /> 
<ul>
<li>数值返回运算符</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230904012504628.png" alt="image-20230904012504628" style="zoom:50%;" /> 
<ul>
<li>属性运算符</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230904012522665.png" alt="image-20230904012522665" style="zoom:50%;" /> 
<ul>
<li>字节分离运算符</li>
</ul>
</li>
</ul>
<h3 id="4-4-MASM的基本伪指令">4.4 MASM的基本伪指令</h3>
<blockquote>
<p>伪指令在汇编程序对源程序汇编期间由汇编程序处理的操作，它们可以完成诸如定义程序段、定义数据、分配存储区和指示程序结束等功能。伪指令在形式上与一般指令相似，但伪指令只是为汇编程序提供有关信息，不产生相应的机器代码。</p>
</blockquote>
<h4 id="指令集选择伪指令">指令集选择伪指令</h4>
<ul>
<li>
<p>MASM在默认情况下只接受8086指令集。</p>
<p>如果程序员需要使用8086以后微处理器新增加的指令，必须使用指令集选择伪指令。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230904012739548.png" alt="image-20230904012739548" style="zoom:50%;" /> 
<h4 id="完整的段定义伪指令">完整的段定义伪指令</h4>
<ul>
<li>
<p>使用完整的段定义伪指令来定义一个段，</p>
<p>可具体控制汇编程序MASM和连接程序LINK在内存中组织代码和数据的方式</p>
</li>
<li>
<p>格式</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">段名 SEGMENT [定位类型] [组合方式] [地址模式] [&#x27;分类名&#x27;]</span><br><span class="line">		…</span><br><span class="line">段名 ENDS</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>功能</p>
<p>在程序中定义一个逻辑段，指定段的名字和范围，段在内存中的起始位置，以及段与段之间的连接关系。</p>
</li>
<li>
<p>段指定伪指令ASSUME</p>
</li>
<li>
<p>段组定义伪指令GROUP</p>
</li>
<li>
<p>源程序开始与结束伪指令</p>
<ul>
<li>
<p>源程序开始伪指令</p>
</li>
<li>
<p>源程序结束伪指令END</p>
</li>
<li>
<p>数据定义伪指令</p>
</li>
<li>
<p>符号定义指令</p>
<ul>
<li>等值伪指令EQU</li>
<li>等号伪指令＝</li>
</ul>
<blockquote>
<p>与EQU THIS不一样，</p>
<p>EQU THIS是定义一个<strong>符号地址</strong>。</p>
<p>EQU是定义一个为常量、表达式及其他符号定义一个<strong>符号名</strong>。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="4-5-地址计数器与对准伪指令">4.5 地址计数器与对准伪指令</h3>
<ul>
<li>
<p>地址计数器<code>$</code></p>
<ul>
<li>指示当前正在处理的汇编指令或伪指令所在处的偏移地址</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）当$用在指令中时，它表示该指令的第一个字节的地址。例如，</span><br><span class="line">JNE $+6</span><br><span class="line">转向地址是JNE指令的首地址加上6。</span><br><span class="line"></span><br><span class="line">（2）当$用在数据定义等伪指令的参数字段时，表示的是地址计数器的当前值。例如，</span><br><span class="line">ARRAY	DW	1, 2, $, 3, 4, $</span><br><span class="line">假设汇编时ARRAY分配的偏移地址为0074，则汇编后的存储区内容如下：</span><br><span class="line">ARRAY→ 01 00 02 00 78 00 03 00 04 00 7E 00</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>定位伪指令<code>ORG</code></p>
<ul>
<li>将地址计数器设置到指定的位置</li>
</ul>
<p>用在数据段中：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_DEMO	SEGMENT</span><br><span class="line">ORG	10</span><br><span class="line">V1		DW		47A5h</span><br><span class="line">ORG	$+3</span><br><span class="line">V2		DW		5C96h</span><br><span class="line">_DEMO	ENDS </span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905164729590.png" alt="image-20230905164729590" style="zoom:50%;" /> 
<p>用在代码段中：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">		ORG		100h</span><br><span class="line">		JMP		Loc</span><br><span class="line">		ORG		200h</span><br><span class="line">Loc:	MOV		AX, 1200h</span><br></pre></td></tr></table></figure>
<p>那么指令<code>JMP Loc</code>存放的地址为100h，</p>
<p>同理指令<code>MOV AX, 1200h</code>存放的地址为200h，</p>
<p>而100h～200h的存储空间中，除了JMP指令外，其余内容均为未初始化内容。</p>
</li>
<li>
<p>其他伪指令</p>
<ul>
<li>
<p>EVEN伪指令</p>
<p>使下一个变量或指令开始于偶数地址处。</p>
</li>
<li>
<p>ALIGN伪指令</p>
<p>使下一个变量或指令开始于2^n^整数倍地址处。</p>
</li>
</ul>
</li>
</ul>
<h3 id="4-6-子程序定义PROC和ENDP">4.6 子程序定义PROC和ENDP</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">子程序名 PROC　[NEAR/FAR] </span><br><span class="line">　… ;子程序体   </span><br><span class="line">子程序名 ENDP</span><br></pre></td></tr></table></figure>
<p>子程序名是子程序的入口地址的符号表示，是符号地址，也具有地址属性和类型属性。</p>
<h3 id="4-7-其他伪指令">4.7 其他伪指令</h3>
<ul>
<li>
<p>注释伪指令COMMENT</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：COMMENT 分隔符 注释内容 分隔符。</span><br><span class="line">功能：分隔符之间的任何内容均作为注释内容，但分隔符本身不能出现在注释内容中。</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>文件包含伪指令INCLUDE</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：INCLUDE文件名。</span><br><span class="line">功能：在源程序中，将一个外部文件插入到此伪指令所在处。</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>全局符号名说明伪指令PUBLIC</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：PUBLIC符号名1[, 符号名2, …]。</span><br><span class="line">功能：将本模块中定义的一个或多个符号名说明为全局符号，这样在其他模块中可以引用该符号。</span><br><span class="line"> - 符号名可以是变量、符号常量、标号或过程名。</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>外部符号名说明伪指令EXTRN</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">格式：EXTRN符号名1:类型[, 符号名2:类型, …]。</span><br><span class="line">功能：说明本模块中将要引用的外部模块中的符号名，类型：Byte, Word, DWord, FWord, QWord, TByte, Near, Far；常数则是ABS。</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-8-MASM的宏汇编伪指令">4.8 MASM的宏汇编伪指令</h3>
<ul>
<li>
<p>宏指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">宏指令名 MACRO [形式参数1,形式参数2,…,形式参数n] </span><br><span class="line">  …		; 宏指令体(宏体) </span><br><span class="line">ENDM</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>宏操作符</p>
<p><code>连接运算符&amp;</code>、<code>文本操作符&lt;&gt;</code>、<code>表达式操作符%</code>、<code>字符操作符!</code></p>
</li>
<li>
<p>宏库中的宏指令</p>
<p>可在源程序中使用包含伪指令INCLUDE</p>
</li>
</ul>
</li>
<li>
<p>重复汇编</p>
<p>固定重复伪指令REPT，不定重复伪指令IRP和单字符参数的不定重复伪指令IRPC，均以ENDM作为结束标志</p>
</li>
<li>
<p>条件汇编</p>
<p>根据某些条件是否成立(为真)来决定是否汇编某一段代码</p>
</li>
<li>
<p>结构、联合和记录</p>
<p>类似C语言的结构体、共用体复合数据类型的定义</p>
</li>
<li>
<p>示例</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">示例：定义了宏指令ExitToDos和InOutStr，并在在代码段中调用它们</span><br><span class="line"></span><br><span class="line">ExitToDOS MACRO</span><br><span class="line">	MOV	AX, 4C00h</span><br><span class="line">	INT	21h</span><br><span class="line">	ENDM</span><br><span class="line">InOutStr MACRO Fun,str</span><br><span class="line">	MOV	AH, Fun</span><br><span class="line">	LEA	DX, str</span><br><span class="line">	INT	21h</span><br><span class="line">	ENDM</span><br><span class="line"></span><br><span class="line">_STACK SEGMENT STACK</span><br><span class="line">	DB 32766 DUP (?)</span><br><span class="line">TOS	DW ?</span><br><span class="line">_STACK ENDS</span><br><span class="line"></span><br><span class="line">_DATA	SEGMENT</span><br><span class="line">Msg	DB &#x27;Hello, World!&#x27;,13,10,&#x27;$&#x27;</span><br><span class="line">_DATA	ENDS</span><br><span class="line"></span><br><span class="line">_TEXT	SEGMENT &#x27;CODE&#x27;</span><br><span class="line">ASSUME CS:_TEXT,DS:_DATA,SS:_STACK</span><br><span class="line">Start:	MOV	AX, _DATA</span><br><span class="line">	MOV	DS, AX</span><br><span class="line">	CLI</span><br><span class="line">	MOV	AX, _STACK</span><br><span class="line">	MOV	SS, AX</span><br><span class="line">	MOV	SP, Offset TOS</span><br><span class="line">	STI</span><br><span class="line">	InOutStr	9, Msg</span><br><span class="line">	ExitToDOS</span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END Start</span><br></pre></td></tr></table></figure>
<h3 id="4-9-span-id-jump-count-算术运算指令-span">4.9 <span id="jump_count">算术运算指令</span></h3>
<h4 id="（1）加法">（1）加法</h4>
<ol>
<li>
<p><strong>ADD指令</strong><br>
格式：ADD目的操作数，源操作数。<br>
功能：将源操作数与目的操作数相加，结果存入目的操作数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ADD reg, reg/mem/imm</span><br><span class="line">ADD mem, reg/imm</span><br></pre></td></tr></table></figure>
<p>根据结果置CF, AF, PF, ZF, SF, OF的状态</p>
</li>
<li>
<p><strong>ADC指令</strong><br>
格式：ADC目的操作数，源操作数。<br>
功能：即将源操作数、目的操作数<strong>和CF相加</strong>，结果存入目的操作数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ADC reg, reg/mem/imm</span><br><span class="line">ADC mem, reg/imm</span><br></pre></td></tr></table></figure>
<p>根据结果置CF, AF, PF, ZF, SF, OF状态</p>
</li>
<li>
<p><strong>INC指令</strong><br>
格式：INC 操作数。<br>
功能：操作数自身加1，即将操作数加1，结果再存入操作数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INC reg/mem </span><br></pre></td></tr></table></figure>
<p>影响AF, PF, ZF, SF和OF，<strong>不影响CF</strong></p>
</li>
</ol>
<h4 id="（2）减法">（2）减法</h4>
<ol>
<li>
<p><strong>SUB指令</strong></p>
<p>格式：SUB 目的操作数，源操作数。<br>
功能：目的操作数减去源操作数，结果存入目的操作数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SUB reg, reg/mem/imm；</span><br><span class="line">SUB mem, reg/imm。</span><br></pre></td></tr></table></figure>
<p>根据结果置CF, AF, PF, ZF, SF, OF的状态</p>
</li>
<li>
<p><strong>SBB指令</strong></p>
<p>格式：SBB 目的操作数，源操作数。<br>
功能：目的操作数减去源操作数，再减去CF，结果存入目的操作数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SBB reg, reg/mem/imm；</span><br><span class="line">SBB mem, reg/imm。</span><br></pre></td></tr></table></figure>
<p>根据结果置CF, AF, PF, ZF, SF, OF的状态</p>
</li>
<li>
<p><strong>DEC指令</strong></p>
<p>格式：DEC 操作数。<br>
功能：操作数自身减1，即操作数减去1，结果再存入操作数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DEC reg/mem</span><br></pre></td></tr></table></figure>
<p>影响AF, PF, ZF, SF和OF，<strong>不影响CF</strong></p>
</li>
</ol>
<h4 id="（3）求补">（3）求补</h4>
<ol>
<li>
<p><strong>NEG指令</strong></p>
<p>格式：NEG 操作数。<br>
功能：操作数各位取反再加1(求补)，即将0减去操作数，结果存入操作数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NEG reg/mem</span><br></pre></td></tr></table></figure>
<p>影响CF, AF, PF, ZF, SF, OF。</p>
<blockquote>
<p>只有当操作数为0时，才使CF＝0，其他情况则均为1；<br>
只有当操作数为-2^7^(8位运算)或-2^15^(16位运算)或-2^31^(32位运算)时，才使OF＝1，其他情况则均为0。</p>
</blockquote>
</li>
</ol>
<h4 id="（4）比较">（4）比较</h4>
<ol>
<li>
<p><strong>CMP指令</strong></p>
<p>格式：CMP 目的操作数，源操作数。<br>
功能：两操作数比较大小，根据目的操作数减去源操作数的运算结果，从而设置标志位。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CMP reg, reg/mem/imm</span><br><span class="line">CMP mem, reg/imm</span><br></pre></td></tr></table></figure>
<p>该指令影响CF, AF, PF, ZF, SF, OF。<br>
这条指令除了<strong>相减结果不保存</strong>外，其他情况与SUB指令完全相同</p>
</li>
</ol>
<h4 id="（5）乘法">（5）乘法</h4>
<ul>
<li>
<p><strong>MUL无符号数乘法</strong></p>
</li>
<li>
<p><strong>IMUL有符号数乘法</strong></p>
</li>
</ul>
<p>格式：MUL/IMUL 源操作数<br>
功能：无/有符号数乘指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MUL/IMUL reg/mem</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905171946359.png" alt="image-20230905171946359" style="zoom: 50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905172010743.png" alt="image-20230905172010743" style="zoom: 50%;" /> 
<p>两者的区别在于：</p>
<p>MUL的操作数内容看作无符号数</p>
<p>IMUL操作数内容看作补码</p>
<p><strong>影响CF和OF,不影响其他标志位</strong></p>
<ul>
<li>MUL，乘积的高半部分为0，则CF和OF均为0，否则CF和OF均为1</li>
<li>IMUL，乘积的高半部分是低半部分的符号扩展，则CF和OF均为0，否则均为1。</li>
</ul>
<p>通过测试这两个标志位，就能够知道乘积的高半部分是否有效数字 。</p>
<h4 id="（6）除法">（6）除法</h4>
<ul>
<li>
<p><strong>DIV无符号数除法</strong></p>
</li>
<li>
<p><strong>IDIV有符号数除法</strong></p>
</li>
</ul>
<p>要求被除数的位数必须是除数的两倍</p>
<p>格式：DIV/IDIV源操作数<br>
功能：无/有符号数除法指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DIV/IDIV reg/mem</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905172351909.png" alt="image-20230905172351909" style="zoom:50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905172400510.png" alt="image-20230905172400510" style="zoom:50%;" /> 
<p>两者的区别在于：</p>
<p>DIV的操作数是无符号数，商和余数均为无符号数；</p>
<p>IDIV操作数是补码，商和余数均为有符号数，余数符号与被除数符号相同。</p>
<ul>
<li>
<p>可能导致两类错误：除数为零，商溢出。</p>
</li>
<li>
<p>当除法运算所得的商超过表示范围时，就产生商溢出。</p>
</li>
<li>
<p>除法指令<strong>对所有标志位无定义</strong></p>
</li>
</ul>
<h3 id="4-10-span-id-jump-logic-逻辑运算指令-span">4.10 <span id="jump_logic">逻辑运算指令</span></h3>
<blockquote>
<p>逻辑指令包括逻辑运算指令和移位指令</p>
</blockquote>
<h4 id="（1）逻辑运算指令">（1）逻辑运算指令</h4>
<h5 id="五个指令">五个指令</h5>
<ul>
<li>
<p>逻辑运算是按位操作的，包括：AND, OR, NOT, XOR和TEST指令。</p>
</li>
<li>
<p><strong>AND指令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AND reg, reg/mem/imm</span><br><span class="line">AND mem, reg/imm</span><br></pre></td></tr></table></figure>
<p>根据结果置SF, ZF和PF，<strong>CF=0，OF=0</strong>，AF无定义。</p>
</li>
<li>
<p><strong>OR指令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">OR reg, reg/mem/imm</span><br><span class="line">OR mem, reg/imm</span><br></pre></td></tr></table></figure>
<p>根据结果置SF, ZF和PF，<strong>CF=0，OF=0</strong>，AF无定义</p>
</li>
<li>
<p><strong>NOT指令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NOT reg/mem</span><br></pre></td></tr></table></figure>
<p><strong>不影响标志位</strong></p>
</li>
<li>
<p><strong>XOR指令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">XOR reg, reg/mem/imm</span><br><span class="line">XOR mem, reg/imm</span><br></pre></td></tr></table></figure>
<p>根据结果设置SF, ZF和PF，<strong>CF=0，OF=0</strong>，AF无定义</p>
</li>
<li>
<p><strong>TEST指令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TEST reg, reg/mem/imm</span><br><span class="line">TEST mem, reg/imm</span><br></pre></td></tr></table></figure>
<p>根据结果置SF, ZF和PF，<strong>CF=0，OF=0</strong>，AF无定义</p>
<blockquote>
<p>TEST与AND都是两操作数按位“逻辑与”，但<strong>TEST的结果不保存</strong>。</p>
</blockquote>
</li>
</ul>
<h5 id="常用逻辑">常用逻辑</h5>
<ul>
<li>
<p>指定位清0</p>
<p>AND需清0的位赋0,其他位赋1</p>
</li>
<li>
<p>指定位置1</p>
<p>OR需置1的位赋1,其他位赋0</p>
</li>
<li>
<p>指定位变反</p>
<p>XOR需变反的位赋1,其他位赋0</p>
</li>
</ul>
<h4 id="（2）移位运算指令">（2）移位运算指令</h4>
<ul>
<li>
<p>按规定的方式，对目的操作数执行向左或向右移动若干个二进制位数的操作。</p>
<p>包括：</p>
<ul>
<li>
<p>逻辑移位指令</p>
<p>SHL、SHR</p>
</li>
<li>
<p>算术移位指令（移位后正负号 不变 ）</p>
<p>SAL、SAR</p>
</li>
<li>
<p>循环移位指令</p>
<p>ROL、ROR、RCL、RCR</p>
</li>
</ul>
</li>
</ul>
<h5 id="逻辑移位"><strong>逻辑移位</strong></h5>
<ol>
<li>
<p><strong>SHL指令</strong><br>
格式：SHL 目的操作数，移动位数。<br>
功能：目的操作数逻辑<strong>左移，最后移出的位进入CF，最低位用0填充</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHL reg/mem, imm8/CL</span><br></pre></td></tr></table></figure>
<p>影响CF, OF, SF, ZF, PF，而AF不确定。</p>
<blockquote>
<p>OF在左移1位时有效，否则不确定。<br>
<strong>左移1位后，若符号位改变，OF=1</strong>，否则OF=0</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905173934473.png" alt="image-20230905173934473" style="zoom:50%;" /> 
</li>
<li>
<p><strong>SHR指令</strong></p>
<p>格式：SHR目的操作数，移动位数。<br>
功能：目的操作数逻辑<strong>右移，最后移出的位进入CF，最高位用0填充</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHR reg/mem, imm8/CL。</span><br></pre></td></tr></table></figure>
<p>影响CF, OF, SF, ZF, PF，而AF不确定。</p>
<blockquote>
<p>OF在右移1位时有效，否则不确定。<br>
<strong>右移1位后符号位改变，OF=1</strong>，否则OF=0</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905173944234.png" alt="image-20230905173944234" style="zoom:50%;" /> 
</li>
</ol>
<h5 id="算术移位">算术移位</h5>
<p>（移位后正负号 不变 ）</p>
<ol>
<li>
<p><strong>SAL指令</strong></p>
<p>格式：SAL目的操作数，移动位数。<br>
功能：<strong>算术左移</strong>指令。</p>
<p>SAL与SHL是同一条指令，即一个操作码对应的两个助记符</p>
</li>
<li>
<p><strong>SAR指令</strong></p>
<p>格式：SAR 目的操作数，移动位数。<br>
功能：目的操作数<strong>算术右移，最后移出的位进入CF，高位用符号位填充</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SAR reg/mem, imm8/CL</span><br></pre></td></tr></table></figure>
<p>影响CF, OF, SF, ZF, PF，而AF不确定。</p>
<blockquote>
<p>OF在右移1位时有效，否则不确定。<br>
<strong>右移1位后，OF=0</strong></p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905174152094.png" alt="image-20230905174152094" style="zoom:50%;" /> 
</li>
</ol>
<h5 id="循环移位1">循环移位1</h5>
<ol>
<li>
<p><strong>ROL指令</strong></p>
<p>格式：ROL目的操作数，移动位数。<br>
功能：目的操作数<strong>循环左移，最后移出的位进CF</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ROL reg/mem</span><br></pre></td></tr></table></figure>
<p>影响CF, OF, SF, ZF, PF，而AF不确定。</p>
<blockquote>
<p>OF在左移1位时有效，否则不确定。<br>
<strong>左移1位后，若符号位改变，OF=1</strong>，否则OF=0</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905174459195.png" alt="image-20230905174459195" style="zoom:50%;" /> 
</li>
<li>
<p><strong>ROR指令</strong></p>
<p>格式：ROR 目的操作数，移动位数。<br>
功能：目的操作数<strong>循环右移，最后移出的位进CF</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ROR reg/mem, imm8/CL</span><br></pre></td></tr></table></figure>
<p>影响CF, OF, SF, ZF, PF，而AF不确定。</p>
<blockquote>
<p>OF在右移1位时有效，否则不确定。<br>
<strong>右移1位后，若符号位改变，OF=1</strong>，否则OF=0</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905174745980.png" alt="image-20230905174745980" style="zoom:50%;" /> 
</li>
</ol>
<h5 id="循环移位2">循环移位2</h5>
<ol>
<li>
<p><strong>RCL指令</strong></p>
<p>格式：RCL 目的操作数，移动位数。<br>
功能：目的操作数<strong>和CF一起循环左移</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RCL reg/mem, imm8/CL</span><br></pre></td></tr></table></figure>
<p>影响CF, OF, SF, ZF, PF，而AF不确定。</p>
<blockquote>
<p>OF在左移1位时有效，否则不确定。<br>
<strong>左移1位后，若符号位改变，OF=1</strong>，否则OF=0</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905174905476.png" alt="image-20230905174905476" style="zoom:50%;" />  
</li>
<li>
<p><strong>RCR指令</strong></p>
<p>格式：RCR目的操作数，移动位数。<br>
功能：目的操作数<strong>和CF一起循环右移</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RCR reg/mem, imm8/CL</span><br></pre></td></tr></table></figure>
<p>影响CF, OF, SF, ZF, PF，而AF不确定。</p>
<blockquote>
<p>OF在右移1位时有效，否则不确定。<br>
<strong>右移1位后，若符号位改变，OF=1</strong>，否则OF=0</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905174948402.png" alt="image-20230905174948402" style="zoom:50%;" />  
</li>
</ol>
<h2 id="第五课-转移、选择、循环">第五课 转移、选择、循环</h2>
<h3 id="5-1-span-id-jump-jmp-转移指令-span">5.1 <span id="jump_jmp">转移指令</span></h3>
<ul>
<li>
<p><code>CS:(E)IP</code>指向下一条要执行的指令在内存中的地址，</p>
<p>控制转移指令实际上通过改变<code>CS:(E)IP</code>来达到控制程序的执行流程。</p>
<p>包括：</p>
<ul>
<li>无条件转移指令</li>
<li>条件转移指令</li>
<li>循环指令</li>
<li>子程序调用和返回指令</li>
<li>中断调用和中断返回指令</li>
</ul>
<p><code>JMP，JccCALL，RETINT，IRET</code></p>
</li>
<li>
<p>转移</p>
<ul>
<li>仅能改变<code>(E)IP</code>，是近转移或段内转移</li>
<li>能改变<code>(E)IP</code>和<code>CS</code>，是远转移或段间转移</li>
</ul>
</li>
</ul>
<h4 id="（1）无条件转移">（1）无条件转移</h4>
<ul>
<li>
<p>格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JMP	目标地址</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>功能：无条件转移到目标地址，执行从该地址开始的指令序列</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">	MOV		AX, A</span><br><span class="line">	CMP		AX, B</span><br><span class="line">	JNA		loc2</span><br><span class="line">	MOV		X, 1</span><br><span class="line">	JMP		loc3</span><br><span class="line">loc2:</span><br><span class="line">	MOV	X, 2</span><br><span class="line">loc3:</span><br><span class="line">	...</span><br></pre></td></tr></table></figure>
<h4 id="（2）条件转移">（2）条件转移</h4>
<ul>
<li>
<p>条件</p>
<ul>
<li>条件满足时则转移，条件不满足时，则顺序执行后面的指令</li>
<li>具体条件见下面的指令
<ul>
<li>单个标志位的条件</li>
<li>无符号数比较的条件</li>
<li>有符号数比较的条件</li>
</ul>
</li>
</ul>
</li>
<li>
<p>格式</p>
<p>常用Jcc来代表这类指令的助记符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Jcc	标号</span><br></pre></td></tr></table></figure>
<p>条件转移指令都是段内直接近转移</p>
</li>
</ul>
<h5 id="单个标志位">单个标志位</h5>
<ul>
<li>Z、S、C、O、P均有各种的指令</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905180521286.png" alt="image-20230905180521286" style="zoom:50%;" /> 
<blockquote>
<p>简记：</p>
<p>记住<code>JE</code>、<code>JNE</code>为相等则跳转、不相等则跳转。</p>
</blockquote>
<h5 id="无符号数比较">无符号数比较</h5>
<ul>
<li>无符号数比较时，根据CF来判断大小</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905180708147.png" alt="image-20230905180708147" style="zoom:50%;" /> 
<blockquote>
<p>简记：</p>
<ul>
<li>A为无符号大</li>
<li>B为无符号小</li>
<li>拼加N、E</li>
</ul>
</blockquote>
<h5 id="有符号数比较">有符号数比较</h5>
<ul>
<li>有符号数比较时，根据SF和OF来确定大小</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905181049991.png" alt="image-20230905181049991" style="zoom:50%;" /> 
<blockquote>
<p>简记：</p>
<ul>
<li>G为有符号大 Greater</li>
<li>L为有符号小 Less</li>
<li>拼加N、E</li>
</ul>
</blockquote>
<h3 id="5-2-span-id-jump-loop-循环指令-span">5.2 <span id="jump_loop">循环指令</span></h3>
<ul>
<li>
<p>主要使用LOOP指令比较多</p>
</li>
<li>
<p>LOOP会以<code>CX</code>寄存器存着的值作为循环次数，进行循环跳转</p>
<p>执行到<code>LOOP  LOC1</code>，</p>
<p>会先执行<code>CX - 1</code>，</p>
<p>再判断：</p>
<ul>
<li><code>CX</code>不等于0：跳转到<code>LOC1</code>位置执行</li>
<li><code>CX</code>等于0：循环结束，执行<code>LOOP  LOC1</code>后面的语句</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905181644577.png" alt="image-20230905181644577" style="zoom: 67%;" /> 
<h3 id="5-3-其他指令">5.3 其他指令</h3>
<h4 id="（1）标志位处理指令">（1）标志位处理指令</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905182143234.png" alt="image-20230905182143234" style="zoom: 67%;" /> 
<h4 id="（2）其他指令">（2）其他指令</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905182302120.png" alt="image-20230905182302120" style="zoom:67%;" /> 
<h2 id="第六课-子程序调用">第六课 子程序调用</h2>
<h3 id="6-1-子程序定义">6.1 子程序定义</h3>
<ul>
<li>
<p>子程序定义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">子程序名 PROC　[NEAR/FAR] </span><br><span class="line">　… ;子程序体   </span><br><span class="line">子程序名 ENDP</span><br></pre></td></tr></table></figure>
<p>子程序名是子程序的入口地址的符号表示，</p>
<p>是符号地址，也具有地址属性和类型属性。</p>
</li>
</ul>
<blockquote>
<ul>
<li>
<p>当主调程序转向子程序时，使用调用指令，而在子程序执行结束时，安排一条返回指令，使子程序返回到主程序。</p>
</li>
<li>
<p>为保证正确的返回，</p>
<p>(1)调用子程序时，自动将下一条指令地址保存到栈中，</p>
<p>(2)返回时根据栈中先前保存的地址，转移到主程序继续执行。</p>
</li>
<li>
<p>子程序调用与返回指令是配套使用的</p>
</li>
</ul>
</blockquote>
<h3 id="6-2-CALL指令">6.2 CALL指令</h3>
<ul>
<li>
<p>格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CALL 目标地址</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>功能：</p>
<p>把该指令之后的地址进栈，再转移到目标地址，执行从该处指令。</p>
<p>有直接调用和间接调用两种方式。</p>
</li>
</ul>
<blockquote>
<ul>
<li>
<p>直接调用的CALL指令后也可以是标号，</p>
<p>但是要遇到RET才会返回，否则会无法退出。</p>
</li>
</ul>
</blockquote>
<h3 id="6-3-RET指令">6.3 RET指令</h3>
<ul>
<li>
<p>格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RET/RET [imm16]</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>功能：</p>
<p>首先从栈栈顶弹出返回的目标地址，然后转移到该地址处执行。</p>
<blockquote>
<p>若其后有imm16，则还要执行</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905184126486.png" alt="image-20230905184126486" style="zoom:50%;" /> 
</blockquote>
<p>与CALL指令配套使用，实现从子程序中返回，继续主程序的执行 。</p>
</li>
</ul>
<h3 id="6-4-寄存器的保护与恢复">6.4 寄存器的保护与恢复</h3>
<ul>
<li>
<p>主程序和子程序通常是分别编制的，所以它们所使用的寄存器往往会发生冲突。</p>
<ul>
<li>
<p>进入子程序后，把子程序所需要使用的寄存器内容保存在栈中，此过程称作寄存器保护</p>
</li>
<li>
<p>在退出子程序前把寄存器内容恢复原状，此过程称作寄存器恢复</p>
</li>
</ul>
</li>
<li>
<p>寄存器保护与现场恢复分别使用压栈和出栈指令实现</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CRLF	PROC	Far	;子程序定义开始,属性类型为Far</span><br><span class="line">	PUSH	AX	;AX寄存器内容的保护</span><br><span class="line">	PUSH	DX	;DX寄存器内容的保护</span><br><span class="line">	MOV	AH, 2</span><br><span class="line">	MOV	DL, 13</span><br><span class="line">	INT	21h</span><br><span class="line">	MOV	DL, 10</span><br><span class="line">	INT	21h</span><br><span class="line">	POP	DX	;AX寄存器内容的恢复</span><br><span class="line">	POP	AX	;DX寄存器内容的恢复</span><br><span class="line">	RET	;返回调用程序(远返回指令,由汇编程序确定)</span><br><span class="line">CRLF	ENDP	;子程序定义结束</span><br></pre></td></tr></table></figure>
<p>根据需要，可用PUSHF和POPF来保护和恢复标志位。</p>
<h3 id="6-5-参数传递">6.5 参数传递</h3>
<ul>
<li>
<p>参数传递</p>
<p>主程序在调用子程序时，经常要向子程序传递一些参数或控制信息，子程序执行后，也常需要把运行的结果返回调用程序。这种信息传递称为参数传递。</p>
</li>
<li>
<p>常用的方法有：</p>
<ul>
<li>约定寄存器传递参数</li>
<li>约定内存单元传递参数</li>
<li>栈传递参数</li>
</ul>
<p>经常同时并用。</p>
</li>
</ul>
<h3 id="6-6-静态变量与动态变量">6.6 静态变量与动态变量</h3>
<ul>
<li>
<p>静态</p>
<p>在**段(数据段)**中定义分配的数据是静态数据。</p>
<p>通过DW等伪指令定义并分配存储空间，可用变量名,或直接地址访问相应的内存单元。</p>
</li>
<li>
<p>动态</p>
<p>在<strong>栈</strong>上分配存储空间来临时使用是动态数据。</p>
<ul>
<li>原则：进入子程序，分配临时空间；子程序执行结束，释放临时空间</li>
<li>方法：通过调整栈指针来分配空间</li>
<li>访问：以 (E)BP为基址，用位移量来存取临时变量（因为动态分配，没有名字）</li>
</ul>
</li>
<li>
<p>示例</p>
<p>编写程序计算(x % m + y % m + z % m) % m的值，其中x, y, z为32位无符号数，m是16位无符号数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foo	PROC	FAR</span><br><span class="line">	PUSH	BP	;保护基址指针</span><br><span class="line">	MOV	BP,SP	;设置新栈帧</span><br><span class="line">	SUB	SP,6	;分配临时空间</span><br><span class="line">	PUSH	DX</span><br><span class="line">	MOV	AX,[BP+16] </span><br><span class="line">	MOV	DX,[BP+18]</span><br><span class="line">	DIV	Word Ptr[BP+6]</span><br><span class="line">	MOV	[BP-2],DX ;保存余数</span><br><span class="line">	MOV	AX,[BP+12]</span><br><span class="line">	MOV	DX,[BP+14]</span><br><span class="line">	DIV	Word Ptr[BP+6]</span><br><span class="line">	MOV	[BP-4],DX ;保存余数</span><br><span class="line">	MOV	AX,[BP+8]</span><br><span class="line">	MOV	DX,[BP+10]</span><br><span class="line">	DIV	Word Ptr[BP+6]</span><br><span class="line">	MOV	[BP-6],DX ;保存余数</span><br><span class="line">	SUB	DX,DX</span><br><span class="line">	MOV	AX,[BP-2]</span><br><span class="line">	ADD	AX,[BP-4]</span><br><span class="line">	ADC	DX,0</span><br><span class="line">	ADD	AX, [BP-6]</span><br><span class="line">	ADC	DX, 0</span><br><span class="line">	DIV	Word Ptr[BP+6]</span><br><span class="line">	MOV	AX, DX</span><br><span class="line">	POP	DX</span><br><span class="line">	ADD	SP,6 ;释放临时空间</span><br><span class="line">	MOV	SP, BP</span><br><span class="line">	POP	BP</span><br><span class="line">	RET</span><br><span class="line">foo	ENDP</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="6-7-子程序的嵌套与递归调用">6.7 子程序的嵌套与递归调用</h3>
<ul>
<li>
<p>一个子程序包含有子程序的调用，这便是子程序的嵌套调用。</p>
</li>
<li>
<p>一个程序直接或间接地调用自身就是子程序的递归调用，它递归子程序。</p>
</li>
<li>
<p>设计递归子程序</p>
<ul>
<li>每次调用的参数进栈</li>
<li>在栈上分配动态空间保存中间结果</li>
</ul>
</li>
<li>
<p>示例</p>
<p>编写求n!的递归子程序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f	PROC	NEAR</span><br><span class="line">	PUSH	BP	;保护基址指针</span><br><span class="line">	MOV	BP, SP	;设置新栈帧</span><br><span class="line">	SUB	SP, 2	;分配临时空间</span><br><span class="line">	MOV	AX, [BP+4] 	;取n</span><br><span class="line">	MOV	[BP-2], AX</span><br><span class="line">	CMP	AX, 1</span><br><span class="line">	JE	L10</span><br><span class="line">	DEC	AX</span><br><span class="line">	PUSH	AX</span><br><span class="line">	CALL	f	;调用递归子程序</span><br><span class="line">	ADD	SP, 2</span><br><span class="line">	PUSH	DX</span><br><span class="line">	MUL	Word Ptr [BP-2]	;n×(n-1)!</span><br><span class="line">	POP	DX</span><br><span class="line">L10:	MOV	SP, BP</span><br><span class="line">	POP	BP</span><br><span class="line">	RET</span><br><span class="line">f	ENDP</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905185118581.png" alt="image-20230905185118581" style="zoom:50%;" /> 
</li>
</ul>
<h3 id="6-8-多模块程序设计">6.8 多模块程序设计</h3>
<ul>
<li>
<p>一个汇编语言程序可以划分成主模块和多级、多个子模块。</p>
</li>
<li>
<p>每个模块的源程序都是以END伪指令来结束，</p>
<p>但是只有主模块中的END后可以接标号，以表示程序的入口地址，</p>
<p>其他模块中的END后不能有标号。</p>
</li>
</ul>
<h4 id="全局符号与外部符号">全局符号与外部符号</h4>
<ul>
<li>PUBLIC伪指令与EXTRN伪指令配套使用。</li>
</ul>
<ol>
<li>
<p>全局符号名说明伪指令<strong>PUBLIC</strong><br>
格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUBLIC符号名1[, 符号名2, …]</span><br></pre></td></tr></table></figure>
<p>功能：将符号名说明为全局符号，以便其他模块引用<br>
符号名：变量、标号或子程序名，及表示常数的符号</p>
</li>
<li>
<p>外部符号名说明伪指令<strong>EXTRN</strong><br>
格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EXTRN符号名1:类型[, 符号名2:类型, …]</span><br></pre></td></tr></table></figure>
<p>功能：说明符号名为外部符号。<br>
本模块引用其他模块中的符号，应说明为外部符号。<br>
类型是：Byte, Word, DWord, FWord, QWord, TByte, Near, Far, ABS，应与原模块定义的类型一致。</p>
</li>
</ol>
<ul>
<li>
<p>由于符号地址都是在某段中定义，</p>
<p>所以，必须将各模块中的段指定为PUBLIC属性，</p>
<p>这样，连接程序将不同模块中的同名段放在一起，从而为各全局符号分配正确的偏移地址。</p>
</li>
<li>
<p>示例</p>
<ul>
<li>
<p>模块M1.ASM实现的是输入字符串子程序Sub1；</p>
</li>
<li>
<p>模块M2.ASM实现的是输出字符串子程序Sub2；</p>
</li>
<li>
<p>主模块M0.ASM调用Sub1和Sub2，输入字符串后再将它显示出来。</p>
</li>
</ul>
<p><code>M0.ASM</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;	M0.ASM  主模块源程序</span><br><span class="line">PUBLIC	Buf, DOSFUN</span><br><span class="line">EXTRN	Sub1: Near, Sub2: Far</span><br><span class="line">DOSFUN = 21h</span><br><span class="line">_DATA	SEGMENT &#x27;DATA&#x27; USE16 PUBLIC</span><br><span class="line">CRLF	DB	13, 10, &#x27;$&#x27;</span><br><span class="line">Buf	DB	20, 20 DUP (32), 13, 10, &#x27;$&#x27;</span><br><span class="line">_DATA	ENDS</span><br><span class="line">_TEXT	SEGMENT &#x27;CODE&#x27; USE16 PUBLIC</span><br><span class="line">	ASSUME CS: _TEXT, DS: _DATA</span><br><span class="line">Start:	…</span><br><span class="line">	CALL	Sub1</span><br><span class="line">	MOV	AX, Offset CRLF</span><br><span class="line">	PUSH	AX</span><br><span class="line">	CALL	Sub2</span><br><span class="line">	POP	AX</span><br><span class="line">	MOV	AX, Offset Buf+2</span><br><span class="line">	PUSH	AX</span><br><span class="line">	CALL	Sub2</span><br><span class="line">	POP	AX</span><br><span class="line">	MOV	AX, 4C00h</span><br><span class="line">	INT	DOSFUN</span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END Start</span><br></pre></td></tr></table></figure>
<p><code>M1.ASM</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;	M1.ASM  输入字符子程序源程序</span><br><span class="line">EXTRN	  DOSFUN: Abs </span><br><span class="line">EXTRN	  Buf: Byte</span><br><span class="line">PUBLIC	  Sub1</span><br><span class="line">_TEXT	SEGMENT &#x27;CODE&#x27; USE16 PUBLIC</span><br><span class="line">	ASSUME CS: _TEXT</span><br><span class="line">;子程序Sub1约定输入缓冲区为Buf</span><br><span class="line">Sub1	PROC	NEAR</span><br><span class="line">	LEA	DX, Buf</span><br><span class="line">	MOV	AH, 0Ah</span><br><span class="line">	INT	DOSFUN</span><br><span class="line">	SUB	BX, BX</span><br><span class="line">	MOV	BL, Buf [1]</span><br><span class="line">	MOV	Buf[BX+2],20h</span><br><span class="line">	RET</span><br><span class="line">Sub1	ENDP</span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END	;模块至此结束</span><br></pre></td></tr></table></figure>
<p><code>M2.ASM</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;	M2.ASM  显示字符子程序源程序。</span><br><span class="line">PUBLIC	Sub2</span><br><span class="line">EXTRN	DOSFUN: Abs</span><br><span class="line">_TEXT	SEGMENT &#x27;CODE&#x27; USE16 PUBLIC</span><br><span class="line">	ASSUME CS: _TEXT</span><br><span class="line">;子程序Sub2,约定栈传递参数</span><br><span class="line">Sub2	PROC	FAR</span><br><span class="line">	PUSH	BP</span><br><span class="line">	MOV	BP, SP</span><br><span class="line">	MOV	DX, [BP+6]</span><br><span class="line">	MOV	AH, 9</span><br><span class="line">	INT	DOSFUN</span><br><span class="line">	POP	BP</span><br><span class="line">	RET</span><br><span class="line">Sub2	ENDP</span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END	;模块至此结束</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="连接方法">连接方法</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905185801120.png" alt="image-20230905185801120" style="zoom:50%;" /> 
<h3 id="6-9-子程序库">6.9 子程序库</h3>
<ul>
<li>常用子程序写成独立的源文件，单独汇编形成OBJ文件后，放到一个专门的文件中，形成子程序库。
<ul>
<li>文件类型一般为.LIB</li>
<li>在连接时，调入子程序库中的子程序模块，生成最终的可执行文件</li>
<li>LIB.EXE，就专门用于建立和修改子程序库</li>
</ul>
</li>
</ul>
<h3 id="6-10-其他">6.10 其他</h3>
<ul>
<li>
<p>与高级语言程序的连接</p>
<p>各种语言的源程序分别编写，</p>
<p>在各自的开发环境中编译成目标模块.OBJ，</p>
<p>再将各目标模块连接在一起，生成可执行文件。</p>
</li>
<li>
<p>遵守约定规则</p>
<ul>
<li>
<p>汇编模块必须使用高级语言的标识符命名约定。</p>
</li>
<li>
<p>在汇编语言源程序中，如果使用定义在高级语言的符号，必须用EXTRN来说明它，如果让高级语言使用在本模块中定义的符号，则必须用PUBLIC来说明它；同理，在高级语言源程序中，也须用相应的说明语句来说明全局符号与外部符号。</p>
</li>
<li>
<p>调用子程序时的参数传递规则主要有：PASCAL规则(参数自左向右压栈)，C规则(参数自右向左压栈)，以及返回值的传递规则。</p>
</li>
<li>
<p>在子程序返回时的栈恢复：由调用程序恢复，还是由子程序恢复。</p>
</li>
<li>
<p>其他诸如寄存器保护原则、数据类型的对应等。</p>
</li>
</ul>
</li>
<li>
<p>C编译程序的约定</p>
<ul>
<li>
<p>全局符号名(变量名或函数名)前加“_”(下画线)。</p>
</li>
<li>
<p>调用子程序时，使用C规则传递参数；在16位模式下，用AX传递8, 16位返回结果，用DX:AX传递32位返回结果，在32位模式下，用EAX传递8, 16和32返回结果，用EDX:EAX传递64位返回结果。</p>
</li>
<li>
<p>由调用程序来恢复栈指针。</p>
</li>
<li>
<p>一般情况下，不保护AX, BX, CX, DX(16位地址模式)，或EAX, EBX, ECX, EDX(32位地址模式)。</p>
<p>在VC中似乎要保护ebx; C++规则,要保护ecx</p>
</li>
</ul>
</li>
</ul>
<h2 id="第七课-中断、输入-输出">第七课 中断、输入/输出</h2>
<h3 id="7-1-中断">7.1 中断</h3>
<ul>
<li>
<p>中断调用</p>
<ul>
<li>标志寄存器进栈</li>
<li>中断调用指令后地址的段和偏移地址进栈</li>
<li>从中断向量表取中断服务程序入口地址，并转去执行</li>
</ul>
</li>
<li>
<p>中断向量</p>
<p>中断服务子程序的入口地址称为中断向量。</p>
<p>实模式，内存的最低1KB区域专门用来保存256个中断向量，称为中断向量表。</p>
</li>
<li>
<p>实地址模式下的中断向量表</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905190154631.png" alt="image-20230905190154631" style="zoom: 50%;" /> 
<ul>
<li>
<p>INT指令</p>
<p>格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INT imm8</span><br></pre></td></tr></table></figure>
<p>功能：</p>
<p>产生一次类型号为imm8的中断：</p>
<ul>
<li>
<p>首先FLAGS进栈，再将IF和TF清0；</p>
</li>
<li>
<p>然后该指令之后的地址(返回地址)，按段、偏移的次序进栈；</p>
</li>
<li>
<p>最后转向类型号为imm8的中断向量，即双字单元<code>0000h:[4×imm8]</code>所确定的中断服务子程序入口地址处执行。</p>
</li>
</ul>
<blockquote>
<p>由于一条INT指令相当于产生一次中断，其处理过程与外部中断处理过程一样，所以，INT指令又称为软中断指令。</p>
</blockquote>
</li>
<li>
<p>INTO指令</p>
<p>格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INTO</span><br></pre></td></tr></table></figure>
<p>功能：</p>
<p>若OF＝1，产生一次类型号为4的中断，相当于INT 4；否则顺序执行。</p>
</li>
<li>
<p>IRET指令</p>
<p>格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IRET</span><br></pre></td></tr></table></figure>
<p>功能：</p>
<p>中断处理结束，返回中断发生处继续执行。</p>
<p>即：首先从栈中以“偏移地址、段地址、16位标志”这样的次序弹出转向的目标地址和FLAGS，再转移到该目标地址去执行。</p>
</li>
</ul>
<h3 id="7-2-输入-输出">7.2 输入/输出</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905190625072.png" alt="image-20230905190625072" style="zoom:50%;" /> 
<ul>
<li>
<p>用IN、 OUT指令与外部设备交换信息</p>
<p>端口</p>
</li>
<li>
<p>与I/O设备间数据传送方式：</p>
<ul>
<li>程序直接控制I/O方式</li>
<li>中断传送方式</li>
<li>直接内存存取(DMA)</li>
</ul>
</li>
</ul>
<h3 id="7-3-中断处理程序的主要步骤">7.3 中断处理程序的主要步骤</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1) 保存寄存器的内容；</span><br><span class="line">(2) 若允许CPU响应外设中断，则开中断(STI)；</span><br><span class="line">(3) 处理中断；</span><br><span class="line">(4) 关中断(CLI)；</span><br><span class="line">(5) 若是I/O中断服务程序，则送中断结束命令(EOI)给中断命令寄存器；</span><br><span class="line">(6) 恢复寄存器的内容；</span><br><span class="line">(7) 返回被中断的程序(IRET)。</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>中断服务程序的入口地址只有放到中断向量表中，才能在中断发生时被调用到。</p>
<p>所以，除了中断处理程序，还有相应设置中断向量及相应的硬件初始化工作。</p>
</li>
</ul>
<h2 id="补录：-span-id-jump-temp-实用示例-span">补录：<span id="jump_temp">实用示例</span></h2>
<h4 id="1-打印可见的十六进制数">1. 打印可见的十六进制数</h4>
<ul>
<li>
<p>题目</p>
<p>16位二进制数存在BX，以可见字符形式输出打印在屏幕上</p>
</li>
<li>
<p>代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PUBLIC  DISPBX</span><br><span class="line">CODE    SEGMENT</span><br><span class="line">        ASSUME  CS:CODE</span><br><span class="line">DISPBX  PROC    FAR</span><br><span class="line">        MOV     CH,4</span><br><span class="line">        MOV     CL,4</span><br><span class="line">ROTATE: ROL     BX,CL</span><br><span class="line">        MOV     AL,BL</span><br><span class="line">        AND     AL,0FH</span><br><span class="line">        ADD     AL,30H</span><br><span class="line">        CMP     AL,3AH</span><br><span class="line">        JL      PRINTIT</span><br><span class="line">        ADD     AL,7</span><br><span class="line">PRINTIT:MOV     DL,AL</span><br><span class="line">        MOV     AH,2</span><br><span class="line">        INT     21H</span><br><span class="line">        DEC     CH</span><br><span class="line">        JNZ    	ROTATE</span><br><span class="line">        RET</span><br><span class="line">DISPBX  ENDP</span><br><span class="line">CODE    ENDS</span><br><span class="line">       	END</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-输出对应字符串">2. 输出对应字符串</h4>
<ul>
<li>
<p>题目</p>
<p>编写多分支结构程序，实现：<br>
输入’1’, ‘2’, ‘3’，输出&quot;one&quot;, “two”, “three”；<br>
输入’0’，中止运行；<br>
输入其他，输出&quot;error!&quot;</p>
</li>
<li>
<p>代码</p>
<p>方法一：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_DATA	SEGMENT &#x27;DATA&#x27;</span><br><span class="line">Msg	DB 13,10,&quot;Please input a number: &quot;,13,10,&quot;$&quot;</span><br><span class="line">s1	DB 	9, &quot;one&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">s2	DB	9, &quot;two&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">s3	DB	9, &quot;three&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">err	DB	9, &quot;error!&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">_DATA	ENDS</span><br><span class="line">_TEXT	SEGMENT	&#x27;CODE&#x27;</span><br><span class="line">	ASSUME CS: _TEXT, DS: _DATA</span><br><span class="line">Start:	MOV	AX, _DATA</span><br><span class="line">		MOV	DS, AX</span><br><span class="line">Again:	MOV	AH, 9</span><br><span class="line">		MOV	DX, Offset Msg</span><br><span class="line">		INT	21h</span><br><span class="line">		MOV	AH, 1</span><br><span class="line">		INT	21h</span><br><span class="line">		CMP	AL, &#x27;0&#x27;</span><br><span class="line">		JE	Case0</span><br><span class="line">		CMP	AL, &#x27;1&#x27;</span><br><span class="line">		JE	Case1</span><br><span class="line">		CMP	AL, &#x27;2&#x27;</span><br><span class="line">		JE	Case2</span><br><span class="line">		CMP	AL, &#x27;3&#x27;</span><br><span class="line">		JE	Case3</span><br><span class="line">Default:	MOV	DX, Offset err</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case0:		MOV	AX, 4C00h</span><br><span class="line">		INT	21h</span><br><span class="line">Case1:		MOV	DX, Offset s1</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case2:		MOV	DX, Offset s2</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case3:		MOV	DX, Offset s3</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">EndSwitch:	MOV	AH, 9</span><br><span class="line">		INT	21h</span><br><span class="line">		JMP	Again</span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END Start</span><br></pre></td></tr></table></figure>
<p>方法二：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_DATA	SEGMENT &#x27;DATA&#x27;</span><br><span class="line">Msg	DB 13, 10, &quot;Please input a number: &quot;, 13, 10, &quot;$&quot;</span><br><span class="line">s1	DB		9, &quot;four&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">s2	DB		9, &quot;five&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">s3	DB		9, &quot;six&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">err	DB		9, &quot;error!&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">_DATA	ENDS</span><br><span class="line">_TEXT	SEGMENT	&#x27;CODE&#x27;</span><br><span class="line">	ASSUME CS: _TEXT, DS: _DATA</span><br><span class="line">Start:	MOV		AX, _DATA</span><br><span class="line">	MOV		DS, AX</span><br><span class="line">Again:	MOV		AH, 9</span><br><span class="line">	MOV		DX, Offset Msg</span><br><span class="line">	INT		21h</span><br><span class="line">	MOV		AH, 1</span><br><span class="line">	INT		21h</span><br><span class="line">		SUB	AL, &#x27;4&#x27;</span><br><span class="line">		JL	Error		;输入字符小于&#x27;4&#x27;的情况</span><br><span class="line">		CMP	AL, 3</span><br><span class="line">		JLE	Loc1</span><br><span class="line">Error:		MOV	AL, 4</span><br><span class="line">Loc1:		MOV	AH, 0</span><br><span class="line">		ADD	AX, AX</span><br><span class="line">		MOV	BX, AX</span><br><span class="line">		JMP	Word Ptr CS: CaseTab [BX]</span><br><span class="line">CaseTab		DW	Case1, Case2, Case3, Case4, Default</span><br><span class="line">Default:	MOV	DX, Offset err</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case1:		MOV	DX, Offset s1</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case2:		MOV	DX, Offset s2</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case3:		MOV	DX, Offset s3</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case4:		MOV	AX, 4C00h</span><br><span class="line">		INT	21h</span><br><span class="line">EndSwitch:	MOV	AH, 9</span><br><span class="line">		INT	21h</span><br><span class="line">		JMP	Again</span><br><span class="line">_TEXT		ENDS</span><br><span class="line">		END Start</span><br></pre></td></tr></table></figure>
<p>方法三：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_DATA	SEGMENT &#x27;DATA&#x27;</span><br><span class="line">Msg	DB 13,10,&quot;Please input a character: &quot;,13,10,&quot;$&quot;</span><br><span class="line">s1	DB	9, &quot;File&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">s2	DB	9, &quot;Edit&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">s3	DB	9, &quot;View&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">err	DB	9, &quot;Error!&quot;, 13, 10, &#x27;$&#x27;</span><br><span class="line">_DATA	ENDS</span><br><span class="line">_TEXT	SEGMENT	&#x27;CODE&#x27;</span><br><span class="line">	ASSUME CS: _TEXT, DS: _DATA</span><br><span class="line">Start:	MOV	AX, _DATA</span><br><span class="line">	MOV	DS, AX</span><br><span class="line">Again:	MOV	AH, 9</span><br><span class="line">	MOV	DX, Offset Msg</span><br><span class="line">	INT	21h</span><br><span class="line">	MOV	AH, 1</span><br><span class="line">	INT	21h</span><br><span class="line">		MOV	CX, CS: TabItems</span><br><span class="line">		MOV	BX, Offset CaseTab</span><br><span class="line">Next_I:		CMP	Byte Ptr CS: [BX], AL</span><br><span class="line">		JE	ToCase</span><br><span class="line">		ADD	BX, 4</span><br><span class="line">		LOOP	Next_I</span><br><span class="line">ToCase:		JMP	Word Ptr CS: [BX+2]</span><br><span class="line">TabItems DW	8</span><br><span class="line">CaseTab	  DW	&#x27;F&#x27;,Case1,&#x27;E&#x27;,Case2,&#x27;V&#x27;,Case3,&#x27;X&#x27;,Case4</span><br><span class="line">	  DW	&#x27;f&#x27;,Case1,&#x27;e&#x27;,Case2,&#x27;v&#x27;,Case3,&#x27;x&#x27;,Case4,0,Default</span><br><span class="line">Default:	MOV	DX, Offset err</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case1:		MOV	DX, Offset s1</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case2:		MOV	DX, Offset s2</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case3:		MOV	DX, Offset s3</span><br><span class="line">		JMP	EndSwitch</span><br><span class="line">Case4:		MOV	AX, 4C00h</span><br><span class="line">		INT	21h</span><br><span class="line">EndSwitch:	MOV	AH, 9</span><br><span class="line">		INT	21h</span><br><span class="line">		JMP	Again</span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END Start</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="3-求所有n2数字和">3. 求所有n2数字和</h4>
<ul>
<li>
<p>题目</p>
<p>用while循环结构编写程序，<br>
计算s＝12+22+32+…+n2+…，直到n＞65000或s≥7FF0000h为止，<br>
运算结果存于32位变量Sum中</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/assembly/image-20230905182834174.png" alt="image-20230905182834174" style="zoom: 50%;" /> 
</li>
<li>
<p>代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_DATA	SEGMENT	&#x27;DATA&#x27;	</span><br><span class="line">Sum	DD	?</span><br><span class="line">_DATA	ENDS</span><br><span class="line">_TEXT	SEGMENT	&#x27;CODE&#x27;</span><br><span class="line">	ASSUME	CS: _TEXT, DS: _DATA</span><br><span class="line">Start:	MOV	AX, _DATA</span><br><span class="line">	MOV	DS, AX</span><br><span class="line">	MOV	CX, 1</span><br><span class="line">	MOV	Word Ptr Sum, 0</span><br><span class="line">	MOV	Word Ptr Sum+2, 0</span><br><span class="line">	JMP	Rep1?	; 先执行条件测试</span><br><span class="line">Rep1b:	MOV	AX, CX</span><br><span class="line">	MUL	CX	</span><br><span class="line">	ADD	Word Ptr Sum, AX</span><br><span class="line">	ADC	Word Ptr Sum+2, DX</span><br><span class="line">	INC	CX	</span><br><span class="line">Rep1?:	CMP	CX, 65000</span><br><span class="line">	JNBE	EndRep1</span><br><span class="line">	CMP	Word Ptr Sum+2, 7FFh</span><br><span class="line">	JB	Rep1b</span><br><span class="line">EndRep1:</span><br><span class="line">	MOV	AX, 4C00h</span><br><span class="line">	INT	21h	</span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END Start</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="4-计算字符数">4. 计算字符数</h4>
<ul>
<li>
<p>题目</p>
<p>编一汇编语言程序，从键盘输入一系列字符（小于80个，以回车符结束），</p>
<p>按<strong>字母</strong>、<strong>数字</strong>以及<strong>其他</strong>字符分类统计，并显示（可以按十六进制数显示）出这三类的计数结果。</p>
</li>
<li>
<p>代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_DATA	SEGMENT</span><br><span class="line">N1	DB	0	; 数字</span><br><span class="line">N2	DB	0	; 字符</span><br><span class="line">N3	DB	0	; 其他</span><br><span class="line">BUF 	DB  	80	;预定义80字节的空间</span><br><span class="line">	DB	?	;待输入完成后，自动获得输入的字符个数</span><br><span class="line">	DB  	80  DUP(?) </span><br><span class="line">Msg1	DB	13,10,&quot;Please input a string:&quot;,&quot;$&quot;</span><br><span class="line">Msg2	DB	13,10,&quot;Number:&quot;,&quot;$&quot;</span><br><span class="line">Msg3	DB	13,10,&quot;Char:&quot;,&quot;$&quot;</span><br><span class="line">Msg4	DB	13,10,&quot;Other:&quot;,&quot;$&quot;</span><br><span class="line">_DATA	ENDS</span><br><span class="line">_TEXT	SEGMENT</span><br><span class="line">	ASSUME CS: _TEXT, DS: _DATA</span><br><span class="line">Start:	</span><br><span class="line">	MOV	AX, _DATA</span><br><span class="line">	MOV	DS, AX</span><br><span class="line">	</span><br><span class="line">	; 输出提示信息</span><br><span class="line">	MOV	AH, 09H</span><br><span class="line">	MOV	DX, OFFSET Msg1</span><br><span class="line">	INT	21H</span><br><span class="line">	;读入字符串</span><br><span class="line">	MOV	AH, 0AH</span><br><span class="line">	MOV	DX, OFFSET BUF</span><br><span class="line">	INT	21H</span><br><span class="line"></span><br><span class="line">	; 核心部分，统计个数</span><br><span class="line">	MOV	CL, BUF[1]</span><br><span class="line">	MOV	CH, 00H</span><br><span class="line">	MOV	SI, 0</span><br><span class="line">	; 进行判断</span><br><span class="line">NEXT:</span><br><span class="line">	CMP	BUF[2][SI], &#x27;0&#x27;</span><br><span class="line">	JL	LOC1</span><br><span class="line">	CMP	BUF[2][SI], &#x27;9&#x27;</span><br><span class="line">	JG	LOC1</span><br><span class="line">	INC	N1</span><br><span class="line">	JMP	OVER</span><br><span class="line">LOC1:</span><br><span class="line">	CMP	BUF[2][SI], &#x27;A&#x27;</span><br><span class="line">	JL	LOC2</span><br><span class="line">	CMP	BUF[2][SI],&#x27;Z&#x27;</span><br><span class="line">	JG	LOC2</span><br><span class="line">	INC	N2</span><br><span class="line">	JMP	OVER</span><br><span class="line">LOC2:</span><br><span class="line">	CMP	BUF[2][SI], &#x27;a&#x27;</span><br><span class="line">	JL	LOC3</span><br><span class="line">	CMP	BUF[2][SI], &#x27;z&#x27;</span><br><span class="line">	JG	LOC3</span><br><span class="line">	INC	N2</span><br><span class="line">	JMP	OVER</span><br><span class="line">LOC3:</span><br><span class="line">	INC	N3</span><br><span class="line">OVER:</span><br><span class="line">	INC	SI</span><br><span class="line">	CMP	SI, CX</span><br><span class="line">	JLE	NEXT</span><br><span class="line"></span><br><span class="line">	; 显示结果提示信息</span><br><span class="line">	MOV	AH, 09H</span><br><span class="line">	MOV	DX, OFFSET Msg2</span><br><span class="line">	INT	21H</span><br><span class="line">	; 输出 数字 个数</span><br><span class="line">	MOV	AH, 02H</span><br><span class="line">	MOV	BL, N1</span><br><span class="line">	ADD	BL,30H</span><br><span class="line">	MOV	DL, BL</span><br><span class="line">	INT	21H</span><br><span class="line">	; 显示结果提示信息</span><br><span class="line">	MOV	AH, 09H</span><br><span class="line">	MOV	DX, OFFSET Msg3</span><br><span class="line">	INT	21H</span><br><span class="line">	; 输出 字母 个数</span><br><span class="line">	MOV	AH, 02H</span><br><span class="line">	MOV	BL, N2</span><br><span class="line">	ADD	BL,30H</span><br><span class="line">	MOV	DL, BL</span><br><span class="line">	INT	21H</span><br><span class="line">	; 显示结果提示信息</span><br><span class="line">	MOV	AH, 09H</span><br><span class="line">	MOV	DX, OFFSET Msg4</span><br><span class="line">	INT	21H</span><br><span class="line">	; 输出 其他 格式</span><br><span class="line">	MOV	AH, 02H</span><br><span class="line">	MOV	BL, N3</span><br><span class="line">	ADD	BL,30H</span><br><span class="line">	MOV	DL, BL</span><br><span class="line">	INT	21H</span><br><span class="line">	</span><br><span class="line">	MOV	AX,4C00H	; 退出</span><br><span class="line">	INT	21H </span><br><span class="line"></span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END Start</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="5-找出最大偶数">5. 找出最大偶数</h4>
<ul>
<li>
<p>题目</p>
<p>编一汇编语言程序，找出首地址为DATA的N个<strong>字</strong>数组中的<strong>最大偶数</strong>，并将该最大偶数按十六进制显示出来。</p>
<p>（前面给出的<code>DISPBX.ASM</code>作为本题目的子模块，连接使用即可。）</p>
</li>
<li>
<p>代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_DATA	SEGMENT  PUBLIC</span><br><span class="line">DATA  	DW      	1234H,5678H,9D4CH,0D7H,0,-1,7D2AH,8A0EH,10F5H,645DH</span><br><span class="line">N   	EQU     	($-DATA)/2</span><br><span class="line">MAX	DW	?</span><br><span class="line">_DATA	ENDS</span><br><span class="line"></span><br><span class="line">EXTRN	DISPBX:FAR</span><br><span class="line"></span><br><span class="line">_TEXT	SEGMENT  PUBLIC</span><br><span class="line">	ASSUME CS: _TEXT, DS: _DATA</span><br><span class="line"></span><br><span class="line">; 主程序，求出最大偶数，存放在BX</span><br><span class="line">_MAIN	PROC	FAR</span><br><span class="line">	PUSH	DS</span><br><span class="line">	MOV	AX,0</span><br><span class="line">	PUSH	AX</span><br><span class="line">	MOV	AX, _DATA</span><br><span class="line">	MOV	DS, AX</span><br><span class="line">	; 主程序内容</span><br><span class="line">	; 初始化</span><br><span class="line">	MOV	CX, N-1</span><br><span class="line">	MOV	BX, OFFSET DATA -2 </span><br><span class="line">INIT:</span><br><span class="line">	INC	BX</span><br><span class="line">	INC	BX</span><br><span class="line">	TEST	WORD PTR [BX], 0001H	; 只取最低1位判断是否为偶数</span><br><span class="line">	JNZ	INIT			; 不是偶数，则直接进行下一个判断</span><br><span class="line">	MOV	AX, [BX]</span><br><span class="line">	MOV	BX, OFFSET DATA</span><br><span class="line">	; 比较大小</span><br><span class="line">AGAIN:</span><br><span class="line">	INC	BX			; 注意这里要BX+2，自增两次</span><br><span class="line">	INC	BX</span><br><span class="line">	TEST	WORD PTR [BX], 0001H	; 只取最低1位判断是否为偶数</span><br><span class="line">	JNZ	NEXT			; 不是偶数，则直接进行下一个判断</span><br><span class="line">	CMP	AX, [BX]			</span><br><span class="line">	JGE	NEXT</span><br><span class="line">	MOV	AX,[BX]</span><br><span class="line">NEXT:</span><br><span class="line">	LOOP	AGAIN</span><br><span class="line">	MOV	MAX, AX		; 结束循环，得到最大偶数，准备输出</span><br><span class="line">	; 调用子程序</span><br><span class="line">	MOV	BX, MAX</span><br><span class="line">	CALL	DISPBX</span><br><span class="line">	; 退出</span><br><span class="line">	RETF</span><br><span class="line">_MAIN	ENDP</span><br><span class="line">_TEXT	ENDS</span><br><span class="line">	END _MAIN</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>大学课程</category>
      </categories>
      <tags>
        <tag>汇编语言Assembly</tag>
      </tags>
  </entry>
  <entry>
    <title>《Django》入门 Notes（中）</title>
    <url>/butterflyblog/2023/06/02/%E3%80%8ADjango%E3%80%8B%E5%85%A5%E9%97%A8%20Notes%EF%BC%88%E4%B8%AD%EF%BC%89/</url>
    <content><![CDATA[<h1>《Django》入门 Notes（中）</h1>
<p>@Seymour0314 来源官方文档<code>https://docs.djangoproject.com/zh-hans/4.2/intro/</code></p>
<blockquote>
<p>本文是Django 后端技术初级入门教程。</p>
<p>编程语言：Python</p>
</blockquote>
<h2 id="第-3-部分">第 3 部分</h2>
<blockquote>
<p>本教程从 教程2结束的地方开始。我们将继续开发网络投票应用程序，并将着重于创建公共接口——“视图”。</p>
</blockquote>
<h3 id="3-1-概况">3.1 概况</h3>
<ul>
<li>
<p>Django 中的视图的概念是「<strong>一类具有相同功能和模板的网页的集合</strong>」。</p>
<blockquote>
<p>比如，在一个博客应用中，你可能会创建如下几个视图：</p>
<ul>
<li>博客首页——展示最近的几项内容。</li>
<li>内容“详情”页——详细展示某项内容。</li>
<li>以年为单位的归档页——展示选中的年份里各个月份创建的内容。</li>
<li>以月为单位的归档页——展示选中的月份里各天创建的内容。</li>
<li>以天为单位的归档页——展示选中天里创建的所有内容。</li>
<li>评论处理器——用于响应为一项内容添加评论的操作。</li>
</ul>
<p>而在我们的投票应用中，我们需要下列几个视图：</p>
<ul>
<li>问题索引页——展示最近的几个投票问题。</li>
<li>问题详情页——展示某个投票的问题和不带结果的选项列表。</li>
<li>问题结果页——展示某个投票的结果。</li>
<li>投票处理器——用于响应用户为某个问题的特定选项投票的操作。</li>
</ul>
</blockquote>
</li>
<li>
<p>在 Django 中，网页和其他内容都是从视图派生而来。</p>
<p>每一个视图表现为一个 Python 函数（或者说方法，如果是在基于类的视图里的话）。</p>
<p>Django 将会根据用户请求的 URL 来选择使用哪个视图（更准确的说，是根据 URL 中域名之后的部分）。</p>
<blockquote>
<p>在你上网的过程中，很可能看见过像这样美丽的 URL：</p>
<p><code>ME2/Sites/dirmod.htm?sid=&amp;type=gen&amp;mod=Core+Pages&amp;gid=A6CD4967199A42D9B65B1B</code></p>
<p>别担心，Django 里的 <em>URL 样式</em> 要比这优雅的多！</p>
</blockquote>
</li>
<li>
<p>URL 样式是 URL 的一般形式</p>
<blockquote>
<p>例如：<code>/newsarchive/&lt;year&gt;/&lt;month&gt;/</code>。</p>
</blockquote>
</li>
<li>
<p>为了将 URL 和视图关联起来，Django 使用了 ‘URLconfs’ 来配置。</p>
<p>URLconf 将 URL 模式映射到视图。</p>
<blockquote>
<p>本教程只会介绍 URLconf 的基础内容，你可以看看 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/http/urls/">URL调度器</a> 以获取更多内容。</p>
</blockquote>
</li>
</ul>
<h3 id="3-2-编写更多视图">3.2 编写更多视图</h3>
<ul>
<li>
<p>现在让我们向 <code>polls/views.py</code> 里添加更多视图。</p>
<p>这些视图有一些不同，因为他们接收参数：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">detail</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;You&#x27;re looking at question %s.&quot;</span> % question_id)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">results</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    response = <span class="string">&quot;You&#x27;re looking at the results of question %s.&quot;</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(response % question_id)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vote</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;You&#x27;re voting on question %s.&quot;</span> % question_id)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>把这些新视图添加进 <code>polls.urls</code> 模块里，</p>
<p>只要添加几个 <code>url()</code> 函数调用就行：</p>
<p><code>polls/urls.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># ex: /polls/</span></span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, views.index, name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">    <span class="comment"># ex: /polls/5/</span></span><br><span class="line">    path(<span class="string">&quot;&lt;int:question_id&gt;/&quot;</span>, views.detail, name=<span class="string">&quot;detail&quot;</span>),</span><br><span class="line">    <span class="comment"># ex: /polls/5/results/</span></span><br><span class="line">    path(<span class="string">&quot;&lt;int:question_id&gt;/results/&quot;</span>, views.results, name=<span class="string">&quot;results&quot;</span>),</span><br><span class="line">    <span class="comment"># ex: /polls/5/vote/</span></span><br><span class="line">    path(<span class="string">&quot;&lt;int:question_id&gt;/vote/&quot;</span>, views.vote, name=<span class="string">&quot;vote&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>查看效果</p>
<p>然后看看你的浏览器，如果你转到 “/polls/34/” ，Django 将会运行 <code>detail()</code> 方法并且展示你在 URL 里提供的问题 ID。</p>
<p>再试试 “/polls/34/vote/” 和 “/polls/34/vote/” ——你将会看到暂时用于占位的结果和投票页。</p>
<blockquote>
<p>记得先开服务器运行<code>py manage.py runserver</code></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511195955371.png" alt="image-20230511195955371" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511200013525.png" alt="image-20230511200013525" style="zoom: 67%;" /> 
<blockquote>
<ul>
<li>
<p>问题 <code>question_id=34</code> 来自 <code>&lt;int:question_id&gt;</code>。</p>
<p>使用尖括号 “获得” 网址部分后发送给视图函数作为一个关键字参数。</p>
</li>
<li>
<p>字符串的 <code>question_id</code> 部分定义了要使用的名字，用来识别相匹配的模式，</p>
<p>而 <code>int</code> 部分是一种转换形式，用来确定应该匹配网址路径的什么模式。</p>
<p>冒号 (<code>:</code>) 用来分隔转换形式和模式名。</p>
</li>
</ul>
</blockquote>
</blockquote>
</li>
</ul>
<h3 id="3-3-写一个真正有用的视图">3.3 写一个真正有用的视图</h3>
<blockquote>
<ul>
<li>
<p>每个视图必须要做的只有两件事：</p>
<ul>
<li>返回一个包含被请求页面内容的 <code>HttpResponse</code> 对象，</li>
<li>或者抛出一个异常，比如 <code>Http404</code>。</li>
</ul>
<p>至于你还想干些什么，随便你。</p>
</li>
<li>
<p>你的视图</p>
<ul>
<li>
<p>可以从数据库里读取记录</p>
</li>
<li>
<p>可以使用一个模板引擎（比如 Django 自带的，或者其他第三方的）</p>
</li>
<li>
<p>可以生成一个 PDF 文件</p>
</li>
<li>
<p>可以输出一个 XML</p>
</li>
<li>
<p>创建一个 ZIP 文件</p>
</li>
</ul>
<p>你可以做任何你想做的事，使用任何你想用的 Python 库。</p>
</li>
</ul>
</blockquote>
<ul>
<li>
<p>Django 只要求返回的是一个 <code>HttpResponse</code> ，或者抛出一个异常。</p>
<blockquote>
<p>因为 Django 自带的数据库 API 很方便，我们曾在 教程第 2 部分中学过，所以我们试试在视图里使用它。</p>
</blockquote>
</li>
<li>
<p>我们在 <code>index()</code> 函数里插入了一些新内容，</p>
<p>让它能展示数据库里以发布日期排序的最近 5 个投票问题，以空格分割：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">&quot;-pub_date&quot;</span>)[:<span class="number">5</span>]</span><br><span class="line">    output = <span class="string">&quot;, &quot;</span>.join([q.question_text <span class="keyword">for</span> q <span class="keyword">in</span> latest_question_list])</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(output)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Leave the rest of the views (detail, results, vote) unchanged</span></span><br></pre></td></tr></table></figure>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511205742413.png" alt="image-20230511205742413" style="zoom:80%;" /> 
<p>这里有个问题：页面的设计写死在视图函数的代码里的。</p>
<p>如果你想改变页面的样子，你需要编辑 Python 代码。</p>
<p>所以让我们使用 Django 的模板系统，只要创建一个视图，就可以将页面的设计从代码中分离出来。</p>
</blockquote>
</li>
<li>
<p>首先，在你的 <code>polls</code> 目录里创建一个 <code>templates</code> 目录。</p>
<p>Django 将会在这个目录里查找模板文件。</p>
<blockquote>
<ul>
<li>
<p>你项目的 <code>TEMPLATES</code> 配置项描述了 Django 如何载入和渲染模板。</p>
</li>
<li>
<p>默认的设置文件设置了 <code>DjangoTemplates</code> 后端，并将 <code>APP_DIRS</code> 设置成了 True。</p>
<p>这一选项将会让 <code>DjangoTemplates</code> 在每个 <code>INSTALLED_APPS</code> 文件夹中寻找 “templates” 子目录。</p>
<p>这就是为什么尽管我们没有像在第二部分中那样修改 DIRS 设置，Django 也能正确找到 polls 的模板位置的原因。</p>
</li>
</ul>
</blockquote>
<p>在你刚刚创建的 <code>templates</code> 目录里，再创建一个目录 <code>polls</code>，然后在其中新建一个文件 <code>index.html</code> 。</p>
<p><code>polls/templates/polls/index.html</code></p>
<blockquote>
<p>换句话说，你的模板文件的路径应该是 <code>polls/templates/polls/index.html</code> 。</p>
<p>因为<code>app_directories</code> 模板加载器是通过上述描述的方法运行的，</p>
<p>所以 Django 可以引用到 <code>polls/index.html</code> 这一模板了。</p>
<blockquote>
<ul>
<li>
<p>模板命名空间</p>
<p>虽然我们现在可以将模板文件直接放在 <code>polls/templates</code> 文件夹中（而不是再建立一个 <code>polls</code> 子文件夹），但是这样做不太好。</p>
<p>Django 将会选择第一个匹配的模板文件，如果你有一个模板文件正好和另一个应用中的某个模板文件重名，Django 没有办法 <em>区分</em> 它们。</p>
<p>我们需要帮助 Django 选择正确的模板，最好的方法就是把他们放入各自的 <em>命名空间</em> 中，也就是把这些模板放入一个和 <em>自身</em> 应用重名的子文件夹里。</p>
</li>
</ul>
</blockquote>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if latest_question_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for question in latest_question_list %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/polls/&#123;&#123; question.id &#125;&#125;/&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>No polls are available.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>备注</p>
<p>为了让教程看起来不那么长，所有的模板文件都只写出了核心代码。</p>
<p>在你自己创建的项目中，你应该使用 完整的 HTML 文档 。</p>
<blockquote>
<p>本次的完整HTML：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>POLLS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Polls:<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% if latest_question_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for question in latest_question_list %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/polls/&#123;&#123; question.id &#125;&#125;/&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>No polls are available.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
</li>
<li>
<p>然后，让我们更新一下 <code>polls/views.py</code> 里的 <code>index</code> 视图来使用模板：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.template <span class="keyword">import</span> loader</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">&quot;-pub_date&quot;</span>)[:<span class="number">5</span>]</span><br><span class="line">    template = loader.get_template(<span class="string">&quot;polls/index.html&quot;</span>)</span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">&quot;latest_question_list&quot;</span>: latest_question_list,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(template.render(context, request))</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>
<p>上述代码的作用是，载入 <code>polls/index.html</code> 模板文件，并且向它传递一个上下文(context)。这个上下文是一个字典，它将模板内的变量映射为 Python 对象。</p>
</li>
<li>
<p>用你的浏览器访问 “/polls/” ，你将会看见一个无序列表，列出了我们在 <a href="https://docs.djangoproject.com/zh-hans/4.2/intro/tutorial02/">教程第 2 部分</a> 中添加的 “What’s up” 投票问题，链接指向这个投票的详情页。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511205932031.png" alt="image-20230511205932031" style="zoom:80%;" /> 
</blockquote>
</li>
</ul>
<h4 id="一个快捷函数：-render">一个快捷函数： <code>render()</code></h4>
<ul>
<li>
<p>「<strong>载入模板，填充上下文，再返回由它生成的 <code>HttpResponse</code>对象</strong>」</p>
<p>是一个非常常用的操作流程。</p>
</li>
<li>
<p>于是 Django 提供了一个快捷函数，</p>
<p>我们用它来重写 <code>index()</code> 视图：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">&quot;-pub_date&quot;</span>)[:<span class="number">5</span>]</span><br><span class="line">    context = &#123;<span class="string">&quot;latest_question_list&quot;</span>: latest_question_list&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;polls/index.html&quot;</span>, context)</span><br></pre></td></tr></table></figure>
<p>注意到，我们不再需要导入 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/templates/#module-django.template.loader"><code>loader</code></a> 和 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/request-response/#django.http.HttpResponse"><code>HttpResponse</code></a> 。</p>
<p>不过如果你还有其他函数（比如说 <code>detail</code>, <code>results</code>, 和 <code>vote</code> ）需要用到它的话，</p>
<p>就需要保持 <code>HttpResponse</code> 的导入。</p>
</li>
</ul>
<h3 id="3-4-抛出-404-错误">3.4 抛出 404 错误</h3>
<ul>
<li>
<p>现在，我们来处理投票详情视图——它会显示指定投票的问题标题。下面是这个视图的代码：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> Http404</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detail</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        question = Question.objects.get(pk=question_id)</span><br><span class="line">    <span class="keyword">except</span> Question.DoesNotExist:</span><br><span class="line">        <span class="keyword">raise</span> Http404(<span class="string">&quot;Question does not exist&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;polls/detail.html&quot;</span>, &#123;<span class="string">&quot;question&quot;</span>: question&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>这里有个新原则。</p>
<p>如果指定问题 ID 所对应的问题不存在，这个视图就会抛出一个 <code>Http404</code> 异常。</p>
<blockquote>
<p>我们稍后再讨论你需要在 <code>polls/detail.html</code> 里输入什么，</p>
<p>但是如果你想试试上面这段代码是否正常工作的话，</p>
<p>你可以暂时把下面这段输进去：</p>
<p><code>polls/templates/polls/details.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>POLLS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Polls:<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;&#123; question &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511211221223.png" alt="image-20230511211221223" style="zoom:67%;" /> 
<p>这样你就能测试了。</p>
<p>比如，测试<code>127.0.0.1:8000/polls/34/details/</code></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511211519781.png" alt="image-20230511211519781" style="zoom:67%;" /> 
</blockquote>
</li>
</ul>
<h4 id="一个快捷函数：-get-object-or-404">一个快捷函数： <code>get_object_or_404()</code></h4>
<ul>
<li>
<p>尝试用 <code>get()</code>函数获取一个对象，如果不存在就抛出 <code>Http404</code>错误也是一个普遍的流程。</p>
<p>Django 也提供了一个快捷函数，下面是修改后的详情 <code>detail()</code> 视图代码：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detail</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;polls/detail.html&quot;</span>, &#123;<span class="string">&quot;question&quot;</span>: question&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511212237975.png" alt="image-20230511212237975" style="zoom: 67%;" /> 
</blockquote>
<blockquote>
<p>设计哲学</p>
<ul>
<li>
<p>为什么我们使用辅助函数 <code>get_object_or_404()</code>而不是自己捕获 <code>ObjectDoesNotExist</code> 异常呢？</p>
<p>还有，为什么模型 API 不直接抛出 <code>ObjectDoesNotExist</code>而是抛出 <code>Http404</code>呢？</p>
</li>
<li>
<p>因为这样做会增加模型层和视图层的耦合性。</p>
<p>指导 Django 设计的最重要的思想之一就是要保证松散耦合。</p>
<p>一些受控的耦合将会被包含在 <code>django.shortcuts</code> 模块中。</p>
</li>
</ul>
</blockquote>
</li>
<li>
<p>也有 <code>get_list_or_404()</code>函数，</p>
<p>工作原理和 <code>get_object_or_404()</code> 一样，除了 <code>get()</code> 函数被换成了 <code>filter()</code> 函数。</p>
<p>如果列表为空的话会抛出 <code>Http404</code>异常。</p>
</li>
</ul>
<h3 id="3-5-使用模板系统">3.5 使用模板系统</h3>
<ul>
<li>
<p>回过头去看看我们的 <code>detail()</code> 视图。它向模板传递了上下文变量 <code>question</code> 。</p>
<p>下面是 <code>polls/detail.html</code> 模板里正式的代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% for choice in question.choice_set.all %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; choice.choice_text &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>模板系统统一使用点符号来访问变量的属性。</p>
<blockquote>
<p>在示例 <code>&#123;&#123; question.question_text &#125;&#125;</code> 中，</p>
<ul>
<li>
<p>首先 Django 尝试对 <code>question</code> 对象使用字典查找（也就是使用 obj.get(str) 操作），</p>
</li>
<li>
<p>如果失败了就尝试属性查找（也就是 obj.str 操作），结果是成功了。</p>
</li>
<li>
<p>如果这一操作也失败的话，将会尝试列表查找（也就是 obj[int] 操作）。</p>
</li>
</ul>
</blockquote>
</li>
<li>
<p>在 <code>&#123;% for %&#125;</code>循环中发生的函数调用：</p>
<p><code>question.choice_set.all</code> 被解释为 Python 代码 <code>question.choice_set.all()</code> ，</p>
<p>将会返回一个可迭代的 <code>Choice</code> 对象，这一对象可以在 <code>&#123;% for %&#125;</code> 标签内部使用。</p>
<blockquote>
<p>查看 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/templates/">模板指南</a> 可以了解关于模板的更多信息。</p>
</blockquote>
</li>
</ul>
<h3 id="3-6-去除模板中的硬编码-URL">3.6 去除模板中的硬编码 URL</h3>
<ul>
<li>
<p>还记得吗，我们在 <code>polls/index.html</code> 里编写投票链接时，链接是硬编码的：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/polls/&#123;&#123; question.id &#125;&#125;/&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>问题在于，硬编码和强耦合的链接，对于一个包含很多应用的项目来说，修改起来是十分困难的。</p>
</li>
<li>
<p>然而，因为你在 <code>polls.urls</code> 的 <code>url()</code> 函数中通过 name 参数为 URL 定义了名字，</p>
<p>你可以使用 <code>&#123;% url %&#125;</code> 标签代替它：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;detail&#x27; question.id %&#125;&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这个标签的工作方式是在 <code>polls.urls</code> 模块的 URL 定义中寻具有指定名字的条目。</p>
<p>你可以回忆一下，具有名字 ‘detail’ 的 URL 是在如下语句中定义的：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># the &#x27;name&#x27; value as called by the &#123;% url %&#125; template tag</span></span><br><span class="line">path(<span class="string">&quot;&lt;int:question_id&gt;/&quot;</span>, views.detail, name=<span class="string">&quot;detail&quot;</span>),</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>如果你想改变投票详情视图的 URL，比如想改成 <code>polls/specifics/12/</code> ，</p>
<p>你不用在模板里修改任何东西（包括其它模板），</p>
<p>只要在 <code>polls/urls.py</code> 里稍微修改一下就行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># added the word &#x27;specifics&#x27;</span></span><br><span class="line">path(<span class="string">&quot;specifics/&lt;int:question_id&gt;/&quot;</span>, views.detail, name=<span class="string">&quot;detail&quot;</span>),</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-7-为-URL-名称添加命名空间">3.7 为 URL 名称添加命名空间</h3>
<ul>
<li>
<p>教程项目只有一个应用，<code>polls</code> 。在一个真实的 Django 项目中，可能会有五个，十个，二十个，甚至更多应用。Django 如何分辨重名的 URL 呢？</p>
<p>举个例子，<code>polls</code> 应用有 <code>detail</code> 视图，可能另一个博客应用也有同名的视图。</p>
<p>Django 如何知道 <code>&#123;% url %&#125;</code> 标签到底对应哪一个应用的 URL 呢？</p>
</li>
<li>
<p>答案是：在根 URLconf 中添加命名空间。在 <code>polls/urls.py</code> 文件中稍作修改，加上 <code>app_name</code> 设置命名空间：</p>
<p><code>polls/urls.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">&quot;polls&quot;</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, views.index, name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;&lt;int:question_id&gt;/&quot;</span>, views.detail, name=<span class="string">&quot;detail&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;&lt;int:question_id&gt;/results/&quot;</span>, views.results, name=<span class="string">&quot;results&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;&lt;int:question_id&gt;/vote/&quot;</span>, views.vote, name=<span class="string">&quot;vote&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>现在，编辑 <code>polls/index.html</code> 文件，从：</p>
<p><code>polls/templates/polls/index.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;detail&#x27; question.id %&#125;&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修改为指向具有命名空间的详细视图：</p>
<p><code>polls/templates/polls/index.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;polls:detail&#x27; question.id %&#125;&quot;</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511214221490.png" alt="image-20230511214221490" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511214234075.png" alt="image-20230511214234075" style="zoom:80%;" /> 
<p>当你对你写的视图感到满意后，请阅读 教程的第 4 部分了解基础的表单处理和通用视图。</p>
</blockquote>
<h2 id="第-4-部分">第 4 部分</h2>
<blockquote>
<p>本教程从 教程第 3 部分 结束的地方开始。我们将继续网络投票的应用，并将重点放在表单处理和精简我们的代码上。</p>
</blockquote>
<h3 id="4-1-编写一个简单的表单">4.1 编写一个简单的表单</h3>
<ul>
<li>
<p>让我们更新一下在上一个教程中编写的投票详细页面的模板 (“polls/detail.html”) ，</p>
<p>让它包含一个 HTML <code>&lt;form&gt;</code> 元素：</p>
<p><code>polls/templates/polls/detail.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&#123;% url &#x27;polls:vote&#x27; question.id %&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">&#123;% csrf_token %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">legend</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">    &#123;% if error_message %&#125;<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; error_message &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#123;% endif %&#125;</span><br><span class="line">    &#123;% for choice in question.choice_set.all %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;choice&quot;</span> <span class="attr">id</span>=<span class="string">&quot;choice&#123;&#123; forloop.counter &#125;&#125;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; choice.id &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;choice&#123;&#123; forloop.counter &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; choice.choice_text &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Vote&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>简要说明：</p>
<ul>
<li>
<p>上面的模板在 Question 的每个 Choice 前添加一个单选按钮。</p>
<blockquote>
<p>每个单选按钮的 <code>value</code> 属性是对应的各个 Choice 的 ID。每个单选按钮的 <code>name</code> 是 <code>&quot;choice&quot;</code> 。这意味着，当有人选择一个单选按钮并提交表单提交时，它将发送一个 POST 数据 <code>choice=#</code> ，其中# 为选择的 Choice 的 ID。这是 HTML 表单的基本概念。</p>
</blockquote>
</li>
<li>
<p>我们将表单的 <code>action</code> 设置为 <code>&#123;% url 'polls:vote' question.id %&#125;</code>，并设置 <code>method=&quot;post&quot;</code>。</p>
<blockquote>
<p>使用 <code>method=&quot;post&quot;</code> （而不是 <code>method=&quot;get&quot;</code> ）是非常重要的，因为提交这个表单的行为将改变服务器端的数据。当你创建一个改变服务器端数据的表单时，使用 <code>method=&quot;post&quot;</code>。</p>
<p>这不是 Django 的特定技巧；这是优秀的网站开发技巧。</p>
</blockquote>
</li>
<li>
<p><code>forloop.counter</code> 指示 <code>for</code>标签已经循环多少次。</p>
</li>
<li>
<p>由于我们创建一个 POST 表单（它具有修改数据的作用），所以我们需要小心跨站点请求伪造。</p>
<blockquote>
<p>谢天谢地，你不必太过担心，因为 Django 自带了一个非常有用的防御系统。</p>
<p>简而言之，所有针对内部 URL 的 POST 表单都应该使用 <code>&#123;% csrf_token %&#125;</code> 模板标签。</p>
</blockquote>
</li>
</ul>
</blockquote>
</li>
<li>
<p>现在，让我们来创建一个 Django 视图来处理提交的数据。</p>
<p>记住，在 教程第 3 部分中，我们为投票应用创建了一个 URLconf ，包含这一行：</p>
<p><code>polls/urls.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path(<span class="string">&quot;&lt;int:question_id&gt;/vote/&quot;</span>, views.vote, name=<span class="string">&quot;vote&quot;</span>),</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>我们还创建了一个 <code>vote()</code> 函数的虚拟实现。</p>
<p>让我们来创建一个真实的版本。 将下面的代码添加到 <code>polls/views.py</code> ：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse, HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vote</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        selected_choice = question.choice_set.get(pk=request.POST[<span class="string">&quot;choice&quot;</span>])</span><br><span class="line">    <span class="keyword">except</span> (KeyError, Choice.DoesNotExist):</span><br><span class="line">        <span class="comment"># Redisplay the question voting form.</span></span><br><span class="line">        <span class="keyword">return</span> render(</span><br><span class="line">            request,</span><br><span class="line">            <span class="string">&quot;polls/detail.html&quot;</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;question&quot;</span>: question,</span><br><span class="line">                <span class="string">&quot;error_message&quot;</span>: <span class="string">&quot;You didn&#x27;t select a choice.&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        selected_choice.votes += <span class="number">1</span></span><br><span class="line">        selected_choice.save()</span><br><span class="line">        <span class="comment"># Always return an HttpResponseRedirect after successfully dealing</span></span><br><span class="line">        <span class="comment"># with POST data. This prevents data from being posted twice if a</span></span><br><span class="line">        <span class="comment"># user hits the Back button.</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">&quot;polls:results&quot;</span>, args=(question.<span class="built_in">id</span>,)))</span><br></pre></td></tr></table></figure>
<blockquote>
<p>以上代码中有些内容还未在本教程中提到过：</p>
<ul>
<li>
<p><code>request.POST</code>是一个类字典对象，让你可以通过关键字的名字获取提交的数据。</p>
<p>这个例子中， <code>request.POST['choice']</code> 以字符串形式返回选择的 Choice 的 ID。</p>
<p><code>request.POST</code> 的值永远是字符串。</p>
<p>注意，Django 还以同样的方式提供 <code>request.GET</code> 用于访问 GET 数据</p>
<p>但我们在代码中显式地使用 <code>request.POST</code>，以保证数据只能通过 POST 调用改动。</p>
</li>
<li>
<p>如果在 <code>request.POST['choice']</code> 数据中没有提供 <code>choice</code> ， POST 将引发一个 <code>KeyError</code> 。</p>
<p>上面的代码检查 <code>KeyError</code>，如果没有给出 <code>choice</code> 将重新显示 Question 表单和一个错误信息。</p>
</li>
<li>
<p>在增加 Choice 的得票数之后，代码返回一个 <code>HttpResponseRedirect</code>而不是常用的 <code>HttpResponse</code>。</p>
<p><code>HttpResponseRedirect</code>只接收一个参数：用户将要被<strong>重定向</strong>的 URL。</p>
<p>（请继续看下去，我们将会解释如何构造这个例子中的 URL）</p>
<blockquote>
<p>正如上面的 Python 注释指出的，在成功处理 POST 数据后，你应该总是返回一个 <code>HttpResponseRedirect</code>。</p>
<p>这不是 Django 的特殊要求，这是那些优秀网站在开发实践中形成的共识。</p>
</blockquote>
</li>
<li>
<p>在这个例子中，我们在 <code>HttpResponseRedirect</code>的构造函数中使用 <code>reverse()</code> 函数。</p>
<p>这个函数避免了我们在视图函数中硬编码 URL。它需要我们给出我们想要跳转的视图的名字和该视图所对应的 URL 模式中需要给该视图提供的参数。</p>
<p>在本例中，使用在 教程第 3 部分中设定的 URLconf， <code>reverse()</code> 调用将返回一个这样的字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;/polls/3/results/&quot;</span></span><br></pre></td></tr></table></figure>
<p>其中 <code>3</code> 是 <code>question.id</code> 的值。重定向的 URL 将调用 <code>'results'</code> 视图来显示最终的页面。</p>
<blockquote>
<p>正如在 教程第 3 部分 中提到的，<code>HttpRequest</code> 是一个 <code>HttpRequest</code> 对象。</p>
<p>更多关于 <code>HttpRequest</code> 对象的内容，请参见 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/request-response/">请求和响应的文档</a> 。</p>
</blockquote>
</li>
</ul>
</blockquote>
</li>
<li>
<p>当有人对 Question 进行投票后，</p>
<p><code>vote()</code> 视图将请求重定向到 Question 的结果界面。</p>
<p>让我们来编写这个视图：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">results</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;polls/results.html&quot;</span>, &#123;<span class="string">&quot;question&quot;</span>: question&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这和 教程第 3 部分 中的 <code>detail()</code> 视图几乎一模一样。唯一的不同是模板的名字。 我们将在稍后解决这个冗余问题。</p>
</blockquote>
</li>
<li>
<p>现在，创建一个 <code>polls/results.html</code> 模板：</p>
<p><code>polls/templates/polls/results.html</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;&#123;&#123; question.question_text &#125;&#125;&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&#123;% <span class="keyword">for</span> choice <span class="keyword">in</span> question.choice_set.<span class="built_in">all</span> %&#125;</span><br><span class="line">    &lt;li&gt;&#123;&#123; choice.choice_text &#125;&#125; -- &#123;&#123; choice.votes &#125;&#125; vote&#123;&#123; choice.votes|pluralize &#125;&#125;&lt;/li&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href=<span class="string">&quot;&#123;% url &#x27;polls:detail&#x27; question.id %&#125;&quot;</span>&gt;Vote again?&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>现在，在你的浏览器中访问 <code>/polls/1/</code> 然后为 Question 投票。</p>
<p>你应该看到一个投票结果页面，并且在你每次投票之后都会更新。</p>
<p>如果你提交时没有选择任何 Choice，你应该看到错误信息。</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511221043107.png" alt="image-20230511221043107" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511221102738.png" alt="image-20230511221102738" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511221121194.png" alt="image-20230511221121194" style="zoom: 67%;" /> 
</blockquote>
<ul>
<li>
<p>备注</p>
<p>我们的 <code>vote()</code> 视图代码有一个小问题。</p>
<p>代码首先从数据库中获取了 <code>selected_choice</code> 对象，接着计算 <code>vote</code> 的新值，最后把值存回数据库。</p>
<p>如果网站有两个方可同时投票在 <em>同一时间</em> ，可能会导致问题。同样的值，42，会被 <code>votes</code> 返回。然后，对于两个用户，新值43计算完毕，并被保存，但是期望值是44。</p>
<blockquote>
<p>这个问题被称为 <em>竞争条件</em> 。如果你对此有兴趣，你可以阅读 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/models/expressions/#avoiding-race-conditions-using-f">使用 F() 避免竞争条件</a> 来学习如何解决这个问题。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="4-2-使用通用视图：代码还是少点好">4.2 使用通用视图：代码还是少点好</h3>
<ul>
<li>
<p><code>detail()</code> （在 教程第 3 部分 中）和 <code>results()</code> 视图都很精简</p>
<p>并且，像上面提到的那样，存在冗余问题。用来显示一个投票列表的 <code>index()</code> 视图（也在 教程第 3 部分中）和它们类似。</p>
</li>
<li>
<p>这些视图反映基本的网络开发中的一个常见情况：</p>
<p>根据 URL 中的参数从数据库中获取数据、载入模板文件然后返回渲染后的模板。</p>
</li>
<li>
<p>由于这种情况特别常见，Django 提供一种快捷方式，叫做 <strong>“通用视图” 系统</strong>。</p>
<p>通用视图将常见的模式抽象化，可以使你在编写应用时甚至不需要编写Python代码。</p>
<p>让我们将我们的投票应用转换成使用通用视图系统，这样我们可以删除许多我们的代码。我们仅仅需要做以下几步来完成转换，我们将：</p>
<ol>
<li>转换 URLconf。</li>
<li>删除一些旧的、不再需要的视图。</li>
<li>基于 Django 的通用视图引入新的视图。</li>
</ol>
<p>请继续阅读来了解详细信息。</p>
<blockquote>
<p>为什么要重构代码？</p>
<p>一般来说，当编写一个 Django 应用时，你应该先评估一下通用视图是否可以解决你的问题，你应该在一开始使用它，而不是进行到一半时重构代码。本教程目前为止是有意将重点放在以“艰难的方式”编写视图，这是为将重点放在核心概念上。</p>
<p>就像在使用计算器之前你需要掌握基础数学一样。</p>
</blockquote>
</li>
</ul>
<h3 id="4-3-改良-URLconf">4.3 改良 URLconf</h3>
<ul>
<li>
<p>首先，打开 <code>polls/urls.py</code> 这个 URLconf 并将它修改成：</p>
<p><code>polls/urls.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">&quot;polls&quot;</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, views.IndexView.as_view(), name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;&lt;int:pk&gt;/&quot;</span>, views.DetailView.as_view(), name=<span class="string">&quot;detail&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;&lt;int:pk&gt;/results/&quot;</span>, views.ResultsView.as_view(), name=<span class="string">&quot;results&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;&lt;int:question_id&gt;/vote/&quot;</span>, views.vote, name=<span class="string">&quot;vote&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意，第二个和第三个匹配准则中，路径字符串中匹配模式的名称已经由 <code>&lt;question_id&gt;</code> 改为 <code>&lt;pk&gt;</code>。</p>
</blockquote>
</li>
</ul>
<h3 id="4-4-改良视图">4.4 改良视图</h3>
<ul>
<li>
<p>下一步，我们将删除旧的 <code>index</code>, <code>detail</code>, 和 <code>results</code> 视图，并用 Django 的通用视图代替。</p>
<p>打开 <code>polls/views.py</code> 文件，</p>
<blockquote>
<p>原来是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse, HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">&quot;-pub_date&quot;</span>)[:<span class="number">5</span>]</span><br><span class="line">    context = &#123;<span class="string">&quot;latest_question_list&quot;</span>: latest_question_list&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;polls/index.html&quot;</span>, context)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detail</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;polls/detail.html&quot;</span>, &#123;<span class="string">&quot;question&quot;</span>: question&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">results</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;polls/results.html&quot;</span>, &#123;<span class="string">&quot;question&quot;</span>: question&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vote</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        selected_choice = question.choice_set.get(pk=request.POST[<span class="string">&quot;choice&quot;</span>])</span><br><span class="line">    <span class="keyword">except</span> (KeyError, Choice.DoesNotExist):</span><br><span class="line">        <span class="comment"># Redisplay the question voting form.</span></span><br><span class="line">        <span class="keyword">return</span> render(</span><br><span class="line">            request,</span><br><span class="line">            <span class="string">&quot;polls/detail.html&quot;</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;question&quot;</span>: question,</span><br><span class="line">                <span class="string">&quot;error_message&quot;</span>: <span class="string">&quot;You didn&#x27;t select a choice.&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        selected_choice.votes += <span class="number">1</span></span><br><span class="line">        selected_choice.save()</span><br><span class="line">        <span class="comment"># Always return an HttpResponseRedirect after successfully dealing</span></span><br><span class="line">        <span class="comment"># with POST data. This prevents data from being posted twice if a</span></span><br><span class="line">        <span class="comment"># user hits the Back button.</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">&quot;polls:results&quot;</span>, args=(question.<span class="built_in">id</span>,)))</span><br></pre></td></tr></table></figure>
</blockquote>
<p>并将它修改成：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404, render</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"><span class="keyword">from</span> django.views <span class="keyword">import</span> generic</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Choice, Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IndexView</span>(generic.ListView):</span><br><span class="line">    template_name = <span class="string">&quot;polls/index.html&quot;</span></span><br><span class="line">    context_object_name = <span class="string">&quot;latest_question_list&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_queryset</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Return the last five published questions.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> Question.objects.order_by(<span class="string">&quot;-pub_date&quot;</span>)[:<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DetailView</span>(generic.DetailView):</span><br><span class="line">    model = Question</span><br><span class="line">    template_name = <span class="string">&quot;polls/detail.html&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResultsView</span>(generic.DetailView):</span><br><span class="line">    model = Question</span><br><span class="line">    template_name = <span class="string">&quot;polls/results.html&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vote</span>(<span class="params">request, question_id</span>):</span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        selected_choice = question.choice_set.get(pk=request.POST[<span class="string">&quot;choice&quot;</span>])</span><br><span class="line">    <span class="keyword">except</span> (KeyError, Choice.DoesNotExist):</span><br><span class="line">        <span class="comment"># Redisplay the question voting form.</span></span><br><span class="line">        <span class="keyword">return</span> render(</span><br><span class="line">            request,</span><br><span class="line">            <span class="string">&quot;polls/detail.html&quot;</span>,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;question&quot;</span>: question,</span><br><span class="line">                <span class="string">&quot;error_message&quot;</span>: <span class="string">&quot;You didn&#x27;t select a choice.&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        selected_choice.votes += <span class="number">1</span></span><br><span class="line">        selected_choice.save()</span><br><span class="line">        <span class="comment"># Always return an HttpResponseRedirect after successfully dealing</span></span><br><span class="line">        <span class="comment"># with POST data. This prevents data from being posted twice if a</span></span><br><span class="line">        <span class="comment"># user hits the Back button.</span></span><br><span class="line">        <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">&quot;polls:results&quot;</span>, args=(question.<span class="built_in">id</span>,)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>我们在这里使用两个通用视图： <code>ListView</code>和 <code>DetailView</code>。</p>
<p>这两个视图分别抽象“<strong>显示一个对象列表</strong>”和“<strong>显示一个特定类型对象的详细信息页面</strong>”这两种概念。</p>
<ul>
<li>每个通用视图需要知道它将作用于哪个模型。 这由 <code>model</code> 属性提供。</li>
<li><code>DetailView</code>期望从 URL 中捕获名为 <code>&quot;pk&quot;</code> 的主键值，所以我们为通用视图把 <code>question_id</code> 改成 <code>pk</code> 。</li>
</ul>
<p>默认情况下，通用视图 <code>DetailView</code>使用一个叫做 <code>&lt;app name&gt;/&lt;model name&gt;_detail.html</code> 的模板。</p>
<p>在我们的例子中，它将使用 <code>&quot;polls/question_detail.html&quot;</code> 模板。</p>
<ul>
<li>
<p><code>template_name</code> 属性是用来告诉 Django 使用一个指定的模板名字，而不是自动生成的默认名字。</p>
<p>我们也为 <code>results</code> 列表视图指定了 <code>template_name</code> —— 这确保 results 视图和 detail 视图在渲染时具有不同的外观，即使它们在后台都是同一个 <code>DetailView</code>。</p>
</li>
</ul>
<p>类似地，<code>ListView</code>使用一个叫做 <code>&lt;app name&gt;/&lt;model name&gt;_list.html</code> 的默认模板；</p>
<ul>
<li>我们使用 <code>template_name</code> 来告诉 <code>ListView</code>使用我们创建的已经存在的 <code>&quot;polls/index.html&quot;</code> 模板。</li>
</ul>
</li>
<li>
<p>在之前的教程中，提供模板文件时都带有一个包含 <code>question</code> 和 <code>latest_question_list</code> 变量的 context。</p>
<p>对于 <code>DetailView</code> ， <code>question</code> 变量会自动提供—— 因为我们使用 Django 的模型（Question）， Django 能够为 context 变量决定一个合适的名字。</p>
<p>然而对于 ListView， 自动生成的 context 变量是 <code>question_list</code>。为了覆盖这个行为，我们提供 <code>context_object_name</code> 属性，表示我们想使用 <code>latest_question_list</code>。</p>
<p>作为一种替换方案，你可以改变你的模板来匹配新的 context 变量 —— 这是一种更便捷的方法，告诉 Django 使用你想使用的变量名。</p>
</li>
<li>
<p>启动服务器，使用一下基于通用视图的新投票应用。</p>
<blockquote>
<p>效果与前面一样。</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>更多关于通用视图的详细信息，请查看 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/class-based-views/">通用视图的文档</a></p>
<p>当你对你所写的表单和通用视图感到满意后，请阅读 <a href="https://docs.djangoproject.com/zh-hans/4.2/intro/tutorial05/">教程的第 5 部分</a> 来了解如何测试我们的投票应用。</p>
</blockquote>
<h2 id="第-5-部分">第 5 部分</h2>
<blockquote>
<p>本教程从 教程第 4 部分结束的地方开始。我们已经建立了一个网络投票应用程序，现在我们将为它创建一些自动化测试。</p>
</blockquote>
<h3 id="5-1-自动化测试简介">5.1 自动化测试简介</h3>
<h4 id="自动化测试是什么？">自动化测试是什么？</h4>
<ul>
<li>
<p>测试代码，是用来检查你的代码能否正常运行的程序。</p>
</li>
<li>
<p>测试在不同的层次中都存在。有些测试只关注某个很小的细节（某个模型的某个方法的返回值是否满足预期？），而另一些测试可能检查对某个软件的一系列操作（<em>某一用户输入序列是否造成了预期的结果？</em>）。其实这和我们在 教程第 2 部分，里做的并没有什么不同，我们使用 <code>shell</code>来测试某一方法的功能，或者运行某个应用并输入数据来检查它的行为。</p>
</li>
<li>
<p>真正不同的地方在于，<em>自动化</em> 测试是由某个系统帮你自动完成的。当你创建好了一系列测试，每次修改应用代码后，就可以自动检查出修改后的代码是否还像你曾经预期的那样正常工作。你不需要花费大量时间来进行手动测试。</p>
</li>
</ul>
<h4 id="为什么你需要写测试">为什么你需要写测试</h4>
<ul>
<li>
<p>但是，为什么需要测试呢？又为什么是现在呢？</p>
</li>
<li>
<p>你可能觉得学 Python/Django 对你来说已经很满足了，再学一些新东西的话看起来有点负担过重并且没什么必要。毕竟，我们的投票应用看起来已经完美工作了。写一些自动测试并不能让它工作的更好。如果写一个投票应用是你想用 Django 完成的唯一工作，那你确实没必要学写测试。但是如果你还想写更复杂的项目，现在就是学习测试写法的最好时机了。</p>
</li>
<li>
<p>测试将节约你的时间</p>
<blockquote>
<p>在某种程度上，能够「判断出代码是否正常工作」的测试，就称得上是个令人满意的了。在更复杂的应用程序中，组件之间可能会有数十个复杂的交互。</p>
<p>对其中某一组件的改变，也有可能会造成意想不到的结果。判断「代码是否正常工作」意味着你需要用大量的数据来完整的测试全部代码的功能，以确保你的小修改没有对应用整体造成破坏——这太费时间了。</p>
<p>尤其是当你发现自动化测试能在几秒钟之内帮你完成这件事时，就更会觉得手动测试实在是太浪费时间了。当某人写出错误的代码时，自动化测试还能帮助你定位错误代码的位置。</p>
<p>有时候你会觉得，和富有创造性和生产力的业务代码比起来，编写枯燥的测试代码实在是太无聊了，特别是当你知道你的代码完全没有问题的时候。</p>
<p>然而，编写测试还是要比花费几个小时手动测试你的应用，或者为了找到某个小错误而胡乱翻看代码要有意义的多。</p>
</blockquote>
</li>
<li>
<p>测试不仅能发现错误，而且能预防错误</p>
<blockquote>
<p>「测试是开发的对立面」，这种思想是不对的。</p>
<p>如果没有测试，整个应用的行为意图会变得更加的不清晰。甚至当你在看自己写的代码时也是这样，有时候你需要仔细研读一段代码才能搞清楚它有什么用。</p>
<p>而测试的出现改变了这种情况。测试就好像是从内部仔细检查你的代码，当有些地方出错时，这些地方将会变得很显眼——<em>就算你自己没有意识到那里写错了</em>。</p>
</blockquote>
</li>
<li>
<p>测试使你的代码更有吸引力</p>
<blockquote>
<p>你也许遇到过这种情况：你编写了一个绝赞的软件，但是其他开发者看都不看它一眼，因为它缺少测试。没有测试的代码不值得信任。 Django 最初开发者之一的 Jacob Kaplan-Moss 说过：“项目规划时没有包含测试是不科学的。”</p>
<p>其他的开发者希望在正式使用你的代码前看到它通过了测试，这是你需要写测试的另一个重要原因。</p>
</blockquote>
</li>
<li>
<p>测试有利于团队协作</p>
<blockquote>
<p>前面的几点都是从单人开发的角度来说的。复杂的应用可能由团队维护。测试的存在保证了协作者不会不小心破坏了了你的代码（也保证你不会不小心弄坏他们的）。如果你想作为一个 Django 程序员谋生的话，你必须擅长编写测试！</p>
</blockquote>
</li>
</ul>
<h3 id="5-2-基础测试策略">5.2 基础测试策略</h3>
<ul>
<li>
<p>有好几种不同的方法可以写测试。</p>
<p>一些开发者遵循 “<a href="https://en.wikipedia.org/wiki/Test-driven_development">测试驱动</a>” 的开发原则，他们在写代码之前先写测试。这种方法看起来有点反直觉，但事实上，这和大多数人日常的做法是相吻合的。我们会先描述一个问题，然后写代码来解决它。「测试驱动」的开发方法只是将问题的描述抽象为了 Python 的测试样例。</p>
</li>
<li>
<p>更普遍的情况是，一个刚接触自动化测试的新手更倾向于先写代码，然后再写测试。虽然提前写测试可能更好，但是晚点写起码也比没有强。</p>
<p>有时候很难决定从哪里开始下手写测试。如果你才写了几千行 Python 代码，选择从哪里开始写测试确实不怎么简单。如果是这种情况，那么在你下次修改代码（比如加新功能，或者修复 Bug）之前写个测试是比较合理且有效的。</p>
</li>
<li>
<p>所以，我们现在就开始写吧。</p>
</li>
</ul>
<h3 id="5-3-开始写我们的第一个测试">5.3 开始写我们的第一个测试</h3>
<h4 id="首先得有个-Bug">首先得有个 Bug</h4>
<ul>
<li>
<p>幸运的是，我们的 <code>polls</code> 应用现在就有一个小 bug 需要被修复：</p>
<p>我们的要求是如果 Question 是在一天之内发布的， <code>Question.was_published_recently()</code> 方法将会返回 <code>True</code> ，</p>
<p>然而现在这个方法在 <code>Question</code> 的 <code>pub_date</code> 字段比当前时间还晚时也会返回 True（这是个 Bug）。</p>
</li>
<li>
<p>用djadmin:<code>shell</code>命令确认一下这个方法的日期bug</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py shell</span><br></pre></td></tr></table></figure>
<blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; import datetime</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from django.utils import timezone</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from polls.models import Question</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># create a Question instance with pub_date 30 days in the future</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; future_question = Question(pub_date=timezone.now() + datetime.timedelta(days=30))</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># was it published recently?</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; future_question.was_published_recently()</span></span><br><span class="line">True</span><br></pre></td></tr></table></figure>
<p>因为将来发生的是肯定不是最近发生的，所以代码明显是错误的。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512085658552.png" alt="image-20230512085658552" style="zoom:50%;" /> 
</blockquote>
</li>
</ul>
<h4 id="创建一个测试来暴露这个-bug">创建一个测试来暴露这个 bug</h4>
<ul>
<li>
<p>我们刚刚在 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/django-admin/#django-admin-shell"><code>shell</code></a> 里做的测试也就是自动化测试应该做的工作。所以我们来把它改写成自动化的吧。</p>
</li>
<li>
<p>按照惯例，Django 应用的测试应该写在应用的 <code>tests.py</code> 文件里。测试系统会自动的在所有以 <code>tests</code> 开头的文件里寻找并执行测试代码。</p>
<p>将下面的代码写入 <code>polls</code> 应用里的 <code>tests.py</code> 文件内：</p>
<p><code>polls/tests.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> TestCase</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QuestionModelTests</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_was_published_recently_with_future_question</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        was_published_recently() returns False for questions whose pub_date</span></span><br><span class="line"><span class="string">        is in the future.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        time = timezone.now() + datetime.timedelta(days=<span class="number">30</span>)</span><br><span class="line">        future_question = Question(pub_date=time)</span><br><span class="line">        self.assertIs(future_question.was_published_recently(), <span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>我们创建了一个 <code>django.test.TestCase</code>的子类，并添加了一个方法，此方法创建一个 <code>pub_date</code> 时未来某天的 <code>Question</code> 实例。然后检查它的 <code>was_published_recently()</code> 方法的返回值——它 <em>应该</em> 是 False。</p>
</blockquote>
</li>
</ul>
<h4 id="运行测试">运行测试</h4>
<ul>
<li>
<p>在终端中，我们通过输入以下代码运行测试:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py test polls</span><br></pre></td></tr></table></figure>
<p>测试情况：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512090624341.png" alt="image-20230512090624341" style="zoom:50%;" /> 
<blockquote>
<p>不一样的错误？</p>
<p>若在此处你得到了一个 <code>NameError</code> 错误，你可能漏了 第二步 中将 <code>datetime</code> 和 <code>timezone</code> 导入 <code>polls/model.py</code> 的步骤。复制这些语句，然后试着重新运行测试。</p>
</blockquote>
<blockquote>
<p>发生了什么呢？以下是自动化测试的运行过程：</p>
<ul>
<li><code>python manage.py test polls</code> 将会寻找 <code>polls</code> 应用里的测试代码</li>
<li>它找到了 <code>django.test.TestCase</code> 的一个子类</li>
<li>它创建一个特殊的数据库供测试使用</li>
<li>它在类中寻找测试方法——以 <code>test</code> 开头的方法。</li>
<li>在 <code>test_was_published_recently_with_future_question</code> 方法中，它创建了一个 <code>pub_date</code> 值为 30 天后的 <code>Question</code> 实例。</li>
<li>接着使用 <code>assertls()</code> 方法，发现 <code>was_published_recently()</code> 返回了 <code>True</code>，而我们期望它返回 <code>False</code>。</li>
</ul>
<p>测试系统通知我们哪些测试样例失败了，和造成测试失败的代码所在的行号。</p>
</blockquote>
</li>
</ul>
<h4 id="修复这个-bug">修复这个 bug</h4>
<ul>
<li>
<p>我们早已知道，当 <code>pub_date</code> 为未来某天时， <code>Question.was_published_recently()</code> 应该返回 <code>False</code>。</p>
<p>我们修改 <code>models.py</code> 里的方法，让它只在日期是过去式的时候才返回 <code>True</code>：</p>
<p><code>polls/models.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">was_published_recently</span>(<span class="params">self</span>):</span><br><span class="line">    now = timezone.now()</span><br><span class="line">    <span class="keyword">return</span> now - datetime.timedelta(days=<span class="number">1</span>) &lt;= self.pub_date &lt;= now</span><br></pre></td></tr></table></figure>
<blockquote>
<p>原来是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">was_published_recently</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.pub_date &gt;= timezone.now() - datetime.timedelta(days=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li>
<p>再次测试：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512091346086.png" alt="image-20230512091346086" style="zoom:67%;" /> 
</blockquote>
<p>发现 bug 后，我们编写了能够暴露这个 bug 的自动化测试。在修复 bug 之后，我们的代码顺利的通过了测试。</p>
<p>将来，我们的应用可能会出现其他的问题，但是我们可以肯定的是，一定不会再次出现这个 bug，因为只要运行一遍测试，就会立刻收到警告。我们可以认为应用的这一小部分代码永远是安全的。</p>
</li>
</ul>
<h4 id="更全面的测试">更全面的测试</h4>
<ul>
<li>
<p>我们已经搞定一小部分了，现在可以考虑全面的测试 <code>was_published_recently()</code> 这个方法以确定它的安全性，然后就可以把这个方法稳定下来了。事实上，在修复一个 bug 时不小心引入另一个 bug 会是非常令人尴尬的。</p>
<p>我们在上次写的类里再增加两个测试，来更全面的测试这个方法：</p>
<p><code>polls/test.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_was_published_recently_with_old_question</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    was_published_recently() returns False for questions whose pub_date</span></span><br><span class="line"><span class="string">    is older than 1 day.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    time = timezone.now() - datetime.timedelta(days=<span class="number">1</span>, seconds=<span class="number">1</span>)</span><br><span class="line">    old_question = Question(pub_date=time)</span><br><span class="line">    self.assertIs(old_question.was_published_recently(), <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_was_published_recently_with_recent_question</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    was_published_recently() returns True for questions whose pub_date</span></span><br><span class="line"><span class="string">    is within the last day.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    time = timezone.now() - datetime.timedelta(hours=<span class="number">23</span>, minutes=<span class="number">59</span>, seconds=<span class="number">59</span>)</span><br><span class="line">    recent_question = Question(pub_date=time)</span><br><span class="line">    self.assertIs(recent_question.was_published_recently(), <span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p>现在，我们有三个测试来确保 <code>Question.was_published_recently()</code> 方法对于过去，最近，和将来的三种情况都返回正确的值。</p>
<p>再次申明，尽管 <code>polls</code> 现在是个小型的应用，但是无论它以后变得到多么复杂，无论他和其他代码如何交互，我们可以在一定程度上保证我们为之编写测试的方法将按照预期的方式运行。</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512091837995.png" alt="image-20230512091837995" style="zoom:67%;" /> 
</blockquote>
</li>
</ul>
<h3 id="5-4-测试视图">5.4 测试视图</h3>
<blockquote>
<p>我们的投票应用对所有问题都一视同仁：它将会发布所有的问题，也包括那些 <code>pub_date</code> 字段值是未来的问题。</p>
<p>我们应该改善这一点。如果 <code>pub_date</code> 设置为未来某天，这应该被解释为这个问题将在所填写的时间点才被发布，而在之前是不可见的。</p>
</blockquote>
<h4 id="针对视图的测试">针对视图的测试</h4>
<ul>
<li>
<p>为了修复上述 bug ，我们这次先编写测试，然后再去改代码。事实上，这是一个「测试驱动」开发模式的实例，但其实这两者的顺序不太重要。</p>
</li>
<li>
<p>在我们的第一个测试中，我们关注代码的内部行为。我们通过模拟用户使用浏览器访问被测试的应用来检查代码行为是否符合预期。</p>
<p>在我们动手之前，先看看需要用到的工具们。</p>
</li>
</ul>
<h4 id="Django-测试工具之-Client">Django 测试工具之 Client</h4>
<ul>
<li>
<p>Django 提供了一个供测试使用的 <code>Client</code> 来模拟用户和视图层代码的交互。我们能在 <code>tests.py</code> 甚至是 <code>shell</code>中使用它。</p>
<p>我们依照惯例从 <code>shell</code> 开始，首先我们要做一些在 <code>tests.py</code> 里不是必须的准备工作。</p>
<ul>
<li>
<p>第一步是在 <code>shell</code>中配置测试环境:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py shell</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from django.test.utils import setup_test_environment</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; setup_test_environment()</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>setup_test_environment()</code>安装了一个模板渲染器，</p>
<p>这将使我们能够检查响应上的一些额外属性，如 <code>response.context</code>，否则将无法使用此功能。</p>
<p>请注意，这个方法 <em>不会</em> 建立一个测试数据库，所以下面的内容将针对现有的数据库运行，输出结果可能略有不同，这取决于你已经创建了哪些问题。如果你在 <code>settings.py</code> 中的 <code>TIME_ZONE</code> 不正确，你可能会得到意外的结果。如果你不记得之前的配置，请在继续之前检查。</p>
</blockquote>
<p>准备：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from django.test import Client</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># create an instance of the client for our use</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; client = Client()</span></span><br></pre></td></tr></table></figure>
<p>让client 开始工作：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># get a response from &#x27;/&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; response = client.get(<span class="string">&quot;/&quot;</span>)</span></span><br><span class="line">Not Found: /</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># we should expect a 404 from that address; if you instead see an</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># &quot;Invalid HTTP_HOST header&quot; error and a 400 response, you probably</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># omitted the setup_test_environment() call described earlier.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; response.status_code</span></span><br><span class="line">404</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># on the other hand we should expect to find something at &#x27;/polls/&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; <span class="comment"># we&#x27;ll use &#x27;reverse()&#x27; rather than a hardcoded URL</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from django.urls import reverse</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; response = client.get(reverse(<span class="string">&quot;polls:index&quot;</span>))</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; response.status_code</span></span><br><span class="line">200</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; response.content</span></span><br><span class="line">b&#x27;\n    &lt;ul&gt;\n    \n        &lt;li&gt;&lt;a href=&quot;/polls/1/&quot;&gt;What&amp;#x27;s up?&lt;/a&gt;&lt;/li&gt;\n    \n    &lt;/ul&gt;\n\n&#x27;</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; response.context[<span class="string">&quot;latest_question_list&quot;</span>]</span></span><br><span class="line">&lt;QuerySet [&lt;Question: What&#x27;s up?&gt;]&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>我的测试效果：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512093201305.png" alt="image-20230512093201305" style="zoom: 67%;" /> 
</blockquote>
</li>
</ul>
</li>
</ul>
<h4 id="改善视图代码">改善视图代码</h4>
<ul>
<li>
<p>现在的投票列表会显示将来的投票（ <code>pub_date</code> 值是未来的某天)。我们来修复这个问题。</p>
<p>在 教程的第 4 部分里，我们介绍了基于 <code>ListView</code> 的视图类：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">IndexView</span>(generic.ListView):</span><br><span class="line">    template_name = <span class="string">&quot;polls/index.html&quot;</span></span><br><span class="line">    context_object_name = <span class="string">&quot;latest_question_list&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_queryset</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Return the last five published questions.&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> Question.objects.order_by(<span class="string">&quot;-pub_date&quot;</span>)[:<span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<p>我们需要改进 <code>get_queryset()</code> 方法，让他它能通过将 Question 的 pub_data 属性与 <code>timezone.now()</code> 相比较来判断是否应该显示此 Question。首先我们需要一行 import 语句，然后我们把 <code>get_queryset</code> 方法改写成下面这样：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_queryset</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Return the last five published questions (not including those set to be</span></span><br><span class="line"><span class="string">    published in the future).</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> Question.objects.<span class="built_in">filter</span>(pub_date__lte=timezone.now()).order_by(<span class="string">&quot;-pub_date&quot;</span>)[:<span class="number">5</span>]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="测试新视图">测试新视图</h4>
<ul>
<li>
<p>启动服务器、在浏览器中载入站点、创建一些发布时间在过去和将来的 <code>Questions</code> ，然后检验只有已经发布的 <code>Questions</code> 会展示出来，现在你可以对自己感到满意了。<em>你不想每次修改可能与这相关的代码时都重复这样做</em> —— 所以让我们基于以上 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/django-admin/#django-admin-shell"><code>shell</code></a> 会话中的内容，再编写一个测试。</p>
<p>将下面的代码添加到 <code>polls/tests.py</code> ：（我们写一个公用的快捷函数用于创建投票问题，再为视图创建一个测试类：）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_question</span>(<span class="params">question_text, days</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Create a question with the given `question_text` and published the</span></span><br><span class="line"><span class="string">    given number of `days` offset to now (negative for questions published</span></span><br><span class="line"><span class="string">    in the past, positive for questions that have yet to be published).</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    time = timezone.now() + datetime.timedelta(days=days)</span><br><span class="line">    <span class="keyword">return</span> Question.objects.create(question_text=question_text, pub_date=time)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QuestionIndexViewTests</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_no_questions</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        If no questions exist, an appropriate message is displayed.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        response = self.client.get(reverse(<span class="string">&quot;polls:index&quot;</span>))</span><br><span class="line">        self.assertEqual(response.status_code, <span class="number">200</span>)</span><br><span class="line">        self.assertContains(response, <span class="string">&quot;No polls are available.&quot;</span>)</span><br><span class="line">        self.assertQuerySetEqual(response.context[<span class="string">&quot;latest_question_list&quot;</span>], [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_past_question</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Questions with a pub_date in the past are displayed on the</span></span><br><span class="line"><span class="string">        index page.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        question = create_question(question_text=<span class="string">&quot;Past question.&quot;</span>, days=-<span class="number">30</span>)</span><br><span class="line">        response = self.client.get(reverse(<span class="string">&quot;polls:index&quot;</span>))</span><br><span class="line">        self.assertQuerySetEqual(</span><br><span class="line">            response.context[<span class="string">&quot;latest_question_list&quot;</span>],</span><br><span class="line">            [question],</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_future_question</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Questions with a pub_date in the future aren&#x27;t displayed on</span></span><br><span class="line"><span class="string">        the index page.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        create_question(question_text=<span class="string">&quot;Future question.&quot;</span>, days=<span class="number">30</span>)</span><br><span class="line">        response = self.client.get(reverse(<span class="string">&quot;polls:index&quot;</span>))</span><br><span class="line">        self.assertContains(response, <span class="string">&quot;No polls are available.&quot;</span>)</span><br><span class="line">        self.assertQuerySetEqual(response.context[<span class="string">&quot;latest_question_list&quot;</span>], [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_future_question_and_past_question</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Even if both past and future questions exist, only past questions</span></span><br><span class="line"><span class="string">        are displayed.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        question = create_question(question_text=<span class="string">&quot;Past question.&quot;</span>, days=-<span class="number">30</span>)</span><br><span class="line">        create_question(question_text=<span class="string">&quot;Future question.&quot;</span>, days=<span class="number">30</span>)</span><br><span class="line">        response = self.client.get(reverse(<span class="string">&quot;polls:index&quot;</span>))</span><br><span class="line">        self.assertQuerySetEqual(</span><br><span class="line">            response.context[<span class="string">&quot;latest_question_list&quot;</span>],</span><br><span class="line">            [question],</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_two_past_questions</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        The questions index page may display multiple questions.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        question1 = create_question(question_text=<span class="string">&quot;Past question 1.&quot;</span>, days=-<span class="number">30</span>)</span><br><span class="line">        question2 = create_question(question_text=<span class="string">&quot;Past question 2.&quot;</span>, days=-<span class="number">5</span>)</span><br><span class="line">        response = self.client.get(reverse(<span class="string">&quot;polls:index&quot;</span>))</span><br><span class="line">        self.assertQuerySetEqual(</span><br><span class="line">            response.context[<span class="string">&quot;latest_question_list&quot;</span>],</span><br><span class="line">            [question2, question1],</span><br><span class="line">        )</span><br></pre></td></tr></table></figure>
<blockquote>
<p>让我们更详细地看下以上这些内容。</p>
<p>首先是一个快捷函数 <code>create_question</code>，它封装了创建投票的流程，减少了重复代码。</p>
<p>在 <code>test_past_question</code> 方法中，我们创建了一个投票并检查它是否出现在列表中。</p>
<p>在 <code>test_future_question</code> 中，我们创建 <code>pub_date</code> 在未来某天的投票。数据库会在每次调用测试方法前被重置，所以第一个投票已经没了，所以主页中应该没有任何投票。</p>
<p>剩下的那些也都差不多。实际上，测试就是假装一些管理员的输入，然后通过用户端的表现是否符合预期来判断新加入的改变是否破坏了原有的系统状态。</p>
</blockquote>
</li>
</ul>
<h4 id="测试-DetailView">测试 <code>DetailView</code></h4>
<ul>
<li>
<p>我们的工作似乎已经很完美了？不，还有一个问题：就算在发布日期时未来的那些投票不会在目录页 <em>index</em> 里出现，但是如果用户知道或者猜到正确的 URL ，还是可以访问到它们。所以我们得在 <code>DetailView</code> 里增加一些约束：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DetailView</span>(generic.DetailView):</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_queryset</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Excludes any questions that aren&#x27;t published yet.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> Question.objects.<span class="built_in">filter</span>(pub_date__lte=timezone.now())</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>然后，我们应该增加一些测试来检验 <code>pub_date</code> 在过去的 <code>Question</code> 能够被显示出来，而 <code>pub_date</code> 在未来的则不可以：</p>
<p><code>polls/test.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">QuestionDetailViewTests</span>(<span class="title class_ inherited__">TestCase</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_future_question</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        The detail view of a question with a pub_date in the future</span></span><br><span class="line"><span class="string">        returns a 404 not found.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        future_question = create_question(question_text=<span class="string">&quot;Future question.&quot;</span>, days=<span class="number">5</span>)</span><br><span class="line">        url = reverse(<span class="string">&quot;polls:detail&quot;</span>, args=(future_question.<span class="built_in">id</span>,))</span><br><span class="line">        response = self.client.get(url)</span><br><span class="line">        self.assertEqual(response.status_code, <span class="number">404</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_past_question</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        The detail view of a question with a pub_date in the past</span></span><br><span class="line"><span class="string">        displays the question&#x27;s text.</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        past_question = create_question(question_text=<span class="string">&quot;Past Question.&quot;</span>, days=-<span class="number">5</span>)</span><br><span class="line">        url = reverse(<span class="string">&quot;polls:detail&quot;</span>, args=(past_question.<span class="built_in">id</span>,))</span><br><span class="line">        response = self.client.get(url)</span><br><span class="line">        self.assertContains(response, past_question.question_text)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>测试</p>
<blockquote>
<p>我的测试结果：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230512095545574.png" alt="image-20230512095545574" style="zoom:80%;" /> 
</blockquote>
</li>
</ul>
<h4 id="更多的测试思路">更多的测试思路</h4>
<ul>
<li>
<p>我们应该给 <code>ResultsView</code> 也增加一个类似的 <code>get_queryset</code> 方法，并且为它创建测试。这和我们之前干的差不多，事实上，基本就是重复一遍。</p>
</li>
<li>
<p>我们还可以从各个方面改进投票应用，但是测试会一直伴随我们。比方说，在目录页上显示一个没有选项 <code>Choices</code> 的投票问题就没什么意义。我们可以检查并排除这样的投票题。测试可以创建一个没有选项的投票，然后检查它是否被显示在目录上。当然也要创建一个有选项的投票，然后确认它确实被显示了。</p>
<p>恩，也许你想让管理员能在目录上看见未被发布的那些投票，但是普通用户看不到。不管怎么说，如果你想要增加一个新功能，那么同时一定要为它编写测试。不过你是先写代码还是先写测试那就随你了。</p>
</li>
<li>
<p>在未来的某个时刻，你一定会去查看测试代码，然后开始怀疑：「这么多的测试不会使代码越来越复杂吗？」。别着急，我们马上就会谈到这一点。</p>
</li>
</ul>
<h3 id="5-5-当需要测试的时候，测试用例越多越好">5.5 当需要测试的时候，测试用例越多越好</h3>
<ul>
<li>
<p>貌似我们的测试多的快要失去控制了。按照这样发展下去，测试代码就要变得比应用的实际代码还要多了。而且测试代码大多都是重复且不优雅的，特别是在和业务代码比起来的时候，这种感觉更加明显。</p>
<p><strong>但是这没关系！</strong> 就让测试代码继续肆意增长吧。大部分情况下，你写完一个测试之后就可以忘掉它了。在你继续开发的过程中，它会一直默默无闻地为你做贡献的。</p>
</li>
<li>
<p>但有时测试也需要更新。想象一下如果我们修改了视图，只显示有选项的那些投票，那么只前写的很多测试就都会失败。<em>但这也明确地告诉了我们哪些测试需要被更新</em>，所以测试也会测试自己。</p>
<p>最坏的情况是，当你继续开发的时候，发现之前的一些测试现在看来是多余的。但是这也不是什么问题，多做些测试也 <em>不错</em>。</p>
<p>如果你对测试有个整体规划，那么它们就几乎不会变得混乱。下面有几条好的建议：</p>
<ul>
<li>对于每个模型和视图都建立单独的 <code>TestClass</code></li>
<li>每个测试方法只测试一个功能</li>
<li>给每个测试方法起个能描述其功能的名字</li>
</ul>
</li>
</ul>
<h3 id="5-6-深入代码测试">5.6 深入代码测试</h3>
<ul>
<li>
<p>在本教程中，我们仅仅是了解了测试的基础知识。你能做的还有很多，而且世界上有很多有用的工具来帮你完成这些有意义的事。</p>
<p>举个例子，在上述的测试中，我们已经从代码逻辑和视图响应的角度检查了应用的输出，现在你可以从一个更加 “in-browser” 的角度来检查最终渲染出的 HTML 是否符合预期，使用 Selenium 可以很轻松的完成这件事。这个工具不仅可以测试 Django 框架里的代码，还可以检查其他部分，比如说你的 JavaScript。它假装成是一个正在和你站点进行交互的浏览器，就好像有个真人在访问网站一样！Django 它提供了 <code>LiveServerTestCase</code> 来和 Selenium 这样的工具进行交互。</p>
</li>
<li>
<p>如果你在开发一个很复杂的应用的话，</p>
<p>你也许想在每次提交代码时自动运行测试，也就是我们所说的持续集成 continuous integration，</p>
<p>这样就能实现质量控制的自动化，起码是部分自动化。</p>
</li>
<li>
<p>一个找出代码中未被测试部分的方法是检查代码覆盖率。它有助于找出代码中的薄弱部分和无用部分。如果你无法测试一段代码，通常说明这段代码需要被重构或者删除。想知道代码覆盖率和无用代码的详细信息，查看文档 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/testing/advanced/#topics-testing-code-coverage">集成 coverage.py</a> 获取详细信息。</p>
</li>
</ul>
<blockquote>
<p>文档 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/testing/">Django 中的测试</a> 里有关于测试的更多信息。</p>
</blockquote>
<h3 id="5-7-接下来要做什么？">5.7 接下来要做什么？</h3>
<blockquote>
<p>如果你想深入了解测试，就去看 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/testing/">Django 中的测试</a> 。</p>
<p>当你已经比较熟悉测试 Django 视图的方法后，就可以继续阅读 教程第 6 部分 ，学习静态文件管理的相关知识。</p>
</blockquote>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>《Django》入门 Notes（上）</title>
    <url>/butterflyblog/2023/06/01/%E3%80%8ADjango%E3%80%8B%E5%85%A5%E9%97%A8%20Notes%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
    <content><![CDATA[<h1>《Django》入门 Notes（上）</h1>
<p>@Seymour0314 来源官方文档<code>https://docs.djangoproject.com/zh-hans/4.2/intro/</code></p>
<blockquote>
<p>本文是Django 后端技术初级入门教程。</p>
<p>编程语言：Python</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230510110254656.png" alt="image-20230510110254656" style="zoom: 50%;" />
<h2 id="初识-Django">初识 Django</h2>
<blockquote>
<p>Django 最初被设计用于具有快速开发需求的新闻类站点，目的是要实现简单快捷的网站开发。以下内容简要介绍了如何使用 Django 实现一个数据库驱动的网络应用。</p>
</blockquote>
<blockquote>
<p>从哪里获得帮助：</p>
<p>如果你在阅读本教程的过程中有任何疑问，可以前往 FAQ 的 <a href="https://docs.djangoproject.com/zh-hans/4.2/faq/help/">获取帮助</a> 的版块。</p>
</blockquote>
<blockquote>
<p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/4.2/topics/">https://docs.djangoproject.com/zh-hans/4.2/topics/</a></p>
</blockquote>
<h2 id="快速安装指南">快速安装指南</h2>
<h3 id="在-Windows-上安装-Django">在 Windows 上安装 Django</h3>
<h5 id="安装Python">安装Python</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511140356777.png" alt="image-20230511140356777" style="zoom:80%;" /> 
<ul>
<li>Django 是一个 Python Web 框架，因此需要在您的机器上安装 Python。</li>
</ul>
<blockquote>
<p>Python官方下载地址 <a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p>
<p>查看版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py --version</span><br></pre></td></tr></table></figure>
</blockquote>
<h5 id="配置一个虚拟环境">配置一个虚拟环境</h5>
<ul>
<li>
<p>最佳实践是为你创建的每一个Django项目创建一个独立的环境。</p>
<p>在Python生态系统中有许多可以用来管理环境和包的可选工具，一些在 <a href="https://packaging.python.org/guides/tool-recommendations/">Python documentation</a> 被推荐过。我们将会在这份指南中使用Python本身自带的 <a href="https://docs.python.org/3/tutorial/venv.html">venv</a> 来管理环境。</p>
</li>
</ul>
<blockquote>
<p>在当前文件夹下创建虚拟环境：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在 project-name 文件夹下创建一个虚拟环境（若project-name文件夹不存在，则会新建）</span></span><br><span class="line">...\&gt; py -m venv project-name</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">激活环境</span></span><br><span class="line">...\&gt; project-name\Scripts\activate.bat</span><br></pre></td></tr></table></figure>
<p>每次你打开新的命令行窗口，你需要再次激活环境。</p>
</blockquote>
<h5 id="安装-Django">安装 Django</h5>
<ul>
<li>Django 可以轻松地在你的<strong>虚拟环境</strong>中使用 <code>pip</code> 安装。</li>
</ul>
<blockquote>
<p>确保虚拟环境已经激活，输入下面命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py -m pip install Django</span><br></pre></td></tr></table></figure>
<p>这将下载并安装最新的 Django 发布版本。</p>
<p>安装完成后，你可以在命令提示符运行 <code>django-admin --version</code> 验证你安装的 Django。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511142702003.png" alt="image-20230511142702003" style="zoom:67%;" />
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511143558371.png" alt="image-20230511143558371" style="zoom: 67%;" />
<blockquote>
<p>非虚拟环境查看版本号：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py -m django --version</span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
<h5 id="安装-Apache-和-mod-wsgi">安装 Apache 和 <code>mod_wsgi</code></h5>
<ul>
<li>
<p>如果您只是想试验 Django，请跳到下一部分；</p>
<p>Django 包含一个可用于测试的轻量级 Web 服务器，</p>
<p>因此在准备好在生产环境中部署 Django 之前，您不需要设置 Apache。</p>
</li>
</ul>
<h5 id="运行你的数据库">运行你的数据库</h5>
<ul>
<li>
<p>如果你打算使用 Django 的数据库 API 功能，你需要确保一个数据库服务器正在运行。</p>
<p>Django 支持许多不同的数据库服务器，官方支持 <a href="https://www.postgresql.org/">PostgreSQL</a>、<a href="https://mariadb.org/">MariaDB</a>、<a href="https://www.mysql.com/">MySQL</a>、<a href="https://www.oracle.com/">Oracle</a> 和 <a href="https://www.sqlite.org/">SQLite</a>。</p>
</li>
</ul>
<blockquote>
<p>如果你正在开发一个小项目或不打算在生产环境中部署的东西，SQLite 通常是最好的选择，因为它不需要运行一个单独的服务器。然而，SQLite 与其他数据库有许多不同之处，所以如果你正在开发一些实质性的东西，建议使用你计划在生产中使用的同一数据库进行开发。</p>
<p>除了官方支持的数据库，还有 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/databases/#third-party-notes">第三方提供的后端</a> 允许你在 Django 中使用其他数据库。</p>
</blockquote>
<ul>
<li>
<p>除了数据库后端，你还要确保安装了 Python 数据库绑定。</p>
<ul>
<li>
<p>如果你正在使用 MySQL 或 MariaDB，则需要一个像 <code>mysqlclient</code> 一样的 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/databases/#mysql-db-api-drivers">DB API 驱动</a>。</p>
<p>详细信息参见 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/databases/#mysql-notes">MySQL 后端注意事项</a>。</p>
</li>
<li>
<p>如果你正在使用 SQLite，则可能需要阅读 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/databases/#sqlite-notes">SQLite 后端笔记</a> 。</p>
</li>
</ul>
</li>
<li>
<p>操作数据库</p>
<ul>
<li>
<p>如果你打算使用 Django 的 <code>manage.py migrate</code> 命令为你的模型自动创建数据库表（首先安装 Django 并创建项目后），</p>
<p>你需要确保 Django 有权限在你使用的数据库中创建和修改表；</p>
</li>
<li>
<p>如果你打算手动创建表，你可以授予 Django <code>SELECT</code>、<code>INSERT</code>、<code>UPDATE</code> 和 <code>DELETE</code> 权限。</p>
<p>创建具有这些权限的数据库用户后，你将在项目的配置文件中指定详细信息，详细信息参见 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/settings/#std-setting-DATABASES"><code>DATABASES</code></a>。</p>
</li>
<li>
<p>如果你正在使用 Django 的 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/testing/">测试框架</a> 来测试数据库查询，Django 将需要创建测试数据库的权限。</p>
</li>
</ul>
</li>
</ul>
<h2 id="编写你的第一个-Django-应用">编写你的第一个 Django 应用</h2>
<blockquote>
<p>操作前记得激活环境</p>
</blockquote>
<h4 id="0-0-激活环境">0.0 激活环境</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">激活环境</span></span><br><span class="line">...\&gt; project-name\Scripts\activate.bat</span><br></pre></td></tr></table></figure>
<blockquote>
<p>如若激活后，仍然报错说没有<code>Django</code>模块</p>
<p>那么：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py -m pip install Django</span><br></pre></td></tr></table></figure>
<p>安装好，查看<code>django-admin --version</code>是否正常输出版本号。</p>
</blockquote>
<h2 id="第-1-部分">第 1 部分</h2>
<blockquote>
<p>让我们通过示例来学习。</p>
<p>通过这个教程，我们将带着你创建一个基本的投票应用程序。</p>
<p>它将由两部分组成：</p>
<ul>
<li>一个让人们查看和投票的公共站点。</li>
<li>一个让你能添加、修改和删除投票的管理站点。</li>
</ul>
<blockquote>
<p>本教程是为Django 4.2 编写的，它支持 Python 3.8 及以后的版本。</p>
<p>我的版本号是：</p>
<ul>
<li>Django 4.2.1</li>
<li>Python 3.11.1</li>
</ul>
</blockquote>
</blockquote>
<h3 id="1-1-创建项目">1.1 创建项目</h3>
<ul>
<li>
<p>如果这是你第一次使用 Django 的话，你需要一些初始化设置。</p>
<blockquote>
<p>也就是说，你需要用一些自动生成的代码配置一个 Django project —— 即一个 Django 项目实例需要的设置项集合，包括数据库配置、Django 配置和应用程序配置。</p>
</blockquote>
</li>
<li>
<p>打开命令行，<code>cd</code> 到一个你想放置你代码的目录，然后运行以下命令：</p>
<blockquote>
<p>我们可以放在与前面<code>project</code>文件夹的并行目录下。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; django-admin startproject mysite</span><br></pre></td></tr></table></figure>
<p>这行代码将会在当前目录下创建一个 <code>mysite</code> 目录。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511143733355.png" alt="image-20230511143733355" style="zoom: 67%;" />
<blockquote>
<p>mysite结构：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysite/</span><br><span class="line">    manage.py</span><br><span class="line">    mysite/</span><br><span class="line">        __init__.py</span><br><span class="line">        settings.py</span><br><span class="line">        urls.py</span><br><span class="line">        asgi.py</span><br><span class="line">        wsgi.py</span><br></pre></td></tr></table></figure>
<p>这些目录和文件的用处是：</p>
<ul>
<li>
<p>最外层的 <code>mysite/</code> 根目录只是你项目的容器， 根目录名称对 Django 没有影响，你可以将它重命名为任何你喜欢的名称。</p>
</li>
<li>
<p><code>manage.py</code>: 一个让你用各种方式管理 Django 项目的命令行工具。</p>
<blockquote>
<p>你可以阅读 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/django-admin/">django-admin 和 manage.py</a> 获取所有 <code>manage.py</code> 的细节。</p>
</blockquote>
</li>
<li>
<p>里面一层的 <code>mysite/</code> 目录包含你的项目，它是一个纯 Python 包。</p>
<blockquote>
<p>它的名字就是当你引用它内部任何东西时需要用到的 Python 包名。 (比如 <code>mysite.urls</code>).</p>
</blockquote>
</li>
<li>
<p><code>mysite/__init__.py</code>：一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包。</p>
<blockquote>
<p>如果你是 Python 初学者，阅读官方文档中的 <a href="https://docs.python.org/3/tutorial/modules.html#tut-packages">更多关于包的知识</a>。</p>
</blockquote>
</li>
<li>
<p><code>mysite/settings.py</code>：Django 项目的配置文件。</p>
<blockquote>
<p>如果你想知道这个文件是如何工作的，请查看 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/settings/">Django 配置</a> 了解细节。</p>
</blockquote>
</li>
<li>
<p><code>mysite/urls.py</code>：Django 项目的 URL 声明，就像你网站的“目录”。</p>
<blockquote>
<p>阅读 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/http/urls/">URL调度器</a> 文档来获取更多关于 URL 的内容。</p>
</blockquote>
</li>
<li>
<p><code>mysite/asgi.py</code>：作为你的项目的运行在 ASGI 兼容的 Web 服务器上的入口。</p>
<blockquote>
<p>阅读 <a href="https://docs.djangoproject.com/zh-hans/4.2/howto/deployment/asgi/">如何使用 ASGI 来部署</a> 了解更多细节。</p>
</blockquote>
</li>
<li>
<p><code>mysite/wsgi.py</code>：作为你的项目的运行在 WSGI 兼容的Web服务器上的入口。</p>
<blockquote>
<p>阅读 <a href="https://docs.djangoproject.com/zh-hans/4.2/howto/deployment/wsgi/">如何使用 WSGI 进行部署</a> 了解更多细节。</p>
</blockquote>
</li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="1-2-用于开发的简易服务器">1.2 用于开发的简易服务器</h3>
<ul>
<li>
<p>让我们来确认一下你的 Django 项目是否真的创建成功了。</p>
<p>如果你的当前目录不是外层的 <code>mysite</code> 目录的话，请切换到此目录，然后运行下面的命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">记得先<span class="built_in">cd</span> mysite</span></span><br><span class="line">...\&gt; py manage.py runserver</span><br></pre></td></tr></table></figure>
<p>你应该会看到如下输出：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511144922199.png" alt="image-20230511144922199" style="zoom: 50%;" />
<blockquote>
<p>忽略有关未应用最新数据库迁移的警告，稍后我们处理数据库。</p>
</blockquote>
</li>
<li>
<p>你已经启动了 Django 开发服务器，这是一个用纯 Python 编写的轻量级网络服务器。</p>
<blockquote>
<p>我们在 Django 中包含了这个服务器，所以你可以快速开发，而不需要处理配置生产服务器的问题</p>
<p>比如 Apache – 直到你准备好用于生产。</p>
<blockquote>
<p>但是，<strong>千万不要</strong> 将这个服务器用于和生产环境相关的任何地方。这个服务器只是为了开发而设计的。</p>
<p>（我们在网络框架方面是专家，在网络服务器方面并不是。）</p>
</blockquote>
</blockquote>
</li>
<li>
<p>服务器现在正在运行，通过浏览器访问 <code>http://127.0.0.1:8000/ </code>。</p>
<p>你将看到一个“祝贺”页面，有一只火箭正在发射。你成功了！</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511145011477.png" alt="image-20230511145011477" style="zoom:50%;" />
</li>
</ul>
<blockquote>
<p>一些问题：</p>
<ul>
<li>
<p>更换端口</p>
<p>默认情况下，<code>runserver</code> 命令会将服务器设置为监听本机内部 IP 的 8000 端口。</p>
<p>如果你想更换服务器的监听端口，请使用命令行参数。</p>
<p>举个例子，下面的命令会使服务器监听 8080 端口：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py runserver 8080</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果你想要修改服务器监听的IP，在端口之前输入新的。</p>
<p>比如，为了监听所有服务器的公开IP（这你运行 Vagrant 或想要向网络上的其它电脑展示你的成果时很有用），</p>
<p>使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure>
<p>关于这个简易服务器的完整信息可以在 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/django-admin/#django-admin-runserver">runserver</a> 文档中找到。</p>
</li>
<li>
<p>会自动重新加载的服务器 <code>runserver</code></p>
<p>用于开发的服务器在需要的情况下会对每一次的访问请求重新载入一遍 Python 代码。</p>
<p>所以你不需要为了让修改的代码生效而频繁的重新启动服务器。</p>
<blockquote>
<p>然而，一些动作，比如添加新文件，将不会触发自动重新加载，这时你得自己手动重启服务器。</p>
</blockquote>
</li>
</ul>
</blockquote>
<h3 id="1-3-创建投票应用">1.3 创建投票应用</h3>
<blockquote>
<p>现在你的开发环境——这个“项目” ——已经配置好了，你可以开始干活了。</p>
</blockquote>
<ul>
<li>
<p>在 Django 中，每一个应用都是一个 Python 包，并且遵循着相同的约定。</p>
<p>Django 自带一个工具，可以帮你生成应用的基础目录结构，这样你就能专心写代码，而不是创建目录了。</p>
<blockquote>
<ul>
<li>项目和应用有什么区别？
<ul>
<li>应用是一个专门做某件事的网络应用程序——比如博客系统，或者公共记录的数据库，或者小型的投票程序。</li>
<li>项目则是一个网站使用的配置和应用的集合。项目可以包含很多个应用。应用可以被很多个项目使用。</li>
</ul>
</li>
</ul>
</blockquote>
</li>
<li>
<p>你的应用可以存放在任何 Python 路径 中定义的路径。</p>
<p>在这个教程中，我们将在你的 <code>manage.py</code> 同级目录下创建投票应用。</p>
<blockquote>
<p>这样它就可以作为顶级模块导入，而不是 <code>mysite</code> 的子模块。</p>
</blockquote>
<p>请确定你现在处于 <code>manage.py</code> 所在的目录（即外层的mysite目录）下，然后运行这行命令来创建一个应用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建一个名叫polls 的应用</span></span><br><span class="line">...\&gt; py manage.py startapp polls</span><br></pre></td></tr></table></figure>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511150105443.png" alt="image-20230511150105443" style="zoom: 67%;" />
<p>polls 文件的目录结构：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">polls/</span><br><span class="line">    __init__.py</span><br><span class="line">    admin.py</span><br><span class="line">    apps.py</span><br><span class="line">    migrations/</span><br><span class="line">        __init__.py</span><br><span class="line">    models.py</span><br><span class="line">    tests.py</span><br><span class="line">    views.py</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h3 id="1-4-编写第一个视图">1.4 编写第一个视图</h3>
<blockquote>
<p>让我们开始编写第一个视图吧。</p>
</blockquote>
<ul>
<li>
<p>打开 <code>polls/views.py</code>，把下面这些 Python 代码输入进去：</p>
<p><code>polls/views.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;Hello, world. You&#x27;re at the polls index.&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>这是 Django 中最简单的视图。</p>
<p>如果想看见效果，我们需要将一个 URL 映射到它——这就是我们需要 URLconf 的原因了。</p>
</li>
<li>
<p>就在<code>polls</code>目录下，新建一个<code>urls.py</code>文件：</p>
<p><code>polls/urls.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, views.index, name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>下一步是要在根 URLconf 文件中指定我们创建的 <code>polls.urls</code> 模块。</p>
<p>在 <code>mysite/mysite/urls.py</code> 文件的 <code>urlpatterns</code> 列表里插入一个 <code>include()</code>， 如下：</p>
<blockquote>
<p>注意：改了两处：</p>
<ul>
<li>import include</li>
<li>path(…)</li>
</ul>
</blockquote>
<p><code>mysite/mysite/urls.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> include, path</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;polls/&quot;</span>, include(<span class="string">&quot;polls.urls&quot;</span>)),</span><br><span class="line">    path(<span class="string">&quot;admin/&quot;</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>
<p>函数 <code>include()</code>允许引用其它 URLconfs。</p>
<p>每当 Django 遇到 <code>include()</code> 时，</p>
<p>它会截断与此项匹配的 URL 的部分，并将剩余的字符串发送到 URLconf 以供进一步处理。</p>
</li>
</ul>
<blockquote>
<p>我们设计<code>include()</code>的理念是使其可以即插即用。</p>
<p>因为投票应用有它自己的 URLconf( <code>polls/urls.py</code> )，他们能够被放在 “/polls/” ， “/fun_polls/” ，“/content/polls/”，或者其他任何路径下，这个应用都能够正常工作。</p>
</blockquote>
<ul>
<li>
<p>何时使用 <code>include()</code></p>
<p>当包括其它 URL 模式时你应该总是使用 <code>include()</code> ， <code>admin.site.urls</code> 是唯一例外。</p>
</li>
</ul>
</blockquote>
</li>
<li>
<p>你现在把 <code>index</code> 视图添加进了 URLconf。通过以下命令验证是否正常工作：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py runserver</span><br></pre></td></tr></table></figure>
<p>用你的浏览器访问 <code>http://localhost:8000/polls/</code>，</p>
<p>你应该能够看见 “<em>Hello, world. You’re at the polls index.</em>” ，这是你在 <code>index</code> 视图中定义的。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511152225834.png" alt="image-20230511152225834" style="zoom: 67%;" />
<blockquote>
<p>没有找到页面?（你可能掉了<code>/polls/</code>）</p>
<p>如果你在这里得到了一个错误页面，</p>
<p>检查一下你是不是正访问着<code>http://localhost:8000/polls/</code></p>
<p>而不应该是 <code>http://localhost:8000/</code>。</p>
</blockquote>
</li>
</ul>
<h4 id="关于-path-函数">关于 path 函数</h4>
<ul>
<li>
<p>函数 <code>path()</code>具有四个参数，两个必须参数：<code>route</code> 和 <code>view</code>，两个可选参数：<code>kwargs</code> 和 <code>name</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path(route,view,[kwargs],[name])</span><br></pre></td></tr></table></figure>
<ul>
<li><code>route</code></li>
</ul>
<p>一个匹配 URL 的准则（类似正则表达式）</p>
<blockquote>
<p>当 Django 响应一个请求时，它会从 <code>urlpatterns</code> 的第一项开始，按顺序依次匹配列表中的项，直到找到匹配的项。</p>
<blockquote>
<p>这些准则不会匹配 GET 和 POST 参数或域名。例如，URLconf 在处理请求 <code>https://www.example.com/myapp/</code> 时，它会尝试匹配 <code>myapp/</code> 。处理请求 <code>https://www.example.com/myapp/?page=3</code> 时，也只会尝试匹配 <code>myapp/</code>。</p>
</blockquote>
</blockquote>
<ul>
<li>
<p><code>view</code></p>
<p>调用视图</p>
<blockquote>
<p>当 Django 找到了一个匹配的准则，就会调用这个特定的视图函数，</p>
<p>并传入一个 <code>HttpRequest</code>对象作为第一个参数，被“捕获”的参数以关键字参数的形式传入。</p>
<p>稍后，我们会给出一个例子。</p>
</blockquote>
</li>
<li>
<p><code>kwargs</code></p>
</li>
</ul>
<blockquote>
<p>任意个关键字参数可以作为一个字典传递给目标视图函数。本教程中不会使用这一特性。</p>
</blockquote>
<ul>
<li>
<p><code>name</code></p>
<blockquote>
<p>为你的 URL 取名能使你在 Django 的任意地方唯一地引用它，尤其是在模板中。这个有用的特性允许你只改一个文件就能全局地修改某个 URL 模式。</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h2 id="第-2-部分">第 2 部分</h2>
<blockquote>
<p>本教程从 教程1结束的地方开始。我们将设置数据库，创建第一个模型，并快速介绍 Django 自动生成的后台界面。</p>
</blockquote>
<h3 id="2-1-数据库配置">2.1 数据库配置</h3>
<p>现在，打开 <code>mysite/settings.py</code> 。这是个包含了 Django 项目设置的 Python 模块。</p>
<blockquote>
<ul>
<li>
<p>通常，这个配置文件使用 SQLite 作为默认数据库。</p>
<p>如果你不熟悉数据库，或者只是想尝试下 Django，这是最简单的选择。</p>
<p>Python 内置 SQLite，所以你无需安装额外东西来使用它。</p>
<p>当你开始一个真正的项目时，你可能更倾向使用一个更具扩展性的数据库，例如 PostgreSQL，避免中途切换数据库这个令人头疼的问题。</p>
</li>
<li>
<p>如果你想使用其他数据库，你需要安装合适的 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/install/#database-installation">database bindings</a> ，然后改变设置文件中 <code>DATABASES</code> <code>'default'</code> 项目中的一些键值：</p>
<ul>
<li><code>ENGINE</code> – 可选值有 <code>'django.db.backends.sqlite3'</code>，<code>'django.db.backends.postgresql'</code>，<code>'django.db.backends.mysql'</code>，或 <code>'django.db.backends.oracle'</code>。其它 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/databases/#third-party-notes">可用后端</a>。</li>
<li><code>NAME</code> – 数据库的名称。如果你使用 SQLite，数据库将是你电脑上的一个文件，在这种情况下，<code>NAME</code>应该是此文件完整的绝对路径，包括文件名。默认值 <code>BASE_DIR / 'db.sqlite3'</code> 将把数据库文件储存在项目的根目录。</li>
</ul>
<p>如果你不使用 SQLite，则必须添加一些额外设置，比如 <code>USER</code> 、 <code>PASSWORD</code>、 <code>HOST</code>等等。想了解更多数据库设置方面的内容，请看文档：<code>DATABASES</code>。</p>
<blockquote>
<p>SQLite 以外的其它数据库</p>
<p>如果你使用了 SQLite 以外的数据库，请确认在使用前已经创建了数据库。你可以通过在你的数据库交互式命令行中使用 “<code>CREATE DATABASE database_name;</code>” 命令来完成这件事。</p>
<p>另外，还要确保该数据库用户中提供 <code>mysite/settings.py</code> 具有 “create database” 权限。这使得自动创建的 test database 能被以后的教程使用。</p>
<p>如果你使用 SQLite，那么你不需要在使用前做任何事——数据库会在需要的时候自动创建。</p>
</blockquote>
</li>
</ul>
</blockquote>
<ul>
<li>
<p>编辑 <code>mysite/settings.py</code> 文件前，先设置 <code>TIME_ZONE</code>为你自己时区。</p>
<blockquote>
<p>中华人民共和国：<code>PRC</code></p>
<p>People’s Republic of China</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511160142502.png" alt="image-20230511160142502" style="zoom:67%;" /> 
</blockquote>
</li>
<li>
<p>此外，关注一下文件头部的 <code>INSTALLED_APPS</code> 设置项。</p>
<blockquote>
<p>这里包括了会在你项目中启用的所有 Django 应用。应用能在多个项目中使用，你也可以打包并且发布应用，让别人使用它们。</p>
<p>通常， <code>INSTALLED_APPS</code></p>
<ul>
<li><code>django.contrib.admin</code> – 管理员站点， 你很快就会使用它。</li>
<li><code>django.contrib.auth</code>– 认证授权系统。</li>
<li><code>django.contrib.contenttypes</code> – 内容类型框架。</li>
<li><code>django.contrib.sessions</code> – 会话框架。</li>
<li><code>django.contrib.messages</code>– 消息框架。</li>
<li><code>django.contrib.staticfiles</code> – 管理静态文件的框架。</li>
</ul>
<p>这些应用被默认启用是为了给常规项目提供方便。</p>
</blockquote>
<p>默认开启的某些应用需要至少一个数据表，所以，在使用他们之前需要在数据库中创建一些表。请执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py migrate</span><br></pre></td></tr></table></figure>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511161637443.png" alt="image-20230511161637443" style="zoom:67%;" /> 
<p>这个 <code>migrate</code>命令查看 <code>INSTALLED_APPS</code> 配置，并根据 <code>mysite/settings.py</code> 文件中的数据库配置和随应用提供的数据库迁移文件（我们将在后面介绍这些），创建任何必要的数据库表。</p>
<p>你会看到它应用的每一个迁移都有一个消息。</p>
<p>如果你有兴趣，运行你的数据库的命令行客户端，输入 <code>\dt</code> （PostgreSQL）， <code>SHOW TABLES;</code> （MariaDB，MySQL）， <code>.tables</code> （SQLite）或 <code>SELECT TABLE_NAME FROM USER_TABLES;</code> （Oracle）来显示 Django 创建的表。</p>
<blockquote>
<p>写给极简主义者</p>
<p>就像之前说的，为了方便大多数项目，我们默认激活了一些应用，但并不是每个人都需要它们。如果你不需要某个或某些应用，你可以在运行 <code>migrate</code>前毫无顾虑地从 <code>INSTALLED_APPS</code> 里注释或者删除掉它们。 <code>migrate</code> 命令只会为在 <code>INSTALLED_APPS</code>里声明了的应用进行数据库迁移。</p>
</blockquote>
</blockquote>
</li>
</ul>
<h3 id="2-2-创建模型">2.2 创建模型</h3>
<blockquote>
<p>在 Django 里写一个数据库驱动的 Web 应用的第一步是定义模型</p>
<p>也就是数据库结构设计和附加的其它元数据。</p>
<blockquote>
<p>设计哲学</p>
<p>一个模型就是单个定义你的数据的信息源。模型中包含了不可缺少的数据区域和你存储数据的行为。Django 遵循 <a href="https://docs.djangoproject.com/zh-hans/4.2/misc/design-philosophies/#dry">DRY 原则</a>。目的就是定义你的数据模型要在一位置上，而且自动从该位置推导一些事情。</p>
<p>来介绍一下迁移 - 举个例子，不像 Ruby On Rails，Django 的迁移代码是由你的模型文件自动生成的，它本质上是个历史记录，Django 可以用它来进行数据库的滚动更新，通过这种方式使其能够和当前的模型匹配。</p>
</blockquote>
</blockquote>
<ul>
<li>
<p>在这个投票应用中，需要创建两个模型：问题 <code>Question</code> 和选项 <code>Choice</code>。</p>
<ul>
<li><code>Question</code> 模型包括问题描述和发布时间。</li>
<li><code>Choice</code> 模型有两个字段，选项描述和当前得票数。</li>
</ul>
<p>每个选项属于一个问题。</p>
<p>这些概念可以通过一个 Python 类来描述。按照下面的例子来编辑 <code>polls/models.py</code> 文件：</p>
<p><code>polls/models.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Question</span>(models.Model):</span><br><span class="line">    question_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    pub_date = models.DateTimeField(<span class="string">&quot;date published&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Choice</span>(models.Model):</span><br><span class="line">    question = models.ForeignKey(Question, on_delete=models.CASCADE)</span><br><span class="line">    choice_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    votes = models.IntegerField(default=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>代码解释：</p>
<ul>
<li>
<p>每个模型被表示为 <code>django.db.models.Model</code> 类的子类。每个模型有许多类变量，它们都表示模型里的一个数据库字段。</p>
<blockquote>
<p>每个字段都是 <code>Field</code> 类的实例 - 比如，字符字段被表示为 <code>CharField</code>，日期时间字段被表示为 <code>DateTimeField</code>。这将告诉 Django 每个字段要处理的数据类型。</p>
</blockquote>
</li>
<li>
<p>每个 <code>Field</code> 类实例变量的名字（例如 <code>question_text</code> 或 <code>pub_date</code> ）也是字段名，所以最好使用对机器友好的格式。你将会在 Python 代码里使用它们，而数据库会将它们作为列名。</p>
<blockquote>
<p>你可以使用可选的选项来为 <code>Field</code> 定义一个人类可读的名字。这个功能在很多 Django 内部组成部分中都被使用了，而且作为文档的一部分。如果某个字段没有提供此名称，Django 将会使用对机器友好的名称，也就是变量名。</p>
<p>在上面的例子中，我们只为 <code>Question.pub_date</code> 定义了对人类友好的名字。对于模型内的其它字段，它们的机器友好名也会被作为人类友好名使用。</p>
</blockquote>
</li>
<li>
<p>定义某些 <code>Field</code>类实例需要参数。</p>
<blockquote>
<p>例如 <code>CharField</code> 需要一个 <code>max_length</code> 参数。这个参数的用处不止于用来定义数据库结构，也用于验证数据，我们稍后将会看到这方面的内容。</p>
</blockquote>
</li>
<li>
<p><code>Field</code>也能够接收多个可选参数；在上面的例子中：我们将 <code>votes</code> 的 <code>default</code> 也就是默认值，设为0。</p>
</li>
<li>
<p>注意在最后，我们使用 <code>ForeignKey</code>定义了一个关系。</p>
<blockquote>
<p>这将告诉 Django，每个 <code>Choice</code> 对象都关联到一个 <code>Question</code> 对象。Django 支持所有常用的数据库关系：多对一、多对多和一对一。</p>
</blockquote>
</li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="2-3-激活模型">2.3 激活模型</h3>
<blockquote>
<p>上面的一小段用于创建模型的代码给了 Django 很多信息，通过这些信息，Django 可以：</p>
<ul>
<li>为这个应用创建数据库 schema（生成 <code>CREATE TABLE</code> 语句）。</li>
<li>创建可以与 <code>Question</code> 和 <code>Choice</code> 对象进行交互的 Python 数据库 API。</li>
</ul>
<p>但是首先得把 <code>polls</code> 应用安装到我们的项目里。</p>
<blockquote>
<p>设计哲学</p>
<p>Django 应用是“可插拔”的。你可以在多个项目中使用同一个应用。除此之外，你还可以发布自己的应用，因为它们并不会被绑定到当前安装的 Django 上。</p>
</blockquote>
</blockquote>
<ul>
<li>
<p>为了在我们的工程中包含这个应用，我们需要在配置类 <code>INSTALLED_APPS</code> 中添加设置。</p>
<blockquote>
<p>因为 <code>PollsConfig</code> 类写在文件 <code>polls/apps.py</code> 中，所以它的点式路径是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;polls.apps.PollsConfig&#x27;</span></span><br></pre></td></tr></table></figure>
<p>在文件 <code>mysite/settings.py</code> 中 <code>INSTALLED_APPS</code>子项添加点式路径后，它看起来像这样：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511163554111.png" alt="image-20230511163554111" style="zoom:67%;" /> 
</blockquote>
</li>
<li>
<p>现在你的 Django 项目会包含 <code>polls</code> 应用。接着运行下面的命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py makemigrations polls</span><br></pre></td></tr></table></figure>
<blockquote>
<p>你将会看到类似于下面这样的输出：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511163706521.png" alt="image-20230511163706521" style="zoom: 67%;" /> 
<ul>
<li>
<p>通过运行 <code>makemigrations</code> 命令，Django 会检测你对模型文件的修改（在这种情况下，你已经取得了新的），并且把修改的部分储存为一次 <em>迁移</em>。</p>
<blockquote>
<ul>
<li>
<p><strong>迁移</strong>是 Django 对于模型定义（也就是你的数据库结构）的变化的储存形式</p>
<p>它们其实也只是一些你磁盘上的文件。如果你想的话，你可以阅读一下你模型的迁移数据，它被储存在 <code>polls/migrations/0001_initial.py</code> 里。别担心，你不需要每次都阅读迁移文件，但是它们被设计成人类可读的形式，这是为了便于你手动调整 Django 的修改方式。</p>
</li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
</li>
<li>
<p>Django 有一个自动执行数据库迁移并同步管理你的数据库结构的命令 ，这个命令是 <code>migrate</code>。</p>
<blockquote>
<p>我们马上就会接触它 - 但是首先，让我们看看迁移命令会执行哪些 SQL 语句。</p>
<p><code>sqlmigrate</code> 命令接收一个迁移的名称，然后返回对应的 SQL：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py sqlmigrate polls 0001</span><br></pre></td></tr></table></figure>
<p>你将会看到类似下面这样的输出：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511164322675.png" alt="image-20230511164322675" style="zoom: 67%;" />
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">BEGIN;</span><br><span class="line">--</span><br><span class="line">-- Create model Question</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &quot;polls_question&quot; (</span><br><span class="line">    &quot;id&quot; bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,</span><br><span class="line">    &quot;question_text&quot; varchar(200) NOT NULL,</span><br><span class="line">    &quot;pub_date&quot; timestamp with time zone NOT NULL</span><br><span class="line">);</span><br><span class="line">--</span><br><span class="line">-- Create model Choice</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &quot;polls_choice&quot; (</span><br><span class="line">    &quot;id&quot; bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,</span><br><span class="line">    &quot;choice_text&quot; varchar(200) NOT NULL,</span><br><span class="line">    &quot;votes&quot; integer NOT NULL,</span><br><span class="line">    &quot;question_id&quot; bigint NOT NULL</span><br><span class="line">);</span><br><span class="line">ALTER TABLE &quot;polls_choice&quot;</span><br><span class="line">  ADD CONSTRAINT &quot;polls_choice_question_id_c5b4b260_fk_polls_question_id&quot;</span><br><span class="line">    FOREIGN KEY (&quot;question_id&quot;)</span><br><span class="line">    REFERENCES &quot;polls_question&quot; (&quot;id&quot;)</span><br><span class="line">    DEFERRABLE INITIALLY DEFERRED;</span><br><span class="line">CREATE INDEX &quot;polls_choice_question_id_c5b4b260&quot; ON &quot;polls_choice&quot; (&quot;question_id&quot;);</span><br><span class="line"></span><br><span class="line">COMMIT;</span><br></pre></td></tr></table></figure>
<p>请注意以下几点：</p>
<ul>
<li>输出的内容和你使用的数据库有关，上面的输出示例使用的是 PostgreSQL。</li>
<li>数据库的表名是由应用名(<code>polls</code>)和模型名的小写形式( <code>question</code> 和 <code>choice</code>)连接而来。（如果需要，你可以自定义此行为。）</li>
<li>主键(IDs)会被自动创建。(当然，你也可以自定义。)</li>
<li>默认的，Django 会在外键字段名后追加字符串 <code>&quot;_id&quot;</code> 。（同样，这也可以自定义。）</li>
<li>外键关系由 <code>FOREIGN KEY</code> 生成。你不用关心 <code>DEFERRABLE</code> 部分，它只是告诉 PostgreSQL，请在事务全都执行完之后再创建外键关系。</li>
<li>它是为你正在使用的数据库定制的，因此特定于数据库的字段类型，例如“auto_increment”（MySQL）、“bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY”（PostgreSQL）或“integer primary key autoincrement” `` (SQLite) 会自动为您处理。 字段名称的引用也是如此——例如，使用双引号或单引号。</li>
<li>这个 <code>sqlmigrate</code>命令并没有真正在你的数据库中的执行迁移 - 相反，它只是把命令输出到屏幕上，让你看看 Django 认为需要执行哪些 SQL 语句。这在你想看看 Django 到底准备做什么，或者当你是数据库管理员，需要写脚本来批量处理数据库时会很有用。</li>
</ul>
<p>如果你感兴趣，你也可以试试运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python manage.py check</span><br></pre></td></tr></table></figure>
<p>这个命令帮助你检查项目中的问题，并且在检查过程中不会对数据库进行任何操作。</p>
</blockquote>
</li>
<li>
<p>现在，再次运行 <code>migrate</code> 命令，在数据库里创建新定义的模型的数据表：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py migrate</span><br></pre></td></tr></table></figure>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511164953600.png" alt="image-20230511164953600" style="zoom:67%;" /> 
<p>这个 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/django-admin/#django-admin-migrate"><code>migrate</code></a> 命令选中所有还没有执行过的迁移（Django 通过在数据库中创建一个特殊的表 <code>django_migrations</code> 来跟踪执行过哪些迁移）并应用在数据库上 - 也就是将你对模型的更改同步到数据库结构上。</p>
<blockquote>
<p>迁移是非常强大的功能，它能让你在开发过程中持续的改变数据库结构而不需要重新删除和创建表 - 它专注于使数据库平滑升级而不会丢失数据。</p>
</blockquote>
<p>我们会在后面的教程中更加深入的学习这部分内容，</p>
<p>现在，你只需要记住，==改变模型需要这三步==：</p>
<ul>
<li>编辑 <code>models.py</code> 文件，改变模型。</li>
<li>运行 <code>python manage.py makemigrations</code> 为模型的改变生成迁移文件。</li>
<li>运行 <code>python manage.py migrate</code>来应用数据库迁移。</li>
</ul>
<blockquote>
<p>数据库迁移被分解成生成和应用两个命令是为了让你能够在代码控制系统上提交迁移数据并使其能在多个应用里使用；这不仅仅会让开发更加简单，也给别的开发者和生产环境中的使用带来方便。</p>
<p>通过阅读文档 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/django-admin/">Django 后台文档</a> ，你可以获得关于 <code>manage.py</code> 工具的更多信息。</p>
</blockquote>
</blockquote>
</li>
</ul>
<h3 id="2-4-初试-API">2.4 初试 API</h3>
<blockquote>
<p>现在让我们进入交互式 Python 命令行，尝试一下 Django 为你创建的各种 API。</p>
</blockquote>
<ul>
<li>
<p>通过以下命令打开 Python 命令行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py shell</span><br></pre></td></tr></table></figure>
<blockquote>
<p>我们使用这个命令而不是简单的使用“python”是因为 <code>manage.py</code> 会设置 <code>DJANGO_SETTINGS_MODULE</code>环境变量，</p>
<p>这个变量会让 Django 根据 <code>mysite/settings.py</code> 文件来设置 Python 包的导入路径。</p>
</blockquote>
<p>进入Shell交互命令行，能做什么？</p>
<ul>
<li>操作models （Django 已经为你创建了对应的API ）</li>
</ul>
<blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from polls.models import Choice, Question  <span class="comment"># Import the model classes we just wrote.</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">No questions are <span class="keyword">in</span> the system yet.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Question.objects.all()</span></span><br><span class="line">&lt;QuerySet []&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Create a new Question.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Support <span class="keyword">for</span> time zones is enabled <span class="keyword">in</span> the default settings file, so</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Django expects a datetime with tzinfo <span class="keyword">for</span> pub_date. Use timezone.now()</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">instead of datetime.datetime.now() and it will <span class="keyword">do</span> the right thing.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from django.utils import timezone</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q = Question(question_text=<span class="string">&quot;What&#x27;s new?&quot;</span>, pub_date=timezone.now())</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Save the object into the database. You have to call save() explicitly.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q.save()</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Now it has an ID.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q.id</span></span><br><span class="line">1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Access model field values via Python attributes.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q.question_text</span></span><br><span class="line">&quot;What&#x27;s new?&quot;</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q.pub_date</span></span><br><span class="line">datetime.datetime(2012, 2, 26, 13, 0, 0, 775217, tzinfo=datetime.timezone.utc)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Change values by changing the attributes, <span class="keyword">then</span> calling save().</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q.question_text = <span class="string">&quot;What&#x27;s up?&quot;</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q.save()</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">objects.all() displays all the questions <span class="keyword">in</span> the database.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Question.objects.all()</span></span><br><span class="line">&lt;QuerySet [&lt;Question: Question object (1)&gt;]&gt;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li>
<p>添加<code>str</code>方法</p>
<blockquote>
<p><code>&lt;Question: Question object (1)&gt;</code> 对于我们了解这个对象的细节没什么帮助。</p>
<p>让我们通过编辑 <code>Question</code> 模型的代码（位于 <code>polls/models.py</code> 中）来修复这个问题。</p>
<p>给 <code>Question</code> 和 <code>Choice</code> 增加 <code>__str__()</code>方法。</p>
<p><code>polls/models.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Question</span>(models.Model):</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.question_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Choice</span>(models.Model):</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.choice_text</span><br></pre></td></tr></table></figure>
<p>给模型增加 <code>__str__()</code>方法是很重要的，这不仅仅能给你在命令行里使用带来方便，Django 自动生成的 admin 里也使用这个方法来表示对象。</p>
<p>让我们再为此模型添加一个自定义方法：</p>
<p><code>polls/models.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Question</span>(models.Model):</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">was_published_recently</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.pub_date &gt;= timezone.now() - datetime.timedelta(days=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511185059293.png" alt="image-20230511185059293" style="zoom:67%;" /> 
<ul>
<li>
<p>新加入的 <code>import datetime</code> 和 <code>from django.utils import timezone</code></p>
<p>分别导入了 Python 的标准 <a href="https://docs.python.org/3/library/datetime.html#module-datetime"><code>datetime</code></a> 模块和 Django 中和时区相关的 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/utils/#module-django.utils.timezone"><code>django.utils.timezone</code></a> 工具模块。</p>
<blockquote>
<p>如果你不太熟悉 Python 中的时区处理，看看 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/i18n/timezones/">时区支持文档</a> 吧。</p>
</blockquote>
</li>
</ul>
</blockquote>
</li>
<li>
<p>再次操作Shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from polls.models import Choice, Question</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Make sure our __str__() addition worked.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Question.objects.all()</span></span><br><span class="line">&lt;QuerySet [&lt;Question: What&#x27;s up?&gt;]&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Django provides a rich database lookup API that<span class="string">&#x27;s entirely driven by</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">keyword arguments.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; Question.objects.filter(id=1)</span></span></span><br><span class="line">&lt;QuerySet [&lt;Question: What&#x27;s up?&gt;]&gt;</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; Question.objects.filter(question_text__startswith=&quot;What&quot;)</span></span></span><br><span class="line">&lt;QuerySet [&lt;Question: What&#x27;s up?&gt;]&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Get the question that was published this year.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; from django.utils import timezone</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; current_year = timezone.now().year</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; Question.objects.get(pub_date__year=current_year)</span></span></span><br><span class="line">&lt;Question: What&#x27;s up?&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Request an ID that doesn&#x27;</span>t exist, this will raise an exception.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Question.objects.get(<span class="built_in">id</span>=2)</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">    ...</span><br><span class="line">DoesNotExist: Question matching query does not exist.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Lookup by a primary key is the most common <span class="keyword">case</span>, so Django provides a</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">shortcut <span class="keyword">for</span> primary-key exact lookups.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">The following is identical to Question.objects.get(<span class="built_in">id</span>=1).</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Question.objects.get(pk=1)</span></span><br><span class="line">&lt;Question: What&#x27;s up?&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Make sure our custom method worked.</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q = Question.objects.get(pk=1)</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; q.was_published_recently()</span></span><br><span class="line">True</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Give the Question a couple of Choices. The create call constructs a new</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Choice object, does the INSERT statement, adds the choice to the <span class="built_in">set</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">of available choices and returns the new Choice object. Django creates</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">a <span class="built_in">set</span> to hold the <span class="string">&quot;other side&quot;</span> of a ForeignKey relation</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">(e.g. a question<span class="string">&#x27;s choice) which can be accessed via the API.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; q = Question.objects.get(pk=1)</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Display any choices from the related object set -- none so far.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; q.choice_set.all()</span></span></span><br><span class="line">&lt;QuerySet []&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Create three choices.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; q.choice_set.create(choice_text=&quot;Not much&quot;, votes=0)</span></span></span><br><span class="line">&lt;Choice: Not much&gt;</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; q.choice_set.create(choice_text=&quot;The sky&quot;, votes=0)</span></span></span><br><span class="line">&lt;Choice: The sky&gt;</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; c = q.choice_set.create(choice_text=&quot;Just hacking again&quot;, votes=0)</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Choice objects have API access to their related Question objects.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; c.question</span></span></span><br><span class="line">&lt;Question: What&#x27;s up?&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">And vice versa: Question objects get access to Choice objects.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; q.choice_set.all()</span></span></span><br><span class="line">&lt;QuerySet [&lt;Choice: Not much&gt;, &lt;Choice: The sky&gt;, &lt;Choice: Just hacking again&gt;]&gt;</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; q.choice_set.count()</span></span></span><br><span class="line">3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">The API automatically follows relationships as far as you need.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Use double underscores(双下划线) to separate relationships.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">This works as many levels deep as you want; there&#x27;</span>s no <span class="built_in">limit</span>.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Find all Choices <span class="keyword">for</span> any question whose pub_date is <span class="keyword">in</span> this year</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">(reusing the <span class="string">&#x27;current_year&#x27;</span> variable we created above).</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Choice.objects.filter(question__pub_date__year=current_year)</span></span><br><span class="line">&lt;QuerySet [&lt;Choice: Not much&gt;, &lt;Choice: The sky&gt;, &lt;Choice: Just hacking again&gt;]&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Let<span class="string">&#x27;s delete one of the choices. Use delete() for that.</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; c = q.choice_set.filter(choice_text__startswith=&quot;Just hacking&quot;)</span></span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="string">&gt;&gt; c.delete()</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>
<p>阅读 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/models/relations/">访问关系对象</a> 文档可以获取关于数据库关系的更多内容。</p>
</li>
<li>
<p>想知道关于双下划线的更多用法，参见 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/db/queries/#field-lookups-intro">查找字段</a> 文档。</p>
</li>
<li>
<p>数据库 API 的所有细节可以在 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/db/queries/">数据库 API 参考</a> 文档中找到。</p>
</li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="2-5-介绍-Django-管理页面">2.5 介绍 Django 管理页面</h3>
<blockquote>
<p>设计哲学</p>
<p>为你的员工或客户生成一个用户添加，修改和删除内容的后台是一项缺乏创造性和乏味的工作。因此，Django 全自动地根据模型创建后台界面。</p>
<p>Django 产生于一个公众页面和内容发布者页面完全分离的新闻类站点的开发过程中。站点管理人员使用管理系统来添加新闻、事件和体育时讯等，这些添加的内容被显示在公众页面上。Django 通过为站点管理人员创建统一的内容编辑界面解决了这个问题。</p>
<p>管理界面不是为了网站的访问者，而是为管理者准备的。</p>
</blockquote>
<h4 id="创建一个管理员账号">创建一个管理员账号</h4>
<ul>
<li>
<p>首先，我们得创建一个能登录管理页面的用户。请运行下面的命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py createsuperuser</span><br></pre></td></tr></table></figure>
<p>键入你想要使用的用户名，然后按下回车键：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Username: admin</span><br></pre></td></tr></table></figure>
<p>然后提示你输入想要使用的邮件地址：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Email address: admin@example.com</span><br></pre></td></tr></table></figure>
<p>最后一步是输入密码。你会被要求输入两次密码，第二次的目的是为了确认第一次输入的确实是你想要的密码。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Password: **********</span><br><span class="line">Password (again): *********</span><br><span class="line">Superuser created successfully.</span><br></pre></td></tr></table></figure>
<blockquote>
<p>我的密码使用是：admin0314</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511192431718.png" alt="image-20230511192431718" style="zoom:80%;" /> 
</blockquote>
</li>
</ul>
<h4 id="启动开发服务器">启动开发服务器</h4>
<ul>
<li>
<p>Django 的管理界面默认就是启用的。让我们启动开发服务器，看看它到底是什么样的。</p>
<p>如果开发服务器未启动，用以下命令启动它：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">...\&gt; py manage.py runserver</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>现在，打开浏览器，转到你本地域名的 “/admin/” 目录，</p>
<p>比如 <code>http://127.0.0.1:8000/admin/ </code>。你应该会看见管理员登录界面：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511192719714.png" alt="image-20230511192719714" style="zoom: 50%;" /> 
<blockquote>
<p>因为 <a href="https://docs.djangoproject.com/zh-hans/4.2/topics/i18n/translation/">翻译</a> 功能默认是开启的，如果你设置了 <a href="https://docs.djangoproject.com/zh-hans/4.2/ref/settings/#std-setting-LANGUAGE_CODE"><code>LANGUAGE_CODE</code></a>，登录界面将显示你设置的语言（如果 Django 有相应的翻译）。</p>
</blockquote>
</blockquote>
</li>
</ul>
<h4 id="进入管理站点页面">进入管理站点页面</h4>
<ul>
<li>
<p>现在，试着使用你在上一步中创建的超级用户来登录。然后你将会看到 Django 管理页面的索引页：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511192844441.png" alt="image-20230511192844441" style="zoom: 50%;" /> 
</blockquote>
<p>你将会看到几种可编辑的内容：组和用户。</p>
<p>它们是由 <code>django.contrib.auth</code>提供的，这是 Django 开发的认证框架。</p>
</li>
</ul>
<h4 id="向管理页面中加入投票应用">向管理页面中加入投票应用</h4>
<blockquote>
<p>但是我们的投票应用在哪呢？它没在索引页面里显示。</p>
<p>只需要再做一件事：</p>
<p>我们得告诉管理，问题 <code>Question</code> 对象需要一个后台接口。</p>
</blockquote>
<ul>
<li>
<p>打开 <code>polls/admin.py</code> 文件，把它编辑成下面这样</p>
<p><code>polls/admin.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line">admin.site.register(Question)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="体验便捷的管理功能">体验便捷的管理功能</h4>
<ul>
<li>
<p>现在我们向管理页面注册了问题 <code>Question</code> 类。</p>
<p>Django 知道它应该被显示在索引页里：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511193227553.png" alt="image-20230511193227553" style="zoom:67%;" /> 
</blockquote>
</li>
<li>
<p>点击 “Questions” 。</p>
<blockquote>
<p>现在看到是问题 “Questions” 对象的列表 “change list” 。</p>
<p>这个界面会显示所有数据库里的问题 Question 对象，你可以选择一个来修改。</p>
<p>这里现在有我们在上一部分中创建的 “What’s up?” 问题。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511193405499.png" alt="image-20230511193405499" style="zoom: 43%;" /> 
</blockquote>
</li>
<li>
<p>点击 “What’s up?” 来编辑这个问题（Question）对象：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511193459916.png" alt="image-20230511193459916" style="zoom:43%;" /> 
<blockquote>
<p>注意事项：</p>
<ul>
<li>这个表单是从问题 <code>Question</code> 模型中自动生成的</li>
<li>不同的字段类型（日期时间字段 <code>DateTimeField</code> 、字符字段 <code>CharField</code>）会生成对应的 HTML 输入控件。每个类型的字段都知道它们该如何在管理页面里显示自己。</li>
<li>每个日期时间字段 <code>DateTimeField</code>都有 JavaScript 写的快捷按钮。日期有转到今天（Today）的快捷按钮和一个弹出式日历界面。时间有设为现在（Now）的快捷按钮和一个列出常用时间的方便的弹出式列表。</li>
</ul>
<p>页面的底部提供了几个选项：</p>
<ul>
<li>保存（Save） - 保存改变，然后返回对象列表。</li>
<li>保存并继续编辑（Save and continue editing） - 保存改变，然后重新载入当前对象的修改界面。</li>
<li>保存并新增（Save and add another） - 保存改变，然后添加一个新的空对象并载入修改界面。</li>
<li>删除（Delete） - 显示一个确认删除页面。</li>
</ul>
<p>如果显示的 “发布日期(Date Published)” 和你在 教程 1 里创建它们的时间不一致，这意味着你可能没有正确的设置 <code>TIME_ZONE</code>。改变设置，然后重新载入页面看看是否显示了正确的值。</p>
</blockquote>
</blockquote>
</li>
<li>
<p>编辑一下</p>
<p>通过点击 “今天(Today)” 和 “现在(Now)” 按钮改变 “发布日期(Date Published)”。</p>
<p>然后点击 “保存并继续编辑(Save and add another)”按钮。</p>
<p>然后点击右上角的 “历史(History)”按钮。</p>
<p>你会看到一个列出了所有通过 Django 管理页面对当前对象进行的改变的页面，其中列出了时间戳和进行修改操作的用户名：</p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230511193953423.png" alt="image-20230511193953423" style="zoom: 80%;" /> 
</blockquote>
</li>
<li>
<p>当你熟悉了数据库 API 之后，你就可以开始阅读 教程第 3 部分，</p>
<p>下一部分我们将会学习如何为投票应用添加更多视图。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>《LaTeX》模板</title>
    <url>/butterflyblog/2023/08/23/%E3%80%8ALaTeX%E3%80%8B%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h1>《LaTeX》模板</h1>
<h2 id="一、总体架构">一、总体架构</h2>
<h3 id="1-1-外壳模板">1.1 外壳模板</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexrep&#125;</span><br><span class="line"><span class="comment">% \usepackage&#123;ctex&#125;</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;pdfpages&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;float&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;listings&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;geometry&#125;</span><br><span class="line"><span class="comment">% \geometry&#123;left=3cm,right=3cm&#125;</span></span><br><span class="line"><span class="keyword">\title</span>&#123;标题&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;作者&#125;</span><br><span class="line"><span class="keyword">\date</span>&#123;<span class="keyword">\today</span>&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="comment">% 开始</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 结束</span></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二、插入内容">二、插入内容</h2>
<h3 id="2-1-章节结构">2.1 章节结构</h3>
<ul>
<li>库包</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">无需</span><br></pre></td></tr></table></figure>
<ul>
<li>写法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\chapter</span>&#123;我是一级标题&#125;</span><br><span class="line">我是一级标题的直接下属内容。</span><br><span class="line">    <span class="keyword">\section</span>&#123;我是二级标题&#125;</span><br><span class="line">    我是二级标题的直接下属内容。</span><br><span class="line">        <span class="keyword">\subsection</span>&#123;我是三级标题&#125;</span><br><span class="line">        我是三级标题的直接下属内容。</span><br><span class="line">        <span class="keyword">\subsubsection</span>&#123;我是四级标题&#125;</span><br><span class="line">        我是四级标题的直接下属内容，注意四级标题没有序号，也不会写入目录哦。</span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/latex2/image-20230823002224527.png" alt="image-20230823002224527" style="zoom:80%;" />
<h3 id="2-2-表格">2.2 表格</h3>
<ul>
<li>库包</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;float&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>写法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;table&#125;[H]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\begin</span>&#123;tabular&#125;[center]&#123;c c c c&#125;</span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        学号 <span class="built_in">&amp;</span> 姓名 <span class="built_in">&amp;</span> 专业 <span class="built_in">&amp;</span> 联系方式 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        001 <span class="built_in">&amp;</span> 小明 <span class="built_in">&amp;</span> 炒菜 <span class="built_in">&amp;</span> 10086 <span class="keyword">\\</span></span><br><span class="line">        002 <span class="built_in">&amp;</span> 小红 <span class="built_in">&amp;</span> 做饭 <span class="built_in">&amp;</span> 10087 <span class="keyword">\\</span></span><br><span class="line">        003 <span class="built_in">&amp;</span> 小蓝 <span class="built_in">&amp;</span> 打水 <span class="built_in">&amp;</span> 10088 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;表格标题&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/latex2/image-20230823003353189.png" alt="image-20230823003353189" style="zoom:80%;" />
<h3 id="2-3-图片">2.3 图片</h3>
<ul>
<li>库包</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;float&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>写法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[H] </span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=0.9<span class="keyword">\textwidth</span>]&#123;图片路径&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;图片标题&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/latex2/image-20230823002715811.png" alt="image-20230823002715811" style="zoom:80%;" />
<h3 id="2-4-代码">2.4 代码</h3>
<ul>
<li>库包</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;listings&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>写法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;lstlisting&#125;</span><br><span class="line">    <span class="params">#</span>include &lt;iostream&gt;</span><br><span class="line">    using namespace std;</span><br><span class="line">    </span><br><span class="line">    int main()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;&quot;hello&quot;&lt;&lt;endl;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;lstlisting&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/latex2/image-20230823003618293.png" alt="image-20230823003618293" style="zoom:80%;" /> 
<h3 id="2-5-参考文献">2.5 参考文献</h3>
<ul>
<li>库包</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">无需</span><br></pre></td></tr></table></figure>
<ul>
<li>写法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;thebibliography&#125;&#123;99&#125;</span><br><span class="line">    <span class="keyword">\bibitem</span>&#123;book1&#125;潘爱民[译],(美)安德鲁·S.特南鲍姆.计算机网络（第6版）,教材读本.</span><br><span class="line">    <span class="keyword">\bibitem</span>&#123;art1&#125;邓雅韫.政府办公网络的安全建设[J].现代计算机(专业版),2001(09):63-65.</span><br><span class="line"><span class="keyword">\end</span>&#123;thebibliography&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>前后文中，引用标使用下面语法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">这里是一个引用<span class="keyword">\cite</span>&#123;book1&#125;。</span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/latex2/image-20230823004538573.png" alt="image-20230823004538573" style="zoom:80%;" />
<h3 id="2-6-插入封面">2.6 插入封面</h3>
<ul>
<li>原生写法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\maketitle</span></span><br></pre></td></tr></table></figure>
<ul>
<li>库包</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;pdfpages&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>写法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 插入封面</span></span><br><span class="line"><span class="comment">% \maketitle</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;titlepage&#125;	</span><br><span class="line">    <span class="comment">% 封面信息</span></span><br><span class="line">    <span class="keyword">\includepdf</span>[pages=&#123;1&#125;]&#123;cover.pdf&#125; <span class="comment">%曲线救国的思路，外界自建封面，然后调用</span></span><br><span class="line"><span class="keyword">\end</span>&#123;titlepage&#125;</span><br><span class="line"><span class="comment">% 封面</span></span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>效果</p>
<p>效果就是单独一页，显示为插入的页面。</p>
<p>由于是封面，不会计入目录的页数计算。</p>
</li>
</ul>
<h3 id="2-7-插入目录">2.7 插入目录</h3>
<ul>
<li>库包</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">无需</span><br></pre></td></tr></table></figure>
<ul>
<li>写法</li>
</ul>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 目录</span></span><br><span class="line"><span class="keyword">\tableofcontents</span></span><br></pre></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/latex2/image-20230823005618237.png" alt="image-20230823005618237" style="zoom:80%;" />
]]></content>
      <categories>
        <category>通用知识</category>
      </categories>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>《LaTeX》Notes</title>
    <url>/butterflyblog/2023/08/01/%E3%80%8ALaTeX%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《LaTeX》Notes</h1>
<blockquote>
<h4 id="官网：LaTeX">官网：<a href="https://www.latex-project.org/">LaTeX</a></h4>
<h4 id="知识来源：b站-latex中文教程">知识来源：b站 <a href="https://www.bilibili.com/video/BV15x411j7k6/">latex中文教程</a></h4>
</blockquote>
<h3 id="！！！长文警告！！！">！！！长文警告！！！</h3>
<blockquote>
<h4 id="速记">速记</h4>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line">&gt;<span class="comment">% 中文包</span></span><br><span class="line">&gt;<span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"></span><br><span class="line">&gt;<span class="comment">% 插图表格浮动体</span></span><br><span class="line">&gt;<span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line">&gt;<span class="comment">% 数学公式包</span></span><br><span class="line">&gt;<span class="keyword">\usepackage</span>&#123;amsmath&#125;</span><br><span class="line">&gt;<span class="keyword">\usepackage</span>&#123;amssymb&#125;</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="第一章、前言">第一章、前言</h2>
<h3 id="1-1-安装-Texlive">1.1 安装 Texlive</h3>
<ul>
<li>
<p>下载官网：<a href="https://tug.org/texlive/">Tex Live</a></p>
</li>
<li>
<p>安装时间较长</p>
</li>
</ul>
<h3 id="1-2-基本操作">1.2 基本操作</h3>
<h4 id="1-2-1-版本">1.2.1 版本</h4>
<ul>
<li>
<p>打开命令行窗口</p>
</li>
<li>
<p>检查三个版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tex -v</span><br><span class="line">latex -v</span><br><span class="line">xelatex -v</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex1.png" alt=""></p>
</li>
<li>
<p>更新命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tlmgr update --all</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex2.png" alt=""></p>
</li>
</ul>
<h4 id="1-2-2-编写">1.2.2 编写</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /				#切换到工作目录下</span><br><span class="line">mkdir testLatex		#创建一个文件夹</span><br><span class="line">cd testLatex		#切换到文件夹下</span><br><span class="line">notepad test.tex	#创建一个tex文件</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">写入内容...</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译方法一</span></span><br><span class="line">latex test.tex		#编译latex文件，得到dvi文件</span><br><span class="line">dvipdfmx test.dvi	#把div文件转为pdf文件</span><br><span class="line">test.pdf			#打开查看pdf文件</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编译方法二</span></span><br><span class="line">xelatex test.tex	#直接生成pdf文件</span><br><span class="line">test.pdf			#打开查看pdf文件</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">删除多余文件</span></span><br><span class="line">del *.aux *.log *.dvi	#删除同时带来的aux/log/dvi文件</span><br></pre></td></tr></table></figure>
<ul>
<li>创建、写入文件</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex3.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex4.png" alt=""></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">Hello \LaTeX.</span><br><span class="line"></span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>方法一：先生成 dvi ，再生成 pdf</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex5.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex6.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex7.png" alt=""></p>
<ul>
<li>方法二：直接生成pdf 文件</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex8.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex9.png" alt=""></p>
<h4 id="1-2-3-批处理文件">1.2.3 批处理文件</h4>
<p>你也可以把命令行操作都放在bat文件中，</p>
<p>然后每次执行这个批处理文件即可。</p>
<ul>
<li>
<p>编写批处理文件<code>.bat</code>：</p>
<p><code>build.bat</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">latex test.tex</span><br><span class="line">dvipdfmx test.dvi</span><br><span class="line">del *.aux *.dvi *.log</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex10.png" alt=""></p>
<blockquote>
<p>当然，你写编译方法二的编译也是可以的。</p>
</blockquote>
</li>
<li>
<p>运行批处理文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">build</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex11.png" alt=""></p>
<p>可以看到，会自动执行命令了。</p>
</li>
</ul>
<h4 id="1-2-5-采用中文">1.2.5 采用中文</h4>
<ul>
<li>
<p>先检查<code>.tex</code>文件是不是<code>utf-8</code>编码的</p>
<blockquote>
<p>点击 文件 | 另存为</p>
<p>可以看到有编码格式查看，</p>
<p>若不是 utf-8，可以先另存为 utf-8 并覆盖原文件。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex12.png" alt=""></p>
</blockquote>
</li>
<li>
<p>引入中文宏包</p>
<p>在 .tex 文件中引入中文包之后就可以使用中文了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line"></span><br><span class="line">\usepackage&#123;ctex&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">你好呀，\LaTeX.</span><br><span class="line"></span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex13.png" alt=""></p>
</li>
<li>
<p>编译并查看结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">build</span><br><span class="line">test.pdf</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex14.png" alt=""></p>
</li>
</ul>
<h3 id="1-3-使用编写软件">1.3 使用编写软件</h3>
<h4 id="1-3-1-多种软件">1.3.1 多种软件</h4>
<p>编写软件并没有要求，可以使用 记事本都可以。</p>
<p>关键是，有些软件可以把 cmd 命令集成在软件中，那么操作就会非常方便。</p>
<ul>
<li>TexWorks</li>
<li>TexStudio</li>
<li>VScode</li>
<li>…</li>
</ul>
<h4 id="1-3-2-TexWorks">1.3.2 TexWorks</h4>
<ul>
<li>
<p>一般会自带</p>
</li>
<li>
<p>打开效果</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex15.png" alt=""></p>
</li>
<li>
<p>编译只需要点击左上角的播放图标即可</p>
</li>
</ul>
<blockquote>
<p>但是没有提示效果，所以建议采用VScode</p>
</blockquote>
<h4 id="1-3-3-VScode">1.3.3 VScode</h4>
<h5 id="配置">配置</h5>
<ul>
<li>
<p>安装插件<code>LaTeX Workshop</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex16.png" alt=""></p>
</li>
<li>
<p>重启 VScode</p>
</li>
<li>
<p>打开VScode 设置，配置 <code>settings.json</code></p>
<blockquote>
<p>左下角 设置                           点击这个中间的按钮</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex17.png" alt=""><br>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex18.png" alt=""></p>
</blockquote>
<p><code>settings.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>   </span><br><span class="line">    <span class="comment">// 你已有的设置复制放在这下面</span></span><br><span class="line">   	</span><br><span class="line"></span><br><span class="line">    <span class="comment">//本次latex的设置 start</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.autoBuild.run&quot;</span><span class="punctuation">:</span> <span class="string">&quot;never&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.showContextMenu&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.intellisense.package.enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.message.error.show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.message.warning.show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;latexmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-synctex=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-interaction=nonstopmode&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-file-line-error&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-outdir=%OUTDIR%&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;%DOCFILE%&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.recipes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;XeLaTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PDFLaTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;BibTeX&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LaTeXmk&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;latexmk&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xelatex -&gt; bibtex -&gt; xelatex*2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;xelatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pdflatex -&gt; bibtex -&gt; pdflatex*2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tools&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;bibtex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;pdflatex&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.clean.fileTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;*.aux&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.bbl&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.blg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.idx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.ind&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.lof&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.lot&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.out&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.toc&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.acn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.acr&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.alg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.glg&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.glo&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.gls&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.ist&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.fls&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.log&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;*.fdb_latexmk&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.autoClean.run&quot;</span><span class="punctuation">:</span> <span class="string">&quot;onFailed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.latex.recipe.default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lastUsed&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;latex-workshop.view.pdf.internal.synctex.keybinding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;double-click&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 本次latex设置 end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="使用">使用</h5>
<ul>
<li>
<p>在工作文件夹下，以VScode 打开使用即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex19.png" alt=""></p>
</li>
<li>
<p>右上角有build</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex20.png" alt=""></p>
<p>build 之后，左下角若没有错误，就可以正常打开pdf了</p>
<blockquote>
<p>若出问题，可以打开VScode的问题窗口查看，</p>
<p>快捷键<code>ctrl + 上引号</code> 打开问题窗口和终端。</p>
</blockquote>
</li>
<li>
<p>整体效果</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex21.png" alt=""></p>
</li>
</ul>
<blockquote>
<p>备注：</p>
<p>配置了json文件设置，就会在左侧有操作 cmd</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex22.png" alt=""></p>
</blockquote>
<h2 id="第二章、语法">第二章、语法</h2>
<h3 id="2-1-基本结构">2.1 基本结构</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 导言区</span></span><br><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;  <span class="comment">% book,report,letter</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \usepackage&#123;ctex&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\degree</span>&#125;&#123;<span class="built_in">^</span><span class="keyword">\circ</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;<span class="keyword">\heiti</span> 杂谈勾股定理&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;<span class="keyword">\kaishu</span> 张三&#125;</span><br><span class="line"><span class="keyword">\date</span>&#123;<span class="keyword">\today</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 正文区（文稿区）</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"></span><br><span class="line">勾股定理可以使用现代语言表述为：直角三角形斜边的平方等于两腰的平方和。</span><br><span class="line"></span><br><span class="line">可以用符号语言表述为：设直角三角形 <span class="built_in">$</span>ABC<span class="built_in">$</span>，其中 <span class="built_in">$</span><span class="keyword">\angle</span> C=90<span class="keyword">\degree</span><span class="built_in">$</span>，则有：</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">    AB<span class="built_in">^</span>2 = BC<span class="built_in">^</span>2 + AC <span class="built_in">^</span>2</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"></span><br><span class="line">Let <span class="built_in">$</span>f(x)<span class="built_in">$</span> be defined by the formula <span class="built_in">$</span><span class="built_in">$</span>f(x)=3x<span class="built_in">^</span>2+x-1<span class="built_in">$</span><span class="built_in">$</span> which is a polynomial of degree 2.</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex23.png" alt=""></p>
<h3 id="2-2-字体设置">2.2  字体设置</h3>
<ul>
<li>字体属性
<ul>
<li>字体编码
<ul>
<li>正文字体编码：OT1、T1、EU1 等</li>
<li>数学字体编码：OML、MOS、OMX 等</li>
</ul>
</li>
<li>字体族
<ul>
<li>罗马字体：笔画起始处有装饰</li>
<li>无衬线字体：笔画起始处无装饰</li>
<li>打字机字体：每个字符宽度相等，又称等宽字体</li>
</ul>
</li>
<li>字体大小</li>
<li>字体系列
<ul>
<li>粗细</li>
<li>宽度</li>
</ul>
</li>
<li>字体形状
<ul>
<li>直立</li>
<li>斜体</li>
<li>伪斜体</li>
<li>小型大写</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex24.png" alt=""></p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\myfont</span>&#125;&#123;<span class="keyword">\textsf</span>&#123;<span class="keyword">\textbf</span>&#123;My Font Content&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;<span class="keyword">\heiti</span> 字体设置&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;Seymour&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;字体族&#125;</span><br><span class="line"><span class="comment">% 字体族设置</span></span><br><span class="line">原本：Origin Family，默认就是罗马字体</span><br><span class="line"></span><br><span class="line">(textrm):<span class="keyword">\textrm</span>&#123;Roman Family&#125;</span><br><span class="line"></span><br><span class="line">(textsf):<span class="keyword">\textsf</span>&#123;Sans Serif Family&#125;</span><br><span class="line"></span><br><span class="line">(texttt):<span class="keyword">\texttt</span>&#123;TypeWriter Family&#125;</span><br><span class="line"></span><br><span class="line">写在内部family也可以，如下</span><br><span class="line"></span><br><span class="line">(rmfamily):&#123;<span class="keyword">\rmfamily</span> inner things&#125;</span><br><span class="line"></span><br><span class="line">(sffamily):&#123;<span class="keyword">\sffamily</span> inner things&#125;</span><br><span class="line"></span><br><span class="line">(ttfamily):&#123;<span class="keyword">\ttfamily</span> inner things&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;粗细宽度&#125;</span><br><span class="line">外部text写法：</span><br><span class="line"></span><br><span class="line">(textmd):<span class="keyword">\textmd</span>&#123;Meddium Series&#125;</span><br><span class="line"></span><br><span class="line">(textbf):<span class="keyword">\textbf</span>&#123;Boldface Series&#125;</span><br><span class="line"></span><br><span class="line">内部series写法：</span><br><span class="line"></span><br><span class="line">(mdseries):&#123;<span class="keyword">\mdseries</span> Meddium Series&#125;</span><br><span class="line"></span><br><span class="line">(bfseries):&#123;<span class="keyword">\bfseries</span> Boldface Series&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;字体形状&#125;</span><br><span class="line">外部text写法：</span><br><span class="line"></span><br><span class="line">(textup):<span class="keyword">\textup</span>&#123;Upright Shape 直立&#125;</span><br><span class="line"></span><br><span class="line">(textit):<span class="keyword">\textit</span>&#123;Italic Shape 斜体&#125;</span><br><span class="line"></span><br><span class="line">(textsl):<span class="keyword">\textsl</span>&#123;Slanted Shape 伪斜体&#125;</span><br><span class="line"></span><br><span class="line">(textsc):<span class="keyword">\textsc</span>&#123;Small Caps Shape 小型大写&#125;</span><br><span class="line"></span><br><span class="line">内部shape写法：</span><br><span class="line"></span><br><span class="line">(upshape):&#123;<span class="keyword">\upshape</span> Upright Shape 直立&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(itshape):&#123;<span class="keyword">\itshape</span> Italic Shape 斜体&#125;</span><br><span class="line"></span><br><span class="line">(slshape):&#123;<span class="keyword">\slshape</span> Slanted Shape 伪斜体&#125;</span><br><span class="line"></span><br><span class="line">(scshape):&#123;<span class="keyword">\scshape</span> Small Caps Shape 小型大写&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;中文字体&#125;</span><br><span class="line">&#123;<span class="keyword">\songti</span> 宋体&#125; <span class="keyword">\quad</span> &#123;<span class="keyword">\heiti</span> 黑体&#125; <span class="keyword">\quad</span> &#123;<span class="keyword">\fangsong</span> 仿宋&#125; <span class="keyword">\quad</span> &#123;<span class="keyword">\kaishu</span> 楷书&#125;</span><br><span class="line"></span><br><span class="line">中文&#123;<span class="keyword">\bfseries</span> 粗体&#125; 和 &#123;<span class="keyword">\itshape</span> 斜体&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;字体大小&#125;</span><br><span class="line">&#123;<span class="keyword">\tiny</span> Hello,tiny&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\scriptsize</span> Hello,scriptsize&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\footnotesize</span> Hello,footnotesize&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\small</span> Hello,small&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\normalsize</span> Hello,normalsize&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\large</span> Hello,large&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\Large</span> Hello,Large&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\large</span> Hello,LARGE&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\huge</span> Hello,huge&#125;<span class="keyword">\\</span></span><br><span class="line">&#123;<span class="keyword">\Huge</span> Hello,Huge&#125;<span class="keyword">\\</span></span><br><span class="line">可以在文档导言区使用documentclass[10pt] 来定义正常字体大小<span class="keyword">\\</span></span><br><span class="line">中文字号设置：<span class="keyword">\\</span></span><br><span class="line">(zihao+数字):<span class="keyword">\zihao</span>&#123;3&#125; 你好，3号字体<span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\zihao</span>&#123;5&#125;其他具体，可以通过cmd下的 texdoc ctex 继续参考ctex文档。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;自定义字体内容&#125;</span><br><span class="line"><span class="keyword">\myfont</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex25.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex26.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex27.png" alt=""></p>
<h3 id="2-3-篇章结构">2.3 篇章结构</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexbook&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% \usepackage&#123;ctex&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;篇章结构&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;Seymour&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\tableofcontents</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\chapter</span>&#123;开篇&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;引言&#125;</span><br><span class="line">“交通规划设计知识服务平台”是基于CNKI数字图书馆构建的，针对交通规划设计行业从业人员的规划设计创新。<span class="keyword">\par</span> 科研技术人员科研项目选题、撰写论文、成果鉴定，业内管理人员决策经营。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;实验&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;实验工具&#125;</span><br><span class="line">铁路科研单位、铁路规划及勘察设计单位、地方铁路局。</span><br><span class="line"><span class="keyword">\subsection</span>&#123;实验过程&#125;</span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;准备材料&#125;</span><br><span class="line">《铁路行业知识服务平台》是基于CNKI工程的强大基础平台开发的。</span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;使用材料&#125;</span><br><span class="line">中国知网“公路规建管养知识服务平台”基于CNKI数据资源整合。</span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;得到成果&#125;</span><br><span class="line">重点突出线路工程、机车车辆、通信信号板块。</span><br><span class="line"><span class="keyword">\subsection</span>&#123;实验结果&#125;</span><br><span class="line">中国知网“城市轨道交通知识服务平台”是服务于轨道交通行业用户，从业务需求角度出发。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;结论&#125;</span><br><span class="line">城市轨道交通科研单位、城市轨道交通勘察设计单位、城市轨道交通运营单位。</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex28.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex29.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex30.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex31.png" alt=""></p>
<h3 id="2-4-特殊字符">2.4 特殊字符</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"><span class="comment">%提供XeTeX的logo</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;xltxtra&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;texnames&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;mflogo&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;<span class="keyword">\heiti</span> 特殊字符&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;Seymour&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;空白符号&#125;</span><br><span class="line">说明：</span><br><span class="line">空行分段，多个空行等同一个。</span><br><span class="line">自动缩进，绝对不能使用空格代替。</span><br><span class="line">英文中多个空格视为一个空格；中文中空格忽略。</span><br><span class="line">汉字与其他字符的间距由 XeLaTeX 自动处理。</span><br><span class="line">禁止使用中文全角空格。</span><br><span class="line"></span><br><span class="line">空格处理：</span><br><span class="line"></span><br><span class="line"><span class="comment">% 1em</span></span><br><span class="line">1em(quad):a<span class="keyword">\quad</span> b</span><br><span class="line"></span><br><span class="line"><span class="comment">% 2em</span></span><br><span class="line">2em(qquad):a<span class="keyword">\qquad</span> b</span><br><span class="line"></span><br><span class="line"><span class="comment">%约为 1/6 em</span></span><br><span class="line">1/6em(,)(thinspace):a<span class="keyword">\,</span>b a<span class="keyword">\thinspace</span> b</span><br><span class="line"></span><br><span class="line"><span class="comment">% 0.5em</span></span><br><span class="line">0.5em(enspace)<span class="keyword">\enspace</span> b</span><br><span class="line"></span><br><span class="line"><span class="comment">%空格</span></span><br><span class="line">空格( ):a<span class="keyword">\ </span>b</span><br><span class="line"></span><br><span class="line">硬空格:a~b</span><br><span class="line"></span><br><span class="line">1pc=12pt=4.218mm(kern+pc):a<span class="keyword">\kern</span> 1pc b</span><br><span class="line"></span><br><span class="line">可以为负(kern+em):a<span class="keyword">\kern</span> -1em b</span><br><span class="line"></span><br><span class="line">(hskip+em):a<span class="keyword">\hskip</span> 1em b</span><br><span class="line"></span><br><span class="line">(hspace+pt):a<span class="keyword">\hspace</span>&#123;35pt&#125;b</span><br><span class="line"></span><br><span class="line">占位宽度(hphantom+字):a<span class="keyword">\hphantom</span>&#123;xyz&#125;b</span><br><span class="line"></span><br><span class="line">弹性宽度(hfill):a<span class="keyword">\hfill</span> b</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;<span class="keyword">\LaTeX</span> 控制符&#125;</span><br><span class="line">通过转义符实现：</span><br><span class="line"></span><br><span class="line"><span class="keyword">\#</span> <span class="keyword">\$</span> <span class="keyword">\%</span> <span class="keyword">\&#123;</span> <span class="keyword">\&#125;</span> <span class="keyword">\~</span>&#123;&#125; <span class="keyword">\_</span>&#123;&#125; <span class="keyword">\^</span>&#123;&#125; <span class="keyword">\textbackslash</span> <span class="keyword">\&amp;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;排版符号&#125;</span><br><span class="line"><span class="keyword">\textbackslash</span> S 为<span class="keyword">\S</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbackslash</span> P 为<span class="keyword">\P</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbackslash</span> dag 为<span class="keyword">\dag</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbackslash</span> ddag 为<span class="keyword">\ddag</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbackslash</span> copyright 为<span class="keyword">\copyright</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbackslash</span> pounds 为 <span class="keyword">\pounds</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;<span class="keyword">\TeX</span> 标志符号&#125;</span><br><span class="line"><span class="comment">% &#123;&#125;是为了加空格</span></span><br><span class="line">原生：<span class="keyword">\TeX</span>&#123;&#125; <span class="keyword">\LaTeX</span>&#123;&#125; <span class="keyword">\LaTeXe</span>&#123;&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">% xltxtra 宏包提供</span></span><br><span class="line">xltxtra 宏包：<span class="keyword">\XeLaTeX</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% texnames 宏包提供</span></span><br><span class="line">texnames 宏包<span class="keyword">\AmSTeX</span>&#123;&#125; <span class="keyword">\AmS</span>-<span class="keyword">\LaTeX</span>&#123;&#125; <span class="keyword">\BibTeX</span>&#123;&#125; <span class="keyword">\LuaTeX</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% mflogo 宏包提供</span></span><br><span class="line">mflogo 宏包：<span class="keyword">\METAFONT</span>&#123;&#125; <span class="keyword">\MF</span>&#123;&#125; <span class="keyword">\MP</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;引号&#125;</span><br><span class="line">`你好！&#x27;</span><br><span class="line"></span><br><span class="line">``你好！&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;连字符&#125;</span><br><span class="line">- -- ---</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;非英文字符&#125;</span><br><span class="line"><span class="keyword">\oe</span>&#123;&#125; <span class="keyword">\OE</span>&#123;&#125; <span class="keyword">\ae</span>&#123;&#125; <span class="keyword">\AE</span>&#123;&#125; <span class="keyword">\aa</span>&#123;&#125; <span class="keyword">\AA</span>&#123;&#125; </span><br><span class="line"><span class="keyword">\o</span>&#123;&#125; <span class="keyword">\O</span>&#123;&#125; <span class="keyword">\l</span>&#123;&#125; <span class="keyword">\L</span>&#123;&#125; <span class="keyword">\ss</span>&#123;&#125; <span class="keyword">\SS</span>&#123;&#125; !`&#123;&#125; ?`&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;重音字符(以o为例)&#125;</span><br><span class="line"><span class="keyword">\`</span>o <span class="keyword">\&#x27;</span>o <span class="keyword">\^</span>o <span class="keyword">\&#x27;</span>&#x27;o <span class="keyword">\~</span>o <span class="keyword">\=</span>o <span class="keyword">\.</span>o</span><br><span class="line"><span class="keyword">\u</span>&#123;o&#125; <span class="keyword">\v</span>&#123;o&#125; <span class="keyword">\H</span>&#123;o&#125; <span class="keyword">\r</span>&#123;o&#125; <span class="keyword">\t</span>&#123;o&#125; <span class="keyword">\b</span>&#123;o&#125; <span class="keyword">\c</span>&#123;o&#125; <span class="keyword">\d</span>&#123;o&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex32.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex33.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex34.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex35.png" alt=""></p>
<h3 id="2-5-插图">2.5 插图</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\graphicspath</span>&#123;&#123;figures/&#125;,&#123;pics/&#125;&#125; <span class="comment">% 图片在当前目录下的 figures 目录、 pics 目录下</span></span><br><span class="line"><span class="comment">% 语法：\includegraphics[keyvals]&#123;imagefile&#125;</span></span><br><span class="line"><span class="comment">% 格式：EPS,PDF,PNG,JPEG,BMP</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\LaTeX</span>&#123;&#125; 中的插图：</span><br><span class="line"></span><br><span class="line"><span class="comment">% 注意，最好设置大小，插图原图尺寸太大会展示不全</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 缩放因子 scale ，宽高尺寸 width height</span></span><br><span class="line"><span class="keyword">\includegraphics</span>[scale=0.1]&#123;pics/icon<span class="built_in">_</span>logo2.png&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[height=3cm]&#123;icon<span class="built_in">_</span>logo2.png&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[width=3cm]&#123;icon<span class="built_in">_</span>logo2.png&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.5<span class="keyword">\textwidth</span>]&#123;icon<span class="built_in">_</span>logo2.png&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[height=0.2<span class="keyword">\textheight</span>]&#123;icon<span class="built_in">_</span>logo2.png&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex36.png" alt=""></p>
<blockquote>
<p>备注：</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex37.png" alt=""></p>
</blockquote>
<h3 id="2-6-表格">2.6 表格</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;[center]&#123;l|c|c|p&#123;1cm&#125;|r&#125; </span><br><span class="line">    <span class="comment">% 整表位置、行字对齐方式、竖线、宽度固定</span></span><br><span class="line">    <span class="keyword">\hline</span> <span class="comment">% 横线</span></span><br><span class="line">    学号 <span class="built_in">&amp;</span> 姓名 <span class="built_in">&amp;</span> 专业 <span class="built_in">&amp;</span> 成绩 <span class="built_in">&amp;</span> 备注 <span class="keyword">\\</span></span><br><span class="line">    <span class="keyword">\hline</span></span><br><span class="line">    2101 <span class="built_in">&amp;</span> 张三 <span class="built_in">&amp;</span> 计算机科学与技术 <span class="built_in">&amp;</span> 90 <span class="built_in">&amp;</span> 通过 <span class="keyword">\\</span></span><br><span class="line">    2102 <span class="built_in">&amp;</span> 李四 <span class="built_in">&amp;</span> 信息安全 <span class="built_in">&amp;</span> 95 <span class="built_in">&amp;</span> 通过 <span class="keyword">\\</span></span><br><span class="line">    2103 <span class="built_in">&amp;</span> 王五 <span class="built_in">&amp;</span> 数据科学与大数据技术 <span class="built_in">&amp;</span> 98 <span class="built_in">&amp;</span> 通过 <span class="keyword">\\</span></span><br><span class="line">    <span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex38.png" alt=""></p>
<blockquote>
<p>更多可以查看宏包说明：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">texdoc booktab</span><br><span class="line">texdoc longtab</span><br><span class="line">texdoc tabu</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="2-7-浮动体">2.7 浮动体</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">在 <span class="keyword">\LaTeX</span>&#123;&#125;中的图片(图<span class="keyword">\ref</span>&#123;lb-tj&#125;)</span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[htbp]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\caption</span>&#123;同济大学校徽&#125;<span class="keyword">\label</span>&#123;lb-tj&#125;</span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=3cm]&#123;pics/icon<span class="built_in">_</span>logo2.png&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line"></span><br><span class="line">在 <span class="keyword">\LaTeX</span>&#123;&#125;中的表格(表<span class="keyword">\ref</span>&#123;lb-grades&#125;)</span><br><span class="line"><span class="keyword">\begin</span>&#123;table&#125;[htbp]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\begin</span>&#123;tabular&#125;[center]&#123;l|c|c|p&#123;1cm&#125;|r&#125; </span><br><span class="line">        <span class="comment">% 整表位置、行字对齐方式、竖线、宽度固定</span></span><br><span class="line">        <span class="keyword">\hline</span> <span class="comment">% 横线</span></span><br><span class="line">        学号 <span class="built_in">&amp;</span> 姓名 <span class="built_in">&amp;</span> 专业 <span class="built_in">&amp;</span> 成绩 <span class="built_in">&amp;</span> 备注 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">        2101 <span class="built_in">&amp;</span> 张三 <span class="built_in">&amp;</span> 计算机科学与技术 <span class="built_in">&amp;</span> 90 <span class="built_in">&amp;</span> 通过 <span class="keyword">\\</span></span><br><span class="line">        2102 <span class="built_in">&amp;</span> 李四 <span class="built_in">&amp;</span> 信息安全 <span class="built_in">&amp;</span> 95 <span class="built_in">&amp;</span> 通过 <span class="keyword">\\</span></span><br><span class="line">        2103 <span class="built_in">&amp;</span> 王五 <span class="built_in">&amp;</span> 数据科学与大数据技术 <span class="built_in">&amp;</span> 98 <span class="built_in">&amp;</span> 通过 <span class="keyword">\\</span></span><br><span class="line">        <span class="keyword">\hline</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;成绩汇总表&#125;<span class="keyword">\label</span>&#123;lb-grades&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex39.png" alt=""></p>
<blockquote>
<p>备注：</p>
<ul>
<li>允许位置[htbp]
<ul>
<li>h,here:代码所在上下文位置</li>
<li>t,top:代码所在的页面或后一页的顶部</li>
<li>b,bottom:代码所在页面的或后一页的底部</li>
<li>p,page:独立一页，浮动页面</li>
</ul>
</li>
<li>标题控制
<ul>
<li>caption</li>
<li>bicaption</li>
</ul>
</li>
<li>并排与子图表
<ul>
<li>subcaption</li>
<li>subfig</li>
<li>floatrow</li>
</ul>
</li>
<li>绕排
<ul>
<li>picinpar</li>
<li>wrapfig</li>
</ul>
</li>
</ul>
<p>可以具体查询宏包手册。</p>
</blockquote>
<h3 id="2-8-数学公式初步">2.8 数学公式初步</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amsmath&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;简介&#125;</span><br><span class="line"><span class="keyword">\LaTeX</span>&#123;&#125; 将排版内容分为文本模式和数学模式。文本模式用于普通文本排版，数学模式用于数学公式排版。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;行内公式&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;美元符号&#125;</span><br><span class="line">交换律是 <span class="built_in">$</span>a+b=b+a<span class="built_in">$</span>，如 <span class="built_in">$</span>1+2=2+1=3<span class="built_in">$</span>。</span><br><span class="line"><span class="keyword">\subsection</span>&#123;小括号&#125;</span><br><span class="line">交换律是 <span class="keyword">\(</span>a+b=b+a<span class="keyword">\)</span>，如 <span class="keyword">\(</span>1+2=2+1=3<span class="keyword">\)</span>。</span><br><span class="line"><span class="keyword">\subsection</span>&#123;math环境&#125;</span><br><span class="line">交换律是 <span class="keyword">\begin</span>&#123;math&#125;a+b=b+a<span class="keyword">\end</span>&#123;math&#125;，如 <span class="keyword">\begin</span>&#123;math&#125;1+2=2+1=3<span class="keyword">\end</span>&#123;math&#125;。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;上下标&#125;</span><br><span class="line"><span class="built_in">$</span>3x<span class="built_in">^</span>&#123;20&#125; - x + 2 = 0<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span>3x<span class="built_in">^</span>&#123;3x<span class="built_in">^</span>&#123;20&#125; - x + 2&#125; - x + 2 = 0<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span> a<span class="built_in">_</span>0, a<span class="built_in">_</span>1,a<span class="built_in">_</span>2,...,a<span class="built_in">_</span>&#123;3x<span class="built_in">^</span>&#123;20&#125; - x + 2&#125; <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;希腊字母&#125;</span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\alpha</span> <span class="keyword">\quad</span> <span class="keyword">\beta</span> <span class="keyword">\quad</span> <span class="keyword">\gamma</span> <span class="keyword">\quad</span> <span class="keyword">\epsilon</span> <span class="keyword">\quad</span> <span class="keyword">\pi</span> <span class="keyword">\quad</span> <span class="keyword">\omega</span> <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\Gamma</span> <span class="keyword">\quad</span> <span class="keyword">\Delta</span> <span class="keyword">\quad</span> <span class="keyword">\Theta</span> <span class="keyword">\quad</span> <span class="keyword">\Pi</span> <span class="keyword">\quad</span> <span class="keyword">\Omega</span> <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\alpha</span> + <span class="keyword">\beta</span> <span class="built_in">^</span>2 + <span class="keyword">\gamma</span> <span class="built_in">^</span>3 = 0 <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;数学函数&#125;</span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\log</span> <span class="keyword">\quad</span> <span class="keyword">\sin</span> <span class="keyword">\quad</span> <span class="keyword">\cos</span> <span class="keyword">\quad</span> <span class="keyword">\arcsin</span> <span class="keyword">\quad</span> <span class="keyword">\arccos</span> <span class="keyword">\quad</span> <span class="keyword">\ln</span> <span class="keyword">\quad</span> <span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\sin</span> <span class="built_in">^</span>2 x + <span class="keyword">\cos</span> <span class="built_in">^</span>2 x = 1 <span class="keyword">\quad</span> <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span> y = <span class="keyword">\arcsin</span> x <span class="keyword">\quad</span> <span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span> y = <span class="keyword">\log</span><span class="built_in">_</span>2 x <span class="keyword">\quad</span> <span class="built_in">$</span></span><br><span class="line"><span class="built_in">$</span> y = sin<span class="built_in">^</span>&#123;-1&#125; x <span class="keyword">\quad</span> <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;分式&#125;</span><br><span class="line">等底等高，圆锥体积为圆柱体积的<span class="built_in">$</span> 1/3 <span class="built_in">$</span>。</span><br><span class="line"></span><br><span class="line">等底等高，圆锥体积为圆柱体积的<span class="built_in">$</span> <span class="keyword">\frac</span>&#123;1&#125;&#123;3&#125; <span class="built_in">$</span>。</span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\frac</span>&#123;x&#125;&#123;x<span class="built_in">^</span>2+x+1&#125; <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\frac</span>&#123;<span class="keyword">\sqrt</span>&#123;x-1&#125;&#125;&#123;<span class="keyword">\sqrt</span>&#123;x+1&#125;&#125; <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\frac</span>&#123;1&#125;&#123;1+<span class="keyword">\frac</span>&#123;1&#125;&#123;x&#125;&#125; <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">$</span> <span class="keyword">\sqrt</span>&#123;<span class="keyword">\frac</span>&#123;x&#125;&#123;x<span class="built_in">^</span>2+x+1&#125;&#125; <span class="built_in">$</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;行间公式&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;美元符号&#125;</span><br><span class="line">交换律是 <span class="built_in">$</span><span class="built_in">$</span> a+b=b+a <span class="built_in">$</span><span class="built_in">$</span> 如 <span class="built_in">$</span><span class="built_in">$</span> 1+2=2+1=3 <span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\subsection</span>&#123;中括号&#125;</span><br><span class="line">交换律是 <span class="keyword">\[</span> a+b=b+a <span class="keyword">\]</span> 如 <span class="keyword">\[</span> 1+2=2+1=3 <span class="keyword">\]</span></span><br><span class="line"><span class="keyword">\subsection</span>&#123;displaymath环境&#125;</span><br><span class="line">交换律是 <span class="keyword">\begin</span>&#123;displaymath&#125;a+b=b+a<span class="keyword">\end</span>&#123;displaymath&#125;如 <span class="keyword">\begin</span>&#123;displaymath&#125;1+2=2+1=3<span class="keyword">\end</span>&#123;displaymath&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;自动编号公式equation环境&#125;</span><br><span class="line">交换律见式<span class="keyword">\ref</span>&#123;eq-commutative&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">    a+b=b+a <span class="keyword">\label</span>&#123;eq-commutative&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;不编号公式equation*环境&#125;</span><br><span class="line">交换律见式<span class="keyword">\ref</span>&#123;eq-commutative2&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation*&#125;</span><br><span class="line">    a+b=b+a <span class="keyword">\label</span>&#123;eq-commutative2&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation*&#125; <span class="comment">% 要引入amsmath包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex40.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex41.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex42.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex43.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex44.png" alt=""></p>
<h3 id="2-9-矩阵">2.9 矩阵</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\documentclass&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line">\usepackage&#123;ctex&#125;</span><br><span class="line">\usepackage&#123;amsmath&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line"></span><br><span class="line">$</span><br><span class="line">\begin&#123;matrix&#125; % 要使用amsmath</span><br><span class="line">    0 &amp; 1 \\</span><br><span class="line">    1 &amp; 0</span><br><span class="line">\end&#123;matrix&#125;</span><br><span class="line">\quad</span><br><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line">    0 &amp; -i \\</span><br><span class="line">    i &amp; 0</span><br><span class="line">\end&#123;pmatrix&#125;</span><br><span class="line">\quad</span><br><span class="line">\begin&#123;bmatrix&#125;</span><br><span class="line">    0 &amp; -1 \\</span><br><span class="line">    2 &amp; 0</span><br><span class="line">\end&#123;bmatrix&#125;</span><br><span class="line">\quad</span><br><span class="line">\begin&#123;Bmatrix&#125;</span><br><span class="line">    i &amp; 0 \\</span><br><span class="line">    0 &amp; -i</span><br><span class="line">\end&#123;Bmatrix&#125;</span><br><span class="line">\quad</span><br><span class="line">\begin&#123;vmatrix&#125;</span><br><span class="line">    a &amp; b \\</span><br><span class="line">    c &amp; d</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">\quad </span><br><span class="line">\begin&#123;Vmatrix&#125;</span><br><span class="line">    a &amp; b \\</span><br><span class="line">    c &amp; d</span><br><span class="line">\end&#123;Vmatrix&#125;</span><br><span class="line">$</span><br><span class="line"></span><br><span class="line">$</span><br><span class="line">A= \begin&#123;pmatrix&#125;</span><br><span class="line">    a_&#123;11&#125;^2 &amp; a_&#123;12&#125;^2 &amp; a_&#123;13&#125;^2 \\</span><br><span class="line">    0 &amp; a_&#123;22&#125; &amp; a_&#123;23&#125; \\</span><br><span class="line">    0 &amp; 0 &amp; a_&#123;33&#125;</span><br><span class="line">\end&#123;pmatrix&#125;</span><br><span class="line">$</span><br><span class="line"></span><br><span class="line">$</span><br><span class="line">A = \begin&#123;bmatrix&#125;</span><br><span class="line">    a_&#123;11&#125; &amp; \dots &amp; a_&#123;1n&#125; \\</span><br><span class="line">    &amp; \ddots &amp; \vdots \\</span><br><span class="line">    0 &amp; &amp; a_&#123;nn&#125; </span><br><span class="line">\end&#123;bmatrix&#125;_&#123;n \times n&#125;</span><br><span class="line">$</span><br><span class="line"></span><br><span class="line">% 分块矩阵</span><br><span class="line">$</span><br><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line">    \begin&#123;matrix&#125;</span><br><span class="line">        1 &amp; 0 \\</span><br><span class="line">        0 &amp; 1</span><br><span class="line">    \end&#123;matrix&#125;</span><br><span class="line">    &amp; \text&#123;\Large 0&#125; \\</span><br><span class="line">    \text&#123;\Large 0&#125; &amp; \begin&#123;matrix&#125;</span><br><span class="line">        1 &amp; 0 \\</span><br><span class="line">        0 &amp; -1</span><br><span class="line">    \end&#123;matrix&#125;</span><br><span class="line">\end&#123;pmatrix&#125;</span><br><span class="line">$</span><br><span class="line"></span><br><span class="line">% 三角矩阵</span><br><span class="line">$</span><br><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line">    a_&#123;11&#125; &amp; a_&#123;12&#125; &amp; \cdots &amp; a_&#123;1n&#125; \\</span><br><span class="line">    &amp; a_&#123;22&#125; &amp; \cdots &amp; a_&#123;2n&#125; \\</span><br><span class="line">    &amp; &amp; \ddots &amp; \vdots \\</span><br><span class="line">    &amp; &amp; &amp; a_&#123;nn&#125;</span><br><span class="line">\end&#123;pmatrix&#125;</span><br><span class="line">$</span><br><span class="line"></span><br><span class="line">% 连续省略号</span><br><span class="line">$</span><br><span class="line">\begin&#123;pmatrix&#125;</span><br><span class="line">    1 &amp; \frac 12 &amp; \frac 13 &amp; \dots &amp; \frac 1n \\</span><br><span class="line">    \vdots &amp; \hdotsfor&#123;3&#125; &amp; \vdots \\</span><br><span class="line">    m &amp; \frac m2 &amp; \frac m3 &amp; \dots &amp; \frac mn</span><br><span class="line">\end&#123;pmatrix&#125;</span><br><span class="line">$</span><br><span class="line"></span><br><span class="line">复数$ z = (x,y) $也可以使用矩阵</span><br><span class="line">$ z = \left( % 这里要单独加括号</span><br><span class="line">\begin&#123;smallmatrix&#125;</span><br><span class="line">    x &amp; -y \\ y &amp; x</span><br><span class="line">\end&#123;smallmatrix&#125;</span><br><span class="line">\right) $</span><br><span class="line"></span><br><span class="line">$</span><br><span class="line">\begin&#123;array&#125;&#123;r|r&#125;</span><br><span class="line">    \frac12 &amp; 0 \\</span><br><span class="line">    \hline</span><br><span class="line">    0 &amp; -\frac abc \\</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$</span><br><span class="line"></span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex45.png" alt=""></p>
<blockquote>
<p>常用省略号：</p>
<ul>
<li><code>\dots</code>、<code>\cdots</code>：水平省略号</li>
<li><code>\vdots</code>：垂直省略号</li>
<li><code>\ddots</code>：右斜省略号</li>
</ul>
</blockquote>
<h3 id="2-10-多行公式">2.10 多行公式</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amsmath&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amssymb&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;多行公式&#125;</span><br><span class="line">我们一般通过 <span class="keyword">\textbackslash</span> <span class="keyword">\textbackslash</span> 来实现换行，</span><br><span class="line"></span><br><span class="line">通过<span class="keyword">\&amp;</span>实现对齐，</span><br><span class="line"></span><br><span class="line">所有环境共用编号。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;编号环境 gather&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;gather&#125;</span><br><span class="line">    a + b = b + a <span class="keyword">\\</span></span><br><span class="line">    ab ba</span><br><span class="line"><span class="keyword">\end</span>&#123;gather&#125;</span><br><span class="line">在某个公式后加 <span class="keyword">\textbackslash</span> notag 可取消编号，如：</span><br><span class="line"><span class="keyword">\begin</span>&#123;gather&#125;</span><br><span class="line">    3<span class="built_in">^</span>2 + 4<span class="built_in">^</span>2 = 5 <span class="built_in">^</span>2 <span class="keyword">\notag</span> <span class="keyword">\\</span></span><br><span class="line">    a = b + c</span><br><span class="line"><span class="keyword">\end</span>&#123;gather&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;不编号环境 gather*&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;gather*&#125;</span><br><span class="line">    3+5=5+3=8 <span class="keyword">\\</span></span><br><span class="line">    3 <span class="keyword">\times</span> 5 = 5 * 3</span><br><span class="line"><span class="keyword">\end</span>&#123;gather*&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;编号对齐环境align&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;align&#125;</span><br><span class="line">    x <span class="built_in">&amp;</span>= t + <span class="keyword">\cos</span> t + 1 <span class="keyword">\\</span></span><br><span class="line">    y+1 <span class="built_in">&amp;</span>= 2 <span class="keyword">\sin</span> t</span><br><span class="line"><span class="keyword">\end</span>&#123;align&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;不编号对齐环境align*&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;align*&#125;</span><br><span class="line">    x <span class="built_in">&amp;</span>= t <span class="built_in">&amp;</span> x <span class="built_in">&amp;</span>= <span class="keyword">\cos</span> t <span class="built_in">&amp;</span> x <span class="built_in">&amp;</span>= t <span class="keyword">\\</span></span><br><span class="line">    y <span class="built_in">&amp;</span>= 2t <span class="built_in">&amp;</span> y <span class="built_in">&amp;</span>= <span class="keyword">\sin</span>(t+1) <span class="built_in">&amp;</span> y <span class="built_in">&amp;</span>= <span class="keyword">\sin</span> t</span><br><span class="line"><span class="keyword">\end</span>&#123;align*&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;连行公式split&#125;</span><br><span class="line">对齐采用align的方式，编号位于整个公式中间。注意，split还需要使用equation包起来才能奏效。在其后加 <span class="keyword">\textbackslash</span> notag 可取消编号。</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;split&#125;</span><br><span class="line">    <span class="keyword">\cos</span> 2x <span class="built_in">&amp;</span> = <span class="keyword">\cos</span><span class="built_in">^</span>2 x - sin<span class="built_in">^</span>2 x <span class="keyword">\\</span></span><br><span class="line">    <span class="built_in">&amp;</span> = 2 <span class="keyword">\cos</span><span class="built_in">^</span>2 x - 1</span><br><span class="line"><span class="keyword">\end</span>&#123;split&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;大括号cases&#125;</span><br><span class="line">每行使用 <span class="keyword">\&amp;</span> 分割为两部分，通常用于表示值和条件。注意，cases还需要使用equation包起来才能奏效。在其后加 <span class="keyword">\textbackslash</span> notag 可取消编号。</span><br><span class="line"><span class="keyword">\begin</span>&#123;equation&#125;</span><br><span class="line">    D(x)=<span class="keyword">\begin</span>&#123;cases&#125;</span><br><span class="line">        1, <span class="built_in">&amp;</span> <span class="keyword">\text</span>&#123;当&#125; x <span class="keyword">\in</span> <span class="keyword">\mathbb</span>&#123;Q&#125;;<span class="keyword">\\</span></span><br><span class="line">        0, <span class="built_in">&amp;</span> <span class="keyword">\text</span>&#123;当&#125; x <span class="keyword">\in</span> <span class="keyword">\mathbb</span>&#123;R&#125;.</span><br><span class="line">    <span class="keyword">\end</span>&#123;cases&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;equation&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex46.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex47.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex48.png" alt=""></p>
<h3 id="2-11-参考文献-BibTeX">2.11 参考文献 BibTeX</h3>
<h4 id="直接写入展示">直接写入展示</h4>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">此处引用一篇文章<span class="keyword">\cite</span>&#123;article1&#125;，此处引用一本书<span class="keyword">\cite</span>&#123;book1&#125;等等。</span><br><span class="line"><span class="comment">% 这里编译会不全，要编译两次</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;thebibliography&#125;&#123;99&#125;</span><br><span class="line">    <span class="keyword">\bibitem</span>&#123;article1&#125;陈力回,苏伟,陈晓云./emph&#123;基于LaTeX的Web数学公式提取方法研究&#125;[J].计算机科学. 2014(06)</span><br><span class="line">    <span class="keyword">\bibitem</span>&#123;book1&#125;William H. Press,Sual A. Teukolsky,William T. Vettering,Brian P. Flannery,<span class="keyword">\emph</span>&#123;Numerical Recipes 3rd Edition:The Art of Scientific Computing&#125;</span><br><span class="line">    Cambridge University Press, New York,2007.</span><br><span class="line">    <span class="keyword">\bibitem</span>&#123;book2&#125; Kopka Helmut, W. Daly Patrick,<span class="keyword">\emph</span>&#123;Guide to <span class="keyword">\LaTeX</span>&#125;,<span class="built_in">$</span> 4<span class="built_in">^</span>&#123;th&#125; <span class="built_in">$</span> Edition.</span><br><span class="line">    Available at <span class="keyword">\texttt</span>&#123;http://www.amazon.com&#125;.</span><br><span class="line">    <span class="keyword">\bibitem</span>&#123;book3&#125; Graetzer George, <span class="keyword">\emph</span>&#123;Math Into <span class="keyword">\LaTeX</span>&#125;,BrikhAouser Boston; 3 edition (June 22,2000).</span><br><span class="line">    </span><br><span class="line"><span class="keyword">\end</span>&#123;thebibliography&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex49.png" alt=""></p>
<h4 id="单独文件管理">单独文件管理</h4>
<p><code>test.bib</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@BOOK&#123;mittelbach2004,</span><br><span class="line">title = &#123;The &#123;&#123;\Latex&#125;&#125; Companion&#125;,</span><br><span class="line">publisher = &#123;Addison-Wesley&#125;,</span><br><span class="line">year = &#123;2004&#125;,</span><br><span class="line">author = &#123;Frank Mittelbach and Michel Goossens&#125;,</span><br><span class="line">series = &#123;Tools and Techniques for  Computer Typesetting&#125;,</span><br><span class="line">address = &#123;Boston&#125;,</span><br><span class="line">edition = &#123;Second&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex50.png" alt=""></p>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\bibliographystyle</span>&#123;plain&#125; <span class="comment">% plain unsrt alpha abbrv</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line">这里我们引用<span class="keyword">\cite</span>&#123;mittelbach2004&#125;。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\nocite</span>&#123;*&#125; <span class="comment">% 表示把单独文件中所有的文献都列出来</span></span><br><span class="line"><span class="keyword">\bibliography</span>&#123;bib/test&#125; <span class="comment">%可以写多个bib文件在这里面，逗号分开</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>未能完成，自行学习。</p>
</blockquote>
<h4 id="参考文献-BibLaTeX">参考文献 BibLaTeX</h4>
<ul>
<li>
<p>也是一种编译写入参考文献的排版引擎。</p>
</li>
<li>
<p>需要更改文献工具</p>
<p><code>BibTeX</code> – &gt; <code>Biber</code></p>
</li>
</ul>
<h3 id="2-12-自定义命令、环境">2.12 自定义命令、环境</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 文本</span></span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\PRC</span>&#125;&#123;People&#x27;s Republic of <span class="keyword">\emph</span>&#123;China&#125;&#125;</span><br><span class="line"><span class="comment">% 含参数</span></span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\love</span>&#125;[2]&#123;<span class="params">#1</span> 喜欢 <span class="params">#2</span>&#125;</span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\hate</span>&#125;[2]&#123;<span class="params">#2</span> 不喜欢 <span class="params">#1</span>&#125;</span><br><span class="line"><span class="comment">% 含默认参数</span></span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\loves</span>&#125;[3][喜欢]&#123;<span class="params">#2</span><span class="params">#1</span><span class="params">#3</span>&#125;</span><br><span class="line"><span class="comment">% 定义环境</span></span><br><span class="line"><span class="keyword">\newenvironment</span>&#123;Quotation&#125;[1]</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">\newcommand</span>&#123;<span class="keyword">\quotesource</span>&#125;&#123;<span class="params">#1</span>&#125;</span><br><span class="line">    <span class="keyword">\begin</span>&#123;quotation&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">\par</span><span class="keyword">\hfil</span>---《<span class="keyword">\textit</span>&#123;<span class="keyword">\quotesource</span>》&#125;</span><br><span class="line">    <span class="keyword">\end</span>&#123;quotation&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;我的摘要&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\PRC</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\love</span>&#123;猫儿&#125;&#123;鱼&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\hate</span>&#123;猫儿&#125;&#123;鱼&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\loves</span>&#123;猫儿&#125;&#123;鱼&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\loves</span>[爱]&#123;猫儿&#125;&#123;鱼&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;Quotation&#125;&#123;易经&#125;</span><br><span class="line">    初九，潜龙勿用。</span><br><span class="line"><span class="keyword">\end</span>&#123;Quotation&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/latex/latex51.png" alt=""></p>
]]></content>
      <categories>
        <category>通用知识</category>
      </categories>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>《Linux》Notes</title>
    <url>/butterflyblog/2023/04/18/%E3%80%8ALinux%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《Linux》Notes</h1>
<h2 id="Linux-命令-篇">Linux 命令 篇</h2>
<h3 id="0、基础目录">0、基础目录</h3>
<h4 id="清空当前命令行信息">清空当前命令行信息</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clear</span><br></pre></td></tr></table></figure>
<h3 id="1、文件命令">1、文件命令</h3>
<h4 id="颜色">颜色</h4>
<ul>
<li>
<p>蓝色</p>
<p>文件夹<code>d</code></p>
</li>
<li>
<p>青色</p>
<p>软链接<code>l</code>，通过 <code>ls -l</code> 可以看到会指向真实文件或文件夹</p>
</li>
<li>
<p>红色</p>
<p>.tar/.tar.gz 归档压缩包</p>
</li>
<li>
<p>黑色</p>
<p>文件<code>-</code></p>
</li>
</ul>
<h4 id="查看当前目录">查看当前目录</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls</span><br><span class="line">详细模式</span><br><span class="line">ls -l</span><br><span class="line">查看隐藏文件</span><br><span class="line">ls -a</span><br></pre></td></tr></table></figure>
<h4 id="显示当前位置">显示当前位置</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pwd</span><br><span class="line">即print working directory</span><br></pre></td></tr></table></figure>
<h4 id="切换目录">切换目录</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd</span><br><span class="line">即change directory</span><br></pre></td></tr></table></figure>
<h4 id="几个特殊的目录">几个特殊的目录</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~</span><br><span class="line">代表当前用户的主目录</span><br><span class="line">.</span><br><span class="line">代表当前目录</span><br><span class="line">..</span><br><span class="line">代表上一级目录</span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line">cd ~/example</span><br><span class="line">cd ../example</span><br></pre></td></tr></table></figure>
<h4 id="目录操作">目录操作</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir abc</span><br><span class="line">mkdir -p abc/123/text</span><br><span class="line">//创建目录即make directory,-p参数将路径的层次目录全部创建</span><br><span class="line"></span><br><span class="line">rmdir abc</span><br><span class="line">//删除空目录即remove directory,空目录才能删除，若目录非空，则删除失败</span><br><span class="line"></span><br><span class="line">rm -rf abc</span><br><span class="line">rm -rf /*</span><br><span class="line">//删除文件或目录即remove,可以删除非空目录，会连带里面的内容都删除,-rf参数表示强制删除</span><br><span class="line"></span><br><span class="line">cp -rf example example2</span><br><span class="line">//复制文件或目录即copy</span><br><span class="line"></span><br><span class="line">mv hello helloworld</span><br><span class="line">//移动文件或目录（重命名）即move</span><br></pre></td></tr></table></figure>
<h4 id="归档">归档</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -cvf xxx.tar file1 file2 file3</span><br><span class="line">tar -zcvf xxx.tar.gz example/</span><br><span class="line">//即tape archive,创建档案打包</span><br><span class="line">//c表示create创建档案v表示verbose显示详情f表示file,z表示gzip压缩</span><br></pre></td></tr></table></figure>
<h4 id="还原归档">还原归档</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xvf example.tar</span><br><span class="line">tar -xvf example.tar -C mydir</span><br><span class="line">tar -zxvf example.tar.gz</span><br><span class="line">//其中，-C参数指定存放目标目录，默认解到当前目录，z解压缩</span><br></pre></td></tr></table></figure>
<h4 id="软链接">软链接</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -s example examplelink</span><br><span class="line">//即windows的快捷方式,s表示soft软链接（默认为硬）</span><br></pre></td></tr></table></figure>
<h3 id="2、用户">2、用户</h3>
<h4 id="添加用户">添加用户</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd -m test1</span><br><span class="line">//其中sudo表示以管理员身份执行，如下，后面同理</span><br><span class="line">//sudo useradd -m test1</span><br></pre></td></tr></table></figure>
<h4 id="修改用户密码">修改用户密码</h4>
<blockquote>
<p>密码不会显示的，但实际上输入了</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd test1</span><br></pre></td></tr></table></figure>
<h4 id="删除用户">删除用户</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">userdel test1</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意，删除用户后，不会自动删除<code>/home/test1</code>的文件</p>
<p>可以自己删除<code>sudo rm -rf /home/test1</code></p>
<ul>
<li>
<p>注意</p>
<ul>
<li>
<p>登陆系统时，默认不允许以root用户登陆</p>
</li>
<li>
<p>只有特殊用户才能执行sudo</p>
<blockquote>
<p>test1就不能执行sudo</p>
</blockquote>
</li>
<li>
<p>能执行sudo命令的用户叫做 sudoer</p>
</li>
</ul>
</li>
</ul>
</blockquote>
<h4 id="超级用户root">超级用户root</h4>
<blockquote>
<p>类似Windows下的管理员Administrator用户</p>
<p>root有全部权限</p>
<ul>
<li>
<p>设置密码</p>
<p><code>sudo passwd root</code></p>
</li>
<li>
<p>切换到 root用户(switch user)</p>
<p><code>su root</code></p>
<blockquote>
<p>切换用户仅对当前会话终端有效（临时切换而已），不影响当前桌面环境</p>
</blockquote>
</li>
<li>
<p>退出</p>
<p><code>exit</code></p>
</li>
</ul>
</blockquote>
<h4 id="用户组">用户组</h4>
<blockquote>
<p>默认在同名的组</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//创建组</span><br><span class="line">groupadd boys</span><br><span class="line">//创建用户（g表示添加用户同时加到组boys里）</span><br><span class="line">useradd -m -g boys ming</span><br><span class="line">//修改现有用户到新组(usermod用户信息)</span><br><span class="line">usermod -g boys ming</span><br><span class="line"></span><br><span class="line">//查看用户和组(一行表示一个group的信息，名称+ID)</span><br><span class="line">cat /etc/group</span><br><span class="line">//查看用户列表(一行一个用户信息)</span><br><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure>
<h4 id="以root-登陆桌面">以root 登陆桌面</h4>
<blockquote>
<p>默认不允许</p>
<p>要修改配置</p>
</blockquote>
<ul>
<li>
<p>其他用户登陆</p>
</li>
<li>
<p>切换到root用户</p>
<p><code>su root</code></p>
</li>
<li>
<p>打开配置1</p>
<p><code>gedit /etc/pam.d/gdm-autologin</code></p>
<p>注释掉#</p>
<blockquote>
<p>#auth   required    pam_succeed_if.so user != root quiet_success</p>
</blockquote>
</li>
<li>
<p>打开配置2</p>
<p><code>gedit /etc/pam.d/gdm-password</code></p>
<p>注释掉</p>
<blockquote>
<p>#auth   required    pam_succeed_if.so user != root quiet_success</p>
</blockquote>
</li>
<li>
<p>关闭虚拟机，重启</p>
</li>
</ul>
<h3 id="3、文件">3、文件</h3>
<h4 id="文件权限">文件权限</h4>
<ul>
<li>
<p><code>-owner</code></p>
<p>文件的属主</p>
</li>
<li>
<p><code>-r</code></p>
<p>是否可读read</p>
</li>
<li>
<p><code>-w</code></p>
<p>是否可写write</p>
</li>
<li>
<p><code>-x</code></p>
<p>是否可执行excute</p>
</li>
<li>
<p>权限分为三部分</p>
<ul>
<li>自己</li>
<li>同组</li>
<li>别人</li>
</ul>
<p>例如：</p>
<p><code>rwxrwxr-x</code></p>
<p><code>rwxrwxr--</code></p>
<p><code>r--------</code></p>
</li>
</ul>
<h4 id="修改文件权限">修改文件权限</h4>
<blockquote>
<p>只有文件的属主或root可以修改文件权限</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod o+w example.txt</span><br><span class="line">chmod o-w example.txt</span><br><span class="line">chmod +w example.txt</span><br><span class="line">//即change file mode 修改文件的访问权限</span><br><span class="line">//o表示other别人，+w表示增加write权限，-w表示除去write权限</span><br><span class="line">//人员：a所有人，u自己,o别人，不加人员默认是自己和本组</span><br></pre></td></tr></table></figure>
<h4 id="修改文件属主">修改文件属主</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown</span><br><span class="line">//即change owner修改文件的属主，不常用</span><br><span class="line">chown -R 新属主 文件</span><br></pre></td></tr></table></figure>
<h3 id="4、可执行脚本">4、可执行脚本</h3>
<ul>
<li>
<p>颜色</p>
<ul>
<li>
<p>普通文本</p>
<p>黑色</p>
</li>
<li>
<p>可执行脚本</p>
<p>绿色</p>
</li>
</ul>
</li>
<li>
<p>脚本Script，一种解释执行的程序</p>
<p>Linux 下常见的三种脚本程序</p>
<ul>
<li>Shell 脚本 <code>*.sh</code></li>
<li>Perl 脚本 <code>*.pl</code></li>
<li>Python 脚本 <code>*.py</code></li>
</ul>
<p>脚本文件，本质是一个文本文件</p>
<ul>
<li>是一个文本文件，具有可执行权限</li>
</ul>
</li>
<li>
<p>脚本程序都是由解释器来执行的</p>
<ul>
<li>Shell 脚本解释器 <code>/bin/sh</code></li>
<li>Perl 脚本解释器 <code>/bin/perl</code></li>
<li>Python 脚本解释器 <code>/bin/python3</code></li>
</ul>
</li>
<li>
<p>执行脚本</p>
<p>两种方式</p>
<ul>
<li><code>./hello.py</code></li>
<li><code>/bin/python3 hello.py</code></li>
</ul>
<blockquote>
<p>第二种，相当于传入参数</p>
</blockquote>
</li>
</ul>
<h4 id="Shell-脚本">Shell 脚本</h4>
<ul>
<li>
<p>按Shell 语法写出来的脚本</p>
<p>是Linux 自带的脚本语言</p>
<blockquote>
<p>相当于Windows 下的 DOS 批处理脚本</p>
</blockquote>
</li>
<li>
<p>写文本</p>
</li>
</ul>
<p><code>hello.sh</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"></span><br><span class="line">echo &quot;hello,world&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>添加执行权限</p>
<p><code>chmod +x hello.sh</code></p>
<blockquote>
<p>Linux很严格，自己也要加上x执行权限，才能执行脚本</p>
</blockquote>
</li>
<li>
<p>执行</p>
<p><code>./hello.sh</code></p>
<blockquote>
<p>执行必须加上路径！</p>
<p>注意不能是<code>hello.sh</code>，要加上<code>./</code></p>
</blockquote>
</li>
</ul>
<h4 id="Python-脚本">Python 脚本</h4>
<ul>
<li>也要走三步流程
<ul>
<li>加上开头</li>
<li>添加执行权限</li>
<li>用路径执行</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello,world&quot;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="5、变量">5、变量</h3>
<h4 id="SHELL中的变量">SHELL中的变量</h4>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">定义变量</span></span><br><span class="line">OUTDIR = /opt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用变量</span></span><br><span class="line">echo &quot;output to : $&#123;OUTDIR&#125;&quot;</span><br><span class="line">ls $&#123;OUTDIR&#125;</span><br></pre></td></tr></table></figure>
<h4 id="环境变量">环境变量</h4>
<ul>
<li>
<p>定义一个环境变量</p>
<p><code>export OUTDIR=/opt</code></p>
<p>然后就可以通过${OUTDIR}来作为<code>/opt</code>使用了</p>
<blockquote>
<p>但是，你在一个终端里定义的环境变量，</p>
<p>只在当前终端有效</p>
</blockquote>
</li>
<li>
<p>查看当前环境变量命令</p>
<p><code>printenv</code></p>
</li>
<li>
<p>环境变量是可以在脚本中直接使用的</p>
</li>
</ul>
<h4 id="用户环境变量">用户环境变量</h4>
<ul>
<li>
<p>在<code>~/.profile</code>中定义</p>
<blockquote>
<p>这个隐藏文件本质也是一个SHELL脚本</p>
</blockquote>
</li>
<li>
<p>打开这个文件</p>
</li>
<li>
<p>在文件末尾文本添加</p>
<p><code>export OUTDIR=/opt</code></p>
</li>
<li>
<p>重启</p>
</li>
</ul>
<blockquote>
<p>原理：当用户打开终端时，会自动执行<code>.profile</code>，</p>
<p>将变量注入到当前环境中。</p>
<p>注：</p>
<p>每个用户有自己的<code>.profile</code></p>
<p>有些Linux 是<code>.bash_profile</code></p>
</blockquote>
<h4 id="系统环境变量">系统环境变量</h4>
<ul>
<li>定义的环境变量对所有用户都有效</li>
<li>在<code>/etc/profile</code>中</li>
<li>需要以root命令执行
<ul>
<li>一般不直接修改<code>/etc/profile</code></li>
<li>而是在<code>/etc/profile.d/</code>下创建一个自定义的脚本</li>
<li><code>gedit /etc/profile.d/myprofile.sh</code></li>
<li>写入脚本</li>
<li>重启</li>
</ul>
</li>
</ul>
<h4 id="PATH-环境变量">PATH 环境变量</h4>
<ul>
<li>
<p>PATH，最常见的一个环境变量</p>
<p>用于描述可执行程序的搜索路径</p>
</li>
<li>
<p>查看</p>
<p><code>echo $PATH</code></p>
</li>
<li>
<p>路径</p>
<ul>
<li>冒号<code>:</code>分开多个路径</li>
</ul>
</li>
<li>
<p>默认的，系统从以下目录中搜索可执行程序</p>
<ul>
<li><code>/usr/bin</code></li>
<li><code>/usr/sbin</code></li>
<li><code>/usr/local/bin</code></li>
<li><code>/usr/local/sbin</code></li>
</ul>
<blockquote>
<p>注意，是<code>usr</code>不是<code>user</code>！！！</p>
<p>其中，sbin为超级用户root 才能执行的程序</p>
<p><code>/usr/</code>下系统自带的程序，</p>
<p><code>/usr/loacl</code>才是用户安装的程序。</p>
</blockquote>
</li>
<li>
<p>修改</p>
<ul>
<li>在系统变量修改方法中：<br>
打开<code>gedit /etc/profile.d/myprofile.sh</code></li>
<li>写入<code>export PATH=$PATH:/home/seymour0314</code></li>
<li>重启</li>
</ul>
<blockquote>
<p>当然，使用其他方法也可以，就是PATH生效范围不一样</p>
<blockquote>
<p>若你添加了某个路径，</p>
<p>那么下次执行这个路径下的可执行文件时，</p>
<p>就不用通过路径执行了</p>
</blockquote>
</blockquote>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/linux/image-20230418183545180.png" alt="image-20230418183545180" style="zoom:80%;" />
<h3 id="6、虚拟机网络">6、虚拟机网络</h3>
<ul>
<li>
<p>先把 VMware 设置在管理员方式运行下</p>
</li>
<li>
<p>看网络配置部分</p>
</li>
<li>
<p>注意，宿主机能上网，虚拟机才能上网</p>
</li>
</ul>
<h3 id="7、软件包管理器">7、软件包管理器</h3>
<blockquote>
<p>注意要<code>sudo</code>执行</p>
</blockquote>
<ul>
<li>
<p><code>apt</code></p>
<ul>
<li>
<p>安装</p>
<p><code>apt install net-tools</code></p>
</li>
<li>
<p>移除</p>
<p><code>apt remove net-tools</code></p>
</li>
<li>
<p>搜索</p>
<p><code>apt search xxx</code></p>
</li>
<li>
<p>列表</p>
<p><code>apt list | grep xxx</code></p>
</li>
</ul>
</li>
</ul>
<h3 id="8、FTP-服务器">8、FTP 服务器</h3>
<ul>
<li>
<p>比如，传文件给Ubuntu主机</p>
</li>
<li>
<p>可以在要传文件的主机上使用<code>FileZilla</code>软件传给虚拟机</p>
</li>
<li>
<p>客户端 FileZilla（Windows)</p>
</li>
<li>
<p>服务器 vsftpd （Ubuntu）</p>
</li>
</ul>
<h3 id="9、SSH-服务器">9、SSH 服务器</h3>
<ul>
<li>略，服务器用到</li>
</ul>
<h3 id="10、文本编辑">10、文本编辑</h3>
<h4 id="vi-vim">vi/vim</h4>
<ul>
<li>vim是vi 的升级版</li>
</ul>
<h4 id="打开文本编辑">打开文本编辑</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim abc.txt</span><br></pre></td></tr></table></figure>
<ul>
<li>如果目标文件存在，则打开编辑</li>
<li>如果不存在，会新建一个</li>
</ul>
<h4 id="切换模式">切换模式</h4>
<ul>
<li>
<p>两个模式</p>
<ul>
<li>编辑模式 Insert Mode :按<code>i</code>键进入</li>
<li>命令模式 Command Mode :按<code>Esc</code>键进入</li>
</ul>
</li>
<li>
<p>退出</p>
<p>先进入命令模式</p>
<ul>
<li><code>:wq</code>保存退出</li>
<li><code>:q</code>退出</li>
<li><code>:q!</code>强制退出（放弃保存）</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>《Cisco计网实验》Notes</title>
    <url>/butterflyblog/2023/08/11/%E3%80%8ACisco%E8%AE%A1%E7%BD%91%E5%AE%9E%E9%AA%8C%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《Cisco计网实验》Notes</h1>
<blockquote>
<h3 id="长文警告！！！">长文警告！！！</h3>
</blockquote>
<blockquote>
<p>来源：<a href="https://www.bilibili.com/video/BV1Xb411Y7i7/">【教辅视频】Cisco Packet Tracer视频教程</a></p>
<p>2023.8.8@Seymour0314</p>
</blockquote>
<h2 id="第一章、认识软件">第一章、认识软件</h2>
<h3 id="1-1-实验">1.1 实验</h3>
<ul>
<li>一台二层交换机</li>
<li>两台PC机</li>
<li>直连线互联（连接 FastEthernet 口）</li>
<li>配置PC0、PC1的 IP 分别为 <code>192.168.1.2</code>和<code>192.168.1.3</code></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808140520077.png" alt="image-20230808140520077" style="zoom: 80%;" /> 
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808140546448.png" alt="image-20230808140546448" style="zoom: 67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808140613869.png" alt="image-20230808140613869" style="zoom: 67%;" /></p>
<h3 id="1-2-测试">1.2 测试</h3>
<ul>
<li>打开PC0的cmd，ping PC1</li>
<li>同理 PC1 ping PC0</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808140913617.png" alt="image-20230808140913617" style="zoom: 67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808140940635.png" alt="image-20230808140940635" style="zoom:67%;" /></p>
<h3 id="1-3-说明">1.3 说明</h3>
<ul>
<li>二层交换机下同属一个广播域，PC0与PC1可以互相通信</li>
</ul>
<h2 id="第二、三章、交换机管理">第二、三章、交换机管理</h2>
<h3 id="2-1-原理">2.1 原理</h3>
<ul>
<li>
<p>交换机有两种管理方法</p>
<ul>
<li>
<p>带内管理</p>
<p>通过Console 端口进行管理</p>
</li>
<li>
<p>带外管理</p>
<p>通过Telnet、拨号等方法远程登录进行管理</p>
</li>
</ul>
<p>第一次配置只能是带内管理。</p>
</li>
</ul>
<h4 id="交换机命令行模式">交换机命令行模式</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户模式	Switch&gt;</span><br><span class="line">特权模式	Switch#</span><br><span class="line">全局配置	Switch(config)#</span><br><span class="line">端口模式	Switch(config-if)#</span><br><span class="line"></span><br><span class="line">en			进入特权模式</span><br><span class="line">conf t		进入全局配置</span><br><span class="line">int fa 0/1	进入交换机端口</span><br><span class="line"></span><br><span class="line">exit		退回上一级模式</span><br><span class="line">end			退到全局模式</span><br><span class="line">shutdown	关闭</span><br><span class="line">no shutdown	开启</span><br><span class="line"></span><br><span class="line">ip routing  #开启三层交换机路由功能（#下）</span><br><span class="line"></span><br><span class="line">show run	查看当前生效的配置信息（#下）</span><br><span class="line">show vlan	查看vlan配置信息（#下）</span><br><span class="line"></span><br><span class="line">show int vlan 1		查看vlan1的具体信息（#下）</span><br><span class="line">show ip route 		查看ip路由配置信息（#下）</span><br><span class="line">show ip protocols	查看路由协议（#下）</span><br><span class="line"></span><br><span class="line">speed		配置交换机端口参数，带宽</span><br><span class="line">duplex		配置交换机端口参数，全双工</span><br><span class="line"></span><br><span class="line">clock rate 64000	设置serial串口时钟频率（进入int se设置）</span><br><span class="line"></span><br><span class="line">reload		重启</span><br><span class="line"></span><br><span class="line">?			帮助信息</span><br><span class="line">houstname	设备重新命名</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>
<p>命令可以简写</p>
<p>如 <code>int fa 0/1</code> 是 <code>interface fastEthernet 0/1</code>的简写</p>
<p>解释：</p>
<ul>
<li>
<p>fa 0/1</p>
<p>fa是fastEthernet线，最高100Mbps</p>
<p>0是这个板卡上的0槽位</p>
<p>1是这个槽位上的1端口</p>
</li>
</ul>
<blockquote>
<p>Gi 0/1的G指Gigabit，千兆以太网接口。</p>
</blockquote>
</li>
<li>
<p>Tab 键可以补全</p>
</li>
</ul>
</blockquote>
<h3 id="2-2-实验">2.2 实验</h3>
<p>采用 Telnet 远程登录配置交换机</p>
<ul>
<li>
<p>配置交换机 IP 地址（计算机 IP 和交换机 IP 必须属于同一个网段）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch(config)#int vlan 1</span><br><span class="line">Switch(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown</span><br></pre></td></tr></table></figure>
<blockquote>
<p>一般来说，二层交换机是不需要 IP 地址的，因为没有网络层功能。</p>
<p>这里却配置了IP地址，是因为要通过PC机远程登陆交换机，所以需要设置 IP 地址。</p>
</blockquote>
</li>
<li>
<p>为 Telnet 用户配置用户名、登陆口令</p>
<ul>
<li>
<p>密码1：进入特权模式的密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch(config)#enable password 123456</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>密码2：console口连接、Telnet远程登录等的密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch(config)#line console 0</span><br><span class="line">Switch(config-line)#password 123abc</span><br><span class="line">Switch(config-line)#login</span><br><span class="line"></span><br><span class="line">Switch(config)#line vty 0 4</span><br><span class="line">Switch(config-line)#password 123abc</span><br><span class="line">Switch(config-line)#login</span><br><span class="line"></span><br><span class="line">配置好了之后，可以查看一下</span><br><span class="line">Switch#show run</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>实验步骤</p>
<ul>
<li>
<p>一台交换机2960</p>
</li>
<li>
<p>一台PC机</p>
</li>
<li>
<p>Consle线连接（PC机-RS232口、交换机-Console口）</p>
</li>
<li>
<p>直连线（fastEthernet口）</p>
</li>
<li>
<p>打开PC 终端，是Switch 的配置终端</p>
</li>
<li>
<p>配置 Switch IP地址为<code>192.168.1.1</code></p>
</li>
<li>
<p>配置特权模式密码、配置Telent远程登录密码</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808145419593.png" alt="image-20230808145419593" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808145358929.png" alt="image-20230808145358929" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808145451238.png" alt="image-20230808145451238" style="zoom:67%;" /></p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808145708527.png" alt="image-20230808145708527" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808145734877.png" alt="image-20230808145734877" style="zoom:67%;" /></p>
<h3 id="2-3-测试">2.3 测试</h3>
<ul>
<li>
<p>配置PC机自己的 IP 在同一个网段下</p>
<blockquote>
<p>此时已经可以吧Console线去掉了，不需要了。</p>
</blockquote>
</li>
<li>
<p>ping 交换机测试</p>
</li>
<li>
<p>telnet登陆测试</p>
<p>登陆密码是前面设置的abc123</p>
<p>特权模式密码是前面设置的123456</p>
<blockquote>
<p>输入密码时，会看不到输入，但是实际上输入了</p>
</blockquote>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808145935899.png" alt="image-20230808145935899" style="zoom:67%;" />  <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808150049471.png" alt="image-20230808150049471" style="zoom:67%;" /></p>
<h2 id="第四章、交换机VLAN划分">第四章、交换机VLAN划分</h2>
<h3 id="4-1-原理">4.1 原理</h3>
<ul>
<li>
<p>VLAN</p>
<p>Virtual LAN，虚拟局域网</p>
</li>
<li>
<p>通过二层交换机的VLAN设置，使得同一物理区域的PC机，属于不同的逻辑区域，隔离广播域、冲突域。</p>
<p>同一VLAN下的PC可以相互通信，不同VLAN下的PC不能直接通信。</p>
<p>不同VLAN下的PC的通信需要经过三层交换机，后面介绍，这里只做二层交换机实验。</p>
</li>
<li>
<p>划分VLAN的两种方法</p>
<ul>
<li>
<p>Port VLAN</p>
<p>交换机的同一端口下的PC只能属于同一个VALN</p>
</li>
<li>
<p>Tag VLAN</p>
<p>遵循 IEEE802.1q 协议标准，数据帧内添加4字节的802.1q标签信息，用于标识该数据帧属于哪个VLAN，便于对端交换机接收到后进行过滤。</p>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>交换机的端口类型，可以分为以下两种：</p>
<ul>
<li>
<p><strong>（1）访问链接（Access Link）</strong></p>
<p>访问链接，指的是“只属于一个VLAN，且仅向该VLAN转发数据帧”的端口。在大多数情况下，访问链接所连的是客户机。</p>
<p>通常设置VLAN的顺序是：（1）生成VLAN（2）设定访问链接（决定各端口<strong>属于</strong>哪一个VLAN）</p>
<p>设定访问链接的手法，可以是事先固定的、也可以是根据所连的计算机而动态改变设定。</p>
<ul>
<li>
<p>前者被称为“静态VLAN”</p>
<p>静态VLAN又被称为基于端口的VLAN（PortBased VLAN）。</p>
<p>顾名思义，就是明确指定各端口属于哪个VLAN的设定方法。</p>
</li>
<li>
<p>后者自然就是“动态VLAN”</p>
<p>动态VLAN则是根据每个端口所连的计算机，随时改变端口所属的VLAN。</p>
<p>分为3类：（1）基于MAC地址的VLAN（MAC Based VLAN）（2）基于子网的VLAN（Subnet Based VLAN）（3）基于用户的VLAN（User Based VLAN）</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809002315109.png" alt="image-20230809002315109" style="zoom: 67%;" /> 
<p>其间的差异，主要在于根据OSI参照模型哪一层的信息决定端口所属的VLAN。</p>
</li>
</ul>
</li>
<li>
<p><strong>（2）汇聚链接（Trunk Link）</strong></p>
<p>汇聚链接（Trunk Link）指的是能够转发多个不同VLAN的通信的端口。</p>
<p>在交换机的汇聚链接上，可以通过对数据帧附加VLAN信息，构建跨越多台交换机的VLAN。</p>
<p>附加VLAN信息的方法，最具有代表性的有：</p>
<ul>
<li>
<p>IEEE 802.1Q</p>
<p>俗称“Dot One Q”，是经过IEEE认证的对数据帧附加VLAN识别信息的协议。</p>
</li>
<li>
<p>ISL</p>
<p>Cisco产品支持的一种与IEEE 802.1Q类似的、用于在汇聚链路上附加VLAN信息的协议。</p>
</li>
</ul>
<p>另外，汇聚链路上流通着多个VLAN的数据，自然负载较重。</p>
<p>因此，在设定汇聚链接时，有一个<strong>前提</strong>就是必须支持100Mbps以上的传输速度。</p>
</li>
</ul>
</blockquote>
<h3 id="4-2-实验">4.2 实验</h3>
<ul>
<li>两台交换机2960</li>
<li>四台PC机</li>
<li>直连线连接（fastEthernet，交换机之间连fa0/24）</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808153231479.png" alt="image-20230808153231479" style="zoom:67%;" /> 
<ul>
<li>
<p>配置PC机IP地址为<code>192.168.1.1</code>到<code>192.168.1.4</code>，不用设置网关。</p>
</li>
<li>
<p>测试ping</p>
<p>从PC0去ping其他所有PC，都是能通的。</p>
<p>也就是说，同属于一个LAN。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808153409161.png" alt="image-20230808153409161" style="zoom:67%;" /> 
</li>
<li>
<p>交换机划分VLAN</p>
<p>打开Switch-CLI窗口，划分vlan如下：</p>
<p>创建vlan2、vlan3，把端口划分进对应vlan，交换机之间设置trunk模式。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch#conf t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Switch(config)#vlan 2</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 3</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#int fa 0/1</span><br><span class="line">Switch(config-if)#switchport access vlan 2</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/2</span><br><span class="line">Switch(config-if)#switchport access vlan 3</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/24</span><br><span class="line">Switch(config-if)#switchport mode trunk</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>两个交换机都操作（完全相同操作）</p>
<p><code>show vlan</code>查看vlan设置</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808154004077.png" alt="image-20230808154004077" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808154109397.png" alt="image-20230808154109397" style="zoom:67%;" /></p>
</li>
</ul>
<h3 id="4-3-测试">4.3 测试</h3>
<ul>
<li>
<p>实验过程中已经测过一次</p>
<p>PC0到其他所有PC都能通</p>
</li>
<li>
<p>现在重新测试PC0到其他所有PC</p>
<ul>
<li>PC0属于vlan 2</li>
<li>只能ping通同属于vlan 2 的PC2</li>
<li>其他ping 不通</li>
</ul>
</li>
<li>
<p>换一个，PC1同理只能ping通 PC3</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808155142189.png" alt="image-20230808155142189" style="zoom:67%;" />  <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808155034124.png" alt="image-20230808155034124" style="zoom:67%;" /></p>
<h2 id="第五章、三层交换机实现VLAN间路由">第五章、三层交换机实现VLAN间路由</h2>
<blockquote>
<p>详细资料：</p>
<ul>
<li>
<p><a href="https://www.cnblogs.com/pwc1996/p/5957858.html">不同VLAN之间互相通信</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/phunxm/article/details/9498829">VLAN原理详解</a></p>
</li>
</ul>
</blockquote>
<h3 id="5-1-原理">5.1 原理</h3>
<ul>
<li>
<p>VLAN是广播域。</p>
<p>而通常两个广播域之间由路由器连接，广播域之间来往的数据包都是由<strong>路由器中继</strong>的。</p>
<p>因此，VLAN间的通信也需要路由器提供中继服务，这被称作“<strong>VLAN间路由</strong>”。</p>
<p>VLAN间路由，可以使用普通的路由器，也可以使用三层交换机。</p>
</li>
<li>
<p>三层交换机具备网络层功能，能够实现 VLAN 间的访问。</p>
<p>利用三层交换机的路由功能，通过识别数据包的 IP 地址，查找路由表并选路转发。</p>
</li>
<li>
<p>三层交换机给接口配置 IP 地址，采用 SVI（交换机虚拟接口）的方式实现 VLAN 间互联。</p>
<p>SVI 是指为交换机中的 VLAN 创建虚拟接口，并配置 IP 地址。</p>
</li>
</ul>
<h4 id="VLAN间路由原理">VLAN间路由原理</h4>
<blockquote>
<ul>
<li>
<p>两台计算机即使连接在同一台交换机上，只要所属的VLAN不同就无法直接通信。</p>
<p>为什么？</p>
<p>在LAN内的通信，必须在数据帧头中指定通信目标的MAC地址。而为了获取MAC地址，TCP/IP协议下使用的是ARP。ARP解析MAC地址的方法，则是通过广播。计算机分属不同的VLAN，也就意味着分属不同的广播域，自然收不到彼此的广播报文。</p>
</li>
<li>
<p>为了能够在VLAN间通信，需要利用OSI参照模型中<strong>更高一层</strong>——网络层的信息（IP地址）来进行<strong>路由</strong>。</p>
</li>
<li>
<p>方法</p>
<p>先将用于连接路由器的交换机端口设为汇聚链接（Trunk Link），而路由器上的端口也必须支持汇聚链路。双方用于汇聚链路的协议自然也必须相同。接着在路由器上定义对应各个VLAN的“子接口”（Sub Interface）。</p>
<p>尽管实际路由器与交换机连接的物理端口只有一个，但在理论上我们可以把它分割为多个虚拟端口。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809003629996.png" alt="image-20230809003629996" style="zoom:67%;" /> 
<p>交换机通过对各端口所连计算机MAC地址的学习，生成如下的MAC地址列表。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809003651516.png" alt="image-20230809003651516" style="zoom: 50%;" /> 
<p>分析：</p>
<ul>
<li>
<p>同一VLAN内的通信：A --&gt; B</p>
<p>交换机查VLAN1下的MAC表，直接发给了B</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809003844623.png" alt="image-20230809003844623" style="zoom:67%;" /> 
</li>
<li>
<p>不同VLAN间的通信：A --&gt; C</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809003956228.png" alt="image-20230809003956228" style="zoom:67%;" /> 
<p>计算机A从通信目标的IP地址（192.168.2.1）得出C与本机不属于同一个网段。</p>
<p>因此会向设定的默认网关（DefaultGateway，GW）转发数据帧。在发送数据帧前，需要先用<strong>ARP</strong>获取路由器的MAC地址。</p>
<p>得到路由器的MAC地址R后，接下来就是按图中所示的步骤发送往C去的数据帧。①的数据帧中，目标<strong>MAC地址</strong>是路由器的地址R、但内含的<strong>目标IP地址</strong>仍是最终要通信的对象C的地址。</p>
<p>交换机在端口1上收到①的数据帧后，检索MAC地址列表中与端口1同属一个VLAN的表项。由于汇聚链路会被看作属于所有的VLAN，因此这时交换机的端口6也属于被参照对象。这样交换机就知道往<strong>MAC地址</strong>R发送数据帧，需要经过端口6转发。</p>
<p>从端口6发送数据帧时，由于它是<strong>汇聚链接</strong>，因此会被<strong>附加</strong>上VLAN识别信息。由于原先是<strong>来自红色</strong>VLAN的数据帧，因此如图中②所示，会被<strong>加上红色</strong>VLAN的识别信息后进入汇聚链路。路由器收到②的数据帧后，确认其VLAN识别信息，由于它是<strong>属于红色</strong>VLAN的数据帧，因此<strong>交由负责红色</strong>VLAN的子接口接收。</p>
<p>接着，根据路由器内部的<strong>路由表</strong>，判断该向哪里中继。</p>
<p>由于目标网络192.168.2.0/24是蓝色VLAN，，且该网络通过<strong>子接口</strong>与路由器直连，因此只要从<strong>负责蓝色</strong>VLAN的<strong>子接口转发</strong>就可以了。这时，数据帧的目标MAC地址被<strong>改写</strong>成计算机C的目标地址；并且由于需要<strong>经过汇聚链路转发</strong>，因此被<strong>附加</strong>了属于<strong>蓝色</strong>VLAN的识别信息。这就是图中③的数据帧。</p>
<p>交换机收到③的数据帧后，根据VLAN标识信息从MAC地址列表中检索属于蓝色VLAN的表项。由于通信目标——计算机C连接在端口3上、且端口3为普通的访问链接，因此交换机会将数据帧<strong>去除</strong>VLAN识别信息后（数据帧④）转发给端口3，最终计算机C才能成功地收到这个数据帧。</p>
<p>注：进行VLAN间通信时，即使通信双方都连接在同一台交换机上，也必须经过：“发送方——交换机——路由器——交换机——接收方”这样一个流程。</p>
</li>
</ul>
</li>
</ul>
</blockquote>
<h4 id="路由器与交换机">路由器与交换机</h4>
<blockquote>
<ul>
<li>
<p>路由器，则基本上是基于软件处理的。</p>
</li>
<li>
<p>三层交换机，本质上就是“有第三层路由功能的（二层）交换机”。</p>
<p>与传统的路由器相比，可以实现高速路由。</p>
<p>并且，路由与交换模块是汇聚链接的，由于是内部连接，可以确保相当大的带宽。</p>
<p><strong>VLAN接口</strong>，是用于各VLAN收发数据的接口。</p>
<p>（注：在Cisco的Catalyst系列交换机上，VLAN Interface被称为SVI——Switched Virtual Interface）</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809004858899.png" alt="image-20230809004858899" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809005057754.png" alt="image-20230809005057754" style="zoom: 50%;" /></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809005359698.png" alt="image-20230809005359698" style="zoom:67%;" /> 
<ul>
<li>
<p>既然三层交换机能够提供比传统型路由器更为高速的路由处理，那么网络中还有使用路由器的必要吗？</p>
<p>使用路由器的必要性，主要表现在以下几个方面：</p>
<p>（1）用于与WAN连接</p>
<p>（2）保证网络安全</p>
<p>（3）支持除TCP/IP以外的异构网络架构</p>
</li>
<li>
<p>下面让我们来看一个路由器和交换机搭配构建LAN的实例。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809010007772.png" alt="image-20230809010007772" style="zoom:80%;" /> 
<p>利用在各楼层配置的二层交换机定义VLAN，连接TCP/IP客户计算机。各楼层间的VLAN间通信，利用三层交换机的高速路由加以实现。如果网络环境要求高可靠性，还可以考虑冗余配置三层交换机。</p>
<p>与WAN的连接，则通过带有各种网络接口的路由器进行。并且，通过路由器的数据包过滤和VPN等功能实现网络安全。此外，使用路由器还能支持Novell Netware等TCP/IP之外的网络。</p>
<p>只有在充分掌握了二层、三层交换机以及传统路由器的基础上，才能做到物竞其用，构筑出高效率、高性价比的网络。</p>
</li>
<li>
<p>例：分析下面的网络</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809011747934.png" alt="image-20230809011747934" style="zoom:50%;" /> 
</li>
</ul>
</blockquote>
<h3 id="5-2-实验">5.2 实验</h3>
<ul>
<li>三层交换机3560一台</li>
<li>二层交换机2960一台</li>
<li>PC机三台</li>
<li>直连线连接</li>
<li>设置PC机 IP 和网关</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808184117306.png" alt="image-20230808184117306" style="zoom:67%;" /> 
<ul>
<li>配置二层交换机的vlan2、vlan3并连接到对应接口</li>
<li>配置二层交换机trunk口</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch#conf t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Switch(config)#vlan 2</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 3</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#int fa 0/2</span><br><span class="line">Switch(config-if)#switchport access vlan 2</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/3</span><br><span class="line">Switch(config-if)#switchport access vlan 3</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/1</span><br><span class="line">Switch(config-if)#switchport mode trunk </span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808190553126.png" alt="image-20230808190553126" style="zoom:67%;" /> 
<ul>
<li>
<p>配置三层交换机</p>
<p>创建vlan2、vlan3，连接vlan下的PC机</p>
<p>创建vlan2、vlan3的SVI，配置 IP 地址，并开启</p>
<p>开启三层交换机的路由功能，开始工作</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch#conf t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Switch(config)#vlan 2</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 3</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#int fa 0/2</span><br><span class="line">Switch(config-if)#switchport access vlan 2</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line"></span><br><span class="line">Switch(config)#int vlan 2</span><br><span class="line">Switch(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int vlan 3</span><br><span class="line">Switch(config-if)#ip address 192.168.2.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line"></span><br><span class="line">Switch(config)#ip routing  #开启三层交换机路由功能</span><br><span class="line">Switch(config)#end</span><br><span class="line"></span><br><span class="line">Switch#show ip route	#查看路由配置</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808190347880.png" alt="image-20230808190347880" style="zoom:67%;" /> 
<h3 id="5-3-测试">5.3 测试</h3>
<ul>
<li>由PC0 去ping其他主机，均能通</li>
<li>由PC1 去ping其他主机，均能通</li>
<li>由PC2 去ping其他主机，均能通</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808190749565.png" alt="image-20230808190749565" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808190834265.png" alt="image-20230808190834265" style="zoom:67%;" /></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230808191018147.png" alt="image-20230808191018147" style="zoom:67%;" /> 
<h2 id="第六章、快速生成树RSTP">第六章、快速生成树RSTP</h2>
<h3 id="6-1-原理">6.1 原理</h3>
<ul>
<li>
<p>生成树协议（spanning-tree）</p>
<p>作用是在交换网络中提供冗余备份链路，并且解决交换网络中的环路问题。</p>
</li>
<li>
<p>生成树协议是利用SPA算法，在存在交换环路的网络中生成一个没有环路的树形网络。</p>
<p>运用该算法将交换网络的冗余备份链路从逻辑上断开，当主链路出现故障时，能够自动的切换到备份链路，保证数据的正常转发。</p>
</li>
<li>
<p>生成树协议版本</p>
<ul>
<li>STP</li>
<li>RSTP（快速生成树协议）</li>
<li>MSTP（多生成树协议）</li>
</ul>
</li>
<li>
<p>生成树协议特点</p>
<p>收敛时间长，从主要链路出现故障，到切换至备份链路需要50秒的时间。</p>
<p>快速生成树协议在生成树协议的基础上，增加了两种端口角色：替换端口、备份端口，分别作为根端口和指定端口的冗余端口。</p>
<p>当根端口或指定端口出现故障时，冗余端口不需要经过50秒的收敛时间，可以直接切换到替换端口或备份端口，从而实现RSTP的小于1秒的快速收敛。</p>
</li>
</ul>
<h3 id="6-2-实验">6.2 实验</h3>
<ul>
<li>二层交换机2960两台</li>
<li>PC机两台</li>
<li>直连线连接（二层交换机之间连两次）</li>
<li>设置PC机 IP 地址</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809020343067.png" alt="image-20230809020343067" style="zoom:67%;" /> 
<ul>
<li>
<p>二层交换机配置</p>
<ul>
<li>划分vlan10进对应端口</li>
<li>把汇聚端口的一组端口，设置为trunk模式</li>
<li>打开spanning-tree的RSTP协议</li>
<li>查看spanning-tree状态</li>
</ul>
<p>两台二层交换机一样的设置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch#conf t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Switch(config)#int fa 0/10</span><br><span class="line">Switch(config-if)#switchport access vlan 10</span><br><span class="line">% Access VLAN does not exist. Creating vlan 10</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int range fa 0/1 - 2</span><br><span class="line">Switch(config-if-range)#switchport mode trunk</span><br><span class="line">Switch(config-if-range)#exit</span><br><span class="line">Switch(config)#spanning-tree mode rapid-pvst </span><br><span class="line">Switch(config)#end</span><br><span class="line">Switch#show spanning-tree </span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809020226590.png" alt="image-20230809020226590" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809020325914.png" alt="image-20230809020325914" style="zoom:50%;" /></p>
</li>
</ul>
<h3 id="6-3-测试">6.3 测试</h3>
<ul>
<li>
<p>可以看到上面的spanning-tree的状态</p>
<p>目前是S0的Fa 0/2是Block堵塞状态，所以说，并不会出现环路，网络通信正常。</p>
</li>
<li>
<p>我们让PC0去不停的ping PC1</p>
<p>在此期间，把S1原来用来通信的fa 0/1给关闭shutdown，</p>
<p>那么S1只能使用fa 0/2通信了，而对应的S0必须把原来堵塞的fa 0/2给打开。</p>
<p>我们测试一下，看看是不是很快就会自动打开了</p>
<p>（通过看PC0 不停ping PC1的过程中，有没有丢包）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># PC0打开cmd</span><br><span class="line">C:\&gt;ping -t 192.168.1.2</span><br><span class="line"></span><br><span class="line"># 然后S1断开fa 0/1</span><br><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#int fa 0/1</span><br><span class="line">Switch(config-if)#shutdown</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809020946725.png" alt="image-20230809020946725" style="zoom:67%;" /> 
</li>
<li>
<p>可以看到，整个过程中，都没有丢包。</p>
<p>在拓扑图也可以发现，S0与S1之间的路线变了（绿色、红色点变了），说明确实更换了路线。</p>
<p>可见，快速生成树协议切换速度很快，快到甚至不会丢包（小于1秒）。</p>
</li>
</ul>
<h2 id="第七章、路由器的基本配置">第七章、路由器的基本配置</h2>
<h3 id="7-1-原理">7.1 原理</h3>
<ul>
<li>
<p>管理，与交换机一样</p>
<ul>
<li>带内管理，Console 端口</li>
<li>带外管理，telent 远程连接</li>
</ul>
</li>
<li>
<p>路由器与三层交换机</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三层交换机配置端口IP：创建vlan，划分端口进vlan，再进入int vlan配置网关IP，开启端口</span><br><span class="line">（且需要ip routing 命令打开三层交换机的路由功能）</span><br><span class="line">ip routing</span><br><span class="line">vlan 10</span><br><span class="line">exit</span><br><span class="line">int fa 0/1</span><br><span class="line">switch access vlan 10</span><br><span class="line">exit</span><br><span class="line">int vlan 10</span><br><span class="line">ip address 192.168.1.1 255.255.255.0</span><br><span class="line">no shutdown</span><br><span class="line"></span><br><span class="line">路由器配置端口IP：直接进入对应端口，开启物理端口，配置端口IP作为网关</span><br><span class="line">int fa 0/0</span><br><span class="line">no shutdown</span><br><span class="line">ip address 192.168.1.1 255.255.255.0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="路由器命令行模式">路由器命令行模式</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 与交换机一样</span><br><span class="line"># 还有</span><br><span class="line">router rip				配置RIP协议信息</span><br><span class="line">router ospf				配置OSPF协议信息</span><br><span class="line">show ip route			查看路由信息（#下）</span><br><span class="line">show ip protocols		查看路由协议（#下）</span><br></pre></td></tr></table></figure>
<h3 id="7-2-实验">7.2 实验</h3>
<ul>
<li>
<p>路由器2811一台</p>
</li>
<li>
<p>PC机一台</p>
</li>
<li>
<p>console线（蓝色线）连接PC-RS232口、路由器-console口</p>
</li>
<li>
<p>交叉线（黑色虚线）连接PC-fa口、路由器fa口</p>
<blockquote>
<ul>
<li>
<p>PC机与交换机直接相连，是用直连线（黑色实线）</p>
</li>
<li>
<p>PC机与路由器直接相连，是用交叉线（黑色虚线）</p>
</li>
</ul>
</blockquote>
</li>
<li>
<p>设置PC机IP配置</p>
<p>IPv4：192.168.1.2</p>
<p>子网掩码：255.255.255.0</p>
<p>网关：192.168.1.1</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809131005748.png" alt="image-20230809131005748" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809131026999.png" alt="image-20230809131026999" style="zoom:67%;" /></p>
<ul>
<li>
<p>路由器配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line"></span><br><span class="line">查看配置情况</span><br><span class="line">Router(config-if)#end</span><br><span class="line">Router#show running-config </span><br><span class="line">看到有以下的内容即可</span><br><span class="line">interface FastEthernet0/0</span><br><span class="line"> ip address 192.168.1.1 255.255.255.0</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line"> </span><br><span class="line">配置远程登录密码</span><br><span class="line">Router#conf t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Router(config)#enable password 123456	设置特权模式密码</span><br><span class="line">Router(config)#line vty 0 4				设置远程登录密码</span><br><span class="line">Router(config-line)#password 123abc</span><br><span class="line">Router(config-line)#login</span><br><span class="line">Router(config-line)#exit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="7-3-测试">7.3 测试</h3>
<ul>
<li>
<p>可以把console线（蓝色）取消了</p>
</li>
<li>
<p>先在PC机cmd窗口ping网关192.168.1.1</p>
<p>能ping通</p>
</li>
<li>
<p>再尝试远程登陆路由器</p>
<p>telent 192.168.1.1</p>
<p>登陆密码是刚刚设置的123abc</p>
<p>特权模式密码是刚刚设置的123456</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809132109645.png" alt="image-20230809132109645" style="zoom:67%;" /> 
<h2 id="第八章、路由器单臂路由">第八章、路由器单臂路由</h2>
<h3 id="8-1-原理">8.1 原理</h3>
<ul>
<li>
<p>效果：可以实现原来不同VLAN之间的互联互通。</p>
</li>
<li>
<p>单臂路由（router-on-a-stick）</p>
<p>是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同VLAN之间的互联互通。</p>
</li>
<li>
<p>单臂路由子接口</p>
<p>路由器的物理接口可以被划分成多个<strong>逻辑接口</strong>，这些被划分后的逻辑接口被形象的称为<strong>子接口</strong>。值得注意的是这些逻辑子接口不能被单独的开启或关闭，也就是说，当物理接口被开启或关闭时，所有的该接口的子接口也随之被开启或关闭。</p>
</li>
<li>
<p>其实本质上，和前面的第五章原理类似</p>
<p>第五章是三层交换机的vlan间通信，通过虚拟接口SVI实现。</p>
<p>这里是路由器的vlan间通信，通过单臂路由实现。</p>
<p>两者都是通过第三层网络层实现的，只是实现细节不同，前面是通过vlan出现虚拟端口，这里是.1.2实现子端口。</p>
</li>
</ul>
<h3 id="8-2-实验">8.2 实验</h3>
<ul>
<li>
<p>路由器2811一台</p>
</li>
<li>
<p>二层交换机2960一台</p>
</li>
<li>
<p>PC机两台</p>
</li>
<li>
<p>直连线连接PC机、二层交换机</p>
</li>
<li>
<p>交叉线连接二层交换机、路由器</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809170922603.png" alt="image-20230809170922603" style="zoom: 67%;" /> 
</li>
<li>
<p>配置主机的IP</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809165608173.png" alt="image-20230809165608173" style="zoom: 67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809165640405.png" alt="image-20230809165640405" style="zoom:67%;" /></p>
</li>
<li>
<p>二层交换机划分vlan、设置trunk</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch&gt;en</span><br><span class="line">Switch#conf t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Switch(config)#vlan 10</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 20</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#int fa 0/2</span><br><span class="line">Switch(config-if)#switchport access vlan 10</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/3</span><br><span class="line">Switch(config-if)#switchport access vlan 20</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/1</span><br><span class="line">Switch(config-if)#switchport mode trunk </span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#end</span><br><span class="line"></span><br><span class="line">Switch#show running-config </span><br></pre></td></tr></table></figure>
</li>
<li>
<p>路由器开启物理端口，打开子端口、封装协议、配置 IP</p>
<blockquote>
<p>这里是进行vlan间路由的，所以打开子端口设置IP，</p>
<p>实际上，本身可以直接对 <code>int fa 0/0</code>进行<code>ip address</code>设置的。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int fa 0/0.1</span><br><span class="line">Router(config-subif)#encapsulation dot1Q 10</span><br><span class="line">Router(config-subif)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Router(config-subif)#exit</span><br><span class="line">Router(config)#int fa 0/0.2</span><br><span class="line">Router(config-subif)#encapsulation dot1Q 20</span><br><span class="line">Router(config-subif)#ip address 192.168.2.1 255.255.255.0</span><br><span class="line">Router(config-subif)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line">查看配置</span><br><span class="line">Router#show running-config </span><br><span class="line">看到有下面的内容就可以了</span><br><span class="line">interface FastEthernet0/0</span><br><span class="line"> no ip address</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/0.1</span><br><span class="line"> encapsulation dot1Q 10</span><br><span class="line"> ip address 192.168.1.1 255.255.255.0</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/0.2</span><br><span class="line"> encapsulation dot1Q 20</span><br><span class="line"> ip address 192.168.2.1 255.255.255.0</span><br><span class="line">!</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="8-3-测试">8.3 测试</h3>
<ul>
<li>
<p>测试两个PC机相互ping，均能通。</p>
<p>我们先ping了网关，然后ping对方主机，发现ping对方主机的第一次是丢包的。</p>
<p>这是正常的，因为第一次路由器的路由表中还没有记录去往对方主机的路由，会丢包。</p>
<p>而之后PC1再来ping PC0时，为什么没有丢包呢？因为路由器在前面已经记录了路由，会自动学习。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809171054136.png" alt="image-20230809171054136" style="zoom: 67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809171130835.png" alt="image-20230809171130835" style="zoom:67%;" /></p>
</li>
</ul>
<h2 id="第九章、路由器静态路由">第九章、路由器静态路由</h2>
<blockquote>
<p>详细来源：<a href="https://blog.csdn.net/weixin_42857944/article/details/128247989">静态路由（Static Routing）</a></p>
</blockquote>
<h3 id="9-1-原理">9.1 原理</h3>
<ul>
<li>
<p>路由表的形成</p>
<ul>
<li>
<p>直连路由</p>
<p>本地接口配置IP地址和子网掩码，端口开启后，形成的路由</p>
</li>
<li>
<p>非直连路由</p>
<p>不是本地接口配置IP地址和子网掩码，接口开启后，形成的路由</p>
<p><strong>对于非直连路由的学习，有两种方式：</strong></p>
<ul>
<li>静态路由（管理员手动添加）</li>
<li>动态路由（路由器通过路由协议自动学习）</li>
</ul>
</li>
</ul>
</li>
<li>
<p>静态路由的特点<br>
管理员添加的路由的传输方向是单向的</p>
<ul>
<li>
<p>优点：配置灵活，管理员手工配置，节省链路开销</p>
</li>
<li>
<p>缺点：当拓扑发生改变时，需要管理员去每台路由器上修改路由配置</p>
</li>
</ul>
<p>建议五条以内的非直连路由用静态路由协议，五条以上的用动态路由协议<br>
静态路由协议只能用于小规模的企业网络，大型企业网络用的是动态路由协议</p>
</li>
</ul>
<h4 id="案例剖析">案例剖析</h4>
<blockquote>
<h5 id="案例1-静态路由配置">案例1(静态路由配置)</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809180642495.png" alt="image-20230809180642495" style="zoom: 67%;" /> 
<p>图中，路由器R1和R2通过接口0和接口1所配置的IP地址和子网掩码，可自动得到每个接口所在的网络。同时，接口与网络直连，属于直接交付。R1，R2最基本的路由表如下表所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809180709479.png" alt="image-20230809180709479" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809180722817.png" alt="image-20230809180722817" style="zoom:67%;" /></p>
<p>假设网络子网1中的主机A向子网3中的主机B发送数据报，从图中可以看出，数据报的转发顺序为：主机AR1接口0  R1接口1  R2接口0  R2接口1 主机B。</p>
<p>可是R1 现有的路由表中并没有关于子网3的路由条目，即R1并不知道目的网络的存在。因此，我们可以给路由器R1添加一条到达子网3的路由条目，如下表所示。</p>
<p>这样，子网1中的主机就可以将数据报发送至子网3的主机。</p>
<p>同理，若想子网3中的主机能向子网1中的主机发送数据报，则路由器R2的路由表应配置为如下所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809180827358.png" alt="image-20230809180827358" style="zoom:67%;" />     <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809180858227.png" alt="image-20230809180858227" style="zoom:67%;" /></p>
<h5 id="案例2-默认路由配置">案例2(默认路由配置)</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809181104776.png" alt="image-20230809181104776" style="zoom:67%;" /> 
<p>假设子网1中的主机A向因特网发送数据报，从图中可以看出，数据报的转发顺序为：主机AR1接口0  R1接口1  R2接口0  R2接口3 因特网的某个主机。</p>
<p>正如案例1中总结，如果我们在路由器R1中逐个添加通往因特网的路由条目，一方面不符合实际需求，另一方面会使得路由器的路由表非常庞大，降低查表转发速度，因此我们可以通过添加默认路由解决这一问题。</p>
<p>默认路由条目用于替代具有相同下一跳的不同目的网络的路由条目，默认路由条目的目的网络为0.0.0.0，地址掩码为0.0.0.0，因此R1的路由表可配置为如下所示。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809181142879.png" alt="image-20230809181142879" style="zoom:67%;" /> 
<blockquote>
<ul>
<li>
<p>我们可以发现如果我们从子网1发送数据报到子网3，数据报既可以走目的网络为192.168.2.0/24的路由条目，也可以走目的网络为0.0.0.0/0的默认路由条目，那数据报到底会走哪一条路由条目呢？</p>
<p>由于192.168.2.0/24的网络前缀更长，所以路由也就更具体。而默认路由的网络前缀较短，路由也就更模糊， 因此当路由器查表转发IP数据报时，若有多条路由条目可选，通常会采用<strong>最长前缀匹配原则</strong>，选择目的网络前缀最长的那条路由条目进行转发 。所以如果子网1的主机向子网3的主机发送数据报，<strong>会走192.168.2.0/24</strong>这一路由条目。</p>
</li>
<li>
<p>路由环路问题的解决方案？</p>
<ul>
<li>
<p><strong>静态路由配置错误</strong></p>
<p>为了防止IP数据报在路由环路中永久兜圈，在 IP数据报首部中设置了生存时间TTL字段，数据报每进入一个路由器，TTL字段的值便会减1，若TTL的值不为0，则路由器继续转发该IP数据报，否则便丢弃这个IP数据报。</p>
</li>
<li>
<p><strong>聚合了不存在网络</strong></p>
<p>所谓聚合网络，就是将若干个网络的共同前缀保持不变，其余位取0，同时将相同前缀的个数写在斜线后面，如下图所示。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809181711255.png" alt="image-20230809181711255" style="zoom:50%;" /> 
<p>我们可以在路由表中用192.168.0.0/22表示192.168.0.0/24，192.168.1.0/24，192.168.2.0/24以及192.168.3.0/24四个网络。</p>
<p>我们可以在路由表中针对不存在的网络添加黑洞路由来解决上述问题，黑洞路由的下一跳为null0，这是路由器内部的虚拟接口，IP数据报进入后便会被自动丢弃。 我们可以将路由器R2的路由表设置为如下所示：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809181819953.png" alt="image-20230809181819953" style="zoom: 67%;" /> 
<p>若按上表配置，当路由器R2向一个不存在的子网(192.168.3.0/24)发送数据报，路由器会根据最长前缀匹配原则选择目的网络为192.168.3.0/24的路由条目，该条目的下一跳为虚拟接口null0，这样，该IP数据报便会被快速丢弃。</p>
</li>
<li>
<p><strong>网络故障</strong></p>
<p>我们可以针对故障的网络(192.168.1.0/24)添加黑洞路由。经过一段时间后，路由器R1的0号接口网络恢复正常，R1又自动得到了192.168.1.0/24的直连路由条目， 则我们先前设置的黑洞路由会自动失效。</p>
</li>
</ul>
</li>
</ul>
</blockquote>
</blockquote>
<h3 id="9-2-实验">9.2 实验</h3>
<h4 id="搭建拓扑">搭建拓扑</h4>
<ul>
<li>路由器Router-PT两台</li>
<li>二层交换机2960两台</li>
<li>PC机两台</li>
<li>直连线（黑色直线Copper Straight-Through）连接PC机、二层交换机（Fa口）</li>
<li>交叉线（黑色虚线Copper Cross-Over）连接二层交换机、路由器（Fa口）</li>
<li>串口线（红色带钟Serial DCE）连接两台路由器（Serial口）</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809190642907.png" alt="image-20230809190642907" style="zoom:67%;" /> 
<h4 id="配置IP">配置IP</h4>
<ul>
<li>
<p>配置主机IP</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809184722567.png" alt="image-20230809184722567" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809184748606.png" alt="image-20230809184748606" style="zoom:67%;" /></p>
</li>
<li>
<p>二层交换机不用配置</p>
</li>
<li>
<p>路由器配置</p>
<p>开启fa端口，配置 IP</p>
<p>开启se端口，配置IP，设置时钟</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#no shutdown</span><br><span class="line">Router(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#no shutdown</span><br><span class="line">Router(config-if)#ip address 192.168.3.1 255.255.255.0</span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line"></span><br><span class="line">Router#show run</span><br><span class="line">看到有以下内容即可</span><br><span class="line">interface FastEthernet0/0</span><br><span class="line"> ip address 192.168.1.1 255.255.255.0</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface FastEthernet1/0</span><br><span class="line"> no ip address</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface Serial2/0</span><br><span class="line"> ip address 192.168.3.1 255.255.255.0</span><br><span class="line"> clock rate 64000</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">另一台路由器看到的应该是</span><br><span class="line">interface FastEthernet0/0</span><br><span class="line"> ip address 192.168.2.1 255.255.255.0</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface FastEthernet1/0</span><br><span class="line"> no ip address</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface Serial2/0</span><br><span class="line"> ip address 192.168.3.2 255.255.255.0</span><br><span class="line">!</span><br></pre></td></tr></table></figure>
<p>两台路由器都对应配置（IP写对）</p>
</li>
<li>
<p>可以先测试一下，两台PC机应该是无法通信的，</p>
<p>虽然路由器已经工作了，但是只知道自己两个端口的路由，并不知道非直连的路由，所以是无法通信的。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809185954270.png" alt="image-20230809185954270" style="zoom:67%;" /> 
</li>
</ul>
<h4 id="配置路由">配置路由</h4>
<ul>
<li>
<p>我们现在来把那个非直连路由，配置为静态路由，使其可以通信。</p>
<p>将去往非直连网段的路由配置下一跳为对方路由器的直连接口IP</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">路由器0</span><br><span class="line">Router(config)#ip route 192.168.2.0 255.255.255.0 192.168.3.2</span><br><span class="line">可以查看</span><br><span class="line">Router#show ip route</span><br><span class="line">有下面的内容即可</span><br><span class="line">C    192.168.1.0/24 is directly connected, FastEthernet0/0</span><br><span class="line">S    192.168.2.0/24 [1/0] via 192.168.3.2</span><br><span class="line">C    192.168.3.0/24 is directly connected, Serial2/0</span><br><span class="line"></span><br><span class="line">路由器1</span><br><span class="line">Router(config)#ip route 192.168.1.0 255.255.255.0 192.168.3.1</span><br><span class="line">可以查看</span><br><span class="line">Router#show ip route</span><br><span class="line">有下面的内容即可</span><br><span class="line">S    192.168.1.0/24 [1/0] via 192.168.3.1</span><br><span class="line">C    192.168.2.0/24 is directly connected, FastEthernet0/0</span><br><span class="line">C    192.168.3.0/24 is directly connected, Serial2/0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="9-3-测试">9.3 测试</h3>
<ul>
<li>
<p>之前测试ping并不能通信，现在重新ping，能正常通信</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230809190610900.png" alt="image-20230809190610900" style="zoom:67%;" /> 
</li>
</ul>
<h2 id="第十章、路由器RIP动态路由">第十章、路由器RIP动态路由</h2>
<h3 id="10-1-原理">10.1 原理</h3>
<ul>
<li>
<p><strong>路由协议分类</strong></p>
<ul>
<li>
<p>内部网关协议 IGP</p>
<p>RIP、EIGRP（距离矢量路由协议）</p>
<p>OSPF、IS-IS（链路状态路由协议）</p>
</li>
<li>
<p>外部网关协议 EGP</p>
<p>BGP</p>
</li>
</ul>
</li>
<li>
<p><strong>RIP协议</strong><br>
RIP是Routing Information Protocol（路由信息）的简称，它是一种较为简单的内部网关路由协议（Interior Gateay Protocol），是内部网关协议IGP中最先得到广泛使用的协议。RIP是基于距离矢量的路由选择协议，是因特网标准协议，其最大优点就是实现简单，开销较小，适用于网络拓扑较小的环境。</p>
<ul>
<li>
<p>具体原理</p>
<p>RIP是一种基于距离矢量（Distance-Vector）算法的协议，每30秒 会与相邻的路由器交换路由信息，以动态建立路由表。<br>
它使用跳数（Hop Count）作为度量值来衡量达到目的的地址的距离（最大跳数15跳）。设备到与它直连网络的设备跳数为0，然后每经过一 个三层设备跳数增加1。也就是说通过一个3层设备到达的网络的跳数 为1。度量值等于从本网络到达目的网络间的设备数据量。为限制收敛 时间，RIP规定度量值取1~15之间的整数，大于或等于16的跳数（也 就是3层设备数量）被定义为无穷大，即目的网络或主机不可达。也就 是说最大跳数15跳所以流量只能经过15个3层设备，16跳第16个3 层设备为不可达。</p>
</li>
<li>
<p>版本</p>
<p>RIP包含RIP-v1、RIP-v2、RIPng三个版本，RIP-2对RIP-1进行了扩充，使其更具有优势，RIP-1和IPR-2应用在IPV4环境中，RIPng 则应用在IPV6环境中。</p>
<p>RIPv1是有类路由协议，RIPv2是无类路由协议，即RIPv2的报文中含有掩码信息。</p>
</li>
<li>
<p>优点</p>
<p>配置实现简单、开销较小、问题定位快、适用于网络规模小的环境。</p>
</li>
<li>
<p>缺点</p>
<p>本身的度量值限制了网络规模、交换完整的路由信息随着网络规模的扩大开销也叫增加了、坏消息传播的慢使更新过程收敛时间较长。</p>
</li>
</ul>
</li>
<li>
<p><strong>路由表标志</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R：表示RIP路由协议</span><br><span class="line">C：直连网段路由</span><br><span class="line">S：静态路由</span><br><span class="line">B：BGP路由协议</span><br><span class="line">D：EIGRP路由协议</span><br><span class="line">O：OSPF</span><br><span class="line">N1：为OSPF的宣告类型1</span><br><span class="line">N2：为OSPF的宣告类型2</span><br><span class="line">E1：为OSPF的内部路由</span><br><span class="line">E2：为OSPF的外部路由</span><br><span class="line">i：为IS-IS路由协议</span><br><span class="line">L1：为IS-IS的类型1路由协议</span><br></pre></td></tr></table></figure>
<p>例：C 192.168.4.0/24 is directly connected, FastEthernet3/0<br>
该字段中的C表示直连网段，192.168.4.0/24表示目标网段，FastEthernet3/0表示下一跳接口。<br>
例：R 192.168.1.0/24 [120/3] via 192.168.4.1, 00:00:02,FastEthernet3/0<br>
该字段中R表示使用的是RIP路由协议，192.168.1.0/24表示达到 的目标网段，120表示为RIP协议的优先级，3达到目标网络的跳数（也就是需要经过3个路由器），FastEthernet3/0表示下一跳接口地址。</p>
</li>
</ul>
<h3 id="10-2-实验">10.2 实验</h3>
<h4 id="搭建拓扑-2">搭建拓扑</h4>
<ul>
<li>PC机两台</li>
<li>三层交换机3560 一台</li>
<li>路由器Router-PT 两台</li>
<li>直连线连接PC机、交换机</li>
<li>交叉线连接交换机、路由器</li>
<li>交叉线连接主机、交换机</li>
<li>串口线连接路由器、路由器</li>
</ul>
<blockquote>
<ul>
<li>
<p>主机与交换机之间、交换机与交换机之间的连接用直连线Copper Straight-Through</p>
<p>（二层交换机、三层交换机均属于交换机）</p>
</li>
<li>
<p>主机或交换机连接到 路由器 时，采用交叉线Copper Cross-Over</p>
</li>
<li>
<p>路由器之间的连接，采用串口线Serial DCE</p>
</li>
</ul>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810023500985.png" alt="image-20230810023500985" style="zoom:67%;" /> 
<h4 id="配置IP、路由">配置IP、路由</h4>
<ul>
<li>按照图示配置PC机IP</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810015207538.png" alt="image-20230810015207538" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810015233238.png" alt="image-20230810015233238" style="zoom:67%;" /></p>
<ul>
<li>
<p>三层交换机</p>
<p>（1）开启路由功能；创建vlan，划分端口进vlan，配置vlan的IP，开启；</p>
<p>（2）开启RIP协议，写入直连网段，版本为2，开启；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）配置IP信息</span><br><span class="line">Switch&gt;en</span><br><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#ip routing</span><br><span class="line">Switch(config)#vlan 10</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 20</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#int fa 0/1</span><br><span class="line">Switch(config-if)#switchport access vlan 10</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/2</span><br><span class="line">Switch(config-if)#switchport access vlan 20</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int vlan 10</span><br><span class="line">Switch(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown </span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int vlan 20</span><br><span class="line">Switch(config-if)#ip address 192.168.2.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown </span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Switch#show running-config </span><br><span class="line">可以看到以下内容</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/1</span><br><span class="line"> switchport access vlan 10</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/2</span><br><span class="line"> switchport access vlan 20</span><br><span class="line">!</span><br><span class="line">...</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> mac-address 0003.e414.5101</span><br><span class="line"> ip address 192.168.1.1 255.255.255.0</span><br><span class="line">!</span><br><span class="line">interface Vlan20</span><br><span class="line"> mac-address 0003.e414.5102</span><br><span class="line"> ip address 192.168.2.1 255.255.255.0</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">（2）配置RIP协议</span><br><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#router rip</span><br><span class="line">Switch(config-router)#network 192.168.1.0</span><br><span class="line">Switch(config-router)#network 192.168.2.0</span><br><span class="line">Switch(config-router)#version 2</span><br><span class="line">Switch(config-router)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Switch#show running-config </span><br><span class="line">看到以下内容</span><br><span class="line">!</span><br><span class="line">router rip</span><br><span class="line"> version 2</span><br><span class="line"> network 192.168.1.0</span><br><span class="line"> network 192.168.2.0</span><br><span class="line">!</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>路由器</p>
<p>开启fa端口，配置IP；</p>
<p>开启se端口，配置IP，配置时钟64000；</p>
<p>开启RIP协议，配置直连网段，版本为2；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）配置端口IP信息</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#ip address 192.168.2.2 255.255.255.0</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#ip address 192.168.3.1 255.255.255.0</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line"></span><br><span class="line">（2）配置RIP协议</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#router rip</span><br><span class="line">Router(config-router)#version 2</span><br><span class="line">Router(config-router)#network 192.168.2.0</span><br><span class="line">Router(config-router)#network 192.168.3.0</span><br><span class="line">Router(config-router)#end</span><br><span class="line"></span><br><span class="line">查看配置信息</span><br><span class="line">Router#show running-config </span><br><span class="line">有以下内容即可</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/0</span><br><span class="line"> ip address 192.168.2.2 255.255.255.0</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface FastEthernet1/0</span><br><span class="line"> no ip address</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface Serial2/0</span><br><span class="line"> ip address 192.168.3.1 255.255.255.0</span><br><span class="line"> clock rate 64000</span><br><span class="line">!</span><br><span class="line">interface Serial3/0</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface FastEthernet4/0</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface FastEthernet5/0</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">router rip</span><br><span class="line"> version 2</span><br><span class="line"> network 192.168.2.0</span><br><span class="line"> network 192.168.3.0</span><br><span class="line">!</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>另一台路由器类似配置</p>
</li>
</ul>
<h3 id="10-3-测试">10.3 测试</h3>
<ul>
<li>
<p>从PC0去ping PC1，能通。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810023355251.png" alt="image-20230810023355251" style="zoom:67%;" /> 
</li>
</ul>
<h2 id="第十一章、路由器OSPF动态路由">第十一章、路由器OSPF动态路由</h2>
<h3 id="11-1-原理">11.1 原理</h3>
<blockquote>
<p>详细说明：<a href="https://www.bilibili.com/video/BV1vT411W7pC/">快速带你了解OSPF协议！</a></p>
</blockquote>
<ul>
<li>
<p>OSPF（Open Shortest Path First，开放最短路径优先）</p>
<p>是IETF（Internet Engineering Task Force，互联网工程任务组）组织开发的一个基于链路状态的内部网关协议。目前针对IPv4协议使用的是OSPF Version 2。下文中所提到的OSPF均指OSPF Version 2。</p>
</li>
<li>
<p>工作过程</p>
<p>由邻居信息构建网络拓扑图</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R1邻居：R2 R4</span><br><span class="line">R2邻居：R1 R3</span><br><span class="line">R3邻居：R2 R4</span><br><span class="line">R4邻居：R1 R3</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810130755714.png" alt="image-20230810130755714" style="zoom:50%;" /> 
<p>通过拓扑图计算开销</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810130936466.png" alt="image-20230810130936466" style="zoom: 50%;" /> 
</li>
<li>
<p>工作进程</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810130549810.png" alt="image-20230810130549810" style="zoom: 33%;" /> 
</li>
</ul>
<h3 id="11-2-实验">11.2 实验</h3>
<h4 id="搭建拓扑-3">搭建拓扑</h4>
<ul>
<li>PC机 两台</li>
<li>三层交换机3560 一台</li>
<li>路由器Router-PT 两台</li>
<li>按要求连线</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810140927339.png" alt="image-20230810140927339" style="zoom:67%;" /> 
<h4 id="配置IP、路由-2">配置IP、路由</h4>
<ul>
<li>PC机配置IP</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810134049540.png" alt="image-20230810134049540" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810134116402.png" alt="image-20230810134116402" style="zoom:67%;" /></p>
<ul>
<li>
<p>三层交换机配置</p>
<p>创建vlan，划分vlan，配置vlan的IP，开启；</p>
<p><strong>开启路由模块</strong>，配置ospf 协议，写入直连网段（网段、反掩码、区域）；</p>
<blockquote>
<p>记住！三层交换机，再配置ospf 功能前，必须先开启路由模块<code>ip routing</code>！！</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）配置vlan和IP</span><br><span class="line">Switch&gt;en</span><br><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#vlan 10</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#vlan 20</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#int fa 0/1</span><br><span class="line">Switch(config-if)#switchport access vlan 10</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/2</span><br><span class="line">Switch(config-if)#switchport access vlan 20</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int vlan 10</span><br><span class="line">Switch(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown </span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int vlan 20</span><br><span class="line">Switch(config-if)#ip address 192.168.2.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown </span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#end</span><br><span class="line">查看配置</span><br><span class="line">Switch#show running-config </span><br><span class="line">看到以下内容即为正确</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/1</span><br><span class="line"> switchport access vlan 10</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/2</span><br><span class="line"> switchport access vlan 20</span><br><span class="line">!</span><br><span class="line">...</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> no ip address</span><br><span class="line"> shutdown</span><br><span class="line">!</span><br><span class="line">interface Vlan10</span><br><span class="line"> mac-address 0001.6347.2d01</span><br><span class="line"> ip address 192.168.1.1 255.255.255.0</span><br><span class="line">!</span><br><span class="line">interface Vlan20</span><br><span class="line"> mac-address 0001.6347.2d02</span><br><span class="line"> ip address 192.168.2.1 255.255.255.0</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">（2）配置ospf 协议</span><br><span class="line">Switch#conf t</span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">Switch(config)#ip routing		注意这里！！！先开启路由模块！</span><br><span class="line">Switch(config)#router ospf 1	这里的1意思是本地进程号是1</span><br><span class="line">Switch(config-router)#network 192.168.1.0 0.0.0.255 area 0</span><br><span class="line">Switch(config-router)#network 192.168.2.0 0.0.0.255 area 0</span><br><span class="line">Switch(config-router)#exit</span><br><span class="line">Switch(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Switch#show ip protocols </span><br><span class="line">有以下内容即可</span><br><span class="line">Routing Protocol is &quot;ospf 1&quot;</span><br><span class="line">  Outgoing update filter list for all interfaces is not set </span><br><span class="line">  Incoming update filter list for all interfaces is not set </span><br><span class="line">  Router ID 192.168.2.1</span><br><span class="line">  Number of areas in this router is 1. 1 normal 0 stub 0 nssa</span><br><span class="line">  Maximum path: 4</span><br><span class="line">  Routing for Networks:</span><br><span class="line">    192.168.1.0 0.0.0.255 area 0</span><br><span class="line">    192.168.2.0 0.0.0.255 area 0</span><br><span class="line">  Routing Information Sources:  </span><br><span class="line">    Gateway         Distance      Last Update </span><br><span class="line">    192.168.2.1          110      00:00:42</span><br><span class="line">  Distance: (default is 110)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>路由器</p>
<p>配置端口IP，开启；</p>
<p>开启ospf 协议，写入直连网段（网段、反掩码、区域）；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）配置端口IP</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 192.168.2.2 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 192.168.3.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line">查看配置</span><br><span class="line">Router#show run</span><br><span class="line">看到以下内容即可</span><br><span class="line">interface FastEthernet0/0</span><br><span class="line"> ip address 192.168.2.2 255.255.255.0</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">interface Serial2/0</span><br><span class="line"> ip address 192.168.3.1 255.255.255.0</span><br><span class="line"> clock rate 64000</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">（2）配置ospf 协议</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#router ospf 1</span><br><span class="line">Router(config-router)#network 192.168.2.0 0.0.0.255 area 0</span><br><span class="line">Router(config-router)#network 192.168.3.0 0.0.0.255 area 0</span><br><span class="line">Router(config-router)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Router#show ip protocols </span><br><span class="line">看到以下内容即可</span><br><span class="line">Routing Protocol is &quot;ospf 1&quot;</span><br><span class="line">  Outgoing update filter list for all interfaces is not set </span><br><span class="line">  Incoming update filter list for all interfaces is not set </span><br><span class="line">  Router ID 192.168.3.1</span><br><span class="line">  Number of areas in this router is 1. 1 normal 0 stub 0 nssa</span><br><span class="line">  Maximum path: 4</span><br><span class="line">  Routing for Networks:</span><br><span class="line">    192.168.2.0 0.0.0.255 area 0</span><br><span class="line">    192.168.3.0 0.0.0.255 area 0</span><br><span class="line">  Routing Information Sources:  </span><br><span class="line">    Gateway         Distance      Last Update </span><br><span class="line">    192.168.2.1          110      00:00:23</span><br><span class="line">    192.168.3.1          110      00:00:23</span><br><span class="line">  Distance: (default is 110)</span><br></pre></td></tr></table></figure>
<p>路由台路由器一样操作（不用设置时钟频率，因为不是DCE端）</p>
</li>
</ul>
<h3 id="11-3-测试">11.3 测试</h3>
<ul>
<li>
<p>全部都设置好之后，打开最后一个路由器，查看路由表，会是如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router#show ip route</span><br><span class="line">Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP</span><br><span class="line">       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area</span><br><span class="line">       N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2</span><br><span class="line">       E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP</span><br><span class="line">       i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area</span><br><span class="line">       * - candidate default, U - per-user static route, o - ODR</span><br><span class="line">       P - periodic downloaded static route</span><br><span class="line"></span><br><span class="line">Gateway of last resort is not set</span><br><span class="line"></span><br><span class="line">O    192.168.1.0/24 [110/66] via 192.168.3.1, 00:00:14, Serial2/0</span><br><span class="line">O    192.168.2.0/24 [110/65] via 192.168.3.1, 00:00:14, Serial2/0</span><br><span class="line">C    192.168.3.0/24 is directly connected, Serial2/0</span><br><span class="line">C    192.168.4.0/24 is directly connected, FastEthernet0/0</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>通过PC机ping，发现能互通</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810140830075.png" alt="image-20230810140830075" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810140854624.png" alt="image-20230810140854624" style="zoom:67%;" /></p>
</li>
</ul>
<h2 id="第十二章、路由器综合路由">第十二章、路由器综合路由</h2>
<h3 id="12-1-原理">12.1 原理</h3>
<ul>
<li>
<p>路由重分布</p>
<p>为了在同一个网络中有效地支持多种路由协议，必须在不同的路由协议之间共享路由信息。在不同的路由协议之间交换路由信息的过程称为路由重分布，它将一种路由选择协议获悉的路由信息告知给另一种路由选择协议。</p>
<p>路由重分布为在同一个互连网络中高效地支持多种路由协议提供了可能，执行路由重分布的路由器被称为边界路由器，因为它们位于两个或多个自治系统的边界上。</p>
<ul>
<li>考虑的问题：
<ol>
<li>路由反馈：双向重分布有可能把从一个自治系统学到的路由信息发送回该自治系统。</li>
<li>路由信息的兼容：不同路由协议的度量标准是不同的</li>
<li>收敛时间不一致</li>
</ol>
</li>
</ul>
</li>
<li>
<p>协议</p>
<ul>
<li>内部路由器：RIPv2协议</li>
<li>连接处路由器：一边RIPv2协议，一边OSPF协议，进行路由重分布</li>
<li>外部路由器：OSPF协议</li>
</ul>
</li>
<li>
<p>备注</p>
<ul>
<li>
<p>本身协议的开启，是软件实现的。</p>
<p>因此，开启的是什么协议，取决于你把这个网段写成了哪个协议里的直连网段。</p>
</li>
<li>
<p>同一个路由器可以同时开启多种协议。</p>
<p>进行路由重分布，就是进入一种协议后，把另一种协议的路由表重分布进来即可。</p>
</li>
</ul>
</li>
</ul>
<h3 id="12-2-实验">12.2 实验</h3>
<h4 id="搭建拓扑-4">搭建拓扑</h4>
<ul>
<li>PC机 两台</li>
<li>三层交换机3560 一台</li>
<li>路由器Router-PT 两台</li>
<li>连线</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810161744306.png" alt="image-20230810161744306" style="zoom:67%;" /> 
<blockquote>
<p>说明一下：我们这里，是</p>
<ul>
<li>左侧作为内部，采用RIP协议</li>
<li>右侧作为外部，采用OSPF协议</li>
<li>以中间的R0作为分界线，R0同时配置RIP、OSPF协议，并进行路由重分布。</li>
</ul>
</blockquote>
<h4 id="配置IP、路由-3">配置IP、路由</h4>
<ul>
<li>PC机配置IP</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810151256124.png" alt="image-20230810151256124" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810151326849.png" alt="image-20230810151326849" style="zoom:67%;" /></p>
<ul>
<li>
<p>三层交换机</p>
<p>创建vlan，划分vlan端口，配置vlan的IP，开启；</p>
<p>开启路由模块，采用RIP协议，版本号2，写入直连网段；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）配置vlan的IP并开启</span><br><span class="line">Switch&gt;en</span><br><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#vlan 2</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line">Switch(config)#int fa 0/1</span><br><span class="line">Switch(config-if)#switchport access vlan 1</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int fa 0/2</span><br><span class="line">Switch(config-if)#switchport access vlan 2</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int vlan 1</span><br><span class="line">Switch(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown</span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#int vlan 2</span><br><span class="line">Switch(config-if)#ip address 192.168.2.1 255.255.255.0</span><br><span class="line">Switch(config-if)#no shutdown </span><br><span class="line">Switch(config-if)#exit</span><br><span class="line">Switch(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Switch#show running-config </span><br><span class="line">看到以下内容即可</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/1</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/2</span><br><span class="line"> switchport access vlan 2</span><br><span class="line">!</span><br><span class="line">...</span><br><span class="line">!</span><br><span class="line">interface Vlan1</span><br><span class="line"> ip address 192.168.1.1 255.255.255.0</span><br><span class="line">!</span><br><span class="line">interface Vlan2</span><br><span class="line"> mac-address 0090.2b3a.7a01</span><br><span class="line"> ip address 192.168.2.1 255.255.255.0</span><br><span class="line"> </span><br><span class="line">（2）路由模块，RIP协议配置</span><br><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#ip routing</span><br><span class="line">Switch(config)#router rip</span><br><span class="line">Switch(config-router)#version 2</span><br><span class="line">Switch(config-router)#network 192.168.1.0</span><br><span class="line">Switch(config-router)#network 192.168.2.0</span><br><span class="line">Switch(config-router)#exit</span><br><span class="line">Switch(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Switch#show ip protocols </span><br><span class="line">看到以下内容即可</span><br><span class="line">Routing Protocol is &quot;rip&quot;</span><br><span class="line">...</span><br><span class="line">Routing for Networks:</span><br><span class="line">	192.168.1.0</span><br><span class="line">	192.168.2.0</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>路由器R0（中间的路由器）</p>
<p>配置端口IP，开启（注意se有时钟频率设置）；</p>
<p>运行RIP协议，写入左边的网段<code>192.168.2.0</code>；</p>
<p>运行OSPF协议，写入右边的网段<code>192.168.3.0</code>；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）配置端口IP并开启</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 192.168.2.2 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 192.168.3.1 255.255.255.0</span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Router#show run</span><br><span class="line">看到以下内容即可</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/0</span><br><span class="line"> ip address 192.168.2.2 255.255.255.0</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">...</span><br><span class="line">interface Serial2/0</span><br><span class="line"> ip address 192.168.3.1 255.255.255.0</span><br><span class="line"> clock rate 64000</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">（2）运行RIP协议</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#router rip</span><br><span class="line">Router(config-router)#version 2</span><br><span class="line">Router(config-router)#network 192.168.2.0</span><br><span class="line">Router(config-router)#exit</span><br><span class="line">Router(config)#router ospf 1</span><br><span class="line">Router(config-router)#network 192.168.3.0 0.0.0.255 area 0</span><br><span class="line">Router(config-router)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Router#show ip protocols </span><br><span class="line">看到以下内容即可</span><br><span class="line">Routing Protocol is &quot;rip&quot;</span><br><span class="line">...</span><br><span class="line">Routing for Networks:</span><br><span class="line">	192.168.2.0</span><br><span class="line">...</span><br><span class="line">Routing Protocol is &quot;ospf 1&quot;</span><br><span class="line">...</span><br><span class="line">  Routing for Networks:</span><br><span class="line">    192.168.3.0 0.0.0.255 area 0</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>路由器R1（右边的）</p>
<p>配置端口IP，开启；</p>
<p>运行OSPF协议；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）配置端口IP并开启</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 192.168.3.2 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 192.168.4.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Router#show run</span><br><span class="line">看到以下内容即可</span><br><span class="line">!</span><br><span class="line">interface FastEthernet0/0</span><br><span class="line"> ip address 192.168.4.1 255.255.255.0</span><br><span class="line"> duplex auto</span><br><span class="line"> speed auto</span><br><span class="line">!</span><br><span class="line">...</span><br><span class="line">!</span><br><span class="line">interface Serial2/0</span><br><span class="line"> ip address 192.168.3.2 255.255.255.0</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">（2）运行OSPF协议</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#router ospf 1</span><br><span class="line">Router(config-router)#network 192.168.3.0 0.0.0.255 area 0</span><br><span class="line">Router(config-router)#network 192.168.4.0 0.0.0.255 area 0</span><br><span class="line">Router(config-router)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Router#show ip protocols </span><br><span class="line">看到以下内容即可</span><br><span class="line">Routing Protocol is &quot;ospf 1&quot;</span><br><span class="line">...</span><br><span class="line">  Routing for Networks:</span><br><span class="line">    192.168.3.0 0.0.0.255 area 0</span><br><span class="line">    192.168.4.0 0.0.0.255 area 0</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>现在先测试一下，从PC0去ping PC1，发现并不能通信。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810154513709.png" alt="image-20230810154513709" style="zoom:67%;" /> 
<p>打开各个路由器或三层交换机，查看路由表，</p>
<p>你会发现，左右两边的路由器并没有全部网段的路由，只有中间的路由器拥有完全的路由表，</p>
<p>但实际上中间的路由表的路由是两个分立的路由表共同显示的，并不会完全把路由信息对邻居路由器通告，</p>
<ul>
<li>标志C：直连网段；</li>
<li>标志O：OSPF协议；</li>
<li>标志R：RIP协议。</li>
</ul>
<p>因此无法通信是正常的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810154614447.png" alt="image-20230810154614447" style="zoom: 43%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810154552549.png" alt="image-20230810154552549" style="zoom: 43%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810154636419.png" alt="image-20230810154636419" style="zoom: 43%;" /></p>
<p>所以接下来我们对中间的路由器进行路由重分布设置。</p>
</li>
<li>
<p>路由器R0</p>
<p>进入RIP协议，把OSPF路由表进行路由重分布加入；</p>
<p>进入OSPF协议，把RIP路由表进行路由重分布加入；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router#conf t</span><br><span class="line">Router(config)#router rip</span><br><span class="line">Router(config-router)#redistribute ospf 1</span><br><span class="line">Router(config-router)#exit</span><br><span class="line">Router(config)#router ospf 1</span><br><span class="line">Router(config-router)#redistribute rip subnets 		这里写subnets意思是把具体子网也加入进来</span><br><span class="line">Router(config-router)#exit</span><br><span class="line">Router(config)#end</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>三层交换机 静态路由</p>
<p>到这里，有些人可能已经可以了，但是有些人还不能。（因为一些设备会自动设置静态路由）</p>
<p>可能是版本问题，不能的人，可以手动设置一下静态路由，</p>
<p>使得三层交换机的默认下一跳（没有下一跳就会走默认）为R0连接处的IP（即默认走向R0来处理）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch#conf t</span><br><span class="line">Switch(config)#ip route 0.0.0.0 0.0.0.0 192.168.2.2</span><br><span class="line">Switch(config)#end</span><br><span class="line">查看配置信息</span><br><span class="line">Switch#show ip route</span><br><span class="line">看到下面的内容即可（主要是看到有S*这一行，这就是静态路由）</span><br><span class="line">C    192.168.1.0/24 is directly connected, Vlan1</span><br><span class="line">C    192.168.2.0/24 is directly connected, Vlan2</span><br><span class="line">S*   0.0.0.0/0 [1/0] via 192.168.2.2</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="12-3-测试">12.3 测试</h3>
<ul>
<li>
<p>前面，我们测试了PC机之间是无法正常通信的，</p>
<p>这里，我们再次测试，发现可以正常通信了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810161049622.png" alt="image-20230810161049622" style="zoom: 67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810161633727.png" alt="image-20230810161633727" style="zoom:67%;" /></p>
</li>
<li>
<p>我们也再次打开三个路由器或三层交换机的路由表看看，发现</p>
<ul>
<li>三层交换机有静态路由</li>
<li>路由器R0有四个网段路由</li>
<li>路由器R1也有四个网段路由</li>
</ul>
<p>因此可以实现正常通信。</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810161235069.png" alt="image-20230810161235069" style="zoom:43%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810161214324.png" alt="image-20230810161214324" style="zoom:43%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230810161257774.png" alt="image-20230810161257774" style="zoom:43%;" /></p>
<h2 id="第十三章、标准IP访问控制列表">第十三章、标准IP访问控制列表</h2>
<blockquote>
<p>详细资料：<a href="https://blog.csdn.net/weixin_45409371/article/details/102523107">访问控制列表ACL ------标准IP访问列表 （理论+实验）</a></p>
</blockquote>
<h3 id="13-1-原理">13.1 原理</h3>
<ul>
<li>
<p>访问控制列表（Access Control Lists，ACL）</p>
<p>俗称“防火墙”。是应用在路由器接口的指令列表，这些指令列表用来告诉路由器哪些数据包可以接收、哪些数据包需要拒绝。访问控制是网络安全防范和保护的主要策略，它的主要任务是保证网络资源不被非法使用和访问。它是保证网络安全最重要的核心策略之一。访问控制涉及的技术也比较广，包括入网访问控制、网络权限控制、目录级控制以及属性控制等多种手段。</p>
</li>
<li>
<p>功能</p>
<ul>
<li>限制网络流量、提高网络性能。例如，ACL可以根据数据包的协议，指定这种类型的数据包具有更高的优先级，同等情况下可预先被网络设备处理。</li>
<li>提供对通信流量的控制手段。</li>
<li>提供网络访问的基本安全手段。</li>
<li>在网络设备接口处，决定哪种类型的通信流量被转发、哪种类型的通信流量被阻塞。</li>
</ul>
</li>
<li>
<p>分类</p>
<ul>
<li>
<p>标准IP访问列表</p>
<p>编号范围：1 - 99，也可以命名</p>
<p>一个标准IP访问控制列表匹配IP包中的<strong>源地址</strong>或源地址中的一部分，可对匹配的包采取拒绝或允许两个操作。</p>
</li>
<li>
<p>扩展IP访问列表</p>
<p>编号范围：100 - 199，也可以命名</p>
<p>扩展IP访问控制列表比标准IP访问控制列表具有更多的匹配项，包括<strong>协议类型、源地址、目的地址、源端口、目的端口、建立连接的和IP优先级</strong>等。</p>
</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811140522042.png" alt="image-20230811140522042" style="zoom:67%;" />
<ul>
<li>
<p>ACL的放置规则<br>
每一个路由器接口的每一个方向，每一种协议只能创建一个ACL；在适当的位置放置 ACL 可以过滤掉不必要的流量，使网络更加高效。ACL 可以充当防火墙来过滤数据包并去除不必要的流量。ACL 的放置位置决定了是否能有效减少不必要的流量。例如，会被远程目的地拒绝的流量不应该消耗通往该目的地的路径上的网络资源。每个 ACL 都应该放置在最能发挥作用的位置。</p>
<p><strong>基本的规则</strong></p>
<ul>
<li>
<p>因为标准 ACL 不会指定目的地址，所以其位置应该尽可能靠近目的地。</p>
</li>
<li>
<p>将扩展 ACL 尽可能靠近要拒绝流量的源。这样，才能在不需要的流量流经网络之前将其过滤掉。</p>
</li>
<li>
<p>出：已经过路由器的处理，正离开路由器接口的数据包</p>
</li>
<li>
<p>入：已到达路由器接口的数据包，将被路由器处理</p>
</li>
</ul>
</li>
<li>
<p>使用方法</p>
<ul>
<li>配置规则</li>
<li>应用到端口上</li>
</ul>
</li>
<li>
<p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip access-list standard 1		这里1的意思是编号，可以为1-99</span><br><span class="line">permit 172.16.1.0 0.0.0.255 	注意要用反掩码</span><br><span class="line">deny 172.16.2.0 0.0.0.255</span><br><span class="line"></span><br><span class="line">int fa 0/0</span><br><span class="line">ip access-group 1 out</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="13-2-实验">13.2 实验</h3>
<h4 id="搭建拓扑-5">搭建拓扑</h4>
<ul>
<li>PC机 三台</li>
<li>路由器Router-PT两台</li>
<li>连线</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811152052906.png" alt="image-20230811152052906" style="zoom:67%;" /> 
<h4 id="配置IP-2">配置IP</h4>
<ul>
<li>PC机配置IP</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811142124219.png" alt="image-20230811142124219" style="zoom: 50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811142145167.png" alt="image-20230811142145167" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811142220279.png" alt="image-20230811142220279" style="zoom:50%;" /></p>
<ul>
<li>
<p>路由器配置 IP</p>
<p>R0配置端口IP，开启（记得配置时钟频率）；</p>
<p>R1配置端口IP，开启；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）R0配置</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 172.16.1.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int fa 1/0</span><br><span class="line">Router(config-if)#ip address 172.16.2.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 172.16.3.1 255.255.255.0</span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#end</span><br><span class="line"></span><br><span class="line">（2）R1配置</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 172.16.3.2 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config-if)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 172.16.4.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="配置路由-2">配置路由</h4>
<ul>
<li>
<p>路由器路由配置</p>
<p>目前只有直连路由，因此，</p>
<ul>
<li>
<p>R0 知道去往 1.0、2.0、3.0 网段的路由，但是并不知道 4.0 网段的路由；</p>
</li>
<li>
<p>R1 知道去往 3.0、4.0 网段的路由，但是并不知道 1.0、2.0 网段的路由。</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811145552561.png" alt="image-20230811145552561" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811145610051.png" alt="image-20230811145610051" style="zoom:67%;" /></p>
<p>因此，可以</p>
<ul>
<li>R0 配置 静态路由 去往 4.0 网段</li>
<li>R1 配置 默认路由 去往 1.0、2.0 网段</li>
</ul>
<blockquote>
<p>默认路由是一种特殊的静态路由</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）R0配置静态路由</span><br><span class="line">Router(config)#ip route 172.16.4.0 255.255.255.0 172.16.3.2</span><br><span class="line">（2）R1配置默认路由</span><br><span class="line">Router(config)#ip route 0.0.0.0 0.0.0.0 172.16.3.1</span><br></pre></td></tr></table></figure>
<p>再次查看路由情况，如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811145759157.png" alt="image-20230811145759157" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811145811919.png" alt="image-20230811145811919" style="zoom:67%;" /></p>
</li>
<li>
<p>现在可以先测试一下，所有的PC机现在都能ping通了</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811145949050.png" alt="image-20230811145949050" style="zoom: 50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811150045099.png" alt="image-20230811150045099" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811150119258.png" alt="image-20230811150119258" style="zoom:50%;" /></p>
<h4 id="配置标准ACL">配置标准ACL</h4>
<ul>
<li>
<p>我们要禁止销售部访问财务部，其他均可</p>
<p>所以，可以在路由器R1上设置（R0也可以，但是尽量靠近目的地址更好）。</p>
</li>
<li>
<p>路由器R1配置标准ACL</p>
<p>创建一个标准ACL；</p>
<p>进入端口，应用在端口的出out /入in ；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router#conf t</span><br><span class="line">Router(config)#ip access-list standard 1		这里1的意思是编号，可以为1-99</span><br><span class="line">Router(config-std-nacl)#permit 172.16.1.0 0.0.0.255 	注意要用反掩码</span><br><span class="line">Router(config-std-nacl)#deny 172.16.2.0 0.0.0.255</span><br><span class="line">Router(config-std-nacl)#exit</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip access-group 1 out			这里即：进入端口后，把编号1的ACL应用在该端口的出口上</span><br><span class="line">Router(config-if)#exit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="13-3-测试">13.3 测试</h3>
<ul>
<li>
<p>之前测试，是全部都能互相ping通的，</p>
<p>现在测试，发现只有销售部无法ping通财务部（反过来也不可以）。</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811151316918.png" alt="image-20230811151316918" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811151340891.png" alt="image-20230811151340891" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811151500559.png" alt="image-20230811151500559" style="zoom:50%;" /></p>
<blockquote>
<p>但是两者出现的情况是不一样的，</p>
<ul>
<li>
<p>销售部 ping 财务部</p>
<p><code>Reply from 172.16.3.2: Destination host unreachable.</code></p>
<p>无法抵达。这是明确被中间的路由器172.168.3.2告知了无法到达财务部的。</p>
<p>因为是这个路由器进行的ACL拦截，会回复这个拦截停通知。</p>
</li>
<li>
<p>财务部 ping 销售部</p>
<p><code>Request timed out.</code></p>
<p>请求超时。这是没有被告知中间出了什么问题的。</p>
<p>因为财务部实际上确实把包发出去了，也没有人拦截，但是，销售部回复的包被拦截了。而这种情况下，销售部会收到无法抵达的通知，财务部这边看来就是什么都没有，不知道发生了什么，仍然一直等待，所以，请求超时。</p>
</li>
</ul>
</blockquote>
<h2 id="第十四章、扩展IP访问控制列表">第十四章、扩展IP访问控制列表</h2>
<h3 id="14-1-原理">14.1 原理</h3>
<ul>
<li>
<p>原理</p>
<p>见标准ACL</p>
</li>
<li>
<p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">【具体命令】</span><br><span class="line">access-list 访问控制列表号 &#123;deny/permit&#125; 协议类型 源网络地址 [通配符掩码(反掩码)] 目的网络地址 [通配符掩码] [运算符 端口号]</span><br><span class="line"></span><br><span class="line">【选项查看】</span><br><span class="line">Router(config)#access-list ?</span><br><span class="line">  &lt;1-99&gt;     IP standard access list</span><br><span class="line">  &lt;100-199&gt;  IP extended access list</span><br><span class="line">Router(config)#access-list 100 ?</span><br><span class="line">  deny    Specify packets to reject</span><br><span class="line">  permit  Specify packets to forward</span><br><span class="line">  remark  Access list entry comment</span><br><span class="line">Router(config)#access-list 100 permit ?</span><br><span class="line">  ahp    Authentication Header Protocol</span><br><span class="line">  eigrp  Cisco&#x27;s EIGRP routing protocol</span><br><span class="line">  esp    Encapsulation Security Payload</span><br><span class="line">  gre    Cisco&#x27;s GRE tunneling</span><br><span class="line">  icmp   Internet Control Message Protocol</span><br><span class="line">  ip     Any Internet Protocol</span><br><span class="line">  ospf   OSPF routing protocol</span><br><span class="line">  tcp    Transmission Control Protocol</span><br><span class="line">  udp    User Datagram Protocol</span><br><span class="line">Router(config)#access-list 100 permit tcp ?</span><br><span class="line">  A.B.C.D  Source address</span><br><span class="line">  any      Any source host</span><br><span class="line">  host     A single source host</span><br><span class="line">Router(config)#access-list 100 permit tcp any ?</span><br><span class="line">  A.B.C.D  Destination address</span><br><span class="line">  any      Any destination host</span><br><span class="line">  eq       Match only packets on a given port number</span><br><span class="line">  gt       Match only packets with a greater port number</span><br><span class="line">  host     A single destination host</span><br><span class="line">  lt       Match only packets with a lower port number</span><br><span class="line">  neq      Match only packets not on a given port number</span><br><span class="line">  range    Match only packets in the range of port numbers</span><br><span class="line">Router(config)#access-list 100 permit tcp any host ?</span><br><span class="line">  A.B.C.D  Destination address</span><br><span class="line">Router(config)#access-list 100 permit tcp any host 172.16.4.2 ?</span><br><span class="line">  dscp         Match packets with given dscp value</span><br><span class="line">  eq           Match only packets on a given port number</span><br><span class="line">  established  established</span><br><span class="line">  gt           Match only packets with a greater port number</span><br><span class="line">  lt           Match only packets with a lower port number</span><br><span class="line">  neq          Match only packets not on a given port number</span><br><span class="line">  precedence   Match packets with given precedence value</span><br><span class="line">  range        Match only packets in the range of port numbers</span><br><span class="line">  &lt;cr&gt;</span><br><span class="line">Router(config)#access-list 100 permit tcp any host 172.16.4.2 eq ?</span><br><span class="line">  &lt;0-65535&gt;  Port number</span><br><span class="line">  ftp        File Transfer Protocol (21)</span><br><span class="line">  pop3       Post Office Protocol v3 (110)</span><br><span class="line">  smtp       Simple Mail Transport Protocol (25)</span><br><span class="line">  telnet     Telnet (23)</span><br><span class="line">  www        World Wide Web (HTTP, 80)</span><br><span class="line">Router(config)#access-list 100 permit tcp any host 172.16.4.2 eq 80 ?</span><br><span class="line">  dscp         Match packets with given dscp value</span><br><span class="line">  established  established</span><br><span class="line">  precedence   Match packets with given precedence value</span><br><span class="line">  &lt;cr&gt;</span><br><span class="line">Router(config)#access-list 100 permit tcp any host 172.16.4.2 eq 80 </span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="14-2-实验">14.2 实验</h3>
<h4 id="搭建拓扑-6">搭建拓扑</h4>
<ul>
<li>PC机 一台</li>
<li>服务器 一台</li>
<li>路由器 三台</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811164351517.png" alt="image-20230811164351517" style="zoom: 67%;" /> 
<h4 id="配置IP-3">配置IP</h4>
<ul>
<li>
<p>PC机配置</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811154814736.png" alt="image-20230811154814736" style="zoom:67%;" /> 
</li>
<li>
<p>服务器配置IP</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811154910102.png" alt="image-20230811154910102" style="zoom:67%;" /> 
</li>
<li>
<p>路由器配置端口IP</p>
<p>三个路由器按照图示配置端口IP，开启；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）路由器R0</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 172.16.1.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 172.16.2.1 255.255.255.0</span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">（2）路由器R1</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 172.16.2.2 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 3/0</span><br><span class="line">Router(config-if)#ip address 172.16.3.1 255.255.255.0</span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">（3）路由器R2</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 172.16.3.2 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config-if)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 172.16.4.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="配置路由-3">配置路由</h4>
<ul>
<li>
<p>路由器配置路由</p>
<p>如图所示，三个路由器都只有直连网段的路由</p>
<ul>
<li>R0：1.0、2.0</li>
<li>R1：2.0、3.0</li>
<li>R2：3.0、4.0</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811160354745.png" alt="image-20230811160354745" style="zoom: 50%;" /> 
<p>因此，可以让R1拥有全网段的路由（配置1.0、4.0网段的静态路由）</p>
<p>其他两个路由器则把默认路由设置下一跳为R1，交给R1处理。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）路由器R0</span><br><span class="line">Router(config)#ip route 0.0.0.0 0.0.0.0 172.16.2.2</span><br><span class="line"></span><br><span class="line">（2）路由器R1</span><br><span class="line">Router(config)#ip route 172.16.1.0 255.255.255.0 172.16.2.1</span><br><span class="line">Router(config)#ip route 172.16.4.0 255.255.255.0 172.16.3.2</span><br><span class="line"></span><br><span class="line">（3）路由器R2</span><br><span class="line">Router(config)#ip route 0.0.0.0 0.0.0.0 172.16.3.1</span><br></pre></td></tr></table></figure>
<p>再次查看三个路由器的路由表如下，即可</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811161112555.png" alt="image-20230811161112555" style="zoom: 50%;" /> 
</li>
<li>
<p>好的。</p>
<p>到这里，测试一下，已经可以ping通了。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811161222448.png" alt="image-20230811161222448" style="zoom:67%;" /> 
</li>
<li>
<p>开启服务器web服务</p>
<p>点开服务器Server0，点击服务Services，把HTTP、HTTPS改为On按钮（默认会自动开启，检查一下即可）</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811161302775.png" alt="image-20230811161302775" style="zoom:50%;" /> 
</li>
<li>
<p>主机访问服务器web访问</p>
<p>点开主机，打开web浏览器，输入服务器地址<code>172.16.4.2</code>回车，发现能够正常访问。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811161534602.png" alt="image-20230811161534602" style="zoom:67%;" /> 
</li>
</ul>
<h4 id="配置扩展ACL">配置扩展ACL</h4>
<ul>
<li>
<p>我们实际上希望主机只能够访问服务器的web服务，并不能ping通。</p>
<p>因此，要使用扩展访问控制列表，</p>
</li>
<li>
<p>扩展ACL控制</p>
<p>创建扩展ACL，允许访问TCP协议的80端口（即HTTP服务），禁止 ICMP协议；</p>
<p>进入端口，把该扩展ACL应用到端口的出口上；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">路由器R1设置</span><br><span class="line">Router(config)#access-list 100 permit tcp any host 172.16.4.2 eq 80 </span><br><span class="line">Router(config)#access-list 100 deny icmp any host 172.16.4.2 </span><br><span class="line">Router(config)#int se 3/0</span><br><span class="line">Router(config-if)#ip access-group 100 out</span><br><span class="line">Router(config-if)#exit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="14-3-测试">14.3 测试</h3>
<ul>
<li>至此，我们再次测试，发现
<ul>
<li>ping服务器不通</li>
<li>服务器的web服务能够正常访问</li>
</ul>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811164258821.png" alt="image-20230811164258821" style="zoom: 67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230811164322105.png" alt="image-20230811164322105" style="zoom:67%;" /></p>
<h2 id="第十五章、网络地址转换NAT">第十五章、网络地址转换NAT</h2>
<h3 id="15-1-原理">15.1 原理</h3>
<ul>
<li>
<p><strong>NAT (Network Address Translation)</strong></p>
<p>又称为网络地址转换，用于实现私有网络和公有网络之间的互访。</p>
</li>
<li>
<p><strong>工作原理</strong></p>
<ul>
<li>
<p>NAT用来将内网地址和端口号转换成合法的公网地址和端口号，建立一个会话，与公网主机进行通信。</p>
</li>
<li>
<p>NTA外部的主机无法主动跟位于NAT内部的主机通信，NAT内部主机想要通信，必须主动和公网的一个IP通信，路由器负责建立一个映射关系，从而实现数据的转发。</p>
</li>
<li>
<p>数据包从内网到外网时，会转换源lP地址，由私网地址转换成公网地址</p>
</li>
<li>
<p>数据包从外网到内网时，会转换目的IP地址，由公网地址转换成私网地址</p>
</li>
</ul>
</li>
<li>
<p><strong>功能</strong><br>
NAT不仅能解决了IP地址不足的问题，而且还能够有效的避免来自网络外部的入侵，隐藏并保护网络内部的计算机</p>
<ul>
<li>
<p>宽带分享 ，这是NAT主机最大的功能</p>
</li>
<li>
<p>安全防护，NAT之内的PC联机到 nternet上面时，他所显示的IP是NAT主机的公网IP，所以client端的PC就具有一定程度的安全了，外界在进行portscan（端口扫描）的时候，就侦测不到源client端的PC</p>
</li>
</ul>
<p>优点：节省公有合法IP地址，处理地址重叠，增强灵活性，安全性</p>
<p>缺点：延迟增大，配置和维护的复杂性，不支持某些应用（比如VPN）</p>
</li>
<li>
<p><strong>分类</strong></p>
<ul>
<li>
<p>一对一</p>
<ul>
<li>
<p>静态转换</p>
<p>一对一，私有ip和共有ip的映射关系定下来就不会变了</p>
</li>
<li>
<p>动态转换</p>
<p>也是一对一，但是每次私有ip跟共有ip的映射关系都是不一样</p>
</li>
</ul>
</li>
<li>
<p>多对一</p>
<ul>
<li>
<p>端口多路复用NAPT</p>
<p>内部网络的所有主机均可共享一个合法外部IP地址实现对Internet的访问，从而可以最大限度地节约IP地址资源。同时，又可隐藏网络内部的所有主机，有效避免来自internet的攻击。</p>
<p>因此，网络中应用最多的就是端口多路复用方式。</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>静态NAT</strong></p>
<p>静态NAT实现私网地址和公网地址的一对一转换。有多少个私网地址就需要配置多少个公网地址。</p>
<p>静态NAT<strong>不能节约</strong>公网地址，但可以起到<strong>隐藏内部网络</strong>的作用。</p>
<ul>
<li>
<p>内部网络向外部网络发送报文时，静态NAT将报文的源IP地址替换为对应的公网地址</p>
</li>
<li>
<p>外部网络向内部网络发送响应报文时，静态NAT将报文的目的地址替换为相应的私网地址。</p>
</li>
</ul>
</li>
<li>
<p><strong>动态NAT</strong></p>
<p>多个私网IP地址对应多个公网IP地址，基于地址池一对一映射。</p>
</li>
<li>
<p><strong>使用方法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置静态NAT（config下）</span><br><span class="line">ip nat inside </span><br><span class="line">ip nat outside </span><br><span class="line">ip nat inside source static 192.168.1.2 222.0.1.2</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="15-2-实验">15.2 实验</h3>
<h4 id="搭建拓扑-7">搭建拓扑</h4>
<ul>
<li>
<p>路由器Router-PT 两台</p>
</li>
<li>
<p>二层交换机2960 一台</p>
</li>
<li>
<p>服务器Server 一台</p>
</li>
<li>
<p>PC机 一台</p>
</li>
<li>
<p>连线</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812172932438.png" alt="image-20230812172932438" style="zoom: 80%;" />  
<h4 id="配置IP-4">配置IP</h4>
<ul>
<li>PC机配置IP，服务器配置IP</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812143215478.png" alt="image-20230812143215478" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812143136713.png" alt="image-20230812143136713" style="zoom:67%;" /></p>
<ul>
<li>
<p>二层交换机</p>
<p>不用动</p>
</li>
<li>
<p>路由器</p>
<p>R0、R1配置各端口IP</p>
<p>（注意，我们没有使用<code>222.0.1.2</code>，留着给后面作为NAT使用）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）R0配置IP</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 222.0.1.1 255.255.255.0</span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line"></span><br><span class="line">（2）R1配置IP</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 222.0.1.3 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 222.0.2.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="配置路由-4">配置路由</h4>
<ul>
<li>
<p>注意，这里192.168.x.x的网段是私有地址网段，</p>
<p>并不会被外部知道路由，只有R0知道私钥网段的路由。</p>
<p>因此，R1并不需要配置到192.168.x.x的路由。</p>
<p>（教学视频中却配置了，是不正确的，不需要配置。所以教学视频中下一步是完全能通信到192.168.1.2的。）</p>
<p>只需要配置R0到222.0.2.0网段的静态路由即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对R0配置路由</span><br><span class="line">Router(config)#ip route 222.0.2.0 255.255.255.0 222.0.1.3</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>现在，注意，是不能够通信的，PC机是无法与内网服务器通信的。</p>
<p>为什么？因为外部主机无法直接通过私有地址去访问内部服务器。</p>
<p>因此，我们需要在内部服务器出口路由器上配置NAT，使得其在走出内部网络时，带着的是公有地址。</p>
<p>从而外部主机就可以通过公有地址来访问内部服务器了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812144308315.png" alt="image-20230812144308315" style="zoom: 67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812144332766.png" alt="image-20230812144332766" style="zoom: 67%;" /></p>
</li>
</ul>
<h4 id="配置NAT">配置NAT</h4>
<ul>
<li>
<p>在路由器R0上，配置一个静态NAT</p>
<p>我们把原本留着的<code>222.0.1.2</code>用来作为静态NAT的一个出口IP。</p>
<ul>
<li>指定内部端口</li>
<li>指定外部端口</li>
<li>配置静态NAT</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在路由器R0上配置</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip nat inside </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip nat outside </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#ip nat inside source static 192.168.1.2 222.0.1.2</span><br><span class="line">Router(config)#end</span><br><span class="line"></span><br><span class="line">查看配置信息</span><br><span class="line">Router#show ip nat translations </span><br><span class="line">看到下面的内容即可</span><br><span class="line">Pro  Inside global     Inside local       Outside local      Outside global</span><br><span class="line">---  222.0.1.2         192.168.1.2        ---                ---</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="15-3-测试">15.3 测试</h3>
<ul>
<li>
<p>现在，内部服务器在外部实际上有一个公网IP了，就是<code>222.0.1.2</code>，</p>
<p>因此，外部主机只需要通过访问这个公网IP，就会访问到内部服务器。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812150106558.png" alt="image-20230812150106558" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812150122091.png" alt="image-20230812150122091" style="zoom:67%;" /></p>
</li>
</ul>
<h2 id="第十六章、网络端口地址转换NAPT">第十六章、网络端口地址转换NAPT</h2>
<h3 id="16-1-原理">16.1 原理</h3>
<ul>
<li>
<p><strong>端口多路复用 NATP</strong></p>
<p>PAT又称为NAPT (Network Address Port Translation)</p>
<p>它实现一个公网地址和多个私网地址之间的映射，因此可以<strong>节约公网地址</strong>。</p>
<p>PAT的基本原理是将不同私网地址的报文的源IP地址转换为同一公网地址，但他们被转换为该地址的不同端口号，因而仍然能够共享同一地址。</p>
<ul>
<li>
<p>作用</p>
<ul>
<li>
<p>改变数据包的IP地址和端口号</p>
</li>
<li>
<p>能够大量节约公网IP地址</p>
</li>
</ul>
</li>
<li>
<p>类型</p>
<ul>
<li>
<p>动态PAT，包括NAPT和Easy IP</p>
<p>NAPT：多个私网IP地址对应固定外网IP地址(比如200.1.1.10)，配置方法与动态NAT类似。</p>
<p>Easy IP：多个私网IP地址对应路由器外网接口公网IP地址(比如12.0.0.1)</p>
</li>
<li>
<p>静态PAT，包括NAT Server</p>
<p>端口映射，将私网地址端口映射到公网地址，实现内网服务器供外网用户访问</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="16-2-实验">16.2 实验</h3>
<h4 id="搭建拓扑-8">搭建拓扑</h4>
<ul>
<li>PC机 两台</li>
<li>服务器Server 一台</li>
<li>二层交换机 一台</li>
<li>路由器 两台</li>
<li>连线</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812171025568.png" alt="image-20230812171025568" style="zoom: 80%;" /> 
<h4 id="配置IP-5">配置IP</h4>
<ul>
<li>PC机配置IP</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812160151295.png" alt="image-20230812160151295" style="zoom: 67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812160215520.png" alt="image-20230812160215520" style="zoom:67%;" /></p>
<ul>
<li>服务器配置IP</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812160252391.png" alt="image-20230812160252391" style="zoom:67%;" /> 
<ul>
<li>
<p>路由器配置端口IP</p>
<p>R0、R1配置端口IP</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）路由器R0配置</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 192.168.1.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 200.0.1.1 255.255.255.0</span><br><span class="line">Router(config-if)#clock rate 64000</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line"></span><br><span class="line">（2）路由器R1配置</span><br><span class="line">Router&gt;en</span><br><span class="line">Router#conf t</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip address 200.0.1.2 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip address 200.0.2.1 255.255.255.0</span><br><span class="line">Router(config-if)#no shutdown </span><br><span class="line">Router(config-if)#exit</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="配置路由-5">配置路由</h4>
<ul>
<li>
<p>分析网段</p>
<ul>
<li>
<p>外部网段</p>
<p><code>200.0.1.0</code></p>
<p><code>200.0.2.0</code></p>
</li>
<li>
<p>内部网段</p>
<p><code>192.168.1.0</code></p>
</li>
</ul>
</li>
<li>
<p>这里左边是内部网络，192.168.x.x网段是私有的，并不会直接被外部的路由器直接路由到。</p>
<p>因此，路由器R1只需要配置外部网段的路由即可，而外部的两个网段都是R1的直连网段，因此不需要配置。</p>
<p>路由器R0则是内部、外部网段均需要，内部网段是直连网段，不需要配置；外部网段的<code>2.0</code>网段需要配置一下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">只需要配置路由器R0的一个静态路由即可</span><br><span class="line">Router(config)#ip route 200.0.2.0 255.255.255.0 200.0.1.2</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="配置NAPT">配置NAPT</h4>
<ul>
<li>
<p>其实，到现在，你要是去测试ping，会发现是请求超时。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812161819278.png" alt="image-20230812161819278" style="zoom:67%;" /> 
<blockquote>
<p>这就很有意思，为什么是请求超时？为什么不是不可抵达？</p>
<p>分析一下两个问题：</p>
<ul>
<li>
<p>PC机的包发出去，服务器收到了吗？</p>
<p>收到了！</p>
</li>
<li>
<p>服务器如果是收到了请求，服务器回复的包发出去，PC机收到了吗？为什么没收到？</p>
<p>显然是PC机没收到回复。</p>
<p>为什么没收到？因为路由器R1处并不能转发私有地址<code>192.168.1.0</code>网段的数据包，也没有这个网段的路由（你不能直接配置静态路由。实际情况中，外部路由器即便收到了私有地址的包，也是会直接丢弃的）</p>
</li>
</ul>
<p>所以，PC机发了出去，也送到了，可以迟迟收不到回复，所以是请求超时。</p>
</blockquote>
</li>
<li>
<p>进行NAPT网络端口转换配置</p>
<p>内部主机在出口路由器处，先转换为一个公有地址，再出去。</p>
<p>这样做，外部服务器回复时，也是向这个公有地址回复，</p>
<p>回复抵达出口路由器时，会自动转换回内部的私有地址，PC机就可以收到了。</p>
<ul>
<li>指定内部端口</li>
<li>指定外部端口</li>
<li>创建访问列表</li>
<li>创建IP地址池</li>
<li>配置NAPT：从访问列表映射到IP地址池</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router(config)#int fa 0/0</span><br><span class="line">Router(config-if)#ip nat inside </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#int se 2/0</span><br><span class="line">Router(config-if)#ip nat outside </span><br><span class="line">Router(config-if)#exit</span><br><span class="line">Router(config)#access-list 1 permit 192.168.1.0 0.0.0.255 	</span><br><span class="line">解释：上面是创建一个标准访问控制列表（注意后面是反掩码）</span><br><span class="line">Router(config)#ip nat pool mypool 200.0.1.3 200.0.1.3 netmask 255.255.255.0 </span><br><span class="line">解释：上面是创建IP地址池，命名为mypool，写入起始地址、结束地址（这里是同一个，也就是说只有一个IP），后面写netmask+子网掩码</span><br><span class="line">Router(config)#ip nat inside source list 1 pool mypool overload </span><br><span class="line">解释：上面是配置NAPT，意思是把内网中编号1的访问列表的IP转换到名为mypool的地址池再出去，映射方式允许重载</span><br><span class="line">（若不允许重载，即，不带上overload，那么就是前面的动态NAT，需要一对一，地址池中的IP数量要够多）</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>如若猜测自己的配置可能哪里出问题，</p>
<p>可以使用命令<code>show run</code>查看配置信息，检查问题。</p>
</blockquote>
<h3 id="16-3-测试">16.3 测试</h3>
<ul>
<li>
<p>现在先看一下</p>
<p>在路由器R0上查看一下NAPT情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show ip nat translations</span><br></pre></td></tr></table></figure>
<p>你会发现，什么信息都没有，这是正常的。</p>
<p>只有有内部主机发起请求了，才会出现信息。</p>
</li>
<li>
<p>测试从PC机去ping以及访问 外部服务器。</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812170255660.png" alt="image-20230812170255660" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812170343202.png" alt="image-20230812170343202" style="zoom:67%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812170437449.png" alt="image-20230812170437449" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/computerNetwork/image-20230812170405578.png" alt="image-20230812170405578" style="zoom:67%;" /></p>
<ul>
<li>
<p>现在再看NAPT情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router#show ip nat translations </span><br><span class="line">Pro  Inside global     Inside local       Outside local      Outside global</span><br><span class="line">tcp 200.0.1.3:1024     192.168.1.2:1025   200.0.2.2:80       200.0.2.2:80</span><br><span class="line">tcp 200.0.1.3:1025     192.168.1.3:1025   200.0.2.2:80       200.0.2.2:80</span><br></pre></td></tr></table></figure>
<p>这里就是PC机在访问时，进行的网络地址端口转换情况。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>计网实验</tag>
      </tags>
  </entry>
  <entry>
    <title>《Matplotlib》Notes</title>
    <url>/butterflyblog/2024/01/31/%E3%80%8AMatplotlib%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《Matplotlib》Notes</h1>
<blockquote>
<p>来源：<a href="https://www.runoob.com/matplotlib/matplotlib-tutorial.html">https://www.runoob.com/matplotlib/matplotlib-tutorial.html</a></p>
<p>2024-02-15@isSeymour</p>
</blockquote>
<p>[TOC]</p>
<h1>一、初步</h1>
<p>Matplotlib 是 Python 的绘图库，它能让使用者很轻松地将数据图形化，并且提供多样化的输出格式。</p>
<p>Matplotlib 可以用来绘制各种静态，动态，交互式的图表。</p>
<p>Matplotlib 是一个非常强大的 Python 画图工具，我们可以使用该工具将很多数据通过图表的形式更直观的呈现出来。</p>
<p>Matplotlib 可以绘制线图、散点图、等高线图、条形图、柱状图、3D 图形、甚至是图形动画等等。</p>
<h2 id="1-1-安装">1.1 安装</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install matplotlib</span><br></pre></td></tr></table></figure>
<ul>
<li>验证</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(matplotlib.__version__)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.4.2</span><br></pre></td></tr></table></figure>
<h2 id="1-2-Pyplot">1.2 Pyplot</h2>
<p>Pyplot 是 Matplotlib 的子库，提供了和 MATLAB 类似的绘图 API。</p>
<p>Pyplot 是常用的绘图模块，能很方便让用户绘制 2D 图表。</p>
<p>Pyplot 包含一系列绘图函数的相关函数，每个函数会对当前的图像进行一些修改，例如：给图像加上标记，生新的图像，在图像中产生新的绘图区域等等。</p>
<p>使用的时候，我们可以使用 import 导入 pyplot 库，并设置一个别名 <strong>plt</strong>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure>
<p>这样我们就可以使用 <strong>plt</strong> 来引用 Pyplot 包的方法。</p>
<p>以下是一些常用的 pyplot 函数：</p>
<ul>
<li><code>plot()</code>：用于绘制线图和散点图</li>
<li><code>scatter()</code>：用于绘制散点图</li>
<li><code>bar()</code>：用于绘制垂直条形图和水平条形图</li>
<li><code>hist()</code>：用于绘制直方图</li>
<li><code>pie()</code>：用于绘制饼图</li>
<li><code>imshow()</code>：用于绘制图像</li>
<li><code>subplots()</code>：用于创建子图</li>
</ul>
<p>除了这些基本的函数，pyplot 还提供了很多其他的函数，例如用于设置图表属性的函数、用于添加文本和注释的函数、用于保存图表到文件的函数等等。</p>
<p>以下实例，我们通过两个坐标 <strong>(0,0)</strong> 到 <strong>(6,100)</strong> 来绘制一条线:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">xpoints = np.array([<span class="number">0</span>, <span class="number">6</span>])</span><br><span class="line">ypoints = np.array([<span class="number">0</span>, <span class="number">100</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(xpoints, ypoints)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot.png" alt="pyplot" style="zoom:67%;" /> 
<p>以上实例中我们使用了 Pyplot 的 <strong>plot()</strong> 函数， <strong>plot()</strong> 函数是绘制二维图形的最基本函数。</p>
<p><strong>plot()</strong> 用于画图它可以绘制点和线，语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 画单条线</span></span><br><span class="line">plot([x], y, [fmt], *, data=<span class="literal">None</span>, **kwargs)</span><br><span class="line"><span class="comment"># 画多条线</span></span><br><span class="line">plot([x], y, [fmt], [x2], y2, [fmt2], ..., **kwargs)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>**x, y：**点或线的节点，x 为 x 轴数据，y 为 y 轴数据，数据可以列表或数组。</li>
<li>**fmt：**可选，定义基本格式（如颜色、标记和线条样式）。</li>
<li>****kwargs：**可选，用在二维平面图上，设置指定属性，如标签，线的宽度等。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>plot(x, y)        <span class="comment"># 创建 y 中数据与 x 中对应值的二维线图，使用默认样式</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>plot(x, y, <span class="string">&#x27;bo&#x27;</span>)  <span class="comment"># 创建 y 中数据与 x 中对应值的二维线图，使用蓝色实心圈绘制</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>plot(y)           <span class="comment"># x 的值为 0..N-1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>plot(y, <span class="string">&#x27;r+&#x27;</span>)     <span class="comment"># 使用红色 + 号</span></span><br></pre></td></tr></table></figure>
<p><strong>颜色字符：</strong>‘b’ 蓝色，‘m’ 洋红色，‘g’ 绿色，‘y’ 黄色，‘r’ 红色，‘k’ 黑色，‘w’ 白色，‘c’ 青绿色，‘#008000’ RGB 颜色符串。多条曲线不指定颜色时，会自动选择不同颜色。</p>
<p><strong>线型参数：</strong>‘‐’ 实线，‘‐‐’ 破折线，‘‐.’ 点划线，‘:’ 虚线。</p>
<p><strong>标记字符：</strong>‘.’ 点标记，‘,’ 像素标记(极小点)，‘o’ 实心圈标记，‘v’ 倒三角标记，‘^’ 上三角标记，‘&gt;’ 右三角标记，‘&lt;’ 左三角标记…等等。</p>
<p>如果我们要绘制坐标 (1, 3) 到 (8, 10) 的线，我们就需要传递两个数组 [1, 8] 和 [3, 10] 给 <strong>plot</strong> 函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">xpoints = np.array([<span class="number">1</span>, <span class="number">8</span>])</span><br><span class="line">ypoints = np.array([<span class="number">3</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(xpoints, ypoints)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-2.png" alt="pyplot-2" style="zoom:67%;" /> 
<p>如果我们只想绘制两个坐标点，而不是一条线，可以使用 <strong>o</strong> 参数，表示一个实心圈的标记：</p>
<p>绘制坐标 (1, 3) 和 (8, 10) 的两个点</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">xpoints = np.array([<span class="number">1</span>, <span class="number">8</span>])</span><br><span class="line">ypoints = np.array([<span class="number">3</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(xpoints, ypoints, <span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-3.png" alt="pyplot-3" style="zoom:67%;" /> 
<p>我们也可以绘制任意数量的点，只需确保两个轴上的点数相同即可。</p>
<p>绘制一条不规则线，坐标为 (1, 3) 、 (2, 8) 、(6, 1) 、(8, 10)，对应的两个数组为：[1, 2, 6, 8] 与 [3, 8, 1, 10]。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">xpoints = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>])</span><br><span class="line">ypoints = np.array([<span class="number">3</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(xpoints, ypoints)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/image-20240215164840575.png" alt="image-20240215164840575" style="zoom:67%;" /> 
<p>如果我们不指定 x 轴上的点，则 x 会根据 y 的值来设置为 <strong>0, 1, 2, 3…N-1</strong>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">3</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-4.png" alt="pyplot-4" style="zoom:67%;" /> 
<p>从上图可以看出 x 的值默认设置为 <strong>[0, 1]</strong>。</p>
<p>再看一个有更多值的实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">3</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-5.png" alt="pyplot-5" style="zoom:67%;" /> 
<p>从上图可以看出 <strong>x</strong> 的值默认设置为 <strong>[0, 1, 2, 3, 4, 5]</strong>。</p>
<p>以下实例我们绘制一个正弦和余弦图，在 plt.plot() 参数中包含两对 <strong>x,y</strong> 值，第一对是 <strong>x,y</strong>，这对应于正弦函数，第二对是 <strong>x,z</strong>，这对应于余弦函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">0</span>,<span class="number">4</span>*np.pi,<span class="number">0.1</span>)   <span class="comment"># start,stop,step</span></span><br><span class="line">y = np.sin(x)</span><br><span class="line">z = np.cos(x)</span><br><span class="line">plt.plot(x,y,x,z)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-6.png" alt="pyplot-6" style="zoom:67%;" /> 
<h2 id="1-3-图形中文显示">1.3 图形中文显示</h2>
<h3 id="使用字体库">使用字体库</h3>
<p>Matplotlib 默认情况不支持中文，我们可以使用以下简单的方法来解决。</p>
<p>这里我们使用思源黑体，思源黑体是 Adobe 与 Google 推出的一款开源字体。</p>
<p>官网：<a href="https://source.typekit.com/source-han-serif/cn/">https://source.typekit.com/source-han-serif/cn/</a></p>
<p>GitHub 地址：<a href="https://github.com/adobe-fonts/source-han-sans/tree/release/OTF/SimplifiedChinese">https://github.com/adobe-fonts/source-han-sans/tree/release/OTF/SimplifiedChinese</a></p>
<p>打开链接后，在里面选一个就好了。</p>
<p>可以下载个 OTF 字体，比如 SourceHanSansSC-Bold.otf，将该文件文件放在当前执行的代码文件中：</p>
<p>SourceHanSansSC-Bold.otf 文件放在当前执行的代码文件中：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"> </span><br><span class="line"><span class="comment"># fname 为 你下载的字体库路径，注意 SourceHanSansSC-Bold.otf 字体的路径</span></span><br><span class="line">zhfont1 = matplotlib.font_manager.FontProperties(fname=<span class="string">&quot;SourceHanSansSC-Bold.otf&quot;</span>) </span><br><span class="line"> </span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">11</span>) </span><br><span class="line">y =  <span class="number">2</span>  * x +  <span class="number">5</span> </span><br><span class="line">plt.title(<span class="string">&quot;菜鸟教程 - 测试&quot;</span>, fontproperties=zhfont1) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># fontproperties 设置中文显示，fontsize 设置字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x 轴&quot;</span>, fontproperties=zhfont1)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y 轴&quot;</span>, fontproperties=zhfont1)</span><br><span class="line">plt.plot(x,y) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-label2.png" alt="pyplot-label2" style="zoom:67%;" /> 
<p>此外我们还可以自定义字体的样式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"> </span><br><span class="line"><span class="comment"># fname 为 你下载的字体库路径，注意 SourceHanSansSC-Bold.otf 字体的路径，size 参数设置字体大小</span></span><br><span class="line">zhfont1 = matplotlib.font_manager.FontProperties(fname=<span class="string">&quot;SourceHanSansSC-Bold.otf&quot;</span>, size=<span class="number">18</span>) </span><br><span class="line">font1 = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;size&#x27;</span>:<span class="number">20</span>&#125;</span><br><span class="line">font2 = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;darkred&#x27;</span>,<span class="string">&#x27;size&#x27;</span>:<span class="number">15</span>&#125;</span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">11</span>) </span><br><span class="line">y =  <span class="number">2</span>  * x +  <span class="number">5</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># fontdict 可以使用 css 来设置字体样式</span></span><br><span class="line">plt.title(<span class="string">&quot;菜鸟教程 - 测试&quot;</span>, fontproperties=zhfont1, fontdict = font1) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># fontproperties 设置中文显示，fontsize 设置字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x 轴&quot;</span>, fontproperties=zhfont1)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y 轴&quot;</span>, fontproperties=zhfont1)</span><br><span class="line">plt.plot(x,y) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-label3.png" alt="pyplot-label3" style="zoom:67%;" /> 
<h3 id="使用字体参数">使用字体参数</h3>
<p>先获取系统的字体库列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">a=<span class="built_in">sorted</span>([f.name <span class="keyword">for</span> f <span class="keyword">in</span> matplotlib.font_manager.fontManager.ttflist])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">Heiti TC</span><br><span class="line">Helvetica</span><br><span class="line">Helvetica Neue</span><br><span class="line">Herculanum</span><br><span class="line">Hiragino Maru Gothic Pro</span><br><span class="line">Hiragino Mincho ProN</span><br><span class="line">Hiragino Sans</span><br><span class="line">Hiragino Sans GB</span><br><span class="line">Hoefler Text</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>以上代码输出 font_manager 的 ttflist 中所有注册的名字，找一个看中文字体例如：STFangsong(仿宋）、Heiti TC（黑体）,然后添加以下代码即可。</p>
<p><strong>对于 Windows：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.rcParams[&#x27;font.family&#x27;] = &#x27;SimHei&#x27;  # 替换为你选择的字体</span><br></pre></td></tr></table></figure>
<p>在 Windows 系统上，选择 SimHei（黑体）或其他中文字体，并将其设置为 Matplotlib 的默认字体。</p>
<p><strong>对于 Linux：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.rcParams[&#x27;font.family&#x27;] = &#x27;WenQuanYi Micro Hei&#x27;  # 替换为你选择的字体</span><br></pre></td></tr></table></figure>
<p>在Linux系统上，使用 fc-list 命令查看已安装的字体，选择一个中文字体，并将其设置为 Matplotlib 的默认字体。</p>
<p><strong>对于 macOS：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.rcParams[&#x27;font.family&#x27;] = &#x27;Heiti TC&#x27;  # 替换为你选择的字体</span><br></pre></td></tr></table></figure>
<p>通过设置 <strong>plt.rcParams[‘font.family’]</strong>，你告诉 Matplotlib 使用选择的字体来渲染文本，从而在图表中正确显示中文。</p>
<p>这样，你就能够在 Matplotlib 图表中使用系统支持的中文字体了。</p>
<ul>
<li>示例</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;Heiti TC&#x27;</span>  <span class="comment"># 替换为你选择的字体</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据</span></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">y = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制折线图</span></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加标题和标签</span></span><br><span class="line">plt.title(<span class="string">&#x27;折线图示例&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;X轴&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Y轴&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Font.png" alt="Font" style="zoom:67%;" /> 
<h1>二、绘图</h1>
<h2 id="2-1-绘图标记">2.1 绘图标记</h2>
<h3 id="marker">marker</h3>
<p>绘图过程如果我们想要给坐标自定义一些不一样的标记，就可以使用 <strong>plot()</strong> 方法的 <strong>marker</strong> 参数来定义。</p>
<p>以下实例定义了实心圆标记：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, marker = <span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-marker.png" alt="pyplot-marker" style="zoom:67%;" /> 
<p><strong>marker</strong> 可以定义的符号如下：</p>
<table>
<thead>
<tr>
<th style="text-align:left">标记</th>
<th style="text-align:left">符号</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">“.”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m00.png" alt="m00"></td>
<td style="text-align:left">点</td>
</tr>
<tr>
<td style="text-align:left">“,”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m01.png" alt="m01"></td>
<td style="text-align:left">像素点</td>
</tr>
<tr>
<td style="text-align:left">“o”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m02.png" alt="m02"></td>
<td style="text-align:left">实心圆</td>
</tr>
<tr>
<td style="text-align:left">“v”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m03.png" alt="m03"></td>
<td style="text-align:left">下三角</td>
</tr>
<tr>
<td style="text-align:left">“^”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m04.png" alt="m04"></td>
<td style="text-align:left">上三角</td>
</tr>
<tr>
<td style="text-align:left">“&lt;”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m05.png" alt="m05"></td>
<td style="text-align:left">左三角</td>
</tr>
<tr>
<td style="text-align:left">“&gt;”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m06.png" alt="m06"></td>
<td style="text-align:left">右三角</td>
</tr>
<tr>
<td style="text-align:left">“1”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m07.png" alt="m07"></td>
<td style="text-align:left">下三叉</td>
</tr>
<tr>
<td style="text-align:left">“2”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m08.png" alt="m08"></td>
<td style="text-align:left">上三叉</td>
</tr>
<tr>
<td style="text-align:left">“3”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m09.png" alt="m09"></td>
<td style="text-align:left">左三叉</td>
</tr>
<tr>
<td style="text-align:left">“4”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m10.png" alt="m10"></td>
<td style="text-align:left">右三叉</td>
</tr>
<tr>
<td style="text-align:left">“8”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m11.png" alt="m11"></td>
<td style="text-align:left">八角形</td>
</tr>
<tr>
<td style="text-align:left">“s”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m12.png" alt="m12"></td>
<td style="text-align:left">正方形</td>
</tr>
<tr>
<td style="text-align:left">“p”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m13.png" alt="m13"></td>
<td style="text-align:left">五边形</td>
</tr>
<tr>
<td style="text-align:left">“P”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m23.png" alt="m23"></td>
<td style="text-align:left">加号（填充）</td>
</tr>
<tr>
<td style="text-align:left">“*”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m14.png" alt="m14"></td>
<td style="text-align:left">星号</td>
</tr>
<tr>
<td style="text-align:left">“h”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m15.png" alt="m15"></td>
<td style="text-align:left">六边形 1</td>
</tr>
<tr>
<td style="text-align:left">“H”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m16.png" alt="m16"></td>
<td style="text-align:left">六边形 2</td>
</tr>
<tr>
<td style="text-align:left">“+”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m17.png" alt="m17"></td>
<td style="text-align:left">加号</td>
</tr>
<tr>
<td style="text-align:left">“x”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m18.png" alt="m18"></td>
<td style="text-align:left">乘号 x</td>
</tr>
<tr>
<td style="text-align:left">“X”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m24.png" alt="m24"></td>
<td style="text-align:left">乘号 x (填充)</td>
</tr>
<tr>
<td style="text-align:left">“D”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m19.png" alt="m19"></td>
<td style="text-align:left">菱形</td>
</tr>
<tr>
<td style="text-align:left">“d”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m20.png" alt="m20"></td>
<td style="text-align:left">瘦菱形</td>
</tr>
<tr>
<td style="text-align:left">“|”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m21.png" alt="m21"></td>
<td style="text-align:left">竖线</td>
</tr>
<tr>
<td style="text-align:left">“_”</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m22.png" alt="m22"></td>
<td style="text-align:left">横线</td>
</tr>
<tr>
<td style="text-align:left">0 (TICKLEFT)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m25.png" alt="m25"></td>
<td style="text-align:left">左横线</td>
</tr>
<tr>
<td style="text-align:left">1 (TICKRIGHT)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m26.png" alt="m26"></td>
<td style="text-align:left">右横线</td>
</tr>
<tr>
<td style="text-align:left">2 (TICKUP)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m27.png" alt="m27"></td>
<td style="text-align:left">上竖线</td>
</tr>
<tr>
<td style="text-align:left">3 (TICKDOWN)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m28.png" alt="m28"></td>
<td style="text-align:left">下竖线</td>
</tr>
<tr>
<td style="text-align:left">4 (CARETLEFT)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m29.png" alt="m29"></td>
<td style="text-align:left">左箭头</td>
</tr>
<tr>
<td style="text-align:left">5 (CARETRIGHT)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m30.png" alt="m30"></td>
<td style="text-align:left">右箭头</td>
</tr>
<tr>
<td style="text-align:left">6 (CARETUP)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m31.png" alt="m31"></td>
<td style="text-align:left">上箭头</td>
</tr>
<tr>
<td style="text-align:left">7 (CARETDOWN)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m32.png" alt="m32"></td>
<td style="text-align:left">下箭头</td>
</tr>
<tr>
<td style="text-align:left">8 (CARETLEFTBASE)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m33.png" alt="m33"></td>
<td style="text-align:left">左箭头 (中间点为基准)</td>
</tr>
<tr>
<td style="text-align:left">9 (CARETRIGHTBASE)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m34.png" alt="m34"></td>
<td style="text-align:left">右箭头 (中间点为基准)</td>
</tr>
<tr>
<td style="text-align:left">10 (CARETUPBASE)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m35.png" alt="m35"></td>
<td style="text-align:left">上箭头 (中间点为基准)</td>
</tr>
<tr>
<td style="text-align:left">11 (CARETDOWNBASE)</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m36.png" alt="m36"></td>
<td style="text-align:left">下箭头 (中间点为基准)</td>
</tr>
<tr>
<td style="text-align:left">“None”, &quot; &quot; or “”</td>
<td style="text-align:left"></td>
<td style="text-align:left">没有任何标记</td>
</tr>
<tr>
<td style="text-align:left">‘<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span></span></span>’</td>
<td style="text-align:left"><img src="https://www.runoob.com/images/m37.png" alt="m37"></td>
<td style="text-align:left">渲染指定的字符。例如 “<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>” 以字母 f 为标记。</td>
</tr>
</tbody>
</table>
<p>以下实例定义了 ***** 标记：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, marker = <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-marker-2.png" alt="pyplot-marker-2" style="zoom:67%;" /> 
<p>以下实例定义了下箭头：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.markers</span><br><span class="line"></span><br><span class="line">plt.plot([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], marker=matplotlib.markers.CARETDOWNBASE)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-marker-3.png" alt="pyplot-marker-3" style="zoom:67%;" /> 
<h3 id="fmt">fmt</h3>
<p>fmt 参数定义了基本格式，如标记、线条样式和颜色。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fmt = <span class="string">&#x27;[marker][line][color]&#x27;</span></span><br></pre></td></tr></table></figure>
<p>例如 <strong>o:r</strong>，<strong>o</strong> 表示实心圆标记，<strong>:</strong> 表示虚线，<strong>r</strong> 表示颜色为红色。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, <span class="string">&#x27;o:r&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-fmt-1.png" alt="pyplot-fmt-1" style="zoom:67%;" /> 
<p>线类型：</p>
<table>
<thead>
<tr>
<th style="text-align:left">线类型标记</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">‘-’</td>
<td style="text-align:left">实线</td>
</tr>
<tr>
<td style="text-align:left">‘:’</td>
<td style="text-align:left">虚线</td>
</tr>
<tr>
<td style="text-align:left">‘–’</td>
<td style="text-align:left">破折线</td>
</tr>
<tr>
<td style="text-align:left">‘-.’</td>
<td style="text-align:left">点划线</td>
</tr>
</tbody>
</table>
<p>颜色类型：</p>
<table>
<thead>
<tr>
<th style="text-align:left">颜色标记</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">‘r’</td>
<td style="text-align:left">红色</td>
</tr>
<tr>
<td style="text-align:left">‘g’</td>
<td style="text-align:left">绿色</td>
</tr>
<tr>
<td style="text-align:left">‘b’</td>
<td style="text-align:left">蓝色</td>
</tr>
<tr>
<td style="text-align:left">‘c’</td>
<td style="text-align:left">青色</td>
</tr>
<tr>
<td style="text-align:left">‘m’</td>
<td style="text-align:left">品红</td>
</tr>
<tr>
<td style="text-align:left">‘y’</td>
<td style="text-align:left">黄色</td>
</tr>
<tr>
<td style="text-align:left">‘k’</td>
<td style="text-align:left">黑色</td>
</tr>
<tr>
<td style="text-align:left">‘w’</td>
<td style="text-align:left">白色</td>
</tr>
</tbody>
</table>
<h3 id="大小">大小</h3>
<p>我们可以自定义标记的大小与颜色，使用的参数分别是：</p>
<ul>
<li>markersize，简写为 <strong>ms</strong>：定义标记的大小。</li>
<li>markerfacecolor，简写为 <strong>mfc</strong>：定义标记内部的颜色。</li>
<li>markeredgecolor，简写为 <strong>mec</strong>：定义标记边框的颜色。</li>
</ul>
<p>设置标记大小：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, marker = <span class="string">&#x27;o&#x27;</span>, ms = <span class="number">20</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-ms.png" alt="pyplot-ms" style="zoom: 67%;" /> 
<p>设置标记外边框颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, marker = <span class="string">&#x27;o&#x27;</span>, ms = <span class="number">20</span>, mec = <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-mec.png" alt="pyplot-mec" style="zoom:67%;" /> 
<p>设置标记内部颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, marker = <span class="string">&#x27;o&#x27;</span>, ms = <span class="number">20</span>, mfc = <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-mfc.png" alt="pyplot-mfc" style="zoom:67%;" /> 
<p>自定义标记内部与边框的颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line">plt.plot(ypoints, marker = <span class="string">&#x27;o&#x27;</span>, ms = <span class="number">20</span>, mec = <span class="string">&#x27;#4CAF50&#x27;</span>, mfc = <span class="string">&#x27;#4CAF50&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-mecmfc.png" alt="pyplot-mecmfc" style="zoom:67%;" /> 
<h2 id="2-2-绘图线">2.2 绘图线</h2>
<p>绘图过程如果我们自定义线的样式，包括线的类型、颜色和大小等。</p>
<h3 id="线的类型">线的类型</h3>
<p>线的类型可以使用 <strong>linestyle</strong> 参数来定义，简写为 <strong>ls</strong>。</p>
<table>
<thead>
<tr>
<th style="text-align:left">类型</th>
<th style="text-align:left">简写</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">‘solid’ (默认)</td>
<td style="text-align:left">‘-’</td>
<td style="text-align:left">实线</td>
</tr>
<tr>
<td style="text-align:left">‘dotted’</td>
<td style="text-align:left">‘:’</td>
<td style="text-align:left">点虚线</td>
</tr>
<tr>
<td style="text-align:left">‘dashed’</td>
<td style="text-align:left">‘–’</td>
<td style="text-align:left">破折线</td>
</tr>
<tr>
<td style="text-align:left">‘dashdot’</td>
<td style="text-align:left">‘-.’</td>
<td style="text-align:left">点划线</td>
</tr>
<tr>
<td style="text-align:left">‘None’</td>
<td style="text-align:left">‘’ 或 ’ ’</td>
<td style="text-align:left">不画线</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, linestyle = <span class="string">&#x27;dotted&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-linestyle.png" alt="pyplot-linestyle" style="zoom:67%;" /> 
<p>使用简写：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, ls = <span class="string">&#x27;-.&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-linestyle2.png" alt="pyplot-linestyle2" style="zoom:67%;" /> 
<h3 id="线的颜色">线的颜色</h3>
<p>线的颜色可以使用 <strong>color</strong> 参数来定义，简写为 <strong>c</strong>。</p>
<p>颜色类型：</p>
<table>
<thead>
<tr>
<th style="text-align:left">颜色标记</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">‘r’</td>
<td style="text-align:left">红色</td>
</tr>
<tr>
<td style="text-align:left">‘g’</td>
<td style="text-align:left">绿色</td>
</tr>
<tr>
<td style="text-align:left">‘b’</td>
<td style="text-align:left">蓝色</td>
</tr>
<tr>
<td style="text-align:left">‘c’</td>
<td style="text-align:left">青色</td>
</tr>
<tr>
<td style="text-align:left">‘m’</td>
<td style="text-align:left">品红</td>
</tr>
<tr>
<td style="text-align:left">‘y’</td>
<td style="text-align:left">黄色</td>
</tr>
<tr>
<td style="text-align:left">‘k’</td>
<td style="text-align:left">黑色</td>
</tr>
<tr>
<td style="text-align:left">‘w’</td>
<td style="text-align:left">白色</td>
</tr>
</tbody>
</table>
<p>当然也可以自定义颜色类型，例如：<strong>SeaGreen、#8FBC8F</strong> 等，完整样式可以参考 <a href="https://www.runoob.com/html/html-colorvalues.html">HTML 颜色值</a>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, color = <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-line-color.png" alt="pyplot-line-color" style="zoom:67%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, c = <span class="string">&#x27;#8FBC8F&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-line-color2.png" alt="pyplot-line-color2" style="zoom:67%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, c = <span class="string">&#x27;SeaGreen&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-line-color3.png" alt="pyplot-line-color3" style="zoom:67%;" /> 
<h3 id="线的宽度">线的宽度</h3>
<p>线的宽度可以使用 <strong>linewidth</strong> 参数来定义，简写为 <strong>lw</strong>，值可以是浮点数，如：<strong>1</strong>、<strong>2.0</strong>、<strong>5.67</strong> 等。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">ypoints = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(ypoints, linewidth = <span class="string">&#x27;12.5&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-linewidth.png" alt="pyplot-linewidth" style="zoom:67%;" /> 
<h3 id="多条线">多条线</h3>
<p>plot() 方法中可以包含多对 x,y 值来绘制多条线。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">y1 = np.array([<span class="number">3</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">9</span>])</span><br><span class="line">y2 = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(y1)</span><br><span class="line">plt.plot(y2)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-line-many.png" alt="pyplot-line-many" style="zoom:67%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x1 = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">y1 = np.array([<span class="number">3</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">9</span>])</span><br><span class="line">x2 = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">y2 = np.array([<span class="number">6</span>, <span class="number">2</span>, <span class="number">13</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line">plt.plot(x1, y1, x2, y2)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-line-many2.png" alt="pyplot-line-many2" style="zoom:67%;" /> 
<h2 id="2-3-轴标签和标题">2.3 轴标签和标题</h2>
<h3 id="轴标签">轴标签</h3>
<p>我们可以使用 <strong>xlabel()</strong> 和 <strong>ylabel()</strong> 方法来设置 x 轴和 y 轴的标签。使用 <strong>title()</strong> 方法来设置标题。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>])</span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;RUNOOB TEST TITLE&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x - label&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y - label&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-label.png" alt="pyplot-label" style="zoom:67%;" />  
<h3 id="标题与标签的定位">标题与标签的定位</h3>
<p><strong>title()</strong> 方法提供了 <strong>loc</strong> 参数来设置标题显示的位置，可以设置为: <strong>‘left’, ‘right’, 和 ‘center’， 默认值为 ‘center’</strong>。</p>
<p><strong>xlabel()</strong> 方法提供了 <strong>loc</strong> 参数来设置 x 轴显示的位置，可以设置为: <strong>‘left’, ‘right’, 和 ‘center’， 默认值为 ‘center’</strong>。</p>
<p><strong>ylabel()</strong> 方法提供了 <strong>loc</strong> 参数来设置 y 轴显示的位置，可以设置为: <strong>‘bottom’, ‘top’, 和 ‘center’， 默认值为 ‘center’</strong>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"> </span><br><span class="line"><span class="comment"># fname 为 你下载的字体库路径，注意 SourceHanSansSC-Bold.otf 字体的路径，size 参数设置字体大小</span></span><br><span class="line">zhfont1 = matplotlib.font_manager.FontProperties(fname=<span class="string">&quot;SourceHanSansSC-Bold.otf&quot;</span>, size=<span class="number">18</span>) </span><br><span class="line">font1 = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;blue&#x27;</span>,<span class="string">&#x27;size&#x27;</span>:<span class="number">20</span>&#125;</span><br><span class="line">font2 = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;darkred&#x27;</span>,<span class="string">&#x27;size&#x27;</span>:<span class="number">15</span>&#125;</span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">11</span>) </span><br><span class="line">y =  <span class="number">2</span>  * x +  <span class="number">5</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># fontdict 可以使用 css 来设置字体样式</span></span><br><span class="line">plt.title(<span class="string">&quot;菜鸟教程 - 测试&quot;</span>, fontproperties=zhfont1, fontdict = font1, loc=<span class="string">&quot;left&quot;</span>) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># fontproperties 设置中文显示，fontsize 设置字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x 轴&quot;</span>, fontproperties=zhfont1, loc=<span class="string">&quot;left&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y 轴&quot;</span>, fontproperties=zhfont1, loc=<span class="string">&quot;top&quot;</span>)</span><br><span class="line">plt.plot(x,y) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-label4.png" alt="pyplot-label4" style="zoom:67%;" /> 
<h2 id="2-4-网格线">2.4 网格线</h2>
<p>我们可以使用 pyplot 中的 grid() 方法来设置图表中的网格线。</p>
<p>grid() 方法语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.grid(b=<span class="literal">None</span>, which=<span class="string">&#x27;major&#x27;</span>, axis=<span class="string">&#x27;both&#x27;</span>, )</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><strong>b</strong>：可选，默认为 None，可以设置布尔值，true 为显示网格线，false 为不显示，如果设置 **kwargs 参数，则值为 true。</li>
<li><strong>which</strong>：可选，可选值有 ‘major’、‘minor’ 和 ‘both’，默认为 ‘major’，表示应用更改的网格线。</li>
<li><strong>axis</strong>：可选，设置显示哪个方向的网格线，可以是取 ‘both’（默认），‘x’ 或 ‘y’，分别表示两个方向，x 轴方向或 y 轴方向。</li>
<li>*<strong>*kwargs</strong>：可选，设置网格样式，可以是 color=‘r’, linestyle=‘-’ 和 linewidth=2，分别表示网格线的颜色，样式和宽度。</li>
</ul>
<p>以下实例添加一个简单的网格线，参数使用默认值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;RUNOOB grid() Test&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x - label&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y - label&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.grid()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-grid.png" alt="pyplot-grid" style="zoom:67%;" /> 
<p>以下实例添加一个简单的网格线，axis 参数使用 x，设置 x 轴方向显示网格线：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;RUNOOB grid() Test&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x - label&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y - label&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.grid(axis=<span class="string">&#x27;x&#x27;</span>) <span class="comment"># 设置 y 就在轴方向显示网格线</span></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-grid2.png" alt="pyplot-grid2" style="zoom:67%;" /> 
<p>以下实例添加一个简单的网格线，并设置网格线的样式，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">grid(color = <span class="string">&#x27;color&#x27;</span>, linestyle = <span class="string">&#x27;linestyle&#x27;</span>, linewidth = number)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<p><strong>color：</strong>‘b’ 蓝色，‘m’ 洋红色，‘g’ 绿色，‘y’ 黄色，‘r’ 红色，‘k’ 黑色，‘w’ 白色，‘c’ 青绿色，‘#008000’ RGB 颜色符串。</p>
<p><strong>linestyle：</strong>‘‐’ 实线，‘‐‐’ 破折线，‘‐.’ 点划线，‘:’ 虚线。</p>
<p><strong>linewidth</strong>：设置线的宽度，可以设置一个数字。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;RUNOOB grid() Test&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x - label&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y - label&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">plt.grid(color = <span class="string">&#x27;r&#x27;</span>, linestyle = <span class="string">&#x27;--&#x27;</span>, linewidth = <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-grid3.png" alt="pyplot-grid3" style="zoom:67%;" /> 
<h2 id="2-5-绘制多图">2.5 绘制多图</h2>
<p>我们可以使用 pyplot 中的 <strong>subplot()</strong> 和 <strong>subplots()</strong> 方法来绘制多个子图。</p>
<p><strong>subplot()</strong> 方法在绘图时需要指定位置，<strong>subplots()</strong> 方法可以一次生成多个，在调用时只需要调用生成对象的 ax 即可。</p>
<h3 id="subplot">subplot</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">subplot(nrows, ncols, index, **kwargs)</span><br><span class="line">subplot(pos, **kwargs)</span><br><span class="line">subplot(**kwargs)</span><br><span class="line">subplot(ax)</span><br></pre></td></tr></table></figure>
<p>以上函数将整个绘图区域分成 nrows 行和 ncols 列，然后从左到右，从上到下的顺序对每个子区域进行编号 <strong>1…N</strong> ，左上的子区域的编号为 1、右下的区域编号为 N，编号可以通过参数 <strong>index</strong> 来设置。</p>
<p>设置 numRows ＝ 1，numCols ＝ 2，就是将图表绘制成 1x2 的图片区域, 对应的坐标为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p><strong>plotNum ＝ 1</strong>, 表示的坐标为(1, 1), 即第一行第一列的子图。</p>
<p><strong>plotNum ＝ 2</strong>, 表示的坐标为(1, 2), 即第一行第二列的子图。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#plot 1:</span></span><br><span class="line">xpoints = np.array([<span class="number">0</span>, <span class="number">6</span>])</span><br><span class="line">ypoints = np.array([<span class="number">0</span>, <span class="number">100</span>])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(xpoints,ypoints)</span><br><span class="line">plt.title(<span class="string">&quot;plot 1&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#plot 2:</span></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.title(<span class="string">&quot;plot 2&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.suptitle(<span class="string">&quot;RUNOOB subplot Test&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-subplot.png" alt="pyplot-subplot" style="zoom:67%;" /> 
<p>设置 numRows ＝ 2，numCols ＝ 2，就是将图表绘制成 2x2 的图片区域, 对应的坐标为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1, 1), (1, 2)</span><br><span class="line">(2, 1), (2, 2)</span><br></pre></td></tr></table></figure>
<p><strong>plotNum ＝ 1</strong>, 表示的坐标为(1, 1), 即第一行第一列的子图。</p>
<p><strong>plotNum ＝ 2</strong>, 表示的坐标为(1, 2), 即第一行第二列的子图。</p>
<p><strong>plotNum ＝ 3</strong>, 表示的坐标为(2, 1), 即第二行第一列的子图。</p>
<p><strong>plotNum ＝ 4</strong>, 表示的坐标为(2, 2), 即第二行第二列的子图。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#plot 1:</span></span><br><span class="line">x = np.array([<span class="number">0</span>, <span class="number">6</span>])</span><br><span class="line">y = np.array([<span class="number">0</span>, <span class="number">100</span>])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.title(<span class="string">&quot;plot 1&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#plot 2:</span></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.title(<span class="string">&quot;plot 2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#plot 3:</span></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.title(<span class="string">&quot;plot 3&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#plot 4:</span></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">y = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.title(<span class="string">&quot;plot 4&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.suptitle(<span class="string">&quot;RUNOOB subplot Test&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/pyplot-subplot-2.png" alt="pyplot-subplot-2" style="zoom:67%;" /> 
<h3 id="subplots">subplots()</h3>
<p>subplots() 方法语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.subplots(nrows=<span class="number">1</span>, ncols=<span class="number">1</span>, *, sharex=<span class="literal">False</span>, sharey=<span class="literal">False</span>, squeeze=<span class="literal">True</span>, subplot_kw=<span class="literal">None</span>, gridspec_kw=<span class="literal">None</span>, **fig_kw)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><strong>nrows</strong>：默认为 1，设置图表的行数。</li>
<li><strong>ncols</strong>：默认为 1，设置图表的列数。</li>
<li><strong>sharex、sharey</strong>：设置 x、y 轴是否共享属性，默认为 false，可设置为 ‘none’、‘all’、‘row’ 或 ‘col’。
<ul>
<li>False 或 none 每个子图的 x 轴或 y 轴都是独立的</li>
<li>True 或 ‘all’：所有子图共享 x 轴或 y 轴</li>
<li>‘row’ 设置每个子图行共享一个 x 轴或 y 轴</li>
<li>‘col’：设置每个子图列共享一个 x 轴或 y 轴</li>
</ul>
</li>
<li><strong>squeeze</strong>：布尔值，默认为 True，表示额外的维度从返回的 Axes(轴)对象中挤出，对于 N<em>1 或 1</em>N 个子图，返回一个 1 维数组，对于 N*M，N&gt;1 和 M&gt;1 返回一个 2 维数组。如果设置为 False，则不进行挤压操作，返回一个元素为 Axes 实例的2维数组，即使它最终是1x1。</li>
<li><strong>subplot_kw</strong>：可选，字典类型。把字典的关键字传递给 add_subplot() 来创建每个子图。</li>
<li><strong>gridspec_kw</strong>：可选，字典类型。把字典的关键字传递给 GridSpec 构造函数创建子图放在网格里(grid)。</li>
<li>*<strong>*fig_kw</strong>：把详细的关键字参数传给 figure() 函数。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一些测试数据</span></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">2</span>*np.pi, <span class="number">400</span>)</span><br><span class="line">y = np.sin(x**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个画像和子图 -- 图1</span></span><br><span class="line">fig, ax = plt.subplots()</span><br><span class="line">ax.plot(x, y)</span><br><span class="line">ax.set_title(<span class="string">&#x27;Simple plot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建两个子图 -- 图2</span></span><br><span class="line">f, (ax1, ax2) = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, sharey=<span class="literal">True</span>)</span><br><span class="line">ax1.plot(x, y)</span><br><span class="line">ax1.set_title(<span class="string">&#x27;Sharing Y axis&#x27;</span>)</span><br><span class="line">ax2.scatter(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建四个子图 -- 图3</span></span><br><span class="line">fig, axs = plt.subplots(<span class="number">2</span>, <span class="number">2</span>, subplot_kw=<span class="built_in">dict</span>(projection=<span class="string">&quot;polar&quot;</span>))</span><br><span class="line">axs[<span class="number">0</span>, <span class="number">0</span>].plot(x, y)</span><br><span class="line">axs[<span class="number">1</span>, <span class="number">1</span>].scatter(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#  -- 图4</span></span><br><span class="line"><span class="comment"># 共享 x 轴</span></span><br><span class="line">plt.subplots(<span class="number">2</span>, <span class="number">2</span>, sharex=<span class="string">&#x27;col&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 共享 y 轴</span></span><br><span class="line">plt.subplots(<span class="number">2</span>, <span class="number">2</span>, sharey=<span class="string">&#x27;row&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 共享 x 轴和 y 轴</span></span><br><span class="line">plt.subplots(<span class="number">2</span>, <span class="number">2</span>, sharex=<span class="string">&#x27;all&#x27;</span>, sharey=<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个也是共享 x 轴和 y 轴</span></span><br><span class="line">plt.subplots(<span class="number">2</span>, <span class="number">2</span>, sharex=<span class="literal">True</span>, sharey=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建标识为 10 的图，已经存在的则删除</span></span><br><span class="line">fig, ax = plt.subplots(num=<span class="number">10</span>, clear=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<ul>
<li>图1</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Simpleplot.png" alt="Simpleplot" style="zoom:67%;" /> 
<ul>
<li>图2</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/SharingYaxis.png" alt="SharingYaxis" style="zoom:67%;" /> 
<ul>
<li>图3</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/subplots-four.png" alt="subplots-four" style="zoom:67%;" /> 
<ul>
<li>图4</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/subplots-fourwhite.png" alt="subplots-fourwhite" style="zoom:80%;" /> 
<h1>三、数学图</h1>
<h2 id="3-1-散点图">3.1 散点图</h2>
<p>我们可以使用 pyplot 中的 scatter() 方法来绘制散点图。</p>
<p>scatter() 方法语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.scatter(x, y, s=<span class="literal">None</span>, c=<span class="literal">None</span>, marker=<span class="literal">None</span>, cmap=<span class="literal">None</span>, norm=<span class="literal">None</span>, vmin=<span class="literal">None</span>, vmax=<span class="literal">None</span>, alpha=<span class="literal">None</span>, linewidths=<span class="literal">None</span>, *, edgecolors=<span class="literal">None</span>, plotnonfinite=<span class="literal">False</span>, data=<span class="literal">None</span>, **kwargs)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<p><strong>x，y</strong>：长度相同的数组，也就是我们即将绘制散点图的数据点，输入数据。</p>
<p><strong>s</strong>：点的大小，默认 20，也可以是个数组，数组每个参数为对应点的大小。</p>
<p><strong>c</strong>：点的颜色，默认蓝色 ‘b’，也可以是个 RGB 或 RGBA 二维行数组。</p>
<p><strong>marker</strong>：点的样式，默认小圆圈 ‘o’。</p>
<p><strong>cmap</strong>：Colormap，默认 None，标量或者是一个 colormap 的名字，只有 c 是一个浮点数数组的时才使用。如果没有申明就是 image.cmap。</p>
<p><strong>norm</strong>：Normalize，默认 None，数据亮度在 0-1 之间，只有 c 是一个浮点数的数组的时才使用。</p>
<p><strong>vmin，vmax：</strong>：亮度设置，在 norm 参数存在时会忽略。</p>
<p><strong>alpha：</strong>：透明度设置，0-1 之间，默认 None，即不透明。</p>
<p><strong>linewidths：</strong>：标记点的长度。</p>
<p><strong>edgecolors：</strong>：颜色或颜色序列，默认为 ‘face’，可选值有 ‘face’, ‘none’, None。</p>
<p><strong>plotnonfinite：</strong>：布尔值，设置是否使用非限定的 c ( inf, -inf 或 nan) 绘制点。</p>
<p>*<strong>*kwargs：</strong>：其他参数。</p>
<p>以下实例 scatter() 函数接收长度相同的数组参数，一个用于 x 轴的值，另一个用于 y 轴上的值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">23</span>, <span class="number">18</span>])</span><br><span class="line"></span><br><span class="line">plt.scatter(x, y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Scatter-1.png" alt="Math-Scatter-1" style="zoom:67%;" /> 
<p>设置图标大小：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">23</span>, <span class="number">18</span>])</span><br><span class="line">sizes = np.array([<span class="number">20</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">500</span>,<span class="number">1000</span>,<span class="number">60</span>,<span class="number">90</span>])</span><br><span class="line">plt.scatter(x, y, s=sizes)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Scatter-2.png" alt="Math-Scatter-2" style="zoom:67%;" /> 
<p>自定义点的颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">23</span>, <span class="number">18</span>])</span><br><span class="line">colors = np.array([<span class="string">&quot;red&quot;</span>,<span class="string">&quot;green&quot;</span>,<span class="string">&quot;black&quot;</span>,<span class="string">&quot;orange&quot;</span>,<span class="string">&quot;purple&quot;</span>,<span class="string">&quot;beige&quot;</span>,<span class="string">&quot;cyan&quot;</span>,<span class="string">&quot;magenta&quot;</span>])</span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, c=colors)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Scatter-3.png" alt="Math-Scatter-3" style="zoom:67%;" /> 
<p>设置两组散点图：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">6</span>])</span><br><span class="line">y = np.array([<span class="number">99</span>,<span class="number">86</span>,<span class="number">87</span>,<span class="number">88</span>,<span class="number">111</span>,<span class="number">86</span>,<span class="number">103</span>,<span class="number">87</span>,<span class="number">94</span>,<span class="number">78</span>,<span class="number">77</span>,<span class="number">85</span>,<span class="number">86</span>])</span><br><span class="line">plt.scatter(x, y, color = <span class="string">&#x27;hotpink&#x27;</span>)</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">2</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">8</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">12</span>])</span><br><span class="line">y = np.array([<span class="number">100</span>,<span class="number">105</span>,<span class="number">84</span>,<span class="number">105</span>,<span class="number">90</span>,<span class="number">99</span>,<span class="number">90</span>,<span class="number">95</span>,<span class="number">94</span>,<span class="number">100</span>,<span class="number">79</span>,<span class="number">112</span>,<span class="number">91</span>,<span class="number">80</span>,<span class="number">85</span>])</span><br><span class="line">plt.scatter(x, y, color = <span class="string">&#x27;#88c999&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Scatter-4.png" alt="Math-Scatter-4" style="zoom:67%;" /> 
<p>使用随机数来设置散点图：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机数生成器的种子</span></span><br><span class="line">np.random.seed(<span class="number">19680801</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">N = <span class="number">50</span></span><br><span class="line">x = np.random.rand(N)</span><br><span class="line">y = np.random.rand(N)</span><br><span class="line">colors = np.random.rand(N)</span><br><span class="line">area = (<span class="number">30</span> * np.random.rand(N))**<span class="number">2</span>  <span class="comment"># 0 to 15 point radii</span></span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, s=area, c=colors, alpha=<span class="number">0.5</span>) <span class="comment"># 设置颜色及透明度</span></span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;RUNOOB Scatter Test&quot;</span>) <span class="comment"># 设置标题</span></span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Scatter-5.png" alt="Math-Scatter-5" style="zoom:67%;" /> 
<h2 id="3-0-颜色条-Colormap">*3.0 颜色条 Colormap</h2>
<p>Matplotlib 模块提供了很多可用的颜色条。</p>
<p>颜色条就像一个颜色列表，其中每种颜色都有一个范围从 0 到 100 的值。</p>
<p>下面是一个颜色条的例子：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Colormap.png" alt="Colormap" style="zoom:67%;" /> 
<p>设置颜色条需要使用 cmap 参数，默认值为 ‘viridis’，之后颜色值设置为 0 到 100 的数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">6</span>])</span><br><span class="line">y = np.array([<span class="number">99</span>,<span class="number">86</span>,<span class="number">87</span>,<span class="number">88</span>,<span class="number">111</span>,<span class="number">86</span>,<span class="number">103</span>,<span class="number">87</span>,<span class="number">94</span>,<span class="number">78</span>,<span class="number">77</span>,<span class="number">85</span>,<span class="number">86</span>])</span><br><span class="line">colors = np.array([<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>])</span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, c=colors, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Scatter-6.png" alt="Math-Scatter-6" style="zoom:67%;" /> 
<p>如果要显示颜色条，需要使用 <strong>plt.colorbar()</strong> 方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">6</span>])</span><br><span class="line">y = np.array([<span class="number">99</span>,<span class="number">86</span>,<span class="number">87</span>,<span class="number">88</span>,<span class="number">111</span>,<span class="number">86</span>,<span class="number">103</span>,<span class="number">87</span>,<span class="number">94</span>,<span class="number">78</span>,<span class="number">77</span>,<span class="number">85</span>,<span class="number">86</span>])</span><br><span class="line">colors = np.array([<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>])</span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, c=colors, cmap=<span class="string">&#x27;viridis&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.colorbar()</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Scatter-7.png" alt="Math-Scatter-7" style="zoom:67%;" /> 
<p>换个颜色条参数， cmap 设置为 <strong>afmhot_r</strong>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">6</span>])</span><br><span class="line">y = np.array([<span class="number">99</span>,<span class="number">86</span>,<span class="number">87</span>,<span class="number">88</span>,<span class="number">111</span>,<span class="number">86</span>,<span class="number">103</span>,<span class="number">87</span>,<span class="number">94</span>,<span class="number">78</span>,<span class="number">77</span>,<span class="number">85</span>,<span class="number">86</span>])</span><br><span class="line">colors = np.array([<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">55</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>, <span class="number">100</span>])</span><br><span class="line"></span><br><span class="line">plt.scatter(x, y, c=colors, cmap=<span class="string">&#x27;afmhot_r&#x27;</span>)</span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Scatter-8.png" alt="Math-Scatter-8" style="zoom:67%;" /> 
<p>颜色条参数值可以是以下值：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/CMP-1.png" alt="CMP-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/CMP-2.png" alt="CMP-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/CMP-3.png" alt="CMP-3" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/CMP-4.png" alt="CMP-4" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/CMP-5.png" alt="CMP-5" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/CMP-6.png" alt="CMP-6" style="zoom:67%;" /> 
<h2 id="3-2-柱形图">3.2 柱形图</h2>
<p>我们可以使用 pyplot 中的 bar() 方法来绘制柱形图。</p>
<p>bar() 方法语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.bar(x, height, width=<span class="number">0.8</span>, bottom=<span class="literal">None</span>, *, align=<span class="string">&#x27;center&#x27;</span>, data=<span class="literal">None</span>, **kwargs)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<p><strong>x</strong>：浮点型数组，柱形图的 x 轴数据。</p>
<p><strong>height</strong>：浮点型数组，柱形图的高度。</p>
<p><strong>width</strong>：浮点型数组，柱形图的宽度。</p>
<p><strong>bottom</strong>：浮点型数组，底座的 y 坐标，默认 0。</p>
<p><strong>align</strong>：柱形图与 x 坐标的对齐方式，‘center’ 以 x 位置为中心，这是默认值。 ‘edge’：将柱形图的左边缘与 x 位置对齐。要对齐右边缘的条形，可以传递负数的宽度值及 align=‘edge’。</p>
<p>*<strong>*kwargs：</strong>：其他参数。</p>
<p>以下实例我们简单实用 bar() 来创建一个柱形图:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="string">&quot;Runoob-1&quot;</span>, <span class="string">&quot;Runoob-2&quot;</span>, <span class="string">&quot;Runoob-3&quot;</span>, <span class="string">&quot;C-RUNOOB&quot;</span>])</span><br><span class="line">y = np.array([<span class="number">12</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">18</span>])</span><br><span class="line"></span><br><span class="line">plt.bar(x,y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Bar-1.png" alt="Math-Bar-1" style="zoom:67%;" /> 
<p>垂直方向的柱形图可以使用 <strong>barh()</strong> 方法来设置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="string">&quot;Runoob-1&quot;</span>, <span class="string">&quot;Runoob-2&quot;</span>, <span class="string">&quot;Runoob-3&quot;</span>, <span class="string">&quot;C-RUNOOB&quot;</span>])</span><br><span class="line">y = np.array([<span class="number">12</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">18</span>])</span><br><span class="line"></span><br><span class="line">plt.barh(x,y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Bar-2.png" alt="Math-Bar-2" style="zoom:67%;" /> 
<p>设置柱形图颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="string">&quot;Runoob-1&quot;</span>, <span class="string">&quot;Runoob-2&quot;</span>, <span class="string">&quot;Runoob-3&quot;</span>, <span class="string">&quot;C-RUNOOB&quot;</span>])</span><br><span class="line">y = np.array([<span class="number">12</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">18</span>])</span><br><span class="line"></span><br><span class="line">plt.bar(x, y, color = <span class="string">&quot;#4CAF50&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Bar-3.png" alt="Math-Bar-3" style="zoom:67%;" /> 
<p>自定义各个柱形的颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="string">&quot;Runoob-1&quot;</span>, <span class="string">&quot;Runoob-2&quot;</span>, <span class="string">&quot;Runoob-3&quot;</span>, <span class="string">&quot;C-RUNOOB&quot;</span>])</span><br><span class="line">y = np.array([<span class="number">12</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">18</span>])</span><br><span class="line"></span><br><span class="line">plt.bar(x, y,  color = [<span class="string">&quot;#4CAF50&quot;</span>,<span class="string">&quot;red&quot;</span>,<span class="string">&quot;hotpink&quot;</span>,<span class="string">&quot;#556B2F&quot;</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Bar-4.png" alt="Math-Bar-4" style="zoom:67%;" /> 
<p>设置柱形图宽度，<strong>bar()</strong> 方法使用 <strong>width</strong> 设置，<strong>barh()</strong> 方法使用 <strong>height</strong> 设置 height</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="string">&quot;Runoob-1&quot;</span>, <span class="string">&quot;Runoob-2&quot;</span>, <span class="string">&quot;Runoob-3&quot;</span>, <span class="string">&quot;C-RUNOOB&quot;</span>])</span><br><span class="line">y = np.array([<span class="number">12</span>, <span class="number">22</span>, <span class="number">6</span>, <span class="number">18</span>])</span><br><span class="line"></span><br><span class="line">plt.bar(x, y, width = <span class="number">0.1</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line">x = np.array([&quot;Runoob-1&quot;, &quot;Runoob-2&quot;, &quot;Runoob-3&quot;, &quot;C-RUNOOB&quot;])</span><br><span class="line">y = np.array([12, 22, 6, 18])</span><br><span class="line"></span><br><span class="line">plt.barh(x, y, height = 0.1)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Bar-5.png" alt="Math-Bar-5" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Bar-6.png" alt="Math-Bar-6" style="zoom:67%;" /> 
<h2 id="3-3-饼图">3.3 饼图</h2>
<p>饼图（Pie Chart）是一种常用的数据可视化图形，用来展示各类别在总体中所占的比例。</p>
<p>我们可以使用 pyplot 中的 <strong>pie()</strong> 方法来绘制饼图。</p>
<p>pie() 方法语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.pie(x, explode=<span class="literal">None</span>, labels=<span class="literal">None</span>, colors=<span class="literal">None</span>, autopct=<span class="literal">None</span>, pctdistance=<span class="number">0.6</span>, shadow=<span class="literal">False</span>, labeldistance=<span class="number">1.1</span>, startangle=<span class="number">0</span>, radius=<span class="number">1</span>, counterclock=<span class="literal">True</span>, wedgeprops=<span class="literal">None</span>, textprops=<span class="literal">None</span>, center=<span class="number">0</span>, <span class="number">0</span>, frame=<span class="literal">False</span>, rotatelabels=<span class="literal">False</span>, *, normalize=<span class="literal">None</span>, data=<span class="literal">None</span>)[source]</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><strong>x</strong>：浮点型数组或列表，用于绘制饼图的数据，表示每个扇形的面积。</li>
<li><strong>explode</strong>：数组，表示各个扇形之间的间隔，默认值为0。</li>
<li><strong>labels</strong>：列表，各个扇形的标签，默认值为 None。</li>
<li><strong>colors</strong>：数组，表示各个扇形的颜色，默认值为 None。</li>
<li><strong>autopct</strong>：设置饼图内各个扇形百分比显示格式，<strong>%d%%</strong> 整数百分比，<strong>%0.1f</strong> 一位小数， <strong>%0.1f%%</strong> 一位小数百分比， <strong>%0.2f%%</strong> 两位小数百分比。</li>
<li><strong>labeldistance</strong>：标签标记的绘制位置，相对于半径的比例，默认值为 1.1，如 <strong>&lt;1</strong>则绘制在饼图内侧。</li>
<li><strong>pctdistance：</strong>：类似于 labeldistance，指定 autopct 的位置刻度，默认值为 0.6。</li>
<li><strong>shadow：</strong>：布尔值 True 或 False，设置饼图的阴影，默认为 False，不设置阴影。</li>
<li><strong>radius：</strong>：设置饼图的半径，默认为 1。</li>
<li><strong>startangle：</strong>：用于指定饼图的起始角度，默认为从 x 轴正方向逆时针画起，如设定 =90 则从 y 轴正方向画起。</li>
<li><strong>counterclock</strong>：布尔值，用于指定是否逆时针绘制扇形，默认为 True，即逆时针绘制，False 为顺时针。</li>
<li>wedgeprops：字典类型，默认值 None。用于指定扇形的属性，比如边框线颜色、边框线宽度等。例如：wedgeprops={‘linewidth’:5} 设置 wedge 线宽为5。</li>
<li>textprops：字典类型，用于指定文本标签的属性，比如字体大小、字体颜色等，默认值为 None。</li>
<li>center：浮点类型的列表，用于指定饼图的中心位置，默认值：(0,0)。</li>
<li>frame：布尔类型，用于指定是否绘制饼图的边框，默认值：False。如果是 True，绘制带有表的轴框架。</li>
<li>rotatelabels：布尔类型，用于指定是否旋转文本标签，默认为 False。如果为 True，旋转每个 label 到指定的角度。</li>
<li><strong>data</strong>：用于指定数据。如果设置了 data 参数，则可以直接使用数据框中的列作为 x、labels 等参数的值，无需再次传递。</li>
</ul>
<p>除此之外，pie() 函数还可以返回三个参数：</p>
<ul>
<li><code>wedges</code>：一个包含扇形对象的列表。</li>
<li><code>texts</code>：一个包含文本标签对象的列表。</li>
<li><code>autotexts</code>：一个包含自动生成的文本标签对象的列表。</li>
</ul>
<p>以下实例我们简单实用 pie() 来创建一个饼图:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">y = np.array([<span class="number">35</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">15</span>])</span><br><span class="line"></span><br><span class="line">plt.pie(y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Pie-1.png" alt="Math-Pie-1" style="zoom:67%;" /> 
<p>设置饼图各个扇形的标签与颜色：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">y = np.array([<span class="number">35</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">15</span>])</span><br><span class="line"></span><br><span class="line">plt.pie(y,</span><br><span class="line">        labels=[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>], <span class="comment"># 设置饼图标签</span></span><br><span class="line">        colors=[<span class="string">&quot;#d5695d&quot;</span>, <span class="string">&quot;#5d8ca8&quot;</span>, <span class="string">&quot;#65a479&quot;</span>, <span class="string">&quot;#a564c9&quot;</span>], <span class="comment"># 设置饼图颜色</span></span><br><span class="line">       )</span><br><span class="line">plt.title(<span class="string">&quot;RUNOOB Pie Test&quot;</span>) <span class="comment"># 设置标题</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Pie-2.png" alt="Math-Pie-2" style="zoom:67%;" /> 
<p>突出显示第二个扇形，并格式化输出百分比：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据</span></span><br><span class="line">sizes = [<span class="number">15</span>, <span class="number">30</span>, <span class="number">45</span>, <span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 饼图的标签</span></span><br><span class="line">labels = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 饼图的颜色</span></span><br><span class="line">colors = [<span class="string">&#x27;yellowgreen&#x27;</span>, <span class="string">&#x27;gold&#x27;</span>, <span class="string">&#x27;lightskyblue&#x27;</span>, <span class="string">&#x27;lightcoral&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 突出显示第二个扇形</span></span><br><span class="line">explode = (<span class="number">0</span>, <span class="number">0.1</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制饼图</span></span><br><span class="line">plt.pie(sizes, explode=explode, labels=labels, colors=colors,</span><br><span class="line">        autopct=<span class="string">&#x27;%1.1f%%&#x27;</span>, shadow=<span class="literal">True</span>, startangle=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标题</span></span><br><span class="line">plt.title(<span class="string">&quot;RUNOOB Pie Test&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Pie-3.png" alt="Math-Pie-3" style="zoom:67%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">y = np.array([<span class="number">35</span>, <span class="number">25</span>, <span class="number">25</span>, <span class="number">15</span>])</span><br><span class="line"></span><br><span class="line">plt.pie(y,</span><br><span class="line">        labels=[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>], <span class="comment"># 设置饼图标签</span></span><br><span class="line">        colors=[<span class="string">&quot;#d5695d&quot;</span>, <span class="string">&quot;#5d8ca8&quot;</span>, <span class="string">&quot;#65a479&quot;</span>, <span class="string">&quot;#a564c9&quot;</span>], <span class="comment"># 设置饼图颜色</span></span><br><span class="line">        explode=(<span class="number">0</span>, <span class="number">0.2</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="comment"># 第二部分突出显示，值越大，距离中心越远</span></span><br><span class="line">        autopct=<span class="string">&#x27;%.2f%%&#x27;</span>, <span class="comment"># 格式化输出百分比</span></span><br><span class="line">       )</span><br><span class="line">plt.title(<span class="string">&quot;RUNOOB Pie Test&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Pie-4.png" alt="Math-Pie-4" style="zoom:67%;" /> 
<blockquote>
<p>**注意：**默认情况下，第一个扇形的绘制是从 x 轴开始并逆时针移动：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Pie-5.png" alt="Math-Pie-5" style="zoom:67%;" /> 
</blockquote>
<h2 id="3-4-直方图">3.4 直方图</h2>
<p>我们可以使用 pyplot 中的 hist() 方法来绘制直方图。</p>
<p>hist() 方法是 Matplotlib 库中的 pyplot 子库中的一种用于绘制直方图的函数。</p>
<p>hist() 方法可以用于可视化数据的分布情况，例如观察数据的中心趋势、偏态和异常值等。</p>
<p>hist() 方法语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.hist(x, bins=<span class="literal">None</span>, <span class="built_in">range</span>=<span class="literal">None</span>, density=<span class="literal">False</span>, weights=<span class="literal">None</span>, cumulative=<span class="literal">False</span>, bottom=<span class="literal">None</span>, histtype=<span class="string">&#x27;bar&#x27;</span>, align=<span class="string">&#x27;mid&#x27;</span>, orientation=<span class="string">&#x27;vertical&#x27;</span>, rwidth=<span class="literal">None</span>, log=<span class="literal">False</span>, color=<span class="literal">None</span>, label=<span class="literal">None</span>, stacked=<span class="literal">False</span>, **kwargs)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><code>x</code>：表示要绘制直方图的数据，可以是一个一维数组或列表。</li>
<li><code>bins</code>：可选参数，表示直方图的箱数。默认为10。</li>
<li><code>range</code>：可选参数，表示直方图的值域范围，可以是一个二元组或列表。默认为None，即使用数据中的最小值和最大值。</li>
<li><code>density</code>：可选参数，表示是否将直方图归一化。默认为False，即直方图的高度为每个箱子内的样本数，而不是频率或概率密度。</li>
<li><code>weights</code>：可选参数，表示每个数据点的权重。默认为None。</li>
<li><code>cumulative</code>：可选参数，表示是否绘制累积分布图。默认为False。</li>
<li><code>bottom</code>：可选参数，表示直方图的起始高度。默认为None。</li>
<li><code>histtype</code>：可选参数，表示直方图的类型，可以是’bar’、‘barstacked’、‘step’、‘stepfilled’等。默认为’bar’。</li>
<li><code>align</code>：可选参数，表示直方图箱子的对齐方式，可以是’left’、‘mid’、‘right’。默认为’mid’。</li>
<li><code>alpha</code>：可选参数，表示颜色透明度。</li>
<li><code>orientation</code>：可选参数，表示直方图的方向，可以是’vertical’、‘horizontal’。默认为’vertical’。</li>
<li><code>rwidth</code>：可选参数，表示每个箱子的宽度。默认为None。</li>
<li><code>log</code>：可选参数，表示是否在y轴上使用对数刻度。默认为False。</li>
<li><code>color</code>：可选参数，表示直方图的颜色。</li>
<li><code>label</code>：可选参数，表示直方图的标签。</li>
<li><code>stacked</code>：可选参数，表示是否堆叠不同的直方图。默认为False。</li>
<li><code>**kwargs</code>：可选参数，表示其他绘图参数。</li>
</ul>
<p>以下实例我们简单实用 hist() 来创建一个直方图:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一组随机数据</span></span><br><span class="line">data = np.random.randn(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制直方图</span></span><br><span class="line">plt.hist(data, bins=<span class="number">30</span>, color=<span class="string">&#x27;skyblue&#x27;</span>, alpha=<span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图表属性</span></span><br><span class="line">plt.title(<span class="string">&#x27;RUNOOB hist() Test&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Value&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Frequency&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图表</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Hist-1.png" alt="Math-Hist-1" style="zoom:67%;" /> 
<p>以下实例演示了如何使用 hist() 函数绘制多个数据组的直方图，并进行比较：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成三组随机数据</span></span><br><span class="line">data1 = np.random.normal(<span class="number">0</span>, <span class="number">1</span>, <span class="number">1000</span>)</span><br><span class="line">data2 = np.random.normal(<span class="number">2</span>, <span class="number">1</span>, <span class="number">1000</span>)</span><br><span class="line">data3 = np.random.normal(-<span class="number">2</span>, <span class="number">1</span>, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制直方图</span></span><br><span class="line">plt.hist(data1, bins=<span class="number">30</span>, alpha=<span class="number">0.5</span>, label=<span class="string">&#x27;Data 1&#x27;</span>)</span><br><span class="line">plt.hist(data2, bins=<span class="number">30</span>, alpha=<span class="number">0.5</span>, label=<span class="string">&#x27;Data 2&#x27;</span>)</span><br><span class="line">plt.hist(data3, bins=<span class="number">30</span>, alpha=<span class="number">0.5</span>, label=<span class="string">&#x27;Data 3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图表属性</span></span><br><span class="line">plt.title(<span class="string">&#x27;RUNOOB hist() TEST&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Value&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Frequency&#x27;</span>)</span><br><span class="line">plt.legend()  <span class="comment"># 显示图例</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图表</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Hist-2.png" alt="Math-Hist-2" style="zoom:67%;" /> 
<p>从上图中我们可以清晰地看出这三组数据的分布情况，其中 data1 和 data2 分布接近正态分布，而 data3 分布偏态。</p>
<p>这种比较直方图的方式可以帮助我们分析和比较不同数据组的分布情况。</p>
<h2 id="3-0-结合-Pandas">*3.0 结合 Pandas</h2>
<p>以下实例我们结合 Pandas 来绘制直方图：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用 NumPy 生成随机数</span></span><br><span class="line">random_data = np.random.normal(<span class="number">170</span>, <span class="number">10</span>, <span class="number">250</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将数据转换为 Pandas DataFrame</span></span><br><span class="line">dataframe = pd.DataFrame(random_data)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用 Pandas hist() 方法绘制直方图</span></span><br><span class="line">dataframe.hist()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图表属性</span></span><br><span class="line">plt.title(<span class="string">&#x27;RUNOOB hist() Test&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;X-Value&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Y-Value&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图表</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Hist-3.png" alt="Math-Hist-3" style="zoom:67%;" /> 
<p>除了数据框之外，您还可以使用 Pandas 中的 Series 对象绘制直方图。只需将数据框中的列替换为 Series 对象即可。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成随机数据</span></span><br><span class="line">data = pd.Series(np.random.normal(size=<span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制直方图</span></span><br><span class="line"><span class="comment"># bins 参数指定了直方图中的柱子数量</span></span><br><span class="line">plt.hist(data, bins=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图形标题和坐标轴标签</span></span><br><span class="line">plt.title(<span class="string">&#x27;RUNOOB hist() Tes&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;X-Values&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Y-Values&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Math-Hist-4.png" alt="Math-Hist-4" style="zoom:50%;" /> 
<h1>四、显示图像</h1>
<h2 id="4-1-imshow-方法">4.1 imshow() 方法</h2>
<p>imshow() 函数是 Matplotlib 库中的一个函数，用于显示图像。</p>
<p>imshow() 函数常用于绘制二维的灰度图像或彩色图像。</p>
<p>imshow() 函数可用于绘制矩阵、热力图、地图等。</p>
<p>imshow() 方法语法格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">imshow(X, cmap=<span class="literal">None</span>, norm=<span class="literal">None</span>, aspect=<span class="literal">None</span>, interpolation=<span class="literal">None</span>, alpha=<span class="literal">None</span>, vmin=<span class="literal">None</span>, vmax=<span class="literal">None</span>, origin=<span class="literal">None</span>, extent=<span class="literal">None</span>, shape=<span class="literal">None</span>, filternorm=<span class="number">1</span>, filterrad=<span class="number">4.0</span>, imlim=<span class="literal">None</span>, resample=<span class="literal">None</span>, url=<span class="literal">None</span>, *, data=<span class="literal">None</span>, **kwargs)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><code>X</code>：输入数据。可以是二维数组、三维数组、PIL图像对象、matplotlib路径对象等。</li>
<li><code>cmap</code>：颜色映射。用于控制图像中不同数值所对应的颜色。可以选择内置的颜色映射，如<code>gray</code>、<code>hot</code>、<code>jet</code>等，也可以自定义颜色映射。</li>
<li><code>norm</code>：用于控制数值的归一化方式。可以选择<code>Normalize</code>、<code>LogNorm</code>等归一化方法。</li>
<li><code>aspect</code>：控制图像纵横比（aspect ratio）。可以设置为<code>auto</code>或一个数字。</li>
<li><code>interpolation</code>：插值方法。用于控制图像的平滑程度和细节程度。可以选择<code>nearest</code>、<code>bilinear</code>、<code>bicubic</code>等插值方法。</li>
<li><code>alpha</code>：图像透明度。取值范围为0~1。</li>
<li><code>origin</code>：坐标轴原点的位置。可以设置为<code>upper</code>或<code>lower</code>。</li>
<li><code>extent</code>：控制显示的数据范围。可以设置为<code>[xmin, xmax, ymin, ymax]</code>。</li>
<li><code>vmin</code>、<code>vmax</code>：控制颜色映射的值域范围。</li>
<li><code>filternorm 和 filterrad</code>：用于图像滤波的对象。可以设置为<code>None</code>、<code>antigrain</code>、<code>freetype</code>等。</li>
<li><code>imlim</code>： 用于指定图像显示范围。</li>
<li><code>resample</code>：用于指定图像重采样方式。</li>
<li><code>url</code>：用于指定图像链接。</li>
</ul>
<p>以下是一些 imshow() 函数的使用实例。</p>
<h3 id="显示灰度图像">显示灰度图像</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个二维随机数组</span></span><br><span class="line">img = np.random.rand(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制灰度图像</span></span><br><span class="line">plt.imshow(img, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>以上实例中我们生成了一个 10x10 的随机数组，并使用 imshow() 函数将其显示为一张灰度图像。</p>
<p>我们设置了 cmap 参数为 gray，这意味着将使用灰度颜色映射显示图像。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-1.png" alt="Show-imshow-1" style="zoom:67%;" /> 
<h3 id="显示彩色图像">显示彩色图像</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个随机的彩色图像</span></span><br><span class="line">img = np.random.rand(<span class="number">10</span>, <span class="number">10</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制彩色图像</span></span><br><span class="line">plt.imshow(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>以上实例中我们生成了一个 10x10 的随机彩色图像，并使用 imshow() 函数将其显示出来。</p>
<p>由于彩色图像是三维数组，因此不需要设置 cmap 参数。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-2.png" alt="Show-imshow-2" style="zoom:67%;" /> 
<h3 id="显示热力图">显示热力图</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个二维随机数组</span></span><br><span class="line">data = np.random.rand(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制热力图</span></span><br><span class="line">plt.imshow(data, cmap=<span class="string">&#x27;hot&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.colorbar()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>以上实例中我们生成了一个 10x10 的随机数组，并使用 imshow() 函数将其显示为热力图。</p>
<p>我们设置了 cmap 参数为 hot，这意味着将使用热度颜色映射显示图像。</p>
<p>此外，我们还添加了一个颜色条（colorbar），以便查看数据的值与颜色之间的关系。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-3.png" alt="Show-imshow-3" style="zoom: 67%;" /> 
<h3 id="显示地图">显示地图</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载地图图像, 下载地址：https://static.jyshare.com/images/demo/map.jpeg</span></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;map.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换为数组</span></span><br><span class="line">data = np.array(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制地图</span></span><br><span class="line">plt.imshow(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 隐藏坐标轴</span></span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>以上实例中我们加载了一张地图图像，并将其转换为数组。</p>
<p>然后，我们使用 imshow() 函数将其显示出来，并使用 <strong>axis(‘off’)</strong> 函数隐藏了坐标轴，以便更好地查看地图。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-4.png" alt="Show-imshow-4" style="zoom:67%;" /> 
<h3 id="显示矩阵">显示矩阵</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个随机矩阵</span></span><br><span class="line">data = np.random.rand(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制矩阵</span></span><br><span class="line">plt.imshow(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>以上实例中我们生成了一个随机矩阵，并使用 imshow() 函数将其显示为一张图像。</p>
<p>由于矩阵也是二维数组，因此可以使用 imshow() 函数将其显示出来。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-5.png" alt="Show-imshow-5" style="zoom:67%;" /> 
<h3 id="实例">实例</h3>
<p>以下创建了一个 4x4 的二维 numpy 数组，并对其进行了三种不同的 imshow 图像展示。</p>
<ul>
<li>第一张展示了灰度的色彩映射方式，并且没有进行颜色的混合（blending）。</li>
<li>第二张展示了使用viridis颜色映射的图像，同样没有进行颜色的混合。</li>
<li>第三张展示了使用viridis颜色映射的图像，并且使用了双立方插值方法进行颜色混合。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">n = <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 n x n 的二维numpy数组</span></span><br><span class="line">a = np.reshape(np.linspace(<span class="number">0</span>,<span class="number">1</span>,n**<span class="number">2</span>), (n,n))</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">4.5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一张图展示灰度的色彩映射方式，并且没有进行颜色的混合</span></span><br><span class="line">plt.subplot(<span class="number">131</span>)</span><br><span class="line">plt.imshow(a, cmap=<span class="string">&#x27;gray&#x27;</span>, interpolation=<span class="string">&#x27;nearest&#x27;</span>)</span><br><span class="line">plt.xticks(<span class="built_in">range</span>(n))</span><br><span class="line">plt.yticks(<span class="built_in">range</span>(n))</span><br><span class="line"><span class="comment"># 灰度映射，无混合</span></span><br><span class="line">plt.title(<span class="string">&#x27;Gray color map, no blending&#x27;</span>, y=<span class="number">1.02</span>, fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二张图展示使用viridis颜色映射的图像，同样没有进行颜色的混合</span></span><br><span class="line">plt.subplot(<span class="number">132</span>)</span><br><span class="line">plt.imshow(a, cmap=<span class="string">&#x27;viridis&#x27;</span>, interpolation=<span class="string">&#x27;nearest&#x27;</span>)</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.xticks(<span class="built_in">range</span>(n))</span><br><span class="line"><span class="comment"># Viridis映射，无混合</span></span><br><span class="line">plt.title(<span class="string">&#x27;Viridis color map, no blending&#x27;</span>, y=<span class="number">1.02</span>, fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三张图展示使用viridis颜色映射的图像，并且使用了双立方插值方法进行颜色混合</span></span><br><span class="line">plt.subplot(<span class="number">133</span>)</span><br><span class="line">plt.imshow(a, cmap=<span class="string">&#x27;viridis&#x27;</span>, interpolation=<span class="string">&#x27;bicubic&#x27;</span>)</span><br><span class="line">plt.yticks([])</span><br><span class="line">plt.xticks(<span class="built_in">range</span>(n))</span><br><span class="line"><span class="comment"># Viridis 映射，双立方混合</span></span><br><span class="line">plt.title(<span class="string">&#x27;Viridis color map, bicubic blending&#x27;</span>, y=<span class="number">1.02</span>, fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-6.png" alt="Show-imshow-6" style="zoom:80%;" /> 
<h2 id="4-2-imsave-方法">4.2 imsave() 方法</h2>
<p>imsave() 方法是 Matplotlib 库中用于将图像数据保存到磁盘上的函数。</p>
<p>通过 imsave() 方法我们可以轻松将生成的图像保存到我们指定的目录中。</p>
<p>imsave() 方法保存图片支持多种图像格式，例如 PNG、JPEG、BMP 等。</p>
<p>imsave() 方法的语法如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.imsave(fname, arr, **kwargs)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><code>fname</code>：保存图像的文件名，可以是相对路径或绝对路径。</li>
<li><code>arr</code>：表示图像的NumPy数组。</li>
<li><code>kwargs</code>：可选参数，用于指定保存的图像格式以及图像质量等参数。</li>
</ul>
<p>以下是一个使用 imsave() 方法保存图像的简单实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个二维的图像数据</span></span><br><span class="line">img_data = np.random.random((<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.imshow(img_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存图像到磁盘上</span></span><br><span class="line">plt.imsave(<span class="string">&#x27;runoob-test.png&#x27;</span>, img_data)</span><br></pre></td></tr></table></figure>
<p>以上实例我们使用 imsave() 方法将这个图像保存到了当前目录下，文件名为 <strong>runoob-test.png</strong>。</p>
<p>由于没有指定图像格式，Matplotlib 库默认将其保存为 PNG 格式的文件。</p>
<p>打开当前目录，会发现一个 <strong>runoob-test.png</strong> 文件。</p>
<ul>
<li>以下实例演示了如何使用 imsave() 方法将一个灰度图像和一幅彩色图像保存到当前目录上：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一幅灰度图像</span></span><br><span class="line">img_gray = np.random.random((<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一幅彩色图像</span></span><br><span class="line">img_color = np.zeros((<span class="number">100</span>, <span class="number">100</span>, <span class="number">3</span>))</span><br><span class="line">img_color[:, :, <span class="number">0</span>] = np.random.random((<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line">img_color[:, :, <span class="number">1</span>] = np.random.random((<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line">img_color[:, :, <span class="number">2</span>] = np.random.random((<span class="number">100</span>, <span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示灰度图像</span></span><br><span class="line">plt.imshow(img_gray, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存灰度图像到磁盘上</span></span><br><span class="line">plt.imsave(<span class="string">&#x27;test_gray.png&#x27;</span>, img_gray, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示彩色图像</span></span><br><span class="line">plt.imshow(img_color)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存彩色图像到磁盘上</span></span><br><span class="line">plt.imsave(<span class="string">&#x27;test_color.jpg&#x27;</span>, img_color)</span><br></pre></td></tr></table></figure>
<p>以上实例中我们使用了 <strong>numpy.random</strong> 模块分别创建了一幅灰度图像和一幅彩色图像，然后分别使用 imshow() 方法显示这两幅图像。</p>
<p>接着，我们使用 imsave() 函数将这两幅图像分别保存到了当前目录傻姑娘，文件名分别为 <strong>test_gray.png</strong> 和 <strong>test_color.jpg</strong>。</p>
<p>在保存灰度图像时，我们使用了 cmap 参数将其保存为灰度图像格式。</p>
<p>在保存彩色图像时，我们没有指定图像格式，Matplotlib 库默认将其保存为 JPEG 格式的文件。</p>
<h2 id="4-3-imread-方法">4.3 imread() 方法</h2>
<p>imread() 方法是 Matplotlib 库中的一个函数，用于从图像文件中读取图像数据。</p>
<p>imread() 方法返回一个 numpy.ndarray 对象，其形状是 <strong>(nrows, ncols, nchannels)</strong>，表示读取的图像的行数、列数和通道数：</p>
<ul>
<li>如果图像是灰度图像，则 nchannels 为 1。</li>
<li>如果是彩色图像，则 nchannels 为 3 或 4，分别表示红、绿、蓝三个颜色通道和一个 alpha 通道。</li>
</ul>
<p>imread() 方法的语法如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">matplotlib.pyplot.imread(fname, <span class="built_in">format</span>=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><code>fname</code>：指定了要读取的图像文件的文件名或文件路径，可以是相对路径或绝对路径。</li>
<li><code>format </code>：参数指定了图像文件的格式，如果不指定，则默认根据文件后缀名来自动识别格式。</li>
</ul>
<p>以下实例演示了如何使用 imread 函数从一张图像文件中读取图像数据，并将其显示出来：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像文件，下载地址：https://static.jyshare.com/images/demo/map.jpeg</span></span><br><span class="line">img = plt.imread(<span class="string">&#x27;map.jpeg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.imshow(img)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>以上实例中我们首先使用 imread() 方法从名为 map.jpeg 的图像文件中读取了图像数据，并将其存储在 img 变量中。</p>
<p>然后我们使用imshow() 方法显示了这张图像。</p>
<p>注意：我们在显示图像时没有指定颜色映射，这是因为 imread() 方法已经将图像数据按照正确的颜色映射转换成了 RGB 格式，因此我们可以直接使用默认的颜色映射来显示图像。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-7.png" alt="Show-imshow-7" style="zoom:67%;" /> 
<h2 id="4-4-修改图片">4.4 修改图片</h2>
<h3 id="变暗">变暗</h3>
<p>我们可以通过更改 numpy 数组来修改图像。</p>
<p>例如，如果我们将数组乘以一个数 <strong>0≤≤1</strong>，我们将图像变暗：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像文件，下载地址：https://static.jyshare.com/images/mix/tiger.jpeg</span></span><br><span class="line">img_array = plt.imread(<span class="string">&#x27;tiger.jpeg&#x27;</span>)</span><br><span class="line">tiger = img_array/<span class="number">255</span></span><br><span class="line"><span class="comment">#print(tiger)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    plt.subplot(<span class="number">2</span>,<span class="number">2</span>,i)</span><br><span class="line">    x = <span class="number">1</span> - <span class="number">0.2</span>*(i-<span class="number">1</span>)</span><br><span class="line">    plt.axis(<span class="string">&#x27;off&#x27;</span>) <span class="comment">#hide coordinate axes</span></span><br><span class="line">    plt.title(<span class="string">&#x27;x=&#123;:.1f&#125;&#x27;</span>.<span class="built_in">format</span>(x))</span><br><span class="line">    plt.imshow(tiger*x)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-8.png" alt="Show-imshow-8" style="zoom:67%;" /> 
<h3 id="裁剪">裁剪</h3>
<p>以下实例用于裁剪图像：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像文件，下载地址：https://static.jyshare.com/images/mix/tiger.jpeg</span></span><br><span class="line">img_array = plt.imread(<span class="string">&#x27;tiger.jpeg&#x27;</span>)</span><br><span class="line">tiger = img_array/<span class="number">255</span></span><br><span class="line"><span class="comment">#print(tiger)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">plt.figure(figsize=(<span class="number">6</span>,<span class="number">6</span>))</span><br><span class="line">plt.imshow(tiger[:<span class="number">300</span>,<span class="number">100</span>:<span class="number">400</span>,:])</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-9.png" alt="Show-imshow-9" style="zoom:67%;" /> 
<h3 id="色变">色变</h3>
<p>如果我们将 RGB 颜色的绿色和蓝色坐标的数组元素设置为 0，我们将得到红色的图像：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取图像文件，下载地址：https://static.jyshare.com/images/mix/tiger.jpeg</span></span><br><span class="line">img_array = plt.imread(<span class="string">&#x27;tiger.jpeg&#x27;</span>)</span><br><span class="line">tiger = img_array/<span class="number">255</span></span><br><span class="line"><span class="comment">#print(tiger)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图像</span></span><br><span class="line">red_tiger = tiger.copy()</span><br><span class="line"></span><br><span class="line">red_tiger[:, :,[<span class="number">1</span>,<span class="number">2</span>]] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">plt.imshow(red_tiger)</span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Matplotlib/Show-imshow-10.png" alt="Show-imshow-10" style="zoom:67%;" /> 
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>《PyTorch入门教程》</title>
    <url>/butterflyblog/2024/02/01/%E3%80%8APyTorch%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%E3%80%8B/</url>
    <content><![CDATA[<h1>《PyTorch入门教程》</h1>
<blockquote>
<p>来源 : <a href="https://www.bilibili.com/video/BV1hE411t7RN/">PyTorch深度学习快速入门教程（绝对通俗易懂！）【小土堆】</a></p>
<p>代码参考：<a href="https://github.com/xiaotudui/PyTorch-Tutorial">Github | PyTorch-Tutorial 代码</a></p>
<p>2024-01-30@isSeymour</p>
</blockquote>
<h1>一、安装初步</h1>
<blockquote>
<p>关于环境问题，下面这个文章讲的挺好的：</p>
<p><a href="https://zhuanlan.zhihu.com/p/354203833">001-深度学习Pytorch环境搭建(Anaconda , PyCharm导入)</a></p>
</blockquote>
<h2 id="1-1-安装与环境">1.1 安装与环境</h2>
<h3 id="Anaconda">Anaconda</h3>
<ul>
<li>
<p>安装<a href="https://www.anaconda.com/download/">Anaconda官网</a></p>
</li>
<li>
<p>镜像源</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看镜像源</span><br><span class="line">conda config --show</span><br><span class="line">添加镜像源</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">设置搜索时显示通道地址</span><br><span class="line">conda config --set show_channel_urls yes</span><br><span class="line"></span><br><span class="line">若要删除镜像源</span><br><span class="line">conda config --remove channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br></pre></td></tr></table></figure>
<h3 id="CUDA-显卡驱动">CUDA 显卡驱动</h3>
<ul>
<li>
<p>CUDA下载地址：<a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA Toolkit Archive | NVIDIA Developer</a></p>
</li>
<li>
<p>安装教程：<a href="https://blog.csdn.net/m0_37605642/article/details/98854753">https://blog.csdn.net/m0_37605642/article/details/98854753</a></p>
</li>
</ul>
<blockquote>
<p>安装完成，cmd下检测：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/image-20240130152954122.png" alt="image-20240130152954122" style="zoom:80%;" /> 
</blockquote>
<h3 id="版本查询">版本查询</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查看python版本（不必，现在的PyTorch不区分python版本了）</span><br><span class="line">python --version</span><br><span class="line"></span><br><span class="line">查看Anaconda版本</span><br><span class="line">conda --version</span><br><span class="line"></span><br><span class="line">查看GPU显卡配置（查看当前GPU支持的最大情况）</span><br><span class="line">nvidia-smi</span><br><span class="line"></span><br><span class="line">查看安装了的CUDA版本</span><br><span class="line">nvcc --version</span><br><span class="line"></span><br><span class="line">查看算力</span><br><span class="line">E:\Program Files\CUDA12.1\extras\demo_suite&gt;deviceQuery.exe</span><br></pre></td></tr></table></figure>
<h2 id="1-2-创建工作环境">1.2 创建工作环境</h2>
<h3 id="CMD下创建Python-环境">CMD下创建Python 环境</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建环境</span><br><span class="line">conda create -n PyTorchEnv python=3.11</span><br><span class="line"></span><br><span class="line">激活环境</span><br><span class="line">conda activate PyTorchEnv</span><br><span class="line"></span><br><span class="line">退出环境</span><br><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>
<h2 id="1-3-下载PyTorch">1.3 下载PyTorch</h2>
<ul>
<li>
<p>到官网<a href="https://pytorch.org/">PyTorch 官网</a>寻找对应版本，执行安装</p>
<p>在对应的工作环境（我的是<code>PyTorchEnv</code>）中执行安装包操作</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure>
<ul>
<li>安装完成，会出现一个<code>done</code>字符</li>
</ul>
<blockquote>
<p>若下载太慢：</p>
<ol>
<li>
<p>更改镜像源</p>
</li>
<li>
<p>下载到本地，然后放入<code>Anaconda3\pkgs\</code>文件夹下，</p>
<p>然后cmd下使用<code>conda install --user-local 包名</code>，即可安装完成（本地安装）</p>
</li>
</ol>
<p>若使用pip安装，也可以切换镜像源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="1-4-测试">1.4 测试</h2>
<ul>
<li>进入交互模式，查看是否可用GPU</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> torch</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>torch.cuda.is_available()</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p>返回True，说明成功！</p>
<p>可以开始你的 PyTorch 之旅了！</p>
<blockquote>
<p>如果没有Nvidia显卡，<code>torch.cuda.is_available()</code>就是False，是正确的。 即便没有显卡，也是可以往后面学习的。</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/image-20240130204030988.png" alt="image-20240130204030988" style="zoom:67%;" /> 
<h1>二、编辑器选择</h1>
<ul>
<li>
<p>PyCharm</p>
<p><a href="https://www.jetbrains.com/pycharm/download/">PyCharm官网</a></p>
</li>
<li>
<p>Jupyter</p>
<p><a href="https://jupyter.org/">Jupyter 官网</a></p>
<p>若安装了Anaconda则会有Jupyter</p>
</li>
</ul>
<h2 id="2-1-PyCharm">2.1 PyCharm</h2>
<ul>
<li>创建新的Project时</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/PyCharm%E4%BD%BF%E7%94%A8.png" alt="PyCharm使用" style="zoom: 50%;" /> 
<ul>
<li>测试</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/%E6%B5%8B%E8%AF%95PyCharm%E4%BD%BF%E7%94%A8.png" alt="测试PyCharm使用" style="zoom:67%;" /> 
<h2 id="2-2-Jupyter">2.2 Jupyter</h2>
<ul>
<li>
<p>打开Anaconda 的prompt 命令行，切换到 工作环境（PyTorchEnv），</p>
<p>然后安装 jupyter的工作包</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">激活工作环境</span><br><span class="line">conda activate PyTorchEnv</span><br><span class="line"></span><br><span class="line">可以检查是不是有jupyter的工作包（找是否有 ipykernel 包）</span><br><span class="line">conda list</span><br><span class="line"></span><br><span class="line">没有说明需要安装(下面两个哪个可以则使用哪个，选一个即可)</span><br><span class="line">conda install nb_conda</span><br><span class="line">conda install nb_conda_kernels</span><br></pre></td></tr></table></figure>
<ul>
<li>运行打开</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/jupyter%E4%BD%BF%E7%94%A8.png" alt="jupyter使用" style="zoom:67%;" /> 
<h2 id="2-3-对比">2.3 对比</h2>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/image-20240131002953999.png" alt="image-20240131002953999" style="zoom:67%;" /> 
<h2 id="2-4-关于包的帮助">2.4 关于包的帮助</h2>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/image-20240131000800321.png" alt="image-20240131000800321" style="zoom:67%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span>(torch)</span><br><span class="line"><span class="built_in">dir</span>(torch.cuda)</span><br><span class="line"><span class="built_in">dir</span>(torch.cuda.is_available)</span><br><span class="line"></span><br><span class="line"><span class="built_in">help</span>(torch.cuda.is_available)</span><br></pre></td></tr></table></figure>
<h1>三、基本使用</h1>
<ul>
<li>基本认知：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Dataset%E4%B8%8EDataloder.png" alt="Dataset与Dataloder" style="zoom:67%;" /> 
<h2 id="3-1-自定义数据集-Dataset">3.1 自定义数据集 Dataset</h2>
<blockquote>
<p>数据集：<a href="https://download.pytorch.org/tutorial/hymenoptera_data.zip">Data | ants &amp; bees</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> Dataset</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyData</span>(<span class="title class_ inherited__">Dataset</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, root_dir, label_dir</span>):</span><br><span class="line">        self.root_dir = root_dir</span><br><span class="line">        self.label_dir = label_dir</span><br><span class="line">        self.path = os.path.join(self.root_dir, self.label_dir)</span><br><span class="line">        self.img_path = os.listdir(self.path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__getitem__</span>(<span class="params">self, idx</span>):</span><br><span class="line">        img_name = self.img_path[idx]</span><br><span class="line">        img_item_path = os.path.join(self.root_dir, self.label_dir, img_name)</span><br><span class="line">        img = Image.<span class="built_in">open</span>(img_item_path)</span><br><span class="line">        label = self.label_dir</span><br><span class="line">        <span class="keyword">return</span> img, label</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(self.img_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line">root_dir = <span class="string">&quot;train&quot;</span></span><br><span class="line">ants_label_dir = <span class="string">&quot;ants&quot;</span></span><br><span class="line">bees_label_dir = <span class="string">&quot;bees&quot;</span></span><br><span class="line">ants_data = MyData(root_dir, ants_label_dir)</span><br><span class="line">bees_data = MyData(root_dir, bees_label_dir)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 长度</span></span><br><span class="line">len1 = <span class="built_in">len</span>(ants_data)</span><br><span class="line">len2 = <span class="built_in">len</span>(bees_data)</span><br><span class="line"><span class="built_in">print</span>(len1, len2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示图片</span></span><br><span class="line">img0, label0 = ants_data[<span class="number">0</span>]</span><br><span class="line">img0.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据集结合</span></span><br><span class="line">train_data = ants_data + bees_data</span><br><span class="line">len3 = <span class="built_in">len</span>(train_data)</span><br><span class="line"><span class="built_in">print</span>(len3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据位置（ len1-1是ants， len1是bees）</span></span><br><span class="line">img1, label1 = train_data[len1-<span class="number">1</span>]</span><br><span class="line">img1.show()</span><br><span class="line"></span><br><span class="line">img2, label2 = train_data[len1]</span><br><span class="line">img2.show()</span><br></pre></td></tr></table></figure>
<h2 id="3-2-数据看板-TensorBoard">3.2 数据看板 TensorBoard</h2>
<h3 id="add-scalar">add_scalar()</h3>
<blockquote>
<ul>
<li>
<p>安装TensorBoard</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install tensorboard</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;y=2x&quot;</span>, <span class="number">2</span>*i, i)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<ul>
<li>运行上述代码后，会在当前目录下生成<code>log</code>目录下的数据文件：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/TensorBoard%E7%94%9F%E6%88%90%E6%95%B0%E6%8D%AE.png" alt="TensorBoard生成数据" style="zoom:67%;" /> 
<ul>
<li>然后在当前环境（PyTorchEnv）的终端下，执行下面的命令，把数据进行展示：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs --port=6007</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/TensorBoard.png" alt="TensorBoard" style="zoom: 43%;" /> 
<blockquote>
<ul>
<li>
<p>数据文件是并不会删除的，而是每次都是<code>添加</code>状态。</p>
<p>不同的<code>tag</code>标识，会生成<code>logs</code>下的不同数据文件；</p>
<p>对于相同的<code>tag</code>标识的数据，会不断在对应的数据文件向后追加。</p>
</li>
<li>
<p>每次运行代码，会进行一次新的追加，而展示时会自动进行拟合，</p>
<p>因此数据展示会有问题。</p>
</li>
<li>
<p>解决方法：</p>
<p>手动删除对应的数据文件（若发现无法删除，需要先关闭tensorboard）</p>
<p><code>Crtl + C 关闭</code></p>
</li>
</ul>
</blockquote>
<h3 id="add-image">add_image()</h3>
<blockquote>
<ul>
<li>
<p>练手数据集：</p>
<p><a href="https://pan.baidu.com/s/1CvTIjuXT4tMonG0WltF-vQ?pwd=jnnp">课程资源 | 提取码：jnnp</a></p>
</li>
</ul>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs2&quot;</span>)</span><br><span class="line">img_path = <span class="string">&quot;hymenoptera_data/val/ants/8124241_36b290d372.jpg&quot;</span></span><br><span class="line">img_PIL = Image.<span class="built_in">open</span>(img_path)</span><br><span class="line">img_array = np.array(img_PIL)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(img_array))</span><br><span class="line"><span class="built_in">print</span>(img_array.shape)</span><br><span class="line"></span><br><span class="line">writer.add_image(<span class="string">&quot;train&quot;</span>, img_array, <span class="number">1</span>, dataformats=<span class="string">&quot;HWC&quot;</span>)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;class &#x27;numpy.ndarray&#x27;&gt;</span><br><span class="line">(500, 375, 3)</span><br></pre></td></tr></table></figure>
<ul>
<li>然后在当前环境（PyTorchEnv）的终端下，执行下面的命令，把数据进行展示：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs2 --port=6007</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/image-20240131210317853.png" alt="image-20240131210317853" style="zoom: 43%;" /> 
<blockquote>
<p>注：</p>
<ul>
<li>
<p>PIL的Image类型是不可以作为输入数据的，类型不符合。需要转换为 <code>numpy.ndarray</code> 类型。</p>
<p>输入的<code>img_tensor</code>只能是 <code>torch.Tensor, numpy.ndarray, or string/blobname</code>。</p>
</li>
<li>
<p>注意查看数据的shape，要和对应参数匹配。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(高度，宽度，3通道)   HWC</span><br><span class="line">(3通道，高度，宽度)   CHW</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h2 id="3-3-图片转换-Transforms">3.3 图片转换 Transforms</h2>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/image-20240201133932086.png" alt="image-20240201133932086" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/%E5%B8%B8%E8%A7%81transform.png" alt="常见transform" style="zoom:67%;" /> 
<blockquote>
<p>按住Alt，可点击进入对应的package查看源代码。</p>
<p>PyCharm左侧的Structure可以查看类、函数、属性结构，并定位。</p>
</blockquote>
<h3 id="ToTensor">ToTensor()</h3>
<ul>
<li>
<pre><code>Convert a PIL Image or ndarray to tensor and scale the values accordingly.
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  转换PIL 或ndarray 为 tensor 数据类型，用于后续处理（如SummaryWriter的添加）</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">from PIL import Image</span><br><span class="line">from torch.utils.tensorboard import SummaryWriter</span><br><span class="line">from torchvision import transforms</span><br><span class="line"></span><br><span class="line">img_path = &quot;hymenoptera_data/train/ants_image/0013035.jpg&quot;</span><br><span class="line">img = Image.open(img_path)</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(&quot;logs3&quot;)</span><br><span class="line"></span><br><span class="line">tensor_trans = transforms.ToTensor()</span><br><span class="line">tensor_img = tensor_trans(img)</span><br><span class="line"></span><br><span class="line">writer.add_image(&quot;Tensor_img&quot;, tensor_img)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>

</code></pre>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs3</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/transform%E4%BD%BF%E7%94%A8.png" alt="transform使用" style="zoom: 50%;" /> 
<h3 id="Normalize">Normalize()</h3>
<ul>
<li>归一化处理</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs4&quot;</span>)</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;hymenoptera_data/train/bees_image/16838648_415acd9e3f.jpg&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ToTensor</span></span><br><span class="line">trans_totensor = transforms.ToTensor()</span><br><span class="line">img_tensor = trans_totensor(img)</span><br><span class="line"><span class="built_in">print</span>(img_tensor[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;ToTensor&quot;</span>, img_tensor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Normalize</span></span><br><span class="line">trans_norm = transforms.Normalize([<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>], [<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>])</span><br><span class="line">img_norm = trans_norm(img_tensor)</span><br><span class="line"><span class="built_in">print</span>(img_norm[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;Normalize&quot;</span>, img_norm)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=500x450 at 0x1F80D45F1D0&gt;</span><br><span class="line">tensor(0.0980)</span><br><span class="line">tensor(-0.8039)</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs4</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Normalize%E4%BD%BF%E7%94%A8.png" alt="Normalize使用" style="zoom: 50%;" /> 
<blockquote>
<p>可以改动参数，查看不同情况：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Normalize</span></span><br><span class="line">trans_norm = transforms.Normalize([<span class="number">6</span>, <span class="number">3</span>, <span class="number">2</span>], [<span class="number">9</span>, <span class="number">3</span>, <span class="number">5</span>]) <span class="comment"># 改动参数</span></span><br><span class="line">img_norm = trans_norm(img_tensor)</span><br><span class="line"><span class="built_in">print</span>(img_norm[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;Normalize&quot;</span>, img_norm, <span class="number">1</span>)  <span class="comment"># 改动步骤</span></span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="Resize">Resize()</h3>
<ul>
<li>改变图片大小
<ul>
<li>参数：序列或者int</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs4&quot;</span>)</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;hymenoptera_data/train/bees_image/16838648_415acd9e3f.jpg&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ToTensor</span></span><br><span class="line">trans_totensor = transforms.ToTensor()</span><br><span class="line">img_tensor = trans_totensor(img)</span><br><span class="line"><span class="built_in">print</span>(img_tensor[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;ToTensor&quot;</span>, img_tensor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Normalize</span></span><br><span class="line">trans_norm = transforms.Normalize([<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>], [<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>])</span><br><span class="line">img_norm = trans_norm(img_tensor)</span><br><span class="line"><span class="built_in">print</span>(img_norm[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;Normalize&quot;</span>, img_norm)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Resize</span></span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line">trans_resize = transforms.Resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># img PIL -&gt; resize -&gt; img_resize PIL</span></span><br><span class="line">img_resize = trans_resize(img)</span><br><span class="line"><span class="comment"># img_resize PIL -&gt; totensor -&gt; img_resize tensor</span></span><br><span class="line">img_resize = trans_totensor(img_resize)</span><br><span class="line"></span><br><span class="line">writer.add_image(<span class="string">&quot;Resize&quot;</span>, img_resize, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(img_resize)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=500x450 at 0x2760C376750&gt;</span><br><span class="line">tensor(0.0980)</span><br><span class="line">tensor(-0.8039)</span><br><span class="line">(500, 450)</span><br><span class="line">tensor([[[0.0980, 0.0863, 0.0902,  ..., 0.0314, 0.0314, 0.0431],</span><br><span class="line">         [0.0824, 0.0863, 0.0863,  ..., 0.0235, 0.0235, 0.0235],</span><br><span class="line">         [0.0588, 0.0824, 0.0863,  ..., 0.0353, 0.0314, 0.0314],</span><br><span class="line">         ...,</span><br><span class="line">         [0.7451, 0.7843, 0.7176,  ..., 0.7490, 0.7255, 0.7843],</span><br><span class="line">         [0.6980, 0.7843, 0.7373,  ..., 0.7412, 0.7098, 0.7882],</span><br><span class="line">         [0.7882, 0.7216, 0.6471,  ..., 0.7333, 0.6863, 0.7529]],</span><br><span class="line"></span><br><span class="line">        [[0.0863, 0.0667, 0.0667,  ..., 0.0706, 0.0706, 0.0667],</span><br><span class="line">         [0.0824, 0.0824, 0.0784,  ..., 0.0549, 0.0510, 0.0431],</span><br><span class="line">         [0.0863, 0.0980, 0.0902,  ..., 0.0510, 0.0431, 0.0392],</span><br><span class="line">         ...,</span><br><span class="line">         [0.8667, 0.9098, 0.8471,  ..., 0.8824, 0.8392, 0.8784],</span><br><span class="line">         [0.8078, 0.8863, 0.8353,  ..., 0.8549, 0.8118, 0.8824],</span><br><span class="line">         [0.8980, 0.8235, 0.7451,  ..., 0.8471, 0.7882, 0.8471]],</span><br><span class="line"></span><br><span class="line">        [[0.1216, 0.0902, 0.0667,  ..., 0.0392, 0.0392, 0.0510],</span><br><span class="line">         [0.1020, 0.0941, 0.0745,  ..., 0.0275, 0.0235, 0.0275],</span><br><span class="line">         [0.0745, 0.0902, 0.0745,  ..., 0.0275, 0.0235, 0.0275],</span><br><span class="line">         ...,</span><br><span class="line">         [0.8941, 0.9529, 0.9176,  ..., 0.9373, 0.8863, 0.9176],</span><br><span class="line">         [0.8549, 0.9451, 0.9098,  ..., 0.9176, 0.8627, 0.9216],</span><br><span class="line">         [0.9451, 0.8824, 0.8235,  ..., 0.9098, 0.8353, 0.8863]]])</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Resize%E4%BD%BF%E7%94%A8.png" alt="Resize使用" style="zoom:50%;" /> 
<h3 id="Compose">Compose()</h3>
<ul>
<li>会直接进行Resize然后进行ToTensor，一步到位</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs4&quot;</span>)</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;hymenoptera_data/train/bees_image/16838648_415acd9e3f.jpg&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ToTensor</span></span><br><span class="line">trans_totensor = transforms.ToTensor()</span><br><span class="line">img_tensor = trans_totensor(img)</span><br><span class="line"><span class="built_in">print</span>(img_tensor[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;ToTensor&quot;</span>, img_tensor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Normalize</span></span><br><span class="line">trans_norm = transforms.Normalize([<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>], [<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>])</span><br><span class="line">img_norm = trans_norm(img_tensor)</span><br><span class="line"><span class="built_in">print</span>(img_norm[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;Normalize&quot;</span>, img_norm)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Resize</span></span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line">trans_resize = transforms.Resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line">img_resize = trans_resize(img)</span><br><span class="line">img_resize = trans_totensor(img_resize)</span><br><span class="line">writer.add_image(<span class="string">&quot;Resize&quot;</span>, img_resize, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(img_resize)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compose</span></span><br><span class="line">trans_resize_2 = transforms.Resize(<span class="number">512</span>)</span><br><span class="line">trans_compose = transforms.Compose([trans_resize_2, trans_totensor])</span><br><span class="line">img_resize_2 = trans_compose(img)</span><br><span class="line">writer.add_image(<span class="string">&quot;Compose&quot;</span>, img_resize_2, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Compose%E4%BD%BF%E7%94%A8.png" alt="Compose使用" style="zoom:50%;" />
<h3 id="RandomCrop">RandomCrop()</h3>
<ul>
<li>随机大小裁剪</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> transforms</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs4&quot;</span>)</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;hymenoptera_data/train/bees_image/16838648_415acd9e3f.jpg&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ToTensor</span></span><br><span class="line">trans_totensor = transforms.ToTensor()</span><br><span class="line">img_tensor = trans_totensor(img)</span><br><span class="line"><span class="built_in">print</span>(img_tensor[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;ToTensor&quot;</span>, img_tensor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Normalize</span></span><br><span class="line">trans_norm = transforms.Normalize([<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>], [<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>])</span><br><span class="line">img_norm = trans_norm(img_tensor)</span><br><span class="line"><span class="built_in">print</span>(img_norm[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">writer.add_image(<span class="string">&quot;Normalize&quot;</span>, img_norm)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Resize</span></span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line">trans_resize = transforms.Resize((<span class="number">512</span>, <span class="number">512</span>))</span><br><span class="line">img_resize = trans_resize(img)</span><br><span class="line">img_resize = trans_totensor(img_resize)</span><br><span class="line">writer.add_image(<span class="string">&quot;Resize&quot;</span>, img_resize, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(img_resize)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compose</span></span><br><span class="line">trans_resize_2 = transforms.Resize(<span class="number">512</span>)</span><br><span class="line">trans_compose = transforms.Compose([trans_resize_2, trans_totensor])</span><br><span class="line">img_resize_2 = trans_compose(img)</span><br><span class="line">writer.add_image(<span class="string">&quot;Compose&quot;</span>, img_resize_2, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># RandomCrop</span></span><br><span class="line">trans_random = transforms.RandomCrop((<span class="number">50</span>,<span class="number">100</span>))</span><br><span class="line">trans_compose_2 = transforms.Compose([trans_random, trans_totensor])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    img_crop = trans_compose_2(img)</span><br><span class="line">    writer.add_image(<span class="string">&quot;RandomCrop&quot;</span>, img_crop, i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/RandomCrop%E4%BD%BF%E7%94%A8.png" alt="RandomCrop使用" style="zoom:50%;" /> 
<h2 id="3-4-现有数据集-torchvision">3.4 现有数据集 torchvision</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/vision/stable/datasets.html">官网数据集</a></li>
</ul>
<p>以下，我们使用 <a href="https://pytorch.org/vision/stable/generated/torchvision.datasets.CIFAR10.html#torchvision.datasets.CIFAR10">CIFAR10</a> 为例：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/CIFAR10%E8%AF%B4%E6%98%8E.png" alt="CIFAR10说明" style="zoom: 67%;" /> 
<ul>
<li>本数据集 <a href="https://www.cs.toronto.edu/~kriz/cifar.html">详细官网</a></li>
</ul>
</blockquote>
<h3 id="下载查看">下载查看</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line">train_set = torchvision.datasets.CIFAR10(root=<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>)</span><br><span class="line">test_set = torchvision.datasets.CIFAR10(root=<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(test_set[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(test_set.classes)</span><br><span class="line"></span><br><span class="line">img, target = test_set[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(img)</span><br><span class="line"><span class="built_in">print</span>(target)</span><br><span class="line"><span class="built_in">print</span>(test_set.classes[target])</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./dataset\cifar-10-python.tar.gz</span><br><span class="line">100.0%</span><br><span class="line">Extracting ./dataset\cifar-10-python.tar.gz to ./dataset</span><br><span class="line">Files already downloaded and verified</span><br><span class="line">(&lt;PIL.Image.Image image mode=RGB size=32x32 at 0x201E45FEC50&gt;, 3)</span><br><span class="line">[&#x27;airplane&#x27;, &#x27;automobile&#x27;, &#x27;bird&#x27;, &#x27;cat&#x27;, &#x27;deer&#x27;, &#x27;dog&#x27;, &#x27;frog&#x27;, &#x27;horse&#x27;, &#x27;ship&#x27;, &#x27;truck&#x27;]</span><br><span class="line">&lt;PIL.Image.Image image mode=RGB size=32x32 at 0x201E3E51F90&gt;</span><br><span class="line">3</span><br><span class="line">cat</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/torchvision_dataset%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png" alt="torchvision_dataset测试结果" style="zoom:67%;" /> 
<h3 id="使用transform">使用transform</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset_transform = torchvision.transforms.Compose([</span><br><span class="line">    torchvision.transforms.ToTensor()</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">train_set = torchvision.datasets.CIFAR10(root=<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">True</span>, transform=dataset_transform, download=<span class="literal">True</span>)</span><br><span class="line">test_set = torchvision.datasets.CIFAR10(root=<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, transform=dataset_transform,download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs5&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    img, target = test_set[i]</span><br><span class="line">    writer.add_image(<span class="string">&quot;test_set&quot;</span>, img, i)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Files already downloaded and verified</span><br><span class="line">Files already downloaded and verified</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs5</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/CIFAR10%E4%BD%BF%E7%94%A8.png" alt="CIFAR10使用" style="zoom:50%;" /> 
<h2 id="3-5-数据取用-DataLoader">3.5 数据取用 DataLoader</h2>
<blockquote>
<ul>
<li>
<p><a href="https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader">官网 | DataLoader</a></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DataLoader%E5%AE%98%E7%BD%91.png" alt="DataLoader官网" style="zoom: 67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DataLoader%E8%AF%B4%E6%98%8E.png" alt="DataLoader说明"  /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DataLoader%E8%AF%B4%E6%98%8E2.png" alt="DataLoader说明2" style="zoom:67%;" /> 
</li>
</ul>
</blockquote>
<h3 id="一次epoch更新">一次epoch更新</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">test_data = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, transform=torchvision.transforms.ToTensor())</span><br><span class="line"></span><br><span class="line">test_loader = DataLoader(dataset=test_data, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>, num_workers=<span class="number">0</span>, drop_last=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 dataset 第一张图片</span></span><br><span class="line">img, target = test_data[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(img.shape)</span><br><span class="line"><span class="built_in">print</span>(target)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 dataloader 第一张照片 ！！DataLoader不支持下标括号访问！</span></span><br><span class="line"><span class="comment"># img2, target2 = test_loader[0]</span></span><br><span class="line"><span class="comment"># print(img2.shape)</span></span><br><span class="line"><span class="comment"># print(target2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 迭代查看</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs6&quot;</span>)</span><br><span class="line">step = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> test_loader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    <span class="comment"># print(imgs.shape)</span></span><br><span class="line">    <span class="comment"># print(targets)</span></span><br><span class="line">    writer.add_images(<span class="string">&quot;test_data&quot;</span>, imgs, step)  <span class="comment"># 注意是 add_images 不是 add_image !</span></span><br><span class="line">    step = step + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.Size([3, 32, 32])</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs6</span><br></pre></td></tr></table></figure>
 <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DataLoader%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C-1.png" alt="DataLoader测试结果-1" style="zoom:50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DataLoader%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C-2.png" alt="DataLoader测试结果-2" style="zoom: 50%;" /> 
<blockquote>
<p>DataLoader 的 data 输出的大小类型是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(imgs.shape)</span><br><span class="line"><span class="built_in">print</span>(targets)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.Size([64, 3, 32, 32])</span><br><span class="line">tensor([1, 6, 3, 1, 3, 4, 0, 0, 6, 9, 4, 1, 1, 3, 8, 4, 9, 9, 0, 3, 6, 1, 1, 0,</span><br><span class="line">        8, 2, 4, 6, 0, 5, 2, 8, 7, 1, 8, 8, 7, 9, 7, 7, 9, 5, 4, 9, 9, 1, 0, 5,</span><br><span class="line">        5, 3, 0, 5, 9, 1, 2, 9, 9, 4, 2, 7, 3, 3, 3, 0])</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="多次epoch更新">多次epoch更新</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">test_data = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, transform=torchvision.transforms.ToTensor())</span><br><span class="line">test_loader = DataLoader(dataset=test_data, batch_size=<span class="number">64</span>, shuffle=<span class="literal">True</span>, num_workers=<span class="number">0</span>, drop_last=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs7&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    step = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> test_loader:</span><br><span class="line">        imgs, targets = data</span><br><span class="line">        writer.add_images(<span class="string">&quot;Epoch:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(epoch), imgs, step)</span><br><span class="line">        step = step + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs7</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DataLoader%E5%A4%9Aepoch%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png" alt="DataLoader多epoch测试结果" style="zoom: 50%;" /> 
<h1>四、神经网络</h1>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/nn.html">官网 |  TORCH.NN</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/NN%E5%AE%98%E7%BD%91.png" alt="NN官网" style="zoom:67%;" /> 
</blockquote>
<h2 id="4-1-基本骨架-nn-Module">4.1 基本骨架 nn.Module</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Module.html#torch.nn.Module">官网 | Torch.nn.Module</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/nn.Module%E5%AE%98%E7%BD%91.png" alt="nn.Module官网" style="zoom:67%;" /> 
 <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/nn.Module%E8%AF%B4%E6%98%8E.png" alt="nn.Module说明" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/nn.Module%E8%AF%B4%E6%98%8E2.png" alt="nn.Module说明2" style="zoom:67%;" /> 
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有 nn 模型都必须继承 nn.Module</span></span><br><span class="line"><span class="comment"># 且必须 override(重载)下面两个方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyModule</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MyModule, self).__init__()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">selfself, <span class="built_in">input</span></span>):</span><br><span class="line">        output = <span class="built_in">input</span> + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mynn = MyModule()</span><br><span class="line">x = torch.tensor(<span class="number">1.0</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line">output = mynn(x)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tensor(1.)</span><br><span class="line">tensor(2.)</span><br></pre></td></tr></table></figure>
<h2 id="4-2-卷积层">4.2 卷积层</h2>
<h3 id="卷积操作动画说明">卷积操作动画说明</h3>
<p>参考：</p>
<ul>
<li><a href="https://pytorch.org/docs/stable/nn.html#convolution-layers">官网 |torch.nn  Convolution Layers </a></li>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Conv2d.html#torch.nn.Conv2d">Conv2d说明</a></li>
<li><a href="https://github.com/vdumoulin/conv_arithmetic/tree/master">图像动画参考</a></li>
</ul>
<blockquote>
<h2 id="Convolution-animations">Convolution animations</h2>
<p><em>N.B.: Blue maps are inputs, and cyan maps are outputs.</em></p>
<table style="width:100%; table-layout:fixed;">
  <tr>
    <td><img width="150px" src="gif/no_padding_no_strides.gif"></td>
    <td><img width="150px" src="gif/arbitrary_padding_no_strides.gif"></td>
    <td><img width="150px" src="gif/same_padding_no_strides.gif"></td>
    <td><img width="150px" src="gif/full_padding_no_strides.gif"></td>
  </tr>
  <tr>
    <td>No padding, no strides</td>
    <td>Arbitrary padding, no strides</td>
    <td>Half padding, no strides</td>
    <td>Full padding, no strides</td>
  </tr>
  <tr>
    <td><img width="150px" src="gif/no_padding_strides.gif"></td>
    <td><img width="150px" src="gif/padding_strides.gif"></td>
    <td><img width="150px" src="gif/padding_strides_odd.gif"></td>
    <td></td>
  </tr>
  <tr>
    <td>No padding, strides</td>
    <td>Padding, strides</td>
    <td>Padding, strides (odd)</td>
    <td></td>
  </tr>
</table>
<h2 id="Transposed-convolution-animations">Transposed convolution animations</h2>
<p><em>N.B.: Blue maps are inputs, and cyan maps are outputs.</em></p>
<table style="width:100%; table-layout:fixed;">
  <tr>
    <td><img width="150px" src="gif/no_padding_no_strides_transposed.gif"></td>
    <td><img width="150px" src="gif/arbitrary_padding_no_strides_transposed.gif"></td>
    <td><img width="150px" src="gif/same_padding_no_strides_transposed.gif"></td>
    <td><img width="150px" src="gif/full_padding_no_strides_transposed.gif"></td>
  </tr>
  <tr>
    <td>No padding, no strides, transposed</td>
    <td>Arbitrary padding, no strides, transposed</td>
    <td>Half padding, no strides, transposed</td>
    <td>Full padding, no strides, transposed</td>
  </tr>
  <tr>
    <td><img width="150px" src="gif/no_padding_strides_transposed.gif"></td>
    <td><img width="150px" src="gif/padding_strides_transposed.gif"></td>
    <td><img width="150px" src="gif/padding_strides_odd_transposed.gif"></td>
    <td></td>
  </tr>
  <tr>
    <td>No padding, strides, transposed</td>
    <td>Padding, strides, transposed</td>
    <td>Padding, strides, transposed (odd)</td>
    <td></td>
  </tr>
</table>
<h2 id="Dilated-convolution-animations">Dilated convolution animations</h2>
<p><em>N.B.: Blue maps are inputs, and cyan maps are outputs.</em></p>
<table style="width:25%"; table-layout:fixed;>
  <tr>
    <td><img width="150px" src="gif/dilation.gif"></td>
  </tr>
  <tr>
    <td>No padding, no stride, dilation</td>
  </tr>
</table>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/image-20240202194225022.png" alt="image-20240202194225022" style="zoom:67%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.tensor([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">                      [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">                      [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                      [<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">                      [<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>]])</span><br><span class="line">kernel = torch.tensor([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">                       [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">                       [<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>]])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.shape)</span><br><span class="line"><span class="built_in">print</span>(kernel.shape)</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.reshape(<span class="built_in">input</span>, (<span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">5</span>))</span><br><span class="line">kernel = torch.reshape(kernel, (<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">input</span>.shape)</span><br><span class="line"><span class="built_in">print</span>(kernel.shape)</span><br><span class="line"></span><br><span class="line">output1 = F.conv2d(<span class="built_in">input</span>, kernel, stride=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(output1)</span><br><span class="line"></span><br><span class="line">output2 = F.conv2d(<span class="built_in">input</span>, kernel, stride=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(output2)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.Size([5, 5])</span><br><span class="line">torch.Size([3, 3])</span><br><span class="line">torch.Size([1, 1, 5, 5])</span><br><span class="line">torch.Size([1, 1, 3, 3])</span><br><span class="line">tensor([[[[10, 12, 12],</span><br><span class="line">          [18, 16, 16],</span><br><span class="line">          [13,  9,  3]]]])</span><br><span class="line">tensor([[[[10, 12],</span><br><span class="line">          [13,  3]]]])</span><br></pre></td></tr></table></figure>
<h3 id="卷积-Conv2d">卷积 Conv2d()</h3>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Conv2d.html#torch.nn.Conv2d">官网 | Convolution layers | Conv2d</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/CONV2D.png" alt="CONV2D" style="zoom:67%;" /> 
</blockquote>
<ul>
<li>二维卷积操作</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Conv2d%E5%8D%B7%E7%A7%AF%E5%85%AC%E5%BC%8F.png" alt="Conv2d卷积公式" style="zoom:67%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, transform=torchvision.transforms.ToTensor(), download=<span class="literal">True</span>)</span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.conv1 = Conv2d(in_channels=<span class="number">3</span>, out_channels=<span class="number">6</span>, kernel_size=<span class="number">3</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">tudui = Tudui()</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs8&quot;</span>)</span><br><span class="line">step = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    output = tudui(imgs)</span><br><span class="line">    <span class="comment"># imgs: torch.Size([64, 3, 32, 32])</span></span><br><span class="line">    writer.add_images(<span class="string">&quot;input&quot;</span>, imgs, step)</span><br><span class="line">    <span class="comment"># output: torch.Size([64, 6, 30, 30]) -&gt; # torch.Size([-1, 3, 30, 30]) 需要转为3通道才能显示</span></span><br><span class="line">    output = torch.reshape(output, (-<span class="number">1</span>, <span class="number">3</span>, <span class="number">30</span>, <span class="number">30</span>)) <span class="comment"># -1处会自动计算</span></span><br><span class="line">    writer.add_images(<span class="string">&quot;output&quot;</span>, output, step)</span><br><span class="line">    step = step + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Files already downloaded and verified</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs8</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Conv2d%E4%BD%BF%E7%94%A8.png" alt="Conv2d使用" style="zoom:50%;" /> 
<h2 id="4-3-最大池化-MaxPool2d">4.3 最大池化 MaxPool2d()</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.MaxPool2d.html#torch.nn.MaxPool2d">官网 | Pooling layers | nn.MaxPool2d </a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/MAXPOOL2D.png" alt="MAXPOOL2D" style="zoom:67%;" /> 
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/%E6%9C%80%E5%A4%A7%E6%B1%A0%E5%8C%96%E8%AF%B4%E6%98%8E.png" alt="最大池化说明" style="zoom:67%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> MaxPool2d</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.tensor([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">                      [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">                      [<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                      [<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">                      [<span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>]], dtype=torch.float32)    <span class="comment"># 注意：必须是浮点数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span> = torch.reshape(<span class="built_in">input</span>, (-<span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.maxpool1 = MaxPool2d(kernel_size=<span class="number">3</span>, ceil_mode=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = self.maxpool1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">tudui = Tudui()</span><br><span class="line">output = tudui(<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span>(output)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tensor([[[[2., 3.],</span><br><span class="line">          [5., 1.]]]])</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>若改为</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.maxpool1 = MaxPool2d(kernel_size=<span class="number">3</span>, ceil_mode=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li>则会输出</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tensor([[[[2.]]]])</span><br></pre></td></tr></table></figure>
</blockquote>
<ul>
<li>下面使用一下，效果是模糊</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> MaxPool2d</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>,</span><br><span class="line">                                       transform=torchvision.transforms.ToTensor())</span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.maxpool1 = MaxPool2d(kernel_size=<span class="number">3</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = self.maxpool1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">tudui = Tudui()</span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs9&quot;</span>)</span><br><span class="line">step = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    writer.add_images(<span class="string">&quot;input&quot;</span>, imgs, step)</span><br><span class="line">    output = tudui(imgs)</span><br><span class="line">    writer.add_images(<span class="string">&quot;output&quot;</span>, output, step)</span><br><span class="line">    step = step + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs9</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/MaxPool2d%E4%BD%BF%E7%94%A8.png" alt="MaxPool2d使用"></p>
<h2 id="4-4-非线性激活-ReLU-、Sigmoid">4.4 非线性激活 ReLU()、Sigmoid()</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/nn.html#non-linear-activations-weighted-sum-nonlinearity">非线性激活 | Non-Linear-Activations</a></li>
<li><a href="">官网 | torch.nn | ReLU</a></li>
<li><a href="">官网 | torch.nn | Sigmoid</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/RELU.png" alt="RELU" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/ReLU().png" alt="ReLU()" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/SIGMOID.png" alt="SIGMOID" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Sigmoid().png" alt="Sigmoid()" style="zoom:67%;" /> 
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/ReLU%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E.png" alt="ReLU参数说明" style="zoom:67%;" /> 
<ul>
<li>下例实际上只用了Sigmoid：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> ReLU, Sigmoid</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>,</span><br><span class="line">                                       transform=torchvision.transforms.ToTensor())</span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.relu1 = ReLU()</span><br><span class="line">        self.sigmoid1 = Sigmoid()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = self.sigmoid1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">tudui = Tudui()</span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs10&quot;</span>)</span><br><span class="line">step = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    writer.add_images(<span class="string">&quot;input&quot;</span>, imgs, step)</span><br><span class="line">    output = tudui(imgs)</span><br><span class="line">    writer.add_images(<span class="string">&quot;output&quot;</span>, output, step)</span><br><span class="line">    step = step + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs10</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Sigmoid()%E4%BD%BF%E7%94%A8.png" alt="Sigmoid()使用" style="zoom:50%;" /> 
<h2 id="4-5-线性层-Linear">4.5 线性层 Linear()</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Linear.html#torch.nn.Linear">官网 | Linear</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/LINEAR.png" alt="LINEAR" style="zoom:67%;" /> 
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/%E7%BA%BF%E6%80%A7%E5%B1%82%E8%AF%B4%E6%98%8E.png" alt="线性层说明" style="zoom: 50%;" /> 
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Linear</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>,</span><br><span class="line">                                       transform=torchvision.transforms.ToTensor())</span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.linear1 = Linear(<span class="number">196608</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span></span>):</span><br><span class="line">        output = self.linear1(<span class="built_in">input</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line">tudui = Tudui()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    <span class="built_in">print</span>(imgs.shape)</span><br><span class="line">    <span class="comment"># 先铺平再进行线性层变换</span></span><br><span class="line">    <span class="comment"># output = torch.reshape(imgs, (1, 1, 1, -1))   # 与下面 flatten效果一样</span></span><br><span class="line">    output = torch.flatten(imgs)</span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br><span class="line">    output = tudui(output)</span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Files already downloaded and verified</span><br><span class="line">torch.Size([64, 3, 32, 32])</span><br><span class="line">torch.Size([1, 1, 1, 196608])</span><br><span class="line">torch.Size([1, 1, 1, 10])</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">Files already downloaded and verified</span><br><span class="line">torch.Size([64, 3, 32, 32])</span><br><span class="line">torch.Size([196608])</span><br><span class="line">torch.Size([10])</span><br></pre></td></tr></table></figure>
<h2 id="4-6-其他层">4.6 其他层</h2>
<ul>
<li>一般是用于特定处理的层</li>
<li>如语音处理、图像处理、文字处理等</li>
</ul>
<h2 id="4-7-层序列-Sequential">4.7 层序列 Sequential()</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/generated/torch.nn.Sequential.html#torch.nn.Sequential">官网 | Sequential</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/SEQUENTIAL.png" alt="SEQUENTIAL" style="zoom:67%;" /> 
</blockquote>
<ul>
<li>下面用 CIFAR10 示例：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/CIFAR10%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84.png" alt="CIFAR10模型结构" style="zoom:67%;" /> 
<ul>
<li>Conv2d 参数计算示例：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Conv2d%E5%8F%82%E6%95%B0%E8%AE%A1%E7%AE%97%E7%A4%BA%E4%BE%8B.png" alt="Conv2d参数计算示例" style="zoom: 67%;" /> 
<h3 id="不使用">不使用</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.conv1 = Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool1 = MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.conv2 = Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool2 = MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.conv3 = Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>)</span><br><span class="line">        self.maxpool3 = MaxPool2d(<span class="number">2</span>)</span><br><span class="line">        self.flatten = Flatten()    <span class="comment"># 线性层前先展平（图中没有画出来）</span></span><br><span class="line">        self.linear1 = Linear(<span class="number">1024</span>, <span class="number">64</span>)</span><br><span class="line">        self.linear2 = Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = self.maxpool1(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = self.maxpool2(x)</span><br><span class="line">        x = self.conv3(x)</span><br><span class="line">        x = self.maxpool3(x)</span><br><span class="line">        x = self.flatten(x)</span><br><span class="line">        x = self.linear1(x)</span><br><span class="line">        x = self.linear2(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">tudui = Tudui()</span><br><span class="line"><span class="built_in">print</span>(tudui)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Tudui(</span><br><span class="line">  (conv1): Conv2d(<span class="number">3</span>, <span class="number">32</span>, kernel_size=(<span class="number">5</span>, <span class="number">5</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">  (maxpool1): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">  (conv2): Conv2d(<span class="number">32</span>, <span class="number">32</span>, kernel_size=(<span class="number">5</span>, <span class="number">5</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">  (maxpool2): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">  (conv3): Conv2d(<span class="number">32</span>, <span class="number">64</span>, kernel_size=(<span class="number">5</span>, <span class="number">5</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">  (maxpool3): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">  (flatten): Flatten(start_dim=<span class="number">1</span>, end_dim=-<span class="number">1</span>)</span><br><span class="line">  (linear1): Linear(in_features=<span class="number">1024</span>, out_features=<span class="number">64</span>, bias=<span class="literal">True</span>)</span><br><span class="line">  (linear2): Linear(in_features=<span class="number">64</span>, out_features=<span class="number">10</span>, bias=<span class="literal">True</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h3 id="使用序列">使用序列</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.model1 = Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">tudui = Tudui()</span><br><span class="line"><span class="built_in">print</span>(tudui)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Tudui(</span><br><span class="line">  (model1): Sequential(</span><br><span class="line">    (0): Conv2d(3, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span><br><span class="line">    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span><br><span class="line">    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (4): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span><br><span class="line">    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (6): Flatten(start_dim=1, end_dim=-1)</span><br><span class="line">    (7): Linear(in_features=1024, out_features=64, bias=True)</span><br><span class="line">    (8): Linear(in_features=64, out_features=10, bias=True)</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h3 id="tensorboard展示">tensorboard展示</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.model1 = Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">tudui = Tudui()</span><br><span class="line"><span class="built_in">input</span> = torch.ones((<span class="number">64</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">output = tudui(<span class="built_in">input</span>)</span><br><span class="line"><span class="built_in">print</span>(output.shape)</span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs12&quot;</span>)</span><br><span class="line">writer.add_graph(tudui, <span class="built_in">input</span>)</span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">torch.Size([64, 10])</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs12</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Sequential%E7%A4%BA%E4%BE%8B-1.png" alt="Sequential示例-1" style="zoom: 50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Sequential%E7%A4%BA%E4%BE%8B-2.png" alt="Sequential示例-2" style="zoom:50%;" /> 
<h2 id="4-8-损失函数与方向传播">4.8 损失函数与方向传播</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/nn.html#loss-functions">官网 | Loss Functions </a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/LOSS.png" alt="LOSS" style="zoom:67%;" /> 
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/LOSS%E8%AF%B4%E6%98%8E.png" alt="LOSS说明" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/LOSS%E8%AF%B4%E6%98%8E-2.png" alt="LOSS说明-2" style="zoom:67%;" /> 
<h3 id="L1Loss">L1Loss()</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/L1LOSS.png" alt="L1LOSS" style="zoom:67%;" /> 
<h3 id="MSELoss">MSELoss()</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/MSELOSS.png" alt="MSELOSS" style="zoom:67%;" /> 
<h3 id="CrossEntropyLoss">CrossEntropyLoss()</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/CROSSENTROPYLOSS-1.png" alt="CROSSENTROPYLOSS-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/CROSSENTROPYLOSS-2.png" alt="CROSSENTROPYLOSS-2" style="zoom:67%;" /> 
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/CROSSENTROPYLOSS-3.png" alt="CROSSENTROPYLOSS-3" style="zoom:67%;" /> 
</blockquote>
<h3 id="操作示例">操作示例</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line">inputs = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], dtype=torch.float32)</span><br><span class="line">targets = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>], dtype=torch.float32)</span><br><span class="line"></span><br><span class="line">inputs = torch.reshape(inputs, (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line">targets = torch.reshape(targets, (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认是‘mean’，可以改为&#x27;sum&#x27;</span></span><br><span class="line">loss_mae = nn.L1Loss(reduction=<span class="string">&#x27;mean&#x27;</span>)</span><br><span class="line">result_mae = loss_mae(inputs, targets)</span><br><span class="line"><span class="built_in">print</span>(result_mae)</span><br><span class="line"></span><br><span class="line">loss_mse = nn.MSELoss()</span><br><span class="line">result_mse = loss_mse(inputs, targets)</span><br><span class="line"><span class="built_in">print</span>(result_mse)</span><br><span class="line"></span><br><span class="line">x = torch.tensor([<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>])</span><br><span class="line">y = torch.tensor([<span class="number">1</span>])</span><br><span class="line">x = torch.reshape(x, (<span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line">loss_cross = nn.CrossEntropyLoss()</span><br><span class="line">result_cross = loss_cross(x, y)</span><br><span class="line"><span class="built_in">print</span>(result_cross)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tensor(0.6667)</span><br><span class="line">tensor(1.3333)</span><br><span class="line">tensor(1.1019)</span><br></pre></td></tr></table></figure>
<h3 id="模型示例">模型示例</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>,</span><br><span class="line">                                       transform=torchvision.transforms.ToTensor())</span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.model1 = Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">loss = nn.CrossEntropyLoss()</span><br><span class="line">tudui = Tudui()</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    outputs = tudui(imgs)</span><br><span class="line">    result_loss = loss(outputs, targets)</span><br><span class="line">    <span class="built_in">print</span>(result_loss)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Files already downloaded and verified</span><br><span class="line">tensor(2.3101, grad_fn=&lt;NllLossBackward0&gt;)</span><br><span class="line">tensor(2.3090, grad_fn=&lt;NllLossBackward0&gt;)</span><br><span class="line">tensor(2.3187, grad_fn=&lt;NllLossBackward0&gt;)</span><br><span class="line">tensor(2.3161, grad_fn=&lt;NllLossBackward0&gt;)</span><br><span class="line">tensor(2.3075, grad_fn=&lt;NllLossBackward0&gt;)</span><br></pre></td></tr></table></figure>
<h3 id="查看-grad">查看 grad</h3>
<ul>
<li>添加一个</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result_loss.backward()</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>打下断点，进行DEBUG</p>
<p>在打开查看grad参数的变化</p>
<blockquote>
<p>grad在</p>
<ul>
<li>tudui
<ul>
<li>model1
<ul>
<li>Protected Attributes
<ul>
<li>_modules
<ul>
<li>‘0’
<ul>
<li>weight
<ul>
<li>grad</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DEBUG-grad.png" alt="DEBUG-grad" style="zoom: 67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DEBUG-grad-2.png" alt="DEBUG-grad-2" style="zoom:67%;" /> 
<h2 id="4-9-优化器">4.9 优化器</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/docs/stable/optim.html">官网 | OPTIM</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/OPTIM.png" alt="OPTIM" style="zoom:67%;" /> 
</blockquote>
<h3 id="查看-data">查看 data</h3>
<ul>
<li>添加下面的 <code>optimizer</code> 内容</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">loss = nn.CrossEntropyLoss()</span><br><span class="line">tudui = Tudui()</span><br><span class="line">optimizer = torch.optim.SGD(tudui.parameters(), lr=<span class="number">0.01</span>)</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">    imgs, targets = data</span><br><span class="line">    outputs = tudui(imgs)</span><br><span class="line">    result_loss = loss(outputs, targets)</span><br><span class="line">    optimizer.zero_grad()   <span class="comment"># 不能掉了这一句</span></span><br><span class="line">    result_loss.backward()</span><br><span class="line">    optimizer.step()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DEBUG-optim-1.png" alt="DEBUG-optim-1" style="zoom: 67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/DEBUG-optim-2.png" alt="DEBUG-optim-2" style="zoom:67%;" /> 
<blockquote>
<p>仔细看data，实际上更新了数字</p>
<p>是会根据grad梯度进行data参数的更新，从而更新了模型</p>
</blockquote>
<h3 id="完整示例">完整示例</h3>
<ul>
<li>我们添加epoch多轮，每轮输出对应的 loss 和</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.nn <span class="keyword">import</span> Conv2d, MaxPool2d, Flatten, Linear, Sequential</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"></span><br><span class="line">dataset = torchvision.datasets.CIFAR10(<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>, download=<span class="literal">True</span>,</span><br><span class="line">                                       transform=torchvision.transforms.ToTensor())</span><br><span class="line">dataloader = DataLoader(dataset, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.model1 = Sequential(</span><br><span class="line">            Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            Flatten(),</span><br><span class="line">            Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.model1(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">loss = nn.CrossEntropyLoss()</span><br><span class="line">tudui = Tudui()</span><br><span class="line">optimizer = torch.optim.SGD(tudui.parameters(), lr=<span class="number">0.01</span>)</span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    running_loss = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> dataloader:</span><br><span class="line">        imgs, targets = data</span><br><span class="line">        outputs = tudui(imgs)</span><br><span class="line">        result_loss = loss(outputs, targets)</span><br><span class="line">        optimizer.zero_grad()   <span class="comment"># 不能掉了这一句</span></span><br><span class="line">        result_loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        running_loss = running_loss + result_loss</span><br><span class="line">    <span class="built_in">print</span>(running_loss)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Files already downloaded and verified</span><br><span class="line">tensor(360.3722, grad_fn=&lt;AddBackward0&gt;)</span><br><span class="line">tensor(355.9296, grad_fn=&lt;AddBackward0&gt;)</span><br><span class="line">tensor(341.5743, grad_fn=&lt;AddBackward0&gt;)</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<blockquote>
<p>可以看到，损失越来越小了。</p>
</blockquote>
<h1>五、现有网络模型</h1>
<h2 id="5-1-网络模型的保存与读取">5.1 网络模型的保存与读取</h2>
<h3 id="保存">保存</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line">vgg16 = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存方式-1</span></span><br><span class="line">torch.save(vgg16, <span class="string">&quot;vgg16_method1.pth&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存方式-2 官方推荐</span></span><br><span class="line">torch.save(vgg16.state_dict(), <span class="string">&quot;vgg16_method2.pth&quot;</span>)</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/Save.png" alt="Save"  /> 
<h3 id="读取">读取</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取方式-1</span></span><br><span class="line">model1 = torch.load(<span class="string">&quot;vgg16_method1.pth&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(model1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取方式-2 官方推荐</span></span><br><span class="line">vgg16 = torchvision.models.vgg16(pretrained=<span class="literal">False</span>)</span><br><span class="line">vgg16.load_state_dict(torch.load(<span class="string">&quot;vgg16_method2.pth&quot;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">VGG(</span><br><span class="line">  (features): Sequential(</span><br><span class="line">    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (1): ReLU(inplace=True)</span><br><span class="line">    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (3): ReLU(inplace=True)</span><br><span class="line">    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">   ......</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：</p>
<ul>
<li>
<p>保存自己的已训练模型后，再读取模型时，</p>
<p>需要自己把这个模型类先引入，才能正常读入。</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Tudui <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure>
<blockquote>
<p>前面的<code>torch.load(&quot;vgg16_method2.pth&quot;)</code>的内容是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">OrderedDict([(&#x27;features.0.weight&#x27;, tensor([[[[-0.1135,  0.1008, -0.0002],</span><br><span class="line">          [ 0.0986,  0.0091,  0.0706],</span><br><span class="line">          [-0.1599,  0.0261,  0.1146]],</span><br><span class="line"></span><br><span class="line">         [[-0.0203, -0.0541,  0.1053],</span><br><span class="line">          [ 0.0094, -0.0109,  0.0597],</span><br><span class="line">          [ 0.0154, -0.1059,  0.0040]],</span><br><span class="line"></span><br><span class="line">         [[ 0.0358, -0.0205,  0.0215],</span><br><span class="line">          [-0.0723,  0.0951,  0.1017],</span><br><span class="line">          [ 0.0250, -0.0216, -0.1106]]],</span><br><span class="line">    ......</span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
<h2 id="5-2-使用现有网络模型">5.2 使用现有网络模型</h2>
<blockquote>
<ul>
<li><a href="https://pytorch.org/vision/stable/models.html">官网 |MODELS AND PRE-TRAINED WEIGHTS </a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/%E7%8E%B0%E6%9C%89MODELS.png" alt="现有MODELS" style="zoom:67%;" /> 
</blockquote>
<h3 id="使用">使用</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"></span><br><span class="line"><span class="comment"># vgg16_false = torchvision.models.vgg16(pretrained=False)</span></span><br><span class="line">vgg16_true = torchvision.models.vgg16(pretrained=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(vgg16_true)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Downloading: &quot;https://download.pytorch.org/models/vgg16-397923af.pth&quot; to C:\Users\86182/.cache\torch\hub\checkpoints\vgg16-397923af.pth</span><br><span class="line">100.0%</span><br><span class="line">VGG(</span><br><span class="line">  (features): Sequential(</span><br><span class="line">    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (1): ReLU(inplace=True)</span><br><span class="line">    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (3): ReLU(inplace=True)</span><br><span class="line">    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (6): ReLU(inplace=True)</span><br><span class="line">    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (8): ReLU(inplace=True)</span><br><span class="line">    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (11): ReLU(inplace=True)</span><br><span class="line">    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (13): ReLU(inplace=True)</span><br><span class="line">    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (15): ReLU(inplace=True)</span><br><span class="line">    (16): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (17): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (18): ReLU(inplace=True)</span><br><span class="line">    (19): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (20): ReLU(inplace=True)</span><br><span class="line">    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (22): ReLU(inplace=True)</span><br><span class="line">    (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (24): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (25): ReLU(inplace=True)</span><br><span class="line">    (26): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (27): ReLU(inplace=True)</span><br><span class="line">    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (29): ReLU(inplace=True)</span><br><span class="line">    (30): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">  )</span><br><span class="line">  (avgpool): AdaptiveAvgPool2d(output_size=(7, 7))</span><br><span class="line">  (classifier): Sequential(</span><br><span class="line">    (0): Linear(in_features=25088, out_features=4096, bias=True)</span><br><span class="line">    (1): ReLU(inplace=True)</span><br><span class="line">    (2): Dropout(p=0.5, inplace=False)</span><br><span class="line">    (3): Linear(in_features=4096, out_features=4096, bias=True)</span><br><span class="line">    (4): ReLU(inplace=True)</span><br><span class="line">    (5): Dropout(p=0.5, inplace=False)</span><br><span class="line">    (6): Linear(in_features=4096, out_features=1000, bias=True)</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h3 id="修改">修改</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># vgg16_false = torchvision.models.vgg16(pretrained=False)</span></span><br><span class="line">vgg16_true = torchvision.models.vgg16(pretrained=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(vgg16_true)</span></span><br><span class="line"></span><br><span class="line">train_data = torchvision.datasets.CIFAR10(<span class="string">&#x27;./dataset&#x27;</span>, train=<span class="literal">True</span>,</span><br><span class="line">                                          transform=torchvision.transforms.ToTensor(),</span><br><span class="line">                                          download=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 方法1</span></span><br><span class="line">vgg16_true.classifier.add_module(<span class="string">&#x27;add_linear&#x27;</span>, nn.Linear(<span class="number">1000</span>, <span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(vgg16_true)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line"><span class="comment"># vgg16_true.classifier[6] = nn.Linear(1000, 10)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Files already downloaded and verified</span><br><span class="line">VGG(</span><br><span class="line">  (features): Sequential(</span><br><span class="line">    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (1): ReLU(inplace=True)</span><br><span class="line">    (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (3): ReLU(inplace=True)</span><br><span class="line">    (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (6): ReLU(inplace=True)</span><br><span class="line">    (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (8): ReLU(inplace=True)</span><br><span class="line">    (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (11): ReLU(inplace=True)</span><br><span class="line">    (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (13): ReLU(inplace=True)</span><br><span class="line">    (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (15): ReLU(inplace=True)</span><br><span class="line">    (16): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (17): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (18): ReLU(inplace=True)</span><br><span class="line">    (19): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (20): ReLU(inplace=True)</span><br><span class="line">    (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (22): ReLU(inplace=True)</span><br><span class="line">    (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (24): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (25): ReLU(inplace=True)</span><br><span class="line">    (26): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (27): ReLU(inplace=True)</span><br><span class="line">    (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))</span><br><span class="line">    (29): ReLU(inplace=True)</span><br><span class="line">    (30): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">  )</span><br><span class="line">  (avgpool): AdaptiveAvgPool2d(output_size=(7, 7))</span><br><span class="line">  (classifier): Sequential(</span><br><span class="line">    (0): Linear(in_features=25088, out_features=4096, bias=True)</span><br><span class="line">    (1): ReLU(inplace=True)</span><br><span class="line">    (2): Dropout(p=0.5, inplace=False)</span><br><span class="line">    (3): Linear(in_features=4096, out_features=4096, bias=True)</span><br><span class="line">    (4): ReLU(inplace=True)</span><br><span class="line">    (5): Dropout(p=0.5, inplace=False)</span><br><span class="line">    (6): Linear(in_features=4096, out_features=1000, bias=True)</span><br><span class="line">    (add_linear): Linear(in_features=1000, out_features=10, bias=True)</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>可以看到最后一行有一个<code>add_linear</code>是我们添加到层名</p>
</blockquote>
<h1>六、完整套路</h1>
<h2 id="6-1-模型训练">6.1 模型训练</h2>
<h3 id="结构图">结构图</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/CIFAR10%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84.png" alt="CIFAR10模型结构" style="zoom:67%;" /> 
<h3 id="mymodel-py"><code>mymodel.py</code></h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搭建神经网络</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tudui</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Tudui, self).__init__()</span><br><span class="line">        self.model = nn.Sequential(</span><br><span class="line">            nn.Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            nn.Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">5</span>, padding=<span class="number">2</span>),</span><br><span class="line">            nn.MaxPool2d(<span class="number">2</span>),</span><br><span class="line">            nn.Flatten(),</span><br><span class="line">            nn.Linear(<span class="number">1024</span>, <span class="number">64</span>),</span><br><span class="line">            nn.Linear(<span class="number">64</span>, <span class="number">10</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.model(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tudui = Tudui()</span><br><span class="line">    <span class="built_in">input</span> = torch.ones((<span class="number">64</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">    output = tudui(<span class="built_in">input</span>)</span><br><span class="line">    <span class="built_in">print</span>(output.shape)</span><br><span class="line">    <span class="comment"># 输出 torch.Size([64, 10])</span></span><br></pre></td></tr></table></figure>
<h3 id="train-py"><code>train.py</code></h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding = utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time : 2024/2/3 0:00</span></span><br><span class="line"><span class="comment"># @Author : Seymour0314 2151713</span></span><br><span class="line"><span class="comment"># @File : train.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> torch <span class="keyword">import</span> nn</span><br><span class="line"><span class="keyword">from</span> torch.utils.data <span class="keyword">import</span> DataLoader</span><br><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> mymodel <span class="keyword">import</span> Tudui</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义训练的设备</span></span><br><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#  准备数据集</span></span><br><span class="line">train_data = torchvision.datasets.CIFAR10(root=<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">True</span>,</span><br><span class="line">                                          transform=torchvision.transforms.ToTensor(),</span><br><span class="line">                                          download=<span class="literal">True</span>)</span><br><span class="line">test_data = torchvision.datasets.CIFAR10(root=<span class="string">&quot;./dataset&quot;</span>, train=<span class="literal">False</span>,</span><br><span class="line">                                          transform=torchvision.transforms.ToTensor(),</span><br><span class="line">                                          download=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># length 长度</span></span><br><span class="line">train_data_size = <span class="built_in">len</span>(train_data)</span><br><span class="line">test_data_size = <span class="built_in">len</span>(test_data)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;训练数据集的长度为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(train_data_size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试数据集的长度为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(test_data_size))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用 Dataloader 来加载数据集</span></span><br><span class="line">train_dataloader = DataLoader(train_data, batch_size=<span class="number">64</span>)</span><br><span class="line">test_dataloader = DataLoader(test_data, batch_size=<span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建网络模型</span></span><br><span class="line">tudui = Tudui()</span><br><span class="line">tudui.to(device)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 损失函数</span></span><br><span class="line">loss_fn = nn.CrossEntropyLoss()</span><br><span class="line">loss_fn.to(device)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 优化器</span></span><br><span class="line"><span class="comment"># learning_rate = 0.01</span></span><br><span class="line"><span class="comment"># 1e-2 = 1 x (10)^(-2) = 0.01</span></span><br><span class="line">learning_rate = <span class="number">1e-2</span></span><br><span class="line">optimizer = torch.optim.SGD(tudui.parameters(), lr=learning_rate)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置训练网络的参数</span></span><br><span class="line"><span class="comment"># 记录训练的次数</span></span><br><span class="line">total_train_step = <span class="number">0</span></span><br><span class="line"><span class="comment"># 记录测试的次数</span></span><br><span class="line">total_test_step = <span class="number">0</span></span><br><span class="line"><span class="comment"># 训练的轮数</span></span><br><span class="line">epoch = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">writer = SummaryWriter(<span class="string">&quot;logs13&quot;</span>)</span><br><span class="line"></span><br><span class="line">start_time = time.time()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(epoch):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------第 &#123;&#125; 轮训练开始------&quot;</span>.<span class="built_in">format</span>(i+<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 训练步骤开始</span></span><br><span class="line">    <span class="comment"># tudui.train()   # 这句话不一定加，有些层需要而已，我们这里模型不需要</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> train_dataloader:</span><br><span class="line">        imgs, targets = data</span><br><span class="line">        imgs = imgs.to(device)</span><br><span class="line">        targets = targets.to(device)</span><br><span class="line">        outputs = tudui(imgs)</span><br><span class="line">        loss = loss_fn(outputs, targets)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 优化器优化模型</span></span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line"></span><br><span class="line">        total_train_step = total_train_step + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> total_train_step % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">            end_time = time.time()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;用时：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(end_time-start_time))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;训练次数: &#123;&#125;, Loss: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_train_step, loss.item()))</span><br><span class="line">            writer.add_scalar(<span class="string">&quot;train_loss&quot;</span>, loss.item(), total_train_step)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试步骤开始</span></span><br><span class="line">    tudui.<span class="built_in">eval</span>()    <span class="comment"># 可以不加，但是加了效率更高</span></span><br><span class="line">    test_loss_sum = <span class="number">0</span></span><br><span class="line">    total_accuracy = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_dataloader:</span><br><span class="line">            imgs, targets = data</span><br><span class="line">            imgs = imgs.to(device)</span><br><span class="line">            targets = targets.to(device)</span><br><span class="line">            outputs = tudui(imgs)</span><br><span class="line">            loss = loss_fn(outputs, targets)</span><br><span class="line">            test_loss_sum = test_loss_sum + loss</span><br><span class="line">            accuracy = (outputs.argmax(<span class="number">1</span>) == targets).<span class="built_in">sum</span>()</span><br><span class="line">            total_accuracy = total_accuracy + accuracy</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试数据集上的Loss: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(test_loss_sum))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;整体测试数据集上的正确率: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(total_accuracy/test_data_size))</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_loss&quot;</span>, test_loss_sum, total_test_step)</span><br><span class="line">    writer.add_scalar(<span class="string">&quot;test_accuracy&quot;</span>, total_accuracy/test_data_size, total_test_step)</span><br><span class="line">    total_test_step = total_test_step + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存本轮模型</span></span><br><span class="line">    <span class="comment"># torch.save(tudui, &quot;tudui_&#123;&#125;&quot;.format(i))</span></span><br><span class="line">    torch.save(tudui.state_dict(), <span class="string">&quot;tudui_&#123;&#125;.pth&quot;</span>.<span class="built_in">format</span>(i))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;模型已保存&quot;</span>)</span><br><span class="line"></span><br><span class="line">writer.close()</span><br></pre></td></tr></table></figure>
<h3 id="CPU跑">CPU跑</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用CPU</span></span><br><span class="line">device = torch.device(<span class="string">&quot;cpu&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">训练数据集的长度为50000</span><br><span class="line">测试数据集的长度为10000</span><br><span class="line">------第 1 轮训练开始------</span><br><span class="line">用时：2.647998094558716</span><br><span class="line">训练次数: 100, Loss: 2.287977933883667</span><br><span class="line">用时：5.382997751235962</span><br><span class="line">训练次数: 200, Loss: 2.2727694511413574</span><br><span class="line">用时：8.066996812820435</span><br><span class="line">训练次数: 300, Loss: 2.231820821762085</span><br><span class="line">用时：10.812994956970215</span><br><span class="line">训练次数: 400, Loss: 2.142338275909424</span><br><span class="line">用时：13.573992013931274</span><br><span class="line">训练次数: 500, Loss: 2.0379247665405273</span><br><span class="line">用时：16.22099018096924</span><br><span class="line">训练次数: 600, Loss: 1.9816762208938599</span><br><span class="line">用时：18.903990268707275</span><br><span class="line">训练次数: 700, Loss: 2.0086615085601807</span><br><span class="line">整体测试数据集上的Loss: 312.3843078613281</span><br><span class="line">整体测试数据集上的正确率: 0.28760001063346863</span><br><span class="line">模型已保存</span><br><span class="line">------第 2 轮训练开始------</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<h3 id="GPU跑">GPU跑</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用GPU</span></span><br><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line">device = torch.device(<span class="string">&quot;cuda:0&quot;</span>)	<span class="comment"># 与 cuda 等效</span></span><br><span class="line">device = torch.device(<span class="string">&quot;cuda:1&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Files already downloaded and verified</span><br><span class="line">Files already downloaded and verified</span><br><span class="line">训练数据集的长度为50000</span><br><span class="line">测试数据集的长度为10000</span><br><span class="line">------第 1 轮训练开始------</span><br><span class="line">用时：0.9674310684204102</span><br><span class="line">训练次数: 100, Loss: 2.296257972717285</span><br><span class="line">用时：1.6764259338378906</span><br><span class="line">训练次数: 200, Loss: 2.2909674644470215</span><br><span class="line">用时：2.3930132389068604</span><br><span class="line">训练次数: 300, Loss: 2.2711126804351807</span><br><span class="line">用时：3.1179311275482178</span><br><span class="line">训练次数: 400, Loss: 2.226407051086426</span><br><span class="line">用时：3.8293075561523438</span><br><span class="line">训练次数: 500, Loss: 2.0999419689178467</span><br><span class="line">用时：4.5414087772369385</span><br><span class="line">训练次数: 600, Loss: 2.0297019481658936</span><br><span class="line">用时：5.255408048629761</span><br><span class="line">训练次数: 700, Loss: 2.018446922302246</span><br><span class="line">整体测试数据集上的Loss: 315.6116027832031</span><br><span class="line">整体测试数据集上的正确率: 0.2709999978542328</span><br><span class="line">模型已保存</span><br><span class="line">------第 2 轮训练开始------</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<h3 id="tensorboard显示">tensorboard显示</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=logs13</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/test_accuracy.png" alt="test_accuracy" style="zoom: 50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/test_loss.png" alt="test_loss" style="zoom:50%;" /> 
<blockquote>
<p>其中</p>
<ul>
<li>
<p>使用GPU：</p>
<p>也可以单个询问，但是上面示例方法更好</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把 .to(device) 都换掉</span></span><br><span class="line"><span class="comment"># 一共是三个地方需要：1.网络模型 2.损失函数 3.数据(必须是data拆分后的)</span></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    tudui = tudui.cuda()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    loss_fn = loss_fn.cuda()</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">    imgs = imgs.cuda()</span><br><span class="line">    targets = targets.cuda()</span><br></pre></td></tr></table></figure>
<ul>
<li>说明</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/%E6%AD%A3%E7%A1%AE%E7%8E%87%E8%AF%B4%E6%98%8E.png" alt="正确率说明" style="zoom:67%;" /> 
<ul>
<li>argmax函数</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/argmax%E5%8F%82%E6%95%B0-0.png" alt="argmax参数-0" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/argmax%E5%8F%82%E6%95%B0-1.png" alt="argmax参数-1" style="zoom:67%;" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 第一个得到</span></span><br><span class="line">tensor([<span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二个得到</span></span><br><span class="line">tensor([<span class="number">1</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="6-2-模型验证">6.2 模型验证</h2>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/class_to_idx.png" alt="class_to_idx" style="zoom:67%;" />  
<h3 id="获取一张图片">获取一张图片</h3>
<ul>
<li>在网络上截图了一张图片</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/dog.png" alt="dog" style="zoom:67%;" /> 
<h3 id="写入测试">写入测试</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> mymodel <span class="keyword">import</span> Tudui</span><br><span class="line"></span><br><span class="line">image_path = <span class="string">&quot;images/dog.png&quot;</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(image_path)</span><br><span class="line"><span class="comment"># png是RGBA四通道，需要转换RBG三通道</span></span><br><span class="line">image = image.convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(image)</span><br><span class="line"></span><br><span class="line">trans = torchvision.transforms.Compose([</span><br><span class="line">    torchvision.transforms.Resize((<span class="number">32</span>, <span class="number">32</span>)),</span><br><span class="line">    torchvision.transforms.ToTensor()</span><br><span class="line">])</span><br><span class="line">image = trans(image)</span><br><span class="line"><span class="built_in">print</span>(image.shape)</span><br><span class="line"></span><br><span class="line">model = Tudui()</span><br><span class="line">model.load_state_dict(torch.load(<span class="string">&quot;tudui_7.pth&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(model)</span><br><span class="line"></span><br><span class="line">image = torch.reshape(image, (<span class="number">1</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>))</span><br><span class="line">model.<span class="built_in">eval</span>()</span><br><span class="line"><span class="keyword">with</span> torch.no_grad():</span><br><span class="line">    output = model(image)</span><br><span class="line">    <span class="built_in">print</span>(output)</span><br><span class="line">    <span class="built_in">print</span>(output.argmax(<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;PIL.Image.Image image mode=RGB size=213x230 at 0x17E8A0F2C90&gt;</span><br><span class="line">torch.Size([3, 32, 32])</span><br><span class="line">Tudui(</span><br><span class="line">  (model): Sequential(</span><br><span class="line">    (0): Conv2d(3, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span><br><span class="line">    (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (2): Conv2d(32, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span><br><span class="line">    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (4): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))</span><br><span class="line">    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)</span><br><span class="line">    (6): Flatten(start_dim=1, end_dim=-1)</span><br><span class="line">    (7): Linear(in_features=1024, out_features=64, bias=True)</span><br><span class="line">    (8): Linear(in_features=64, out_features=10, bias=True)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">tensor([[-1.2757, -5.4262,  2.5295,  1.7245,  4.3046,  2.5135,  3.9746,  3.1648,</span><br><span class="line">         -5.5898, -5.7073]])</span><br><span class="line">tensor([4])</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>
<p>4对应是deer</p>
<p>说明错了。</p>
</li>
<li>
<p>但是可以看到是5-dog的概率也有2.51，至少不会太离谱。</p>
<p>只不过，训练不够，还需要继续训练，提高正确率。</p>
</li>
<li>
<p>我们改用下面这个图片试一下</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/dog3.png" alt="dog3" style="zoom:67%;" /> 
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;PIL.Image.Image image mode=RGB size=272x250 at <span class="number">0x24A29D1AA50</span>&gt;</span><br><span class="line">torch.Size([<span class="number">3</span>, <span class="number">32</span>, <span class="number">32</span>])</span><br><span class="line">Tudui(</span><br><span class="line">  (model): Sequential(</span><br><span class="line">    (<span class="number">0</span>): Conv2d(<span class="number">3</span>, <span class="number">32</span>, kernel_size=(<span class="number">5</span>, <span class="number">5</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">    (<span class="number">1</span>): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">2</span>): Conv2d(<span class="number">32</span>, <span class="number">32</span>, kernel_size=(<span class="number">5</span>, <span class="number">5</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">    (<span class="number">3</span>): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">4</span>): Conv2d(<span class="number">32</span>, <span class="number">64</span>, kernel_size=(<span class="number">5</span>, <span class="number">5</span>), stride=(<span class="number">1</span>, <span class="number">1</span>), padding=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">    (<span class="number">5</span>): MaxPool2d(kernel_size=<span class="number">2</span>, stride=<span class="number">2</span>, padding=<span class="number">0</span>, dilation=<span class="number">1</span>, ceil_mode=<span class="literal">False</span>)</span><br><span class="line">    (<span class="number">6</span>): Flatten(start_dim=<span class="number">1</span>, end_dim=-<span class="number">1</span>)</span><br><span class="line">    (<span class="number">7</span>): Linear(in_features=<span class="number">1024</span>, out_features=<span class="number">64</span>, bias=<span class="literal">True</span>)</span><br><span class="line">    (<span class="number">8</span>): Linear(in_features=<span class="number">64</span>, out_features=<span class="number">10</span>, bias=<span class="literal">True</span>)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line">tensor([[-<span class="number">2.6350</span>, -<span class="number">2.5190</span>, -<span class="number">1.2866</span>,  <span class="number">2.8444</span>,  <span class="number">0.6324</span>,  <span class="number">3.7176</span>,  <span class="number">2.9099</span>,  <span class="number">1.6787</span>,</span><br><span class="line">         -<span class="number">3.9632</span>, -<span class="number">1.8650</span>]])</span><br><span class="line">tensor([<span class="number">5</span>])</span><br></pre></td></tr></table></figure>
<p>这次是正确的！</p>
</blockquote>
<h2 id="6-3-使用-colab-跑GPU">6.3* 使用 colab 跑GPU</h2>
<blockquote>
<ul>
<li><a href="https://colab.google/">Google colab 官网</a></li>
<li><a href="https://colab.research.google.com/">Colaboratory</a></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/PyTorchFirst/colab.png" alt="colab" style="zoom: 50%;" /> 
</blockquote>
<ul>
<li>
<p>需要使用谷歌账号登录才能使用GPU</p>
</li>
<li>
<p>新建笔记本</p>
<ul>
<li>
<p>修改</p>
<ul>
<li>
<p>笔记本设置</p>
<ul>
<li>
<p>硬件加速器</p>
<p>选择GPU，保存</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>编写格式类似 Jupyter Notebook</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编写代码</span></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="built_in">print</span>(torch.__version__)</span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令行使用，查看GPU设备</span></span><br><span class="line">!nvidia-smi</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>《PHP》精简Notes</title>
    <url>/butterflyblog/2023/08/27/%E3%80%8APHP%E3%80%8B%E7%B2%BE%E7%AE%80Notes/</url>
    <content><![CDATA[<h3 id="《PHP》精简Notes">《PHP》精简Notes</h3>
<blockquote>
<p>资料来源：<a href="https://www.bilibili.com/video/BV1Xh411S7G1">PHP8快速入门在线教程（基础+实战）</a></p>
<p>@Seymour0314</p>
</blockquote>
<h2 id="一、简介">一、简介</h2>
<ul>
<li>
<p>扩展名<code>.php</code></p>
</li>
<li>
<p>PHP文件中可以包含HTML/CSS/JavaScript代码</p>
</li>
<li>
<p>PHP标记<code>&lt;?php ... ?&gt;</code></p>
<p>语句结束符<code>;</code>、<code>&#123;&#125;</code></p>
<p>注释<code>//</code>、<code>/* */</code></p>
</li>
<li>
<p>输出</p>
<p><code>echo</code>可以多个字符串，逗号隔开</p>
<p><code>print</code>只允许输出一个字符串</p>
</li>
<li>
<p>变量</p>
<p><code>$</code>开头</p>
<p>后接数字、字母、下划线，数字不能开头</p>
</li>
<li>
<p>混写HTML、PHP</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">	$title = &#x27;php标题&#x27;;</span><br><span class="line">	$link = &#x27;/detail.html&#x27;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;h1&gt;</span><br><span class="line">    &lt;a href=&quot;&lt;?php echo $link; ?&gt;&quot;&gt;&lt;?php echo $title; ?&gt;&lt;/a&gt;</span><br><span class="line">&lt;/h1&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="二、数据类型">二、数据类型</h2>
<h3 id="2-1-标量数据类型">2.1 标量数据类型</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828160036582.png" alt="image-20230828160036582" style="zoom:67%;" /> 
<ul>
<li>
<p>数据类型</p>
<ul>
<li>布尔型<code>Boolean</code>
<ul>
<li>true、false</li>
</ul>
</li>
<li>整型<code>Integer</code></li>
<li>浮点型<code>Float</code></li>
<li>字符串<code>String</code></li>
</ul>
<blockquote>
<p>输出</p>
<ul>
<li><code>echo</code>输出数据值</li>
<li><code>var_dump</code>打印数据类型和值</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$y</span> = <span class="string">&#x27;你好呀&#x27;</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$y</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>中文字符采用UTF-8，为3字节。</p>
<ul>
<li>
<p>字符串写双引号和单引号的区别</p>
<p>双引号内可以直接写<code>$</code>作为变量显示，</p>
<p>单引号只是作为字符串显示，并不看作变量。</p>
</li>
</ul>
<p>常量</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方法一</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;HOST&#x27;</span>,<span class="string">&#x27;127.0.0.1&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> HOST;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法二</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">NAME</span> = <span class="string">&#x27;小白&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> NAME;</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h3 id="2-2-复合数据类型">2.2 复合数据类型</h3>
<ul>
<li>
<p>复合数据类型</p>
<ul>
<li>数组array</li>
<li>对象object</li>
<li>可调用callable</li>
<li>可迭代iterable</li>
</ul>
</li>
<li>
<p>特殊数据类型</p>
<ul>
<li>空值<code>NULL</code></li>
<li>资源<code>resource</code></li>
</ul>
<blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$x</span> = <span class="literal">null</span>;</span><br><span class="line">	<span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h4 id="2-2-1-数组array">2.2.1 数组array</h4>
<ul>
<li>
<p>说是数组，实际上像字典，本身是键和值组成。</p>
</li>
<li>
<p>两种表示方法</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$arr1</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;小黄&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小兰&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小黑&#x27;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$arr1</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$arr2</span> = [</span><br><span class="line">        <span class="string">&#x27;小黄&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小兰&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小黑&#x27;</span></span><br><span class="line">    ];</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827161845811.png" alt="image-20230827161845811" style="zoom:80%;" />
<ul>
<li>使用方法</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$arr1</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;A&#x27;</span> =&gt; <span class="string">&#x27;小黄&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小兰&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小黑&#x27;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$arr1</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$arr1</span>[<span class="string">&#x27;A&#x27;</span>],<span class="string">&#x27;&lt;br&gt;&#x27;</span>;  <span class="comment">// 小黄</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$arr1</span>[<span class="number">0</span>],<span class="string">&#x27;&lt;br&gt;&#x27;</span>;  <span class="comment">// 小兰</span></span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="variable">$arr1</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;我的名字是&#x27;</span> . <span class="variable">$arr1</span>[<span class="number">0</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827162446251.png" alt="image-20230827162446251" style="zoom:80%;" />
<ul>
<li>
<p>多维数组</p>
<p>嵌套即可</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;A&#x27;</span> =&gt; <span class="string">&#x27;小黄&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小兰&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小黑&#x27;</span>,</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="number">1</span>,</span><br><span class="line">            <span class="string">&#x27;2&#x27;</span></span><br><span class="line">        ),</span><br><span class="line">        <span class="string">&#x27;B&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;ab&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;cd&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">    );</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827163101391.png" alt="image-20230827163101391" style="zoom:80%;" /> 
</li>
<li>
<p>循环</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;A&#x27;</span> =&gt; <span class="string">&#x27;小黄&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小兰&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;小黑&#x27;</span>,</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$k</span>.<span class="variable">$v</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827163630549.png" alt="image-20230827163630549" style="zoom:80%;" /> 
<ul>
<li>
<p>实际使用</p>
<p>有两种方法，</p>
<p>一是把html的代码直接作为echo的字符串（不拆分php，技巧：用<code>.</code>连接字符串和变量来一次性<code>echo</code>）；</p>
<p>二是html代码作为html代码，把php代码拆开，随处写php（拆分多段php代码）。</p>
<p>第一种自行写，下面是第二种。</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $arr = array(</span><br><span class="line">        [</span><br><span class="line">            &#x27;title&#x27; =&gt; &#x27;学习&#x27;,</span><br><span class="line">            &#x27;content&#x27; =&gt; &#x27;快乐学习&#x27;</span><br><span class="line">        ],</span><br><span class="line">        [</span><br><span class="line">            &#x27;title&#x27; =&gt; &#x27;吃饭&#x27;,</span><br><span class="line">            &#x27;content&#x27; =&gt; &#x27;快乐吃饭&#x27;</span><br><span class="line">        ],</span><br><span class="line">        [</span><br><span class="line">            &#x27;title&#x27; =&gt; &#x27;睡觉&#x27;,</span><br><span class="line">            &#x27;content&#x27; =&gt; &#x27;快乐睡觉&#x27;</span><br><span class="line">        ],</span><br><span class="line">    );</span><br><span class="line">    foreach($arr as $k =&gt; $v)&#123;</span><br><span class="line">?&gt;</span><br><span class="line">    &lt;h3&gt;&lt;?php echo $arr[$k][&#x27;title&#x27;] ?&gt;&lt;/h3&gt;</span><br><span class="line">    &lt;p&gt;&lt;?php echo $arr[$k][&#x27;content&#x27;] ?&gt;&lt;/p&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827164406617.png" alt="image-20230827164406617" style="zoom:80%;" /> 
<h2 id="三、流程操作">三、流程操作</h2>
<h3 id="3-1-条件判断">3.1 条件判断</h3>
<ul>
<li>
<p>三元运算符</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>?<span class="string">&#x27;学习&#x27;</span>:<span class="string">&#x27;睡觉&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827165306305.png" alt="image-20230827165306305" style="zoom:80%;" /> 
</li>
<li>
<p>语句1</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$y</span> = <span class="string">&#x27;睡觉&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$x</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$x</span>;</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(<span class="variable">$y</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$y</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;没有&#x27;</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827165519986.png" alt="image-20230827165519986" style="zoom:80%;" /> 
</li>
<li>
<p>语句2</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span> = <span class="string">&#x27;睡觉&#x27;</span>;</span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$x</span>)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;学习&#x27;</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;要学习辣&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;睡觉&#x27;</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;要睡觉辣&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;吃饭&#x27;</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;要吃饭辣&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;不知道&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827165754171.png" alt="image-20230827165754171" style="zoom:80%;" /> 
</li>
<li>
<p>php8新特性<code>match</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span> = <span class="string">&#x27;睡觉&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">match</span>(<span class="variable">$x</span>)&#123;</span><br><span class="line">        <span class="string">&#x27;学习&#x27;</span>,<span class="string">&#x27;study&#x27;</span> =&gt; <span class="string">&#x27;要学习study辣&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;睡觉&#x27;</span>,<span class="string">&#x27;sleep&#x27;</span> =&gt; <span class="string">&#x27;要睡觉sleep辣&#x27;</span>,</span><br><span class="line">        <span class="keyword">default</span> =&gt; <span class="string">&#x27;不知道干嘛&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827170127060.png" alt="image-20230827170127060" style="zoom:80%;" /> 
<blockquote>
<ul>
<li>
<p>对比switch和match</p>
<p>switch是语句，模糊比较，<code>10</code>和<code>'10'</code>会匹配；</p>
<p>match是表达式，准确比较，<code>10</code>和<code>'10'</code>不匹配。</p>
</li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="3-2-系统函数">3.2 系统函数</h3>
<ul>
<li>
<p>是否存在函数</p>
<blockquote>
<p>用<code>!empty()</code>比较好，区别是对于<code>0</code>的判断不一样。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// 直接判断不存在的变量会报错</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$x</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;我是A&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 使用isset函数判断，不存在就不会输出</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;我是B&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 类似还有empty函数，不存在才输出</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;我是C&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827170814734.png" alt="image-20230827170814734" style="zoom:80%;" /> 
</li>
<li>
<p>函数</p>
<ul>
<li>系统函数</li>
<li>自定义函数</li>
</ul>
</li>
</ul>
<blockquote>
<p>官网参考：<a href="https://www.php.net/manual/zh/funcref.php">PHP手册：函数参考</a></p>
</blockquote>
<h4 id="3-2-1-String函数">3.2.1 String函数</h4>
<blockquote>
<p>参考：<a href="https://www.php.net/manual/zh/book.strings.php">字符串</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">strlen — 获取字符串长度</span><br><span class="line">strrev — 反转字符串</span><br><span class="line">str_replace — 子字符串替换</span><br><span class="line">trim — 去除字符串首尾处的空白字符（或者其他字符）</span><br><span class="line">explode — 使用一个字符串分割另一个字符串，得到数组</span><br><span class="line">str_split — 将字符串按长度拆分，转换为数组</span><br><span class="line">strpos — 查找字符串首次、n次出现的位置</span><br><span class="line">str_contains — 确定字符串是否包含指定子串</span><br><span class="line">md5 — 计算字符串的 MD5 散列值</span><br><span class="line">strtolower — 将字符串转化为小写</span><br><span class="line">strtoupper — 将字符串转化为大写</span><br><span class="line">str_starts_with — 检查字符串是否以指定子串开头</span><br><span class="line">str_ends_with — 检查字符串是否以指定子串结尾</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;Mary Had A Little Lamb and She LOVED It So&quot;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$str</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>; <span class="comment">// 打印 mary had a little lamb and she loved it so</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">strrev</span>(<span class="string">&quot;Hello world!&quot;</span>); <span class="comment">// 输出 &quot;!dlrow olleH&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$text</span>   = <span class="string">&quot;\t\tThese are a few words :) ...  &quot;</span>;</span><br><span class="line"><span class="variable">$trimmed</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$text</span>);	<span class="comment">//These are a few words :) ...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 赋值: &lt;body text=&#x27;black&#x27;&gt;</span></span><br><span class="line"><span class="variable">$bodytag</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;%body%&quot;</span>, <span class="string">&quot;black&quot;</span>, <span class="string">&quot;&lt;body text=&#x27;%body%&#x27;&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 赋值: Hll Wrld f PHP</span></span><br><span class="line"><span class="variable">$vowels</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;o&quot;</span>, <span class="string">&quot;u&quot;</span>, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;I&quot;</span>, <span class="string">&quot;O&quot;</span>, <span class="string">&quot;U&quot;</span>);</span><br><span class="line"><span class="variable">$onlyconsonants</span> = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$vowels</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;Hello World of PHP&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 赋值: You should eat pizza, beer, and ice cream every day</span></span><br><span class="line"><span class="variable">$phrase</span>  = <span class="string">&quot;You should eat fruits, vegetables, and fiber every day.&quot;</span>;</span><br><span class="line"><span class="variable">$healthy</span> = <span class="keyword">array</span>(<span class="string">&quot;fruits&quot;</span>, <span class="string">&quot;vegetables&quot;</span>, <span class="string">&quot;fiber&quot;</span>);</span><br><span class="line"><span class="variable">$yummy</span>   = <span class="keyword">array</span>(<span class="string">&quot;pizza&quot;</span>, <span class="string">&quot;beer&quot;</span>, <span class="string">&quot;ice cream&quot;</span>);</span><br><span class="line"><span class="variable">$newphrase</span> = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$healthy</span>, <span class="variable">$yummy</span>, <span class="variable">$phrase</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;Hello Friend&quot;</span>;	<span class="comment">//待分字符串，每个小段的长度</span></span><br><span class="line"><span class="variable">$arr1</span> = <span class="title function_ invoke__">str_split</span>(<span class="variable">$str</span>);<span class="comment">//默认第二参数个为1</span></span><br><span class="line"><span class="variable">$arr2</span> = <span class="title function_ invoke__">str_split</span>(<span class="variable">$str</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例 </span></span><br><span class="line"><span class="variable">$pizza</span>  = <span class="string">&quot;piece1 piece2 piece3 piece4 piece5 piece6&quot;</span>;</span><br><span class="line"><span class="variable">$pieces</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot; &quot;</span>, <span class="variable">$pizza</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$pieces</span>[<span class="number">0</span>]; <span class="comment">// piece1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$pieces</span>[<span class="number">1</span>]; <span class="comment">// piece2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$string</span> = <span class="string">&#x27;The lazy fox jumped over the fence&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">str_contains</span>(<span class="variable">$string</span>, <span class="string">&#x27;Lazy&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;The string &quot;Lazy&quot; was found in the string&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;Lazy&quot; was not found because the case does not match&#x27;</span>;	<span class="comment">//此为输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">str_ends_with</span>(<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;All strings end with the empty string&quot;</span>;	<span class="comment">//输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;abcdef&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>); <span class="comment">// 6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// strpos — 查找字符串首次、n次出现的位置</span></span><br><span class="line"><span class="comment">// 忽视位置偏移量之前的字符进行查找</span></span><br><span class="line"><span class="variable">$newstring</span> = <span class="string">&#x27;abcdef abcdef&#x27;</span>;</span><br><span class="line"><span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$newstring</span>, <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>); <span class="comment">// $pos = 7, 不是 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;apple&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$str</span>) === <span class="string">&#x27;1f3870be274f6c49b3e31a0c6728957f&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Would you like a green or red apple?&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="3-2-2-array函数">3.2.2 array函数</h4>
<blockquote>
<p>参考：<a href="https://www.php.net/manual/zh/book.array.php">array函数</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">count — 统计数组、Countable 对象中所有元素的数量</span><br><span class="line">sort — 对数组升序排序</span><br><span class="line">list — 把数组中的值赋给一组变量</span><br><span class="line">array_flip — 交换数组中的键和值</span><br><span class="line">array_keys — 返回数组中部分的或所有的键名</span><br><span class="line">array_values — 返回数组中所有的值</span><br><span class="line">array_merge — 合并一个或多个数组</span><br><span class="line">array_reverse — 返回单元顺序相反的数组</span><br><span class="line">array_search — 在数组中搜索给定的值，如果成功则返回首个相应的键名</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$a</span>[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="number">1</span>] = <span class="number">3</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="number">2</span>] = <span class="number">5</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$a</span>));<span class="comment">// int(3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$fruits</span> = <span class="keyword">array</span>(<span class="string">&quot;lemon&quot;</span>, <span class="string">&quot;orange&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;apple&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">sort</span>(<span class="variable">$fruits</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$info</span> = <span class="keyword">array</span>(<span class="string">&#x27;coffee&#x27;</span>, <span class="string">&#x27;brown&#x27;</span>, <span class="string">&#x27;caffeine&#x27;</span>);</span><br><span class="line"><span class="comment">// 列出所有变量</span></span><br><span class="line"><span class="keyword">list</span>(<span class="variable">$drink</span>, <span class="variable">$color</span>, <span class="variable">$power</span>) = <span class="variable">$info</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$drink</span> is <span class="subst">$color</span> and <span class="subst">$power</span> makes it special.\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$input</span> = <span class="keyword">array</span>(<span class="string">&quot;oranges&quot;</span>, <span class="string">&quot;apples&quot;</span>, <span class="string">&quot;pears&quot;</span>);</span><br><span class="line"><span class="variable">$flipped</span> = <span class="title function_ invoke__">array_flip</span>(<span class="variable">$input</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$array1</span> = <span class="keyword">array</span>(<span class="string">&quot;color&quot;</span> =&gt; <span class="string">&quot;red&quot;</span>, <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line"><span class="variable">$array2</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;color&quot;</span> =&gt; <span class="string">&quot;green&quot;</span>, <span class="string">&quot;shape&quot;</span> =&gt; <span class="string">&quot;trapezoid&quot;</span>, <span class="number">4</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$array1</span>, <span class="variable">$array2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">0</span> =&gt; <span class="string">&#x27;blue&#x27;</span>, <span class="number">1</span> =&gt; <span class="string">&#x27;red&#x27;</span>, <span class="number">2</span> =&gt; <span class="string">&#x27;green&#x27;</span>, <span class="number">3</span> =&gt; <span class="string">&#x27;red&#x27;</span>);</span><br><span class="line"><span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&#x27;green&#x27;</span>, <span class="variable">$array</span>); <span class="comment">// $key = 2;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3-3-自定义函数">3.3 自定义函数</h3>
<ul>
<li>示例</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sumup</span>(<span class="params"><span class="variable">$x</span>,<span class="variable">$y</span>,<span class="variable">$z</span>=<span class="number">30</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$x</span> + <span class="variable">$y</span> + <span class="variable">$z</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">sumup</span>(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827180832828.png" alt="image-20230827180832828" style="zoom:80%;" /> 
<h3 id="3-4-运算符">3.4 运算符</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">四则运算、取余		+ - * / %</span><br><span class="line">自增自减 		  ++ -- </span><br><span class="line">连接字符串		 .</span><br></pre></td></tr></table></figure>
<blockquote>
<p>数字可以作为字符串直接使用<code>.</code>进行相连，但是必须与<code>.</code>之间有空格分开。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=	+=	-=	*=	/=	%=	.=</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;	&gt;=		&lt;	&lt;=		==	!=		===	  !==</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">与		或		异或		非</span><br><span class="line">and		or		 xor		!</span><br><span class="line">&amp;&amp;		||		</span><br></pre></td></tr></table></figure>
<ul>
<li>PHP8新特性</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数字与字符串比较</span><br></pre></td></tr></table></figure>
<h3 id="3-5-循环">3.5 循环</h3>
<ul>
<li>可以加入语句
<ul>
<li>break 结束整个循环流程</li>
<li>continue 跳过此次循环次</li>
</ul>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$num1</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$num1</span>&lt;<span class="number">4</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$num1</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$num1</span>++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$num2</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$num2</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$num2</span>++;</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="variable">$num2</span>&lt;<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$num3</span>=<span class="number">1</span>;<span class="variable">$num3</span>&lt;<span class="number">4</span>;<span class="variable">$num3</span>++)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$num3</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827183038133.png" alt="image-20230827183038133" style="zoom:80%;" /> 
<h3 id="3-6-JIT（php8新特性）">3.6 JIT（php8新特性）</h3>
<ul>
<li>
<p>JIT</p>
<p>Just-In-Time，即时编译器，最重要的新特性之一，性能提升。</p>
<p>JIT编译器将作为扩展集成到php中Opcache扩展，用于运行时将某些操作码直接转换为cpu指令。</p>
<p>仅在启用opcache的情况下，JIT才有效。</p>
</li>
<li>
<p>这里不解释了，使用方法自行查阅。</p>
</li>
</ul>
<h2 id="四、MySQL数据库">四、MySQL数据库</h2>
<h3 id="4-1-数据类型">4.1 数据类型</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tinyint		极小整数类型	0,255	-128,127</span><br><span class="line">int			整数			0，4294967295	-2147483648，2147483647</span><br><span class="line">float		单精度浮点数</span><br><span class="line">double		双精度浮点数</span><br><span class="line">decimal		定点小数m,n</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blob		二进制数据（图片、视频等）</span><br><span class="line">text		长文本数据</span><br><span class="line">char		定长字符串0-255B（很少用）</span><br><span class="line">varchar		变长字符串0-65535B</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">year		年		3B		YYYY</span><br><span class="line">date		日期		3B		YYYY-MM-DD</span><br><span class="line">time		时间		3B		HH:MM:SS</span><br><span class="line">datetime	日期时间   8B		YYYY-MM-DD HH:MM:SS</span><br><span class="line">timestamp	时间戳		4B		 YYYY-MM-DD HH:MM:SS</span><br></pre></td></tr></table></figure>
<h3 id="4-2-PHP操作MySQL">4.2 PHP操作MySQL</h3>
<ul>
<li>
<p>PDO</p>
<p>Php Data Object，php数据对象</p>
<p>由PDO连接数据库，统一了连接各种数据库的方式。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827211351549.png" alt="image-20230827211351549" style="zoom:80%;" /> 
<p>使用方法：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827211417658.png" alt="image-20230827211417658" style="zoom:80%;" /> 
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 连接，进行一次就可以，后面每次只需要直接查询即可</span></span><br><span class="line"><span class="variable">$pdo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="string">&#x27;mysql:host=localhost;dbname=test1&#x27;</span>,<span class="string">&#x27;test1&#x27;</span>,<span class="string">&#x27;test1.123&#x27;</span>);</span><br><span class="line"><span class="comment">// 添加编码要求，有时可以不用</span></span><br><span class="line"><span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&#x27;SET NAMES utf8;&#x27;</span>); </span><br><span class="line"><span class="comment">// 执行SQL语句，并取出数据保存到变量</span></span><br><span class="line"><span class="variable">$stmt</span> = <span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&#x27;SELECT * FROM `student`;&#x27;</span>);</span><br><span class="line"><span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line"><span class="variable">$arr</span> = <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">fetchAll</span>();</span><br><span class="line"><span class="comment">// 打印看看</span></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;第一个同学是&#x27;</span> . <span class="variable">$arr</span>[<span class="number">0</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827211203758.png" alt="image-20230827211203758" style="zoom:67%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827211236957.png" alt="image-20230827211236957" style="zoom:80%;" />  <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827211837481.png" alt="image-20230827211837481" style="zoom:80%;" /></p>
<h3 id="4-3-SQL语句">4.3 SQL语句</h3>
<ul>
<li>
<p>具体的SQL语句，请查看SQL语句Notes</p>
</li>
<li>
<p>注：由于数据库往往数据很多，不便于全部一次性查询传输，因此，很多时候要用到<code>LIMIT</code>进行分页查询。</p>
</li>
</ul>
<h2 id="五、PHP语法">五、PHP语法</h2>
<h3 id="5-1-超全局变量">5.1 超全局变量</h3>
<ul>
<li>
<p>PHP4.1.0之后启用</p>
<p>指PHP系统中自带的变量，在一个脚本的全部作用域中都可用。</p>
</li>
<li>
<p>全局变量</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_GET		收集来自method=&quot;get&quot;的表单中的值</span><br><span class="line">$_POST		收集来自method=&quot;post&quot;的表单中的值</span><br><span class="line">$_REQUEST	包含$_POST、$_GET、$_COOKIE</span><br><span class="line">$GLOBALS	全部变量的全局组合数组</span><br><span class="line">$_COOKIE	常用于识别用户</span><br><span class="line">$_SESSION	存储关于用户会话session的信息</span><br><span class="line">$_FILES		用来获取通过POST方法上传文件的相关信息</span><br><span class="line">$_SERVER	服务器和执行环境信息</span><br><span class="line">$_ENV		环境变量</span><br></pre></td></tr></table></figure>
<h4 id="GET">$_GET</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    if(!empty($_GET))&#123;</span><br><span class="line">        print_r($_GET);</span><br><span class="line">        echo &#x27;&lt;br&gt;&#x27;;</span><br><span class="line">        echo $_GET[&#x27;id&#x27;] . $_GET[&#x27;name&#x27;];</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;</span><br><span class="line">    学号：&lt;input type=&quot;text&quot; name=&quot;id&quot;&gt;</span><br><span class="line">    姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;点我提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>最初：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827213626444.png" alt="image-20230827213626444" style="zoom:80%;" /> 
<ul>
<li>提交后：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827213800689.png" alt="image-20230827213800689" style="zoom:80%;" /> 
<h4 id="POST">$_POST</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    if(!empty($_POST))&#123;</span><br><span class="line">        print_r($_POST);</span><br><span class="line">        echo &#x27;&lt;br&gt;&#x27;;</span><br><span class="line">        echo $_POST[&#x27;id&#x27;] . $_POST[&#x27;name&#x27;];</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    学号：&lt;input type=&quot;text&quot; name=&quot;id&quot;&gt;</span><br><span class="line">    姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;点我提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>最初：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827213948200.png" alt="image-20230827213948200" style="zoom:80%;" /> 
<ul>
<li>提交后：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827214016851.png" alt="image-20230827214016851" style="zoom:80%;" /> 
<h4 id="REQUEST">$_REQUEST</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    if(!empty($_REQUEST))&#123;</span><br><span class="line">        print_r($_REQUEST);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    学号：&lt;input type=&quot;text&quot; name=&quot;id&quot;&gt;</span><br><span class="line">    姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;点我提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>自行写了URL的GET，同时提交POST：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827214332941.png" alt="image-20230827214332941" style="zoom:80%;" /> 
<h4 id="GLOBALS">$GLOBALS</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $x = 20;</span><br><span class="line">    if(!empty($GLOBALS))&#123;</span><br><span class="line">        print_r($GLOBALS);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    学号：&lt;input type=&quot;text&quot; name=&quot;id&quot;&gt;</span><br><span class="line">    姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;点我提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827214607222.png" alt="image-20230827214607222"></p>
<h3 id="5-2-结合MySQL">5.2 结合MySQL</h3>
<ul>
<li>方法一：POST</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $pdo = new PDO(&#x27;mysql:host=localhost;dbname=test1&#x27;,&#x27;test1&#x27;,&#x27;test1.123&#x27;);</span><br><span class="line">    $pdo-&gt;query(&#x27;SET NAMES utf8;&#x27;); </span><br><span class="line">?&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    查询学号：&lt;input type=&quot;text&quot; name=&quot;id&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;点我提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">查询结果：</span><br><span class="line">&lt;?php </span><br><span class="line">    if(!empty($_POST))&#123;</span><br><span class="line">        $stmt = $pdo-&gt;prepare(&#x27;SELECT * FROM `student` WHERE `student_id` = &#x27; . $_POST[&#x27;id&#x27;] . &#x27; ;&#x27;);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $arr = $stmt-&gt;fetchAll();</span><br><span class="line">        echo $arr[0][&#x27;name&#x27;];</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>输入3后提交：</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827215850755.png" alt="image-20230827215850755" style="zoom:80%;" /> 
<ul>
<li>方法二：GET</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $pdo = new PDO(&#x27;mysql:host=localhost;dbname=test1&#x27;,&#x27;test1&#x27;,&#x27;test1.123&#x27;);</span><br><span class="line">    $pdo-&gt;query(&#x27;SET NAMES utf8;&#x27;); </span><br><span class="line">?&gt;</span><br><span class="line">查询结果：</span><br><span class="line">&lt;?php </span><br><span class="line">    if(!empty($_GET))&#123;</span><br><span class="line">        $stmt = $pdo-&gt;prepare(&#x27;SELECT * FROM `student` WHERE `student_id` = &#x27; . $_GET[&#x27;id&#x27;] . &#x27; ;&#x27;);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $arr = $stmt-&gt;fetchAll();</span><br><span class="line">        echo $arr[0][&#x27;name&#x27;];</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>这里模拟直接写在url里，以后可以写在跳转链接里如<code>www.domain.cn/artile?id=2</code></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827220225964.png" alt="image-20230827220225964" style="zoom:80%;" /> 
<h3 id="5-3-类与对象">5.3 类与对象</h3>
<ul>
<li>类是具有相同属性和操作的一组对象的集合</li>
<li>对象是类的一个实例</li>
<li>成员变量：属性</li>
<li>成员方法：行为</li>
<li>魔术方法
<ul>
<li><code>__construct</code>构造方法</li>
<li><code>__destruct</code>析构方法</li>
</ul>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span> = <span class="string">&#x27;未知status&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;未知name&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$status</span>, <span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;status = <span class="variable">$status</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;name . <span class="string">&#x27;和fun1&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;析构方法执行了&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$bai</span> = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;学生&quot;</span>,<span class="string">&quot;小白&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$bai</span>-&gt;status;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$bai</span>-&gt;<span class="title function_ invoke__">fun1</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230827222006497.png" alt="image-20230827222006497" style="zoom:80%;" /> 
<ul>
<li>类的三大特性
<ul>
<li>封装</li>
<li>继承</li>
<li>多态</li>
</ul>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$id</span>;<span class="comment">//默认的，类内、子类、类外 均可见</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$status</span>;<span class="comment">//类内、子类可见，类外不可见</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>;<span class="comment">//类内可见，子类、类外均不可见</span></span><br><span class="line">    <span class="comment">// 函数同理</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">fun2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">fun3</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HighSchoolStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$hong</span> = <span class="keyword">new</span> <span class="title class_">HighSchoolStudent</span>(<span class="string">&quot;高中生&quot;</span>,<span class="string">&quot;小红&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$hong</span>-&gt;<span class="title function_ invoke__">fun1</span>();</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 多态</span></span><br><span class="line"><span class="comment">// 实现多态的前提是先继承，再重写方法</span></span><br></pre></td></tr></table></figure>
<ul>
<li>类进阶</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 静态成员</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">fun2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Student</span>::<span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title class_">Student</span>::<span class="variable">$name</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title class_">Student</span>::<span class="title function_ invoke__">fun2</span>();</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 抽象类</span></span><br><span class="line"><span class="comment">// abstract 关键词定义抽象方法、抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun3</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 要具体的类来继承抽象类，并重写抽象方法。抽象类本身无法被实例化。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HighSchoolStudent</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun3</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        retrun <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 接口</span></span><br><span class="line"><span class="comment">// interface 关键词创建接口。要求类必须实现的方法，但不需要定义方法的具体实现过程。</span></span><br><span class="line"><span class="comment">// implements 关键词使用接口。</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">file</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun4</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun5</span>(<span class="params"><span class="variable">$x</span></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">file</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun4</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun5</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$x</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 接口常量</span></span><br><span class="line"><span class="comment">// const 创建常量</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">file</span></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">HOST</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">DB</span> = <span class="string">&quot;test1&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">USER</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">PASSWORD</span> = <span class="string">&quot;password&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">file</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$host</span> = file::<span class="variable constant_">HOST</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$db</span> = file::<span class="variable constant_">DB</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span> = file::<span class="variable constant_">USER</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = file::<span class="variable constant_">PASSWORD</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// final 类不能继承</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// parent::$name 访问父类</span></span><br><span class="line"><span class="comment">// self::$name 访问本静态类</span></span><br></pre></td></tr></table></figure>
<h3 id="5-4-命名空间">5.4 命名空间</h3>
<ul>
<li>
<p>命名空间</p>
<p>解决全局成员的命名冲突问题，借鉴了文件目录的思想</p>
<p>同一目录下不允许重名文件，不同目录下允许同名；</p>
<p>同一命名空间下不允许重名成员，不同空间下允许同名。</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 写法一</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">one</span>&#123;</span><br><span class="line">    <span class="title class_">const</span> <span class="title class_">NAME</span> = &#x27;小白&#x27;;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">two</span>&#123;</span><br><span class="line">    <span class="title class_">const</span> <span class="title class_">NAME</span> = &#x27;小黑&#x27;;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 写法二</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">one</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">NAME</span> = <span class="string">&#x27;小白&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">two</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">NAME</span> = <span class="string">&#x27;小黑&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>子命名空间</p>
<p>即命名空间再套命名空间</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">one</span>\<span class="title class_">aa</span>&#123;</span><br><span class="line">    <span class="title class_">const</span> <span class="title class_">NAME</span> = &#x27;小绿&#x27;;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">one</span>\<span class="title class_">aa</span>\<span class="title class_">AA</span>&#123;</span><br><span class="line">    <span class="title class_">const</span> <span class="title class_">NAME</span> = &#x27;小黄&#x27;;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>访问命名空间</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> \two\<span class="title function_ invoke__">fun1</span>();</span><br><span class="line"><span class="comment">// use 关键词引用命名空间</span></span><br><span class="line"><span class="comment">// as 解决名字过长、重名问题</span></span><br><span class="line"><span class="keyword">use</span> \<span class="title">one</span>\<span class="title">aa</span>\<span class="title">AA</span> <span class="keyword">as</span> <span class="title">t</span>;</span><br><span class="line"><span class="keyword">echo</span> t\<span class="title function_ invoke__">fun1</span>();</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>引入文件时解决冲突</p>
<p>文件<code>/one/one.php</code>和<code>/two/two.php</code>中均有相同名字的变量或方法。</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;one\one.php&#x27;</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;two\two.php&#x27;</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">one</span>\<span class="title">one</span> <span class="keyword">as</span> <span class="title">t1</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">two</span>\<span class="title">two</span> <span class="keyword">as</span> <span class="title">t2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> t1\<span class="title function_ invoke__">fun1</span>();</span><br><span class="line"><span class="keyword">echo</span> t2\<span class="title function_ invoke__">fun1</span>();</span><br></pre></td></tr></table></figure>
<h3 id="5-5-php8新特性">5.5 php8新特性</h3>
<ul>
<li>
<p>构造器属性提升</p>
</li>
<li>
<p>新增数据类型<code>mixed</code> 任何类型</p>
</li>
</ul>
<h2 id="六、补充内容">六、补充内容</h2>
<blockquote>
<p>来源：<a href="https://blog.csdn.net/Jack0610/article/details/110733859">CSDN:PHP</a></p>
</blockquote>
<h3 id="6-1-phpinfo">6.1 phpinfo()</h3>
<ul>
<li>phpinfo是一个函数（功能），这个函数会显示一个当前电脑（服务器）的详细的PHP信息。</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6-2-其他环境变量">6.2 其他环境变量</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828155849896.png" alt="image-20230828155849896" style="zoom:67%;" /> 
<h3 id="6-3-系统常量">6.3 系统常量</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828155942684.png" alt="image-20230828155942684" style="zoom: 67%;" /> 
<h3 id="6-4-字符串的声明方法">6.4 字符串的声明方法</h3>
<ul>
<li>在PHP语言中声明字符串有三种方式：<br>
1、用单引号声明<br>
2、用双引号声明<br>
3、用字界符声明</li>
</ul>
<p><strong>字界符声明</strong></p>
<blockquote>
<p>1、在变量后面的等号写三个小于号 &lt;&lt;&lt;<br>
2、然后在&lt;&lt;&lt;后面写上字符（建议英文大写字符）<br>
3、然后换行写上任意想写的字符<br>
4、写完后，顶行。在行最开始处，再写上&lt;&lt;&lt;后面的字符和分号。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dingjie</span> = <span class="string">&lt;&lt;&lt;ABC</span></span><br><span class="line"><span class="string">  如果</span></span><br><span class="line"><span class="string">      非要在这个测试</span></span><br><span class="line"><span class="string">    前</span></span><br><span class="line"><span class="string">        面&lt;br /&gt;</span></span><br><span class="line"><span class="string">       加上一段</span></span><br><span class="line"><span class="string">    &lt;i&gt;有趣的话&lt;/i&gt;</span></span><br><span class="line"><span class="string">    我想说，&lt;h1&gt;努力学习不好么&lt;h1&gt;</span></span><br><span class="line"><span class="string">ABC</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$dingjie</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>那双引号和单引号有什么区别呢：</strong></p>
<blockquote>
<ol>
<li>双引号解析变量，但是单引号不解析变量</li>
<li>在双引号里面插入变量，变量后面如果有英文或中文字符，会把这个字符和变量拼起来，视为一整个变量。一定要在变量后面接上特殊字符，例如空格等分开。</li>
<li>如果在双引号里面插变量的时候，后面不想有空格，可以拿大括号将变量包起来。</li>
<li>双引号解析转义字符，单引号不解析转义字符。但是单引号能解析\</li>
<li>单引号效率高于双引号，尽可能使用单引号</li>
<li>双引号和单引号可以互相嵌套，双引号中可以插入单引号，单引号当中插入变量，这个变量会被解析。</li>
<li>神奇的字符串拼接胶水——（.）点，用来拼接字符串。</li>
<li>一般将定界符声明字符串视为双引号一样的功能来看待。</li>
</ol>
</blockquote>
<h3 id="6-5-查看和判断数据类型">6.5 查看和判断数据类型</h3>
<ul>
<li>gettype（传入一个变量）能获得变量的类型</li>
<li>var_dump（传入一个变量）输出变量类型和值</li>
<li>使用is_*系列函数，is_types这一系列的函数，来进行判断某个数据属于哪种类型，如果是这个类型返回真，不是这个类型返回假。</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828160549572.png" alt="image-20230828160549572" style="zoom: 67%;" /> 
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$float</span> = <span class="number">88.8</span>;</span><br><span class="line"><span class="variable">$type</span> = <span class="title function_ invoke__">gettype</span>(<span class="variable">$float</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;aa&#x27;</span>;</span><br><span class="line"><span class="variable">$type</span> = <span class="title function_ invoke__">var_dump</span>(<span class="variable">$str</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$fo</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_bool</span>(<span class="variable">$fo</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;执行真区间&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;执行假区间&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-6-位运算">6.6 位运算</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828160805314.png" alt="image-20230828160805314" style="zoom:67%;" /> 
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//$x二进制为:</span></span><br><span class="line"><span class="variable">$x</span>=<span class="number">5</span>;</span><br><span class="line"><span class="comment">//$y二进制为:</span></span><br><span class="line"><span class="variable">$y</span>=<span class="number">8</span>;</span><br><span class="line"><span class="comment">//结果为13</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$x</span> ^ <span class="variable">$y</span>;</span><br></pre></td></tr></table></figure>
<h3 id="6-7-其他运算符">6.7 其他运算符</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828160912767.png" alt="image-20230828160912767" style="zoom:67%;" /> 
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> `ipconfig`;</span><br></pre></td></tr></table></figure>
<h3 id="6-8-文件包含">6.8 文件包含</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828161307968.png" alt="image-20230828161307968" style="zoom:67%;" /> 
<ul>
<li>
<p>include函数功能实践：<br>
创建一个<code>functions.php</code>文件,里面写上几个函数。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//functions.php文件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;aaaa&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;bbbb&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在<code>functions.php</code>的同级目录下,在创建一个<code>user.php</code>文件把<code>functions.php</code>文件包含进来。<br>
这样函数信息就可以专门放在<code>functions.php</code>里面,哪需要用到这些函数的时候,就从哪包含进来。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//user.php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;functions.php&quot;</span>;</span><br><span class="line"><span class="comment">//可以直接调用</span></span><br><span class="line"><span class="title function_ invoke__">demo</span>();</span><br><span class="line"><span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="6-9-数学常用函数">6.9 数学常用函数</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828161607956.png" alt="image-20230828161607956" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828161635687.png" alt="image-20230828161635687" style="zoom:67%;" /> 
<h3 id="6-10-字符串常用函数">6.10 字符串常用函数</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828161747968.png" alt="image-20230828161747968" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828161821803.png" alt="image-20230828161821803" style="zoom: 80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828161848093.png" alt="image-20230828161848093" style="zoom: 80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828161939637.png" alt="image-20230828161939637" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828161958685.png" alt="image-20230828161958685" style="zoom:80%;" /> 
<h3 id="6-11-时间信息函数">6.11 时间信息函数</h3>
<ul>
<li>getdate</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$mytime</span> = <span class="title function_ invoke__">getdate</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;年 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;year&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;月 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;mon&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;日 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;mday&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;时 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;hours&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;分 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;minutes&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;秒 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;seconds&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;一个小时中的第几钟 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;minutes&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;这是一分钟的第几秒 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;seconds&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;星期名称 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;weekday&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;月份名称 :&quot;</span>.<span class="variable">$mytime</span>[<span class="string">&#x27;month&#x27;</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;时间戳   :&quot;</span>.<span class="variable">$mytime</span>[<span class="number">0</span>].<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6-12-操作数组函数">6.12 操作数组函数</h3>
<ul>
<li>这些函数，也是面试中基础面试中最爱问到的问题。</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828162215673.png" alt="image-20230828162215673" style="zoom:80%;" /> 
<ul>
<li>补充</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828162246858.png" alt="image-20230828162246858" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828162303216.png" alt="image-20230828162303216" style="zoom:80%;" /> 
<h3 id="6-13-PHP正则表达式">6.13 PHP正则表达式</h3>
<ul>
<li>
<p>正则表达是会在开发中经常看到，它主要用在以下一些地方：</p>
<ul>
<li>匹配邮箱、手机号码、验证码、替换敏感的关键词。例如：涉及政治和骂人的话</li>
</ul>
</li>
<li>
<p>PHP的正则表达示定界符的规定如下：</p>
<ul>
<li>定界符，不能用<code>a-zA-Z0-9\ </code>其他的都可以用。</li>
<li>必须成对出现，有开始就有结束。</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828162524251.png" alt="image-20230828162524251" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828162549298.png" alt="image-20230828162549298" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828162601672.png" alt="image-20230828162601672" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828162612354.png" alt="image-20230828162612354" style="zoom:80%;" /> 
<ul>
<li>写法</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">例子						说明</span><br><span class="line">/中间写正则/				正确</span><br><span class="line">$中间写正则$				正确</span><br><span class="line">%中间写正则%			    正确</span><br><span class="line">^中间写正则^			    正确</span><br><span class="line">@中间写正则@			    正确</span><br><span class="line">(中间写正则)				错误</span><br><span class="line">A中间写正则A			    错误</span><br><span class="line"></span><br><span class="line">\ 是转义字符，如果在以后正则表达示里面需要匹配/:</span><br><span class="line">写法：/ \/ /</span><br><span class="line">写法：# \/ #</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>匹配</p>
<p><code>preg_match ( string $正则 , string $字符串 , array&amp;$结果] )</code></p>
<p>功能：</p>
<p>根据<code>正则变量</code> ，匹配<code>字符串变量</code>。</p>
<p>如果存在则返回匹配的个数，把匹配到的结果放到<code>$结果变量</code>里。如果没有匹配到结果返回0。</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$zz</span> = <span class="string">&#x27;/wq/&#x27;</span>;</span><br><span class="line"><span class="variable">$string</span> = <span class="string">&#x27;ssssswqaaaaaa&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$zz</span>, <span class="variable">$string</span>, <span class="variable">$matches</span>))&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;匹配到了，结果为：&#x27;</span>;</span><br><span class="line">   <span class="title function_ invoke__">var_dump</span>(<span class="variable">$matches</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;没有匹配到&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6-14-正则函数">6.14 正则函数</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828163049264.png" alt="image-20230828163049264" style="zoom:80%;" /> 
<h3 id="6-15-文件系统管理">6.15 文件系统管理</h3>
<blockquote>
<p>我们会点鼠标右键删除文件、会control+c（或右键）复制、粘贴文件，会新建一些文件，检测这个文件是不是只读文件。在电脑里面进行的这些操作，在代码里面如果能操作就好了。因为，如果有了这些操作。我们能做很多事情了：可不可以写入修改配置文件、是不是可以做PHP安装的时候检测文件的权限、是不是可以做生成Html文件等等很多不同的操作，总之其他太多太多的地方用到了文件操作。</p>
</blockquote>
<h4 id="读取文件">读取文件</h4>
<p>1、readfile读取文件函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">readfile</span> ( <span class="attr">string</span>: $文件名)</span><br><span class="line">功能：传入一个文件路径，输出一个文件。</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   	<span class="comment">//linux类的读了方式</span></span><br><span class="line">   	<span class="title function_ invoke__">readfile</span>(<span class="string">&quot;/home/paul/test.txt&quot;</span>);</span><br><span class="line">   	<span class="comment">//windows类的读取方式</span></span><br><span class="line">   	<span class="title function_ invoke__">readfile</span>(<span class="string">&quot;c:\\oldboy\oldboy\boot.ini&quot;</span>);</span><br><span class="line">	<span class="comment">// 注意：上面的代码中windows的斜线是\斜线，可能会转义掉一些字符。因此，我们写的时候写上两个斜线。</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>2、file_get_contents打开文件函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$filename</span> = <span class="string">&#x27;NoAlike.txt&#x27;</span>;</span><br><span class="line">   <span class="variable">$filestring</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">   <span class="keyword">echo</span> <span class="variable">$filestring</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>3、fopen、fread、fclose操作读取文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">resource <span class="title function_ invoke__">fopen</span>	 	    ( <span class="keyword">string</span> $文件名, <span class="keyword">string</span> 模式)</span><br><span class="line"><span class="keyword">string</span> <span class="title function_ invoke__">fread</span> 			( resource $操作资源, <span class="keyword">int</span> 读取长度)</span><br><span class="line"><span class="keyword">bool</span> <span class="title function_ invoke__">fclose</span> 			( resource $操作资源 )</span><br></pre></td></tr></table></figure>
<p>fopen的模式：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828163530559.png" alt="image-20230828163530559" style="zoom:80%;" /> 
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="comment">//你可以创建一个NoAlike.txt，以只读模式打开</span></span><br><span class="line">   <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;NoAlike.txt&#x27;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">   <span class="comment">//var_dump()操作一下$fp看看效果，输出的是不是只有类型提示的是resource</span></span><br><span class="line">   <span class="title function_ invoke__">var_dump</span>(<span class="variable">$fp</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="创建和修改文件内容">创建和修改文件内容</h4>
<p>1、file_put_contents写入文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_put_contents</span> ( <span class="keyword">string</span> $文件路径, <span class="keyword">string</span> $写入数据)</span><br><span class="line">功能：向指定的文件当中写入一个字符串，如果文件不存在则创建文件。返回的是写入的字节长度</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$data</span> = <span class="string">&quot;在PHP中文网学好PHP，妹子票子不再话下！&quot;</span>;</span><br><span class="line">   <span class="variable">$numbytes</span> = <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="variable">$data</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="variable">$numbytes</span>)&#123;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&#x27;写入成功，我们读取看看结果试试：&#x27;</span>;</span><br><span class="line">       <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;test.txt&#x27;</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&#x27;写入失败或者没有权限，注意检查&#x27;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>2、fwrite配合fopen进行写入操作</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$filename</span> = <span class="string">&#x27;test.txt&#x27;</span>;</span><br><span class="line">   <span class="variable">$fp</span>= <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">   <span class="variable">$len</span> = <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="string">&#x27;我是一只来自北方的狼，却在南方冻成了狗&#x27;</span>);</span><br><span class="line">   <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line">   <span class="keyword">print</span> <span class="variable">$len</span> .<span class="string">&#x27;字节被写入了\n&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">代码说明：</span><br><span class="line">· 不论有没有新建都会打开文件重新写入</span><br><span class="line">· 原有的文件内容会被覆盖掉</span><br><span class="line">· 文件不存在会创建</span><br></pre></td></tr></table></figure>
<h4 id="创建临时文件">创建临时文件</h4>
<ul>
<li>
<p>我们之前创建的文件都是永久文件，而创建临时文件在我们平时的项目开发中也非常有用。</p>
<p>创建临时文件的好处：</p>
<p>文件操作完成后即删除，不需要去维护这个文件的删除状态。</p>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="comment">//创建了一个临时文件</span></span><br><span class="line">   <span class="variable">$handle</span> = <span class="title function_ invoke__">tmpfile</span>();</span><br><span class="line">   <span class="comment">//向里面写入了数据</span></span><br><span class="line">   <span class="variable">$numbytes</span> = <span class="title function_ invoke__">fwrite</span>(<span class="variable">$handle</span>, <span class="string">&#x27;写入临时文件&#x27;</span>);</span><br><span class="line">   <span class="comment">//关闭临时文件，文件即被删除</span></span><br><span class="line">   <span class="title function_ invoke__">fclose</span>(<span class="variable">$handle</span>);</span><br><span class="line">   <span class="keyword">echo</span>  <span class="string">&#x27;向临时文件中写入了&#x27;</span>.<span class="variable">$numbytes</span> . <span class="string">&#x27;个字节&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="移动、拷贝和删除文件">移动、拷贝和删除文件</h4>
<p>1、重命名文件：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">rename</span>($旧名,$新名);</span><br><span class="line">功能：这个函数返回一个<span class="keyword">bool</span>值，将旧的名字改为新的名字。</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="comment">//旧文件名</span></span><br><span class="line">   <span class="variable">$filename</span> = <span class="string">&#x27;test.txt&#x27;</span>;</span><br><span class="line">   <span class="comment">//新文件名</span></span><br><span class="line">   <span class="variable">$filename2</span> = <span class="variable">$filename</span> . <span class="string">&#x27;.old&#x27;</span>;</span><br><span class="line">   <span class="comment">//复制文件</span></span><br><span class="line">   <span class="title function_ invoke__">rename</span>(<span class="variable">$filename</span>, <span class="variable">$filename2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>2、复制文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">copy</span>(源文件,目标文件)</span><br><span class="line">功能：将指定路径的源文件，复制一份到目标文件的位置。</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="comment">//旧文件名</span></span><br><span class="line">   <span class="variable">$filename</span> = <span class="string">&#x27;copy.txt&#x27;</span>;</span><br><span class="line">   <span class="comment">//新文件名</span></span><br><span class="line">   <span class="variable">$filename2</span> = <span class="variable">$filename</span> . <span class="string">&#x27;_backup&#x27;</span>;</span><br><span class="line">   <span class="comment">//修改名字。</span></span><br><span class="line">   <span class="title function_ invoke__">copy</span>(<span class="variable">$filename</span>, <span class="variable">$filename2</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>3、删除文件</p>
<blockquote>
<p>删除文件就是将指定路径的一个文件删除，不过这个删除是直接删除。使用的是windows电脑，你在回收站看不到这个文件，你只会发现这个文件消失了。</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">unlink</span>(指定路径的文件)</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$filename</span> = <span class="string">&#x27;test.txt&#x27;</span>;</span><br><span class="line">   <span class="keyword">if</span> (<span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">       <span class="keyword">echo</span>  <span class="string">&quot;删除文件成功 <span class="subst">$filename</span>!\n&quot;</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="keyword">echo</span>  <span class="string">&quot;删除 <span class="subst">$filename</span> 失败!\n&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>4、检测文件属性函数</p>
<p>假设安装界面的网址是：install.php，安装的锁文件是install.lock。我们就可以检测install.lock文件是否存在。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;install.lock&#x27;</span>))&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&#x27;已安装，请不要再次进行安装&#x27;</span>;</span><br><span class="line">   <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="文件权限设置">文件权限设置</h4>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//修改linux系统/var/wwwroot/某文件权限为755</span></span><br><span class="line"><span class="title function_ invoke__">chmod</span>(<span class="string">&quot;/var/wwwroot/index.html&quot;</span>, <span class="number">755</span>);  </span><br><span class="line"><span class="title function_ invoke__">chmod</span>(<span class="string">&quot;/var/wwwroot/index.html&quot;</span>, <span class="string">&quot;u+rwx,go+rx&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">chmod</span>(<span class="string">&quot;/somedir/somefile&quot;</span>, <span class="number">0755</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="6-16-文件属性函数">6.16 文件属性函数</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828164401418.png" alt="image-20230828164401418" style="zoom:80%;" /> 
<h3 id="6-17-目录处理函数">6.17 目录处理函数</h3>
<ul>
<li>php 目录处理函数处理文件夹的基本思想如下：
<ol>
<li>读取某个路径的时候判断是否是文件夹</li>
<li>是文件夹的话，打开指定文件夹，返回文件目录的资源变量</li>
<li>使用readdir读取一次目录中的文件，目录指针向后偏移一次</li>
<li>使用readdir读取到最后，没有可读的文件返回false</li>
<li>关闭文件目录</li>
</ol>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828164525058.png" alt="image-20230828164525058" style="zoom:80%;" /> 
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//设置打开的目录是D盘</span></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&quot;d:/&quot;</span>;</span><br><span class="line"><span class="comment">//判断是否是文件夹，是文件夹</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_dir</span>(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$dh</span> = <span class="title function_ invoke__">opendir</span>(<span class="variable">$dir</span>)) &#123;</span><br><span class="line">      <span class="comment">//读取到最后返回false，停止循环</span></span><br><span class="line">      <span class="keyword">while</span> ((<span class="variable">$file</span> = <span class="title function_ invoke__">readdir</span>(<span class="variable">$dh</span>)) !== <span class="literal">false</span>) &#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&quot;文件名为: <span class="subst">$file</span> : 文件的类型是: &quot;</span> . <span class="title function_ invoke__">filetype</span>(<span class="variable">$dir</span> . <span class="variable">$file</span>) . <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_ invoke__">closedir</span>(<span class="variable">$dh</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="6-18-文件路径函数">6.18 文件路径函数</h3>
<ul>
<li>我们经常会遇到处理文件路径的情况。例如：
<ol>
<li>文件后缀需要取出来</li>
<li>路径需要取出名字不取目录</li>
<li>只需要取出路径名中的目录路径</li>
<li>或者把网址中的各个部份进行解析取得独立值</li>
<li>甚至是自己组成一个url出来</li>
</ol>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/phpnotes/image-20230828164824785.png" alt="image-20230828164824785" style="zoom:80%;" /> 
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$path_parts</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="string">&#x27;d:/www/index.inc.php&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;文件目录名：&#x27;</span>.<span class="variable">$path_parts</span>[<span class="string">&#x27;dirname&#x27;</span>].<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;文件全名：&#x27;</span>.<span class="variable">$path_parts</span>[<span class="string">&#x27;basename&#x27;</span>].<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;文件扩展名：&#x27;</span>.<span class="variable">$path_parts</span>[<span class="string">&#x27;extension&#x27;</span>].<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不包含扩展的文件名：&#x27;</span>.<span class="variable">$path_parts</span>[<span class="string">&#x27;filename&#x27;</span>].<span class="string">&quot;&lt;br /&gt;&quot;</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="七、实战补充">七、实战补充</h2>
<h3 id="7-1-文件留言本">7.1 文件留言本</h3>
<ul>
<li>文件结构</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php		展示输入框和留言内容</span><br><span class="line">write.php 		向message.txt写入数据</span><br><span class="line">message.txt 		存入聊天内容</span><br></pre></td></tr></table></figure>
<p><code>index.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//设置时区</span></span><br><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&#x27;PRC&#x27;</span>);</span><br><span class="line"><span class="comment">//读了内容</span></span><br><span class="line">@<span class="variable">$string</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;message.txt&#x27;</span>);</span><br><span class="line"><span class="comment">//如果$string 不为空的时候执行，也就是message.txt中有留言数据</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$string</span>)) &#123;</span><br><span class="line">    <span class="comment">//每一段留言有一个分格符，但是最后多出了一个&amp;^。因此，我们要将&amp;^删掉</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="title function_ invoke__">rtrim</span>(<span class="variable">$string</span>, <span class="string">&#x27;&amp;^&#x27;</span>);</span><br><span class="line">    <span class="comment">//以&amp;^切成数组</span></span><br><span class="line">    <span class="variable">$arr</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;&amp;^&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line">    <span class="comment">//将留言内容读取</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="comment">//将用户名和内容分开</span></span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$username</span>, <span class="variable">$content</span>, <span class="variable">$time</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;$#&#x27;</span>, <span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;用户名为&lt;font color=&quot;gree&quot;&gt;&#x27;</span> . <span class="variable">$username</span> . <span class="string">&#x27;&lt;/font&gt;内容为&lt;font color=&quot;red&quot;&gt;&#x27;</span> . <span class="variable">$content</span> . <span class="string">&#x27;&lt;/font&gt;时间为&#x27;</span> . <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>, <span class="variable">$time</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;hr /&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;h1&gt;基于文件的留言本演示&lt;/h1&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;write.php&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> /&gt;&lt;br /&gt;</span><br><span class="line">    留言内容：&lt;textarea  name=<span class="string">&quot;content&quot;</span>&gt;&lt;/textarea&gt;&lt;br /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>
<p><code>write.php</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//追加方式打开文件</span></span><br><span class="line"><span class="variable">$fp</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;message.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="comment">//设置时间</span></span><br><span class="line"><span class="variable">$time</span>=<span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="comment">//得到用户名</span></span><br><span class="line"><span class="variable">$username</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line"><span class="comment">//得到内容</span></span><br><span class="line"><span class="variable">$content</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line"><span class="comment">//组合写入的字符串：内容和用户之间分开，使用$#</span></span><br><span class="line"><span class="comment">//行与行之间分开，使用&amp;^</span></span><br><span class="line"><span class="variable">$string</span>=<span class="variable">$username</span>.<span class="string">&#x27;$#&#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;$#&#x27;</span>.<span class="variable">$time</span>.<span class="string">&#x27;&amp;^&#x27;</span>;</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="variable">$string</span>);</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>《RegExp正则表达式》Notes</title>
    <url>/butterflyblog/2023/04/05/%E3%80%8ARegExp%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《RegExp正则表达式》Notes</h1>
<blockquote>
<p>@Seymour0314 来源菜鸟教程 2023-04-05</p>
</blockquote>
<h2 id="第一章-语法">第一章 语法</h2>
<h3 id="普通字符">普通字符</h3>
<blockquote>
<p>普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。</p>
</blockquote>
<ul>
<li>[]</li>
<li>[^]</li>
<li>[-]</li>
<li>.</li>
<li>\s 与 \S</li>
<li>\w</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>[ABC]</strong></td>
<td style="text-align:left">匹配 <strong>[…]</strong> 中的所有字符，例如 <strong>[aeiou]</strong> 匹配字符串 “google runoob taobao” 中所有的 e o u a 字母。<img src="https://www.runoob.com/wp-content/uploads/2014/03/E691DDE1-E5CB-4EA8-8D16-759BD0D2B09D.jpg" alt="img" style="zoom: 50%;" /></td>
</tr>
<tr>
<td style="text-align:left"><strong>[^ABC]</strong></td>
<td style="text-align:left">匹配除了 <strong>[…]</strong> 中字符的所有字符，例如 <strong>[^aeiou]</strong> 匹配字符串 “google runoob taobao” 中除了 e o u a 字母的所有字母。<img src="https://www.runoob.com/wp-content/uploads/2014/03/ED971D92-30F4-4768-A2C7-02A84A3A9DEB.jpg" alt="img" style="zoom:50%;" /></td>
</tr>
<tr>
<td style="text-align:left"><strong>[A-Z]</strong></td>
<td style="text-align:left">[A-Z] 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母。<img src="https://www.runoob.com/wp-content/uploads/2014/03/C5E357BD-65E3-4EB3-9D80-10D096F19287.jpg" alt="img" style="zoom:50%;" /></td>
</tr>
<tr>
<td style="text-align:left"><strong>.</strong></td>
<td style="text-align:left">匹配除换行符（\n、\r）之外的任何单个字符，相等于 <code>[^\n\r]</code>。<img src="https://www.runoob.com/wp-content/uploads/2014/03/0FD7E77D-38A7-43BC-B51A-7DBA23A77756.jpg" alt="img" style="zoom:50%;" /></td>
</tr>
<tr>
<td style="text-align:left"><strong>[\s\S]</strong></td>
<td style="text-align:left">匹配所有。\s 是匹配所有空白符，包括换行，\S 非空白符，不包括换行。<img src="https://www.runoob.com/wp-content/uploads/2014/03/47CA6C59-64CF-433A-909E-1E342349A4E0.jpg" alt="img" style="zoom:50%;" /></td>
</tr>
<tr>
<td style="text-align:left"><strong>\w</strong></td>
<td style="text-align:left">匹配字母、数字、下划线。等价于 [A-Za-z0-9_]<img src="https://www.runoob.com/wp-content/uploads/2014/03/F35A5971-3519-4CAE-8BEC-9DE8F4A55257.jpg" alt="img" style="zoom:50%;" /></td>
</tr>
</tbody>
</table>
<h3 id="非打印字符">非打印字符</h3>
<p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p>
<table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">\cx</td>
<td style="text-align:left">匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td>
</tr>
<tr>
<td style="text-align:left">\f</td>
<td style="text-align:left">匹配一个换页符。等价于 \x0c 和 \cL。</td>
</tr>
<tr>
<td style="text-align:left">\n</td>
<td style="text-align:left">匹配一个换行符。等价于 \x0a 和 \cJ。</td>
</tr>
<tr>
<td style="text-align:left">\r</td>
<td style="text-align:left">匹配一个回车符。等价于 \x0d 和 \cM。</td>
</tr>
<tr>
<td style="text-align:left">\s</td>
<td style="text-align:left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意 Unicode 正则表达式会匹配全角空格符。</td>
</tr>
<tr>
<td style="text-align:left">\S</td>
<td style="text-align:left">匹配任何非空白字符。等价于 <code>[^ \f\n\r\t\v]</code>。</td>
</tr>
<tr>
<td style="text-align:left">\t</td>
<td style="text-align:left">匹配一个制表符。等价于 \x09 和 \cI。</td>
</tr>
<tr>
<td style="text-align:left">\v</td>
<td style="text-align:left">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td>
</tr>
</tbody>
</table>
<h3 id="特殊字符">特殊字符</h3>
<p>所谓特殊字符，就是一些有特殊含义的字符，如上面说的 runoo*b 中的 *，简单的说就是表示任何字符串的意思。如果要查找字符串中的 * 符号，则需要对 * 进行转义，即在其前加一个 <code>\</code>，runo*ob 匹配字符串 runo*ob。</p>
<p>许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符&quot;转义&quot;，即，将反斜杠字符**** 放在它们前面。下表列出了正则表达式中的特殊字符：</p>
<table>
<thead>
<tr>
<th style="text-align:left">特别字符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">$</td>
<td style="text-align:left">匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 <code>$ </code>也匹配 ‘\n’ 或 ‘\r’。要匹配<code>$</code>字符本身，请使用 $。</td>
</tr>
<tr>
<td style="text-align:left">( )</td>
<td style="text-align:left">标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td>
</tr>
<tr>
<td style="text-align:left">*</td>
<td style="text-align:left">匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 *。</td>
</tr>
<tr>
<td style="text-align:left">+</td>
<td style="text-align:left">匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td>
</tr>
<tr>
<td style="text-align:left">.</td>
<td style="text-align:left">匹配除换行符 \n 之外的任何单字符。要匹配 . ，请使用 . 。</td>
</tr>
<tr>
<td style="text-align:left">[</td>
<td style="text-align:left">标记一个中括号表达式的开始。要匹配 [，请使用 [。</td>
</tr>
<tr>
<td style="text-align:left">?</td>
<td style="text-align:left">匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 ?。</td>
</tr>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:left">将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。‘\n’ 匹配换行符。序列 ‘\’ 匹配 &quot;&quot;，而 ‘(’ 则匹配 “(”。</td>
</tr>
<tr>
<td style="text-align:left">^</td>
<td style="text-align:left">匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。要匹配 ^ 字符本身，请使用 ^。</td>
</tr>
<tr>
<td style="text-align:left">{</td>
<td style="text-align:left">标记限定符表达式的开始。要匹配 {，请使用 {。</td>
</tr>
<tr>
<td style="text-align:left">|</td>
<td style="text-align:left">指明两项之间的一个选择。要匹配 |，请使用 |。</td>
</tr>
</tbody>
</table>
<h3 id="限定符">限定符</h3>
<p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 ***** 或 <strong>+</strong> 或 <strong>?</strong> 或 <strong>{n}</strong> 或 <strong>{n,}</strong> 或 <strong>{n,m}</strong> 共6种。</p>
<p>正则表达式的限定符有：</p>
<table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">*</td>
<td style="text-align:left">匹配前面的子表达式零次或多次。例如，zo* 能匹配 <strong>“z”</strong> 以及 <strong>“zoo”</strong>。***** 等价于 <strong>{0,}</strong>。</td>
</tr>
<tr>
<td style="text-align:left">+</td>
<td style="text-align:left">匹配前面的子表达式一次或多次。例如，<strong>zo+</strong> 能匹配 <strong>“zo”</strong> 以及 &quot;<strong>zoo&quot;</strong>，但不能匹配 <strong>“z”</strong>。<strong>+</strong> 等价于 <strong>{1,}</strong>。</td>
</tr>
<tr>
<td style="text-align:left">?</td>
<td style="text-align:left">匹配前面的子表达式零次或一次。例如，<strong>do(es)?</strong> 可以匹配 <strong>“do”</strong> 、 <strong>“does”</strong>、 <strong>“doxy”</strong> 中的 <strong>“do”</strong> 和 <strong>“does”</strong>。<strong>?</strong> 等价于 <strong>{0,1}</strong>。<img src="https://www.runoob.com/wp-content/uploads/2014/03/CA742DA3-826D-463B-85F5-316DAB3515C1.jpeg" alt="img" style="zoom: 25%;" /></td>
</tr>
<tr>
<td style="text-align:left">{n}</td>
<td style="text-align:left">n 是一个非负整数。匹配确定的 <strong>n</strong> 次。例如，<strong>o{2}</strong> 不能匹配 <strong>“Bob”</strong> 中的 <strong>o</strong>，但是能匹配 <strong>“food”</strong> 中的两个 <strong>o</strong>。</td>
</tr>
<tr>
<td style="text-align:left">{n,}</td>
<td style="text-align:left">n 是一个非负整数。至少匹配n 次。例如，<strong>o{2,}</strong> 不能匹配 <strong>“Bob”</strong> 中的 <strong>o</strong>，但能匹配 <strong>“foooood”</strong> 中的所有 <strong>o</strong>。<strong>o{1,}</strong> 等价于 <strong>o+</strong>。<strong>o{0,}</strong> 则等价于 o*。</td>
</tr>
<tr>
<td style="text-align:left">{n,m}</td>
<td style="text-align:left">m 和 n 均为非负整数，其中 n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，<strong>o{1,3}</strong> 将匹配 <strong>“fooooood”</strong> 中的前三个 <strong>o</strong>。<strong>o{0,1}</strong> 等价于 <strong>o?</strong>。请注意在逗号和两个数之间不能有空格。</td>
</tr>
</tbody>
</table>
<blockquote>
<p><code>*</code> 和 <code>+</code> 限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个 <code>? </code>就可以实现非贪婪或最小匹配。</p>
<p>例如，您可能搜索 HTML 文档，以查找在 <strong>h1</strong> 标签内的内容。HTML 代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>RUNOOB-菜鸟教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>**贪婪：**下面的表达式匹配从开始小于符号 (&lt;) 到关闭 h1 标记的大于符号 (&gt;) 之间的所有内容。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/&lt;.*&gt;/</span><br></pre></td></tr></table></figure>
<img src="https://www.runoob.com/wp-content/uploads/2014/03/AD8F3320-2F2E-4513-9BB5-84450D62783D.jpg" alt="img" style="zoom: 50%;" />
<p>**非贪婪：**如果您只需要匹配开始和结束 h1 标签，下面的非贪婪表达式只匹配 <h1></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/&lt;.*?&gt;/</span><br></pre></td></tr></table></figure>
<img src="https://www.runoob.com/wp-content/uploads/2014/03/A6E72665-CE61-46F4-A72B-A34BC13F5820.jpg" alt="img" style="zoom:50%;" />
<p>也可以使用以下正则表达式来匹配 h1 标签，表达式则是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/&lt;\w+?&gt;/</span><br></pre></td></tr></table></figure>
<img src="https://www.runoob.com/wp-content/uploads/2014/03/C6E89F76-D059-4600-A507-74C42306A790.jpg" alt="img" style="zoom:50%;" />
<p>通过在 *、+ 或 ? 限定符之后放置 ?，该表达式从&quot;贪婪&quot;表达式转换为&quot;非贪婪&quot;表达式或者最小匹配。</p>
</blockquote>
<h3 id="定位符">定位符</h3>
<p>定位符使您能够将正则表达式固定到行首或行尾。</p>
<p>它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。</p>
<p>定位符用来描述字符串或单词的边界，<strong>^</strong> 和 <strong>$</strong> 分别指字符串的开始与结束，<strong>\b</strong> 描述单词的前或后边界，<strong>\B</strong> 表示非单词边界。</p>
<p>正则表达式的定位符有：</p>
<table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">^</td>
<td style="text-align:left">匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。</td>
</tr>
<tr>
<td style="text-align:left">$</td>
<td style="text-align:left">匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。</td>
</tr>
<tr>
<td style="text-align:left">\b</td>
<td style="text-align:left">匹配一个单词边界，即字与空格间的位置。</td>
</tr>
<tr>
<td style="text-align:left">\B</td>
<td style="text-align:left">非单词边界匹配。</td>
</tr>
</tbody>
</table>
<p><strong>注意</strong>：不能将限定符与定位符一起使用。由于在紧靠换行或者单词边界的前面或后面不能有一个以上位置，因此不允许诸如 <strong>^*</strong> 之类的表达式。</p>
<p>若要匹配一行文本开始处的文本，请在正则表达式的开始使用 <strong>^</strong> 字符。不要将 <strong>^</strong> 的这种用法与中括号表达式内的用法混淆。</p>
<p>若要匹配一行文本的结束处的文本，请在正则表达式的结束处使用 <strong>$</strong> 字符。</p>
<p>若要在搜索章节标题时使用定位点，下面的正则表达式匹配一个章节标题，该标题只包含两个尾随数字，并且出现在行首：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/^Chapter [<span class="number">1</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">0</span>,<span class="number">1</span>&#125;/</span><br></pre></td></tr></table></figure>
<p>真正的章节标题不仅出现行的开始处，而且它还是该行中仅有的文本。它既出现在行首又出现在同一行的结尾。下面的表达式能确保指定的匹配只匹配章节而不匹配交叉引用。通过创建只匹配一行文本的开始和结尾的正则表达式，就可做到这一点。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/^Chapter [<span class="number">1</span>-<span class="number">9</span>][<span class="number">0</span>-<span class="number">9</span>]&#123;<span class="number">0</span>,<span class="number">1</span>&#125;$/</span><br></pre></td></tr></table></figure>
<p>匹配单词边界稍有不同，但向正则表达式添加了很重要的能力。单词边界是单词和空格之间的位置。非单词边界是任何其他位置。下面的表达式匹配单词 Chapter 的开头三个字符，因为这三个字符出现在单词边界后面：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/\bCha/</span><br></pre></td></tr></table></figure>
<p><strong>\b</strong> 字符的位置是非常重要的。如果它位于要匹配的字符串的开始，它在单词的开始处查找匹配项。如果它位于字符串的结尾，它在单词的结尾处查找匹配项。例如，下面的表达式匹配单词 Chapter 中的字符串 ter，因为它出现在单词边界的前面：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/ter\b/</span><br></pre></td></tr></table></figure>
<p>下面的表达式匹配 Chapter 中的字符串 apt，但不匹配 aptitude 中的字符串 apt：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/\Bapt/</span><br></pre></td></tr></table></figure>
<p>字符串 apt 出现在单词 Chapter 中的非单词边界处，但出现在单词 aptitude 中的单词边界处。对于 <strong>\B</strong> 非单词边界运算符，不可以匹配单词的开头或结尾，如果是下面的表达式，就不匹配 Chapter 中的 Cha：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">\BCha</span><br></pre></td></tr></table></figure>
<h3 id="选择">选择</h3>
<p>用圆括号 <strong>()</strong> 将所有选择项括起来，相邻的选择项之间用 <strong>|</strong> 分隔。</p>
<p><strong>()</strong> 表示捕获分组，<strong>()</strong> 会把每个分组里的匹配的值保存起来， 多个匹配值可以通过数字 n 来查看(<strong>n</strong> 是一个数字，表示第 n 个捕获组的内容)。</p>
<img src="https://www.runoob.com/wp-content/uploads/2014/03/366574CC-3706-4B4C-8782-1BFF4CF57582.jpg" alt="img" style="zoom:50%;" />
<img src="https://www.runoob.com/wp-content/uploads/2014/03/82A7298A-2A94-49E3-AA27-A7778EE89711.jpg" alt="img" style="zoom:50%;" />
<blockquote>
<p>但用圆括号会有一个副作用，使相关的匹配会被缓存，此时可用 <strong>?:</strong> 放在第一个选项前来消除这种副作用。</p>
<p>其中 <strong>?:</strong> 是非捕获元之一，还有两个非捕获元是 <strong>?=</strong> 和 <strong>?!</strong>，这两个还有更多的含义，前者为正向预查，在任何开始匹配圆括号内的正则表达式模式的位置来匹配搜索字符串，后者为负向预查，在任何开始不匹配该正则表达式模式的位置来匹配搜索字符串。</p>
</blockquote>
<h4 id="、-、-、-区别">?=、?&lt;=、?!、?&lt;! 区别</h4>
<p><strong>exp1(?=exp2)</strong>：查找 exp2 前面的 exp1。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/03/reg-111.jpg" alt="img"></p>
<p><strong>(?&lt;=exp2)exp1</strong>：查找 exp2 后面的 exp1。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/03/reg-222.jpg" alt="img"></p>
<p><strong>exp1(?!exp2)</strong>：查找后面不是 exp2 的 exp1。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/03/reg-333.jpg" alt="img"></p>
<p><strong>(?&lt;!exp2)exp1</strong>：查找前面不是 exp2 的 exp1。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2014/03/reg-444.jpg" alt="img"></p>
<h3 id="反向引用">反向引用</h3>
<p>对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。</p>
<ul>
<li>每个缓冲区都可以使用 <strong>\n</strong> 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。</li>
</ul>
<p>可以使用非捕获元字符 <strong>?:</strong>、<strong>?=</strong> 或 <strong>?!</strong> 来重写捕获，忽略对相关匹配的保存。</p>
<p>反向引用的最简单的、最有用的应用之一，是提供查找文本中两个相同的相邻单词的匹配项的能力。以下面的句子为例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Is is the cost of of gasoline going up up?</span><br></pre></td></tr></table></figure>
<p>上面的句子很显然有多个重复的单词。如果能设计一种方法定位该句子，而不必查找每个单词的重复出现，那该有多好。下面的正则表达式使用单个子表达式来实现这一点：</p>
<p>查找重复的单词：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Is is the cost of of gasoline going up up&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> patt1 = <span class="regexp">/\b([a-z]+) \1\b/igm</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(str.<span class="title function_">match</span>(patt1));<span class="comment">//Is is,of of,up up</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>捕获的表达式，正如 <strong>[a-z]+</strong> 指定的，包括一个或多个字母。正则表达式的第二部分是对以前捕获的子匹配项的引用，即，单词的第二个匹配项正好由括号表达式匹配。<strong>\1</strong> 指定第一个子匹配项。</p>
<p>单词边界元字符确保只检测整个单词。否则，诸如 “is issued” 或 “this is” 之类的词组将不能正确地被此表达式识别。</p>
<p>正则表达式后面的全局标记 <strong>g</strong> 指定将该表达式应用到输入字符串中能够查找到的尽可能多的匹配。</p>
<p>表达式的结尾处的不区分大小写 <strong>i</strong> 标记指定不区分大小写。</p>
<p>多行标记 <strong>m</strong> 指定换行符的两边可能出现潜在的匹配。</p>
</blockquote>
<p>反向引用还可以将通用资源指示符 (URI) 分解为其组件。假定您想将下面的 URI 分解为协议（ftp、http 等等）、域地址和页/路径：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">https</span>:<span class="comment">//www.runoob.com:80/html/html-tutorial.html</span></span><br></pre></td></tr></table></figure>
<p>输出所有匹配的数据：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;https://www.runoob.com:80/html/html-tutorial.html&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> patt1 = <span class="regexp">/(\w+):\/\/([^/:]+)(:\d*)?([^# ]*)/</span>;</span><br><span class="line">arr = str.<span class="title function_">match</span>(patt1);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span> ; i++) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(arr[i]);</span><br><span class="line">	<span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/RegExp/image-20230405155204213.png" alt="image-20230405155204213" style="zoom:80%;" />
<blockquote>
<p>第一个括号子表达式捕获 Web 地址的协议部分。该子表达式匹配在冒号和两个正斜杠前面的任何单词。</p>
<p>第二个括号子表达式捕获地址的域地址部分。子表达式匹配非 <strong>:</strong> 和 <strong>/</strong> 之后的一个或多个字符。</p>
<p>第三个括号子表达式捕获端口号（如果指定了的话）。该子表达式匹配冒号后面的零个或多个数字。只能重复一次该子表达式。</p>
<p>最后，第四个括号子表达式捕获 Web 地址指定的路径和 / 或页信息。该子表达式能匹配不包括 # 或空格字符的任何字符序列。</p>
<p>将正则表达式应用到上面的 URI，各子匹配项包含下面的内容：</p>
<ul>
<li>第一个括号子表达式包含 <code>https</code></li>
<li>第二个括号子表达式包含 <code>www.runoob.com</code></li>
<li>第三个括号子表达式包含 <code>:80</code></li>
<li>第四个括号子表达式包含 <code>/html/html-tutorial.html</code></li>
</ul>
</blockquote>
<h3 id="运算符优先级">运算符优先级</h3>
<p>正则表达式从左到右进行计算，并遵循优先级顺序，这与算术表达式非常类似。</p>
<p>相同优先级的从左到右进行运算，不同优先级的运算先高后低。下表从最高到最低说明了各种正则表达式运算符的优先级顺序：</p>
<table>
<thead>
<tr>
<th style="text-align:left">运算符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:left">转义符</td>
</tr>
<tr>
<td style="text-align:left">(), (?:), (?=), []</td>
<td style="text-align:left">圆括号和方括号</td>
</tr>
<tr>
<td style="text-align:left">*, +, ?, {n}, {n,}, {n,m}</td>
<td style="text-align:left">限定符</td>
</tr>
<tr>
<td style="text-align:left">^, $, \任何元字符、任何字符</td>
<td style="text-align:left">定位点和序列（即：位置和顺序）</td>
</tr>
<tr>
<td style="text-align:left">|</td>
<td style="text-align:left">替换，“或&quot;操作 字符具有高于替换运算符的优先级，使得&quot;m|food&quot;匹配&quot;m&quot;或&quot;food”。若要匹配&quot;mood&quot;或&quot;food&quot;，请使用括号创建子表达式，从而产生&quot;(m|f)ood&quot;。</td>
</tr>
</tbody>
</table>
<h2 id="第二章-修饰符（标记）">第二章 修饰符（标记）</h2>
<p>标记也称为修饰符，正则表达式的标记用于指定额外的匹配策略。</p>
<p>标记不写在正则表达式里，标记位于表达式之外，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/pattern/flags</span><br></pre></td></tr></table></figure>
<p>下表列出了正则表达式常用的修饰符：</p>
<table>
<thead>
<tr>
<th style="text-align:left">修饰符</th>
<th style="text-align:left">含义</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">i</td>
<td style="text-align:left">ignore - 不区分大小写</td>
<td style="text-align:left">将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。</td>
</tr>
<tr>
<td style="text-align:left">g</td>
<td style="text-align:left">global - 全局匹配</td>
<td style="text-align:left">查找所有的匹配项。</td>
</tr>
<tr>
<td style="text-align:left">m</td>
<td style="text-align:left">multi line - 多行匹配</td>
<td style="text-align:left">使边界字符 <strong>^</strong> 和 <strong>$</strong> 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。</td>
</tr>
<tr>
<td style="text-align:left">s</td>
<td style="text-align:left">特殊字符圆点 <strong>.</strong> 中包含换行符 <strong>\n</strong></td>
<td style="text-align:left">默认情况下的圆点 <strong>.</strong> 是匹配除换行符 <strong>\n</strong> 之外的任何字符，加上 <strong>s</strong> 修饰符之后, <strong>.</strong> 中包含换行符 \n。</td>
</tr>
</tbody>
</table>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/RegExp/image-20230405155631664.png" alt="image-20230405155631664" style="zoom:50%;" />
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/RegExp/image-20230405155645805.png" alt="image-20230405155645805" style="zoom:50%;" />
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/RegExp/image-20230405155703705.png" alt="image-20230405155703705" style="zoom: 50%;" />
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/RegExp/image-20230405155720126.png" alt="image-20230405155720126" style="zoom:50%;" />
<h2 id="第三章-元字符（总览）">第三章 元字符（总览）</h2>
<p>下表包含了元字符的完整列表以及它们在正则表达式上下文中的行为：</p>
<table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:left">将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，‘n’ 匹配字符 “n”。‘\n’ 匹配一个换行符。序列 ‘\’ 匹配 &quot;&quot; 而 “(” 则匹配 “(”。</td>
</tr>
<tr>
<td style="text-align:left">^</td>
<td style="text-align:left">匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\n’ 或 ‘\r’ 之后的位置。</td>
</tr>
<tr>
<td style="text-align:left">$</td>
<td style="text-align:left">匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 ‘\n’ 或 ‘\r’ 之前的位置。</td>
</tr>
<tr>
<td style="text-align:left">*</td>
<td style="text-align:left">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td>
</tr>
<tr>
<td style="text-align:left">+</td>
<td style="text-align:left">匹配前面的子表达式一次或多次。例如，‘zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td>
</tr>
<tr>
<td style="text-align:left">?</td>
<td style="text-align:left">匹配前面的子表达式零次或一次。例如，“do(es)?” 可以匹配 “do” 或 “does” 。? 等价于 {0,1}。</td>
</tr>
<tr>
<td style="text-align:left">{n}</td>
<td style="text-align:left">n 是一个非负整数。匹配确定的 n 次。例如，‘o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td>
</tr>
<tr>
<td style="text-align:left">{n,}</td>
<td style="text-align:left">n 是一个非负整数。至少匹配n 次。例如，‘o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。‘o{1,}’ 等价于 ‘o+’。‘o{0,}’ 则等价于 ‘o*’。</td>
</tr>
<tr>
<td style="text-align:left">{n,m}</td>
<td style="text-align:left">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，“o{1,3}” 将匹配 “fooooood” 中的前三个 o。‘o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td>
</tr>
<tr>
<td style="text-align:left">?</td>
<td style="text-align:left">当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，‘o+?’ 将匹配单个 “o”，而 ‘o+’ 将匹配所有 ‘o’。</td>
</tr>
<tr>
<td style="text-align:left">.</td>
<td style="text-align:left">匹配除换行符（\n、\r）之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用像&quot;<strong>(.|\n)</strong>&quot;的模式。</td>
</tr>
<tr>
<td style="text-align:left">(pattern)</td>
<td style="text-align:left">匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 ‘(’ 或 ‘)’。</td>
</tr>
<tr>
<td style="text-align:left">(?:pattern)</td>
<td style="text-align:left">匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (|) 来组合一个模式的各个部分是很有用。例如， 'industr(?:y|ies) 就是一个比 ‘industry|industries’ 更简略的表达式。</td>
</tr>
<tr>
<td style="text-align:left">(?=pattern)</td>
<td style="text-align:left">正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95|98|NT|2000)“能匹配&quot;Windows2000&quot;中的&quot;Windows”，但不能匹配&quot;Windows3.1&quot;中的&quot;Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>
</tr>
<tr>
<td style="text-align:left">(?!pattern)</td>
<td style="text-align:left">正向否定预查(negative assert)，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如&quot;Windows(?!95|98|NT|2000)“能匹配&quot;Windows3.1&quot;中的&quot;Windows”，但不能匹配&quot;Windows2000&quot;中的&quot;Windows&quot;。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>
</tr>
<tr>
<td style="text-align:left">(?&lt;=pattern)</td>
<td style="text-align:left">反向(look behind)肯定预查，与正向肯定预查类似，只是方向相反。例如，&quot;`(?&lt;=95</td>
</tr>
<tr>
<td style="text-align:left">(?&lt;!pattern)</td>
<td style="text-align:left">反向否定预查，与正向否定预查类似，只是方向相反。例如&quot;`(?&lt;!95</td>
</tr>
<tr>
<td style="text-align:left">x|y</td>
<td style="text-align:left">匹配 x 或 y。例如，‘z|food’ 能匹配 “z” 或 “food”。‘(z|f)ood’ 则匹配 “zood” 或 “food”。</td>
</tr>
<tr>
<td style="text-align:left">[xyz]</td>
<td style="text-align:left">字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。</td>
</tr>
<tr>
<td style="text-align:left">[^xyz]</td>
<td style="text-align:left">负值字符集合。匹配未包含的任意字符。例如， ‘<code>[^abc]</code>’ 可以匹配 “plain” 中的’p’、‘l’、‘i’、‘n’。</td>
</tr>
<tr>
<td style="text-align:left">[a-z]</td>
<td style="text-align:left">字符范围。匹配指定范围内的任意字符。例如，‘[a-z]’ 可以匹配 ‘a’ 到 ‘z’ 范围内的任意小写字母字符。</td>
</tr>
<tr>
<td style="text-align:left">[^a-z]</td>
<td style="text-align:left">负值字符范围。匹配任何不在指定范围内的任意字符。例如，‘<code>[^a-z]</code>’ 可以匹配任何不在 ‘a’ 到 ‘z’ 范围内的任意字符。</td>
</tr>
<tr>
<td style="text-align:left">\b</td>
<td style="text-align:left">匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配&quot;never&quot; 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。</td>
</tr>
<tr>
<td style="text-align:left">\B</td>
<td style="text-align:left">匹配非单词边界。‘er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。</td>
</tr>
<tr>
<td style="text-align:left">\cx</td>
<td style="text-align:left">匹配由 x 指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td>
</tr>
<tr>
<td style="text-align:left">\d</td>
<td style="text-align:left">匹配一个数字字符。等价于 [0-9]。</td>
</tr>
<tr>
<td style="text-align:left">\D</td>
<td style="text-align:left">匹配一个非数字字符。等价于 [^0-9]。</td>
</tr>
<tr>
<td style="text-align:left">\f</td>
<td style="text-align:left">匹配一个换页符。等价于 \x0c 和 \cL。</td>
</tr>
<tr>
<td style="text-align:left">\n</td>
<td style="text-align:left">匹配一个换行符。等价于 \x0a 和 \cJ。</td>
</tr>
<tr>
<td style="text-align:left">\r</td>
<td style="text-align:left">匹配一个回车符。等价于 \x0d 和 \cM。</td>
</tr>
<tr>
<td style="text-align:left">\s</td>
<td style="text-align:left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</td>
</tr>
<tr>
<td style="text-align:left">\S</td>
<td style="text-align:left">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td>
</tr>
<tr>
<td style="text-align:left">\t</td>
<td style="text-align:left">匹配一个制表符。等价于 \x09 和 \cI。</td>
</tr>
<tr>
<td style="text-align:left">\v</td>
<td style="text-align:left">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td>
</tr>
<tr>
<td style="text-align:left">\w</td>
<td style="text-align:left">匹配字母、数字、下划线。等价于’[A-Za-z0-9_]'。</td>
</tr>
<tr>
<td style="text-align:left">\W</td>
<td style="text-align:left">匹配非字母、数字、下划线。等价于 ‘[^A-Za-z0-9_]’。</td>
</tr>
<tr>
<td style="text-align:left">\xn</td>
<td style="text-align:left">匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，‘\x41’ 匹配 “A”。‘\x041’ 则等价于 ‘\x04’ &amp; “1”。正则表达式中可以使用 ASCII 编码。</td>
</tr>
<tr>
<td style="text-align:left">\num</td>
<td style="text-align:left">匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，‘(.)\1’ 匹配两个连续的相同字符。</td>
</tr>
<tr>
<td style="text-align:left">\n</td>
<td style="text-align:left">标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。</td>
</tr>
<tr>
<td style="text-align:left">\nm</td>
<td style="text-align:left">标识一个八进制转义值或一个向后引用。如果 \nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm。</td>
</tr>
<tr>
<td style="text-align:left">\nml</td>
<td style="text-align:left">如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</td>
</tr>
<tr>
<td style="text-align:left">\un</td>
<td style="text-align:left">匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \u00A9 匹配版权符号 (?)。</td>
</tr>
</tbody>
</table>
<p>分析一个匹配邮箱的正则表达式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;abcd test@runoob.com 1234&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> patt1 = <span class="regexp">/\b[\w.%+-]+@[\w.-]+\.[a-zA-Z]&#123;2,6&#125;\b/g</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(str.<span class="title function_">match</span>(patt1));</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/RegExp/image-20230405160015358.png" alt="image-20230405160015358" style="zoom:80%;" /><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/RegExp/image-20230405160000530.png" alt="image-20230405160000530" style="zoom:80%;" /></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/RegExp/image-20230405160113581.png" alt="image-20230405160113581" style="zoom:80%;" />
<h2 id="第四章-示例">第四章 示例</h2>
<table>
<thead>
<tr>
<th style="text-align:left">正则表达式</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>hello</code></td>
<td style="text-align:left">匹配 {hello}</td>
</tr>
<tr>
<td style="text-align:left">`gray</td>
<td style="text-align:left">grey`</td>
</tr>
<tr>
<td style="text-align:left">`gr(a</td>
<td style="text-align:left">e)y`</td>
</tr>
<tr>
<td style="text-align:left"><code>gr[ae]y</code></td>
<td style="text-align:left">匹配 {gray, grey}</td>
</tr>
<tr>
<td style="text-align:left"><code>b[aeiou]bble</code></td>
<td style="text-align:left">匹配 {babble, bebble, bibble, bobble, bubble}</td>
</tr>
<tr>
<td style="text-align:left">`[b-chm-pP]at</td>
<td style="text-align:left">ot`</td>
</tr>
<tr>
<td style="text-align:left"><code>colou?r</code></td>
<td style="text-align:left">匹配 {color, colour}</td>
</tr>
<tr>
<td style="text-align:left">`rege(x(es)?</td>
<td style="text-align:left">xps?)`</td>
</tr>
<tr>
<td style="text-align:left"><code>go*gle</code></td>
<td style="text-align:left">匹配 {ggle, gogle, google, gooogle, goooogle, …}</td>
</tr>
<tr>
<td style="text-align:left"><code>go+gle</code></td>
<td style="text-align:left">匹配 {gogle, google, gooogle, goooogle, …}</td>
</tr>
<tr>
<td style="text-align:left"><code>g(oog)+le</code></td>
<td style="text-align:left">匹配 {google, googoogle, googoogoogle, googoogoogoogle, …}</td>
</tr>
<tr>
<td style="text-align:left"><code>z&#123;3&#125;</code></td>
<td style="text-align:left">匹配 {zzz}</td>
</tr>
<tr>
<td style="text-align:left"><code>z&#123;3,6&#125;</code></td>
<td style="text-align:left">匹配 {zzz, zzzz, zzzzz, zzzzzz}</td>
</tr>
<tr>
<td style="text-align:left"><code>z&#123;3,&#125;</code></td>
<td style="text-align:left">匹配 {zzz, zzzz, zzzzz, …}</td>
</tr>
<tr>
<td style="text-align:left"><code>[Bb]rainf\*\*k</code></td>
<td style="text-align:left">匹配 {Brainf<strong>k, brainf</strong>k}</td>
</tr>
<tr>
<td style="text-align:left"><code>\d</code></td>
<td style="text-align:left">匹配 {0,1,2,3,4,5,6,7,8,9}</td>
</tr>
<tr>
<td style="text-align:left"><code>1\d&#123;10&#125;</code></td>
<td style="text-align:left">匹配 11 个数字，以 1 开头</td>
</tr>
<tr>
<td style="text-align:left">`[2-9]</td>
<td style="text-align:left">[12]\d</td>
</tr>
<tr>
<td style="text-align:left"><code>Hello\nworld</code></td>
<td style="text-align:left">匹配 Hello 后跟换行符，后跟 world</td>
</tr>
<tr>
<td style="text-align:left"><code>\d+(\.\d\d)?</code></td>
<td style="text-align:left">包含一个正整数或包含两位小数位的浮点数。</td>
</tr>
<tr>
<td style="text-align:left"><code>[^*@#]</code></td>
<td style="text-align:left">排除 *、@ 、# 三个特色符号</td>
</tr>
<tr>
<td style="text-align:left"><code>//[^\r\n]*[\r\n]</code></td>
<td style="text-align:left">匹配 <strong>//</strong> 开头的注释</td>
</tr>
<tr>
<td style="text-align:left"><code>^dog</code></td>
<td style="text-align:left">匹配以 “dog” 开始</td>
</tr>
<tr>
<td style="text-align:left"><code>dog$</code></td>
<td style="text-align:left">匹配以 “dog” 结尾</td>
</tr>
<tr>
<td style="text-align:left"><code>^dog$</code></td>
<td style="text-align:left">is exactly “dog”</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">正则表达式</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>/\b([a-z]+) \1\b/gi</code></td>
<td style="text-align:left">一个单词连续出现的位置。</td>
</tr>
<tr>
<td style="text-align:left"><code>/(\w+):\/\/([^/:]+)(:\d*)?([^# ]*)/</code></td>
<td style="text-align:left">匹配一个 URL 解析为协议、域、端口及相对路径。</td>
</tr>
<tr>
<td style="text-align:left">`/^(?:Chapter</td>
<td style="text-align:left">Section) [1-9][0-9]{0,1}$/`</td>
</tr>
<tr>
<td style="text-align:left"><code>/[-a-z]/</code></td>
<td style="text-align:left">a 至 z 共 26个 字母再加一个 <strong>-</strong> 号。</td>
</tr>
<tr>
<td style="text-align:left"><code>/ter\b/</code></td>
<td style="text-align:left">可匹配 chapter，而不能匹配 terminal。</td>
</tr>
<tr>
<td style="text-align:left"><code>/\Bapt/</code></td>
<td style="text-align:left">可匹配 chapter，而不能匹配 aptitude。</td>
</tr>
<tr>
<td style="text-align:left">`/Windows(?=95</td>
<td style="text-align:left">98</td>
</tr>
<tr>
<td style="text-align:left"><code>/^\s*$/</code></td>
<td style="text-align:left">匹配空行。</td>
</tr>
<tr>
<td style="text-align:left"><code>/\d&#123;2&#125;-\d&#123;5&#125;/</code></td>
<td style="text-align:left">验证由两位数字、一个连字符再加 5 位数字组成的 ID 号。</td>
</tr>
<tr>
<td style="text-align:left"><code>&lt;[a-zA-Z]+.*?&gt;([\s\S]*?)&lt;/[a-zA-Z]*?&gt;</code></td>
<td style="text-align:left">匹配 HTML 标记。</td>
</tr>
</tbody>
</table>
<h4 id="在线测试网站">在线测试网站</h4>
<p><a href="https://c.runoob.com/front-end/854/">https://c.runoob.com/front-end/854/</a></p>
]]></content>
      <categories>
        <category>通用知识</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>《SQL快速入门》Notes</title>
    <url>/butterflyblog/2023/08/26/%E3%80%8ASQL%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《SQL快速入门》Notes</h1>
<blockquote>
<p>资料来源：<a href="https://www.bilibili.com/video/BV1PT4y1e7UU/">B站视频：【数据库】SQL 3小时快速入门</a></p>
<p>@Seymour0314</p>
</blockquote>
<blockquote>
<p>题外：</p>
<ul>
<li>
<p>登陆数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p</span><br><span class="line">输入密码</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>MySQL 的常用变量（函数）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Datebase()	// 查看当前数据库名</span><br><span class="line">User()		// 用户</span><br><span class="line">Version()	// mysql 版本</span><br><span class="line">@@basedir	// 安装路径</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>常用符号</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">逻辑运算符</span><br><span class="line"><span class="operator">&amp;</span>	<span class="keyword">AND</span></span><br><span class="line"><span class="operator">||</span>	<span class="keyword">OR</span></span><br><span class="line"><span class="operator">^</span>	XOR</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<blockquote>
<p>摘要：</p>
<ul>
<li>
<p>数据库基本操作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">建库、删库、用库</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE db_name;</span><br><span class="line"><span class="keyword">DROP</span> DATABASE db_name;</span><br><span class="line">USE db_name;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>数据表基本操作</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">建表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name(</span><br><span class="line">	`id` <span class="type">int</span>(<span class="number">11</span>),</span><br><span class="line">	`name` <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">DESC</span> table_name;</span><br><span class="line">增删改查</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name <span class="keyword">VALUES</span>(<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;Seymour&#x27;</span>);</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">5</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> table_name <span class="keyword">SET</span> name<span class="operator">=</span><span class="string">&#x27;Apple&#x27;</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">5</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="第一课：认识MySQL">第一课：认识MySQL</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `sql_tutorial`;</span><br><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br><span class="line"><span class="keyword">DROP</span> DATABASE `sql_tutorial`;</span><br></pre></td></tr></table></figure>
<h3 id="第二课：数据类型">第二课：数据类型</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="type">INT</span>				<span class="comment">-- 整数</span></span><br><span class="line"><span class="type">DECIMAL</span>(<span class="number">3</span>,<span class="number">2</span>)	<span class="comment">-- 小数，如2.33</span></span><br><span class="line"><span class="type">VARCHAR</span>(<span class="number">10</span>)		<span class="comment">-- 字串</span></span><br><span class="line"><span class="type">BLOB</span>			<span class="comment">-- (Binary Large Object)图片、影片、档案</span></span><br><span class="line"><span class="type">DATE</span>			<span class="comment">-- &#x27;YYYY-MM-DD&#x27; 日期</span></span><br><span class="line"><span class="type">TIMESTAMP</span>		<span class="comment">-- &#x27;YYYY-MM-DD HH:MM:SS&#x27; 日期时间</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `sql_tutorial`;</span><br><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br><span class="line">USE `sql_tutorial`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student`(</span><br><span class="line">	`student_id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `major` <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DESCRIBE</span> `student`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> `student`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `student` <span class="keyword">ADD</span> `gpa` <span class="type">DECIMAL</span>(<span class="number">3</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `student` <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> `gpa`;</span><br></pre></td></tr></table></figure>
<h3 id="第三课：写入数据">第三课：写入数据</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;历史&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;小黑&#x27;</span>,<span class="string">&#x27;生物&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;小绿&#x27;</span>,<span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`name`,`major`,`student_id`) <span class="keyword">VALUES</span>(<span class="string">&#x27;小蓝&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;小黄&#x27;</span>,<span class="string">&#x27;生物&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826160025214.png" alt="image-20230826160025214" style="zoom: 80%;" />
<h3 id="第四课：限制约束">第四课：限制约束</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student`(</span><br><span class="line">	`student_id` <span class="type">INT</span> AUTO_INCREMENT,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    `major` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;历史&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(`student_id`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> `student`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`student_id`,`name`) <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;小黑&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student`(`name`,`major`) <span class="keyword">VALUES</span>(<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;生物&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="第五课：修改删除">第五课：修改删除</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> SQL_SAFE_UPDATES <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student`(</span><br><span class="line">	`student_id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `major` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `score` <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> `student`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`;</span><br><span class="line"><span class="comment">-- 1</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>,<span class="number">50</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;小黄&#x27;</span>,<span class="string">&#x27;生物&#x27;</span>,<span class="number">90</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;小绿&#x27;</span>,<span class="string">&#x27;历史&#x27;</span>,<span class="number">70</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;小蓝&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>,<span class="number">80</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;小黑&#x27;</span>,<span class="string">&#x27;化学&#x27;</span>,<span class="number">20</span>);</span><br><span class="line"><span class="comment">-- 2</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student`</span><br><span class="line"><span class="keyword">SET</span> `major` <span class="operator">=</span> <span class="string">&#x27;英语文学&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> `major` <span class="operator">=</span> <span class="string">&#x27;英语&#x27;</span>;</span><br><span class="line"><span class="comment">-- 3</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student`</span><br><span class="line"><span class="keyword">SET</span> `major` <span class="operator">=</span> <span class="string">&#x27;生物&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> `student_id` <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="comment">-- 4</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student`</span><br><span class="line"><span class="keyword">SET</span> `major` <span class="operator">=</span> <span class="string">&#x27;生化&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> `major` <span class="operator">=</span> <span class="string">&#x27;生物&#x27;</span> <span class="keyword">OR</span> `major` <span class="operator">=</span> <span class="string">&#x27;化学&#x27;</span>;</span><br><span class="line"><span class="comment">-- 5</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student`</span><br><span class="line"><span class="keyword">SET</span> `name` <span class="operator">=</span> <span class="string">&#x27;小灰&#x27;</span>, `major` <span class="operator">=</span> <span class="string">&#x27;物理&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> `student_id` <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 6</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student`</span><br><span class="line"><span class="keyword">SET</span> `major` <span class="operator">=</span> <span class="string">&#x27;物理&#x27;</span>;</span><br><span class="line"><span class="comment">-- 7</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `student_id` <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="comment">-- 8</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `name` <span class="operator">=</span> <span class="string">&#x27;小灰&#x27;</span> <span class="keyword">AND</span> `major` <span class="operator">=</span> <span class="string">&#x27;物理&#x27;</span>;</span><br><span class="line"><span class="comment">-- 9</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `score` <span class="operator">&lt;</span> <span class="number">60</span>;</span><br><span class="line"><span class="comment">-- 10</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student`;</span><br></pre></td></tr></table></figure>
<p>更新</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826162736012.png" alt="image-20230826162736012" style="zoom: 80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826162938618.png" alt="image-20230826162938618" style="zoom:80%;" /><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826163039175.png" alt="image-20230826163039175" style="zoom:80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826163220106.png" alt="image-20230826163220106" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826163425615.png" alt="image-20230826163425615" style="zoom:80%;" /><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826163513969.png" alt="image-20230826163513969" style="zoom:80%;" /></p>
<p>删除</p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826163624192.png" alt="image-20230826163624192" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826163736016.png" alt="image-20230826163736016" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826163817816.png" alt="image-20230826163817816" style="zoom:80%;" /></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826164149684.png" alt="image-20230826164149684" style="zoom:80%;" /> 
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;大于			&lt;小于</span><br><span class="line">&gt;=大于等于		&lt;=大于等于</span><br><span class="line">=等于			&lt;&gt;不等于</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="第六课：查询资料">第六课：查询资料</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student`(</span><br><span class="line">	`student_id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `major` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `score` <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>,<span class="number">50</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;小黄&#x27;</span>,<span class="string">&#x27;生物&#x27;</span>,<span class="number">90</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;小绿&#x27;</span>,<span class="string">&#x27;历史&#x27;</span>,<span class="number">70</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;小蓝&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>,<span class="number">80</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;小黑&#x27;</span>,<span class="string">&#x27;化学&#x27;</span>,<span class="number">20</span>);</span><br><span class="line"><span class="comment">-- 1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`;</span><br><span class="line"><span class="comment">-- 2</span></span><br><span class="line"><span class="keyword">SELECT</span> `name` <span class="keyword">FROM</span> `student`;</span><br><span class="line"><span class="comment">-- 3</span></span><br><span class="line"><span class="keyword">SELECT</span> `name`, `major` <span class="keyword">FROM</span> `student`;</span><br><span class="line"><span class="comment">-- 4</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `score`;</span><br><span class="line"><span class="comment">-- 5</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `score` <span class="keyword">ASC</span>;</span><br><span class="line"><span class="comment">-- 6</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `score` <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">-- 7</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `score`, `student_id`;</span><br><span class="line"><span class="comment">-- 8</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> `student`</span><br><span class="line">LIMIT <span class="number">3</span>;</span><br><span class="line"><span class="comment">-- 9</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `score`</span><br><span class="line">LIMIT <span class="number">3</span>;</span><br><span class="line"><span class="comment">-- 10</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> `score` <span class="keyword">DESC</span></span><br><span class="line">LIMIT <span class="number">3</span>;</span><br><span class="line"><span class="comment">-- 11</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `major` <span class="operator">=</span> <span class="string">&#x27;英语&#x27;</span> <span class="keyword">AND</span> `student_id` <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 12</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `major` <span class="operator">=</span> <span class="string">&#x27;英语&#x27;</span> <span class="keyword">OR</span> `score` <span class="operator">&gt;=</span> <span class="number">50</span>;</span><br><span class="line"><span class="comment">-- 13</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `major` <span class="keyword">IN</span>(<span class="string">&#x27;历史&#x27;</span>,<span class="string">&#x27;英语&#x27;</span>,<span class="string">&#x27;生物&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826164440940.png" alt="image-20230826164440940" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826164455473.png" alt="image-20230826164455473" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826164544342.png" alt="image-20230826164544342" style="zoom:80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826164641146.png" alt="image-20230826164641146" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826164817335.png" alt="image-20230826164817335" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826164710202.png" alt="image-20230826164710202" style="zoom:80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826164907796.png" alt="image-20230826164907796" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826165004212.png" alt="image-20230826165004212" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826165232954.png" alt="image-20230826165232954" style="zoom:80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826165319053.png" alt="image-20230826165319053" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826165504879.png" alt="image-20230826165504879" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826165629443.png" alt="image-20230826165629443" style="zoom:80%;" /></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826165849144.png" alt="image-20230826165849144" style="zoom:80%;" /> 
<h3 id="第七课：创建公司资料库">第七课：创建公司资料库</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 员工</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `employee`(</span><br><span class="line">	`emp_id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `birth_date` <span class="type">DATE</span>,</span><br><span class="line">    `sex` <span class="type">VARCHAR</span>(<span class="number">1</span>),</span><br><span class="line">    `salary` <span class="type">INT</span>,</span><br><span class="line">    `branch_id` <span class="type">INT</span>,</span><br><span class="line">    `sup_id` <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 部门</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `branch`(</span><br><span class="line">	`branch_id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `branch_name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `manager_id` <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (`manager_id`) <span class="keyword">REFERENCES</span> `employee`(`emp_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 补充关系</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `employee`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> KEY(`branch_id`)</span><br><span class="line"><span class="keyword">REFERENCES</span> `branch`(`branch_id`)</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `employee`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> KEY(`sup_id`)</span><br><span class="line"><span class="keyword">REFERENCES</span> `employee`(`emp_id`)</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 客户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `client`(</span><br><span class="line">	`client_id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `client_name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `phone` <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 工作</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `works_with`(</span><br><span class="line">	`emp_id` <span class="type">INT</span>,</span><br><span class="line">    `client_id` <span class="type">INT</span>,</span><br><span class="line">    `total_sales` <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`emp_id`, `client_id`),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (`emp_id`) <span class="keyword">REFERENCES</span> `employee`(`emp_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (`client_id`) <span class="keyword">REFERENCES</span> `client`(`client_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 新增资料</span></span><br><span class="line"><span class="comment">-- 部门</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `branch` <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">&#x27;研发&#x27;</span>, <span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `branch` <span class="keyword">VALUES</span>(<span class="number">2</span>, <span class="string">&#x27;行政&#x27;</span>, <span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `branch` <span class="keyword">VALUES</span>(<span class="number">3</span>, <span class="string">&#x27;资讯&#x27;</span>, <span class="keyword">NULL</span>);</span><br><span class="line"><span class="comment">-- 员工</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employee` <span class="keyword">VALUES</span>(<span class="number">206</span>, <span class="string">&#x27;小黄&#x27;</span>, <span class="string">&#x27;1998-10-08&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="number">50000</span>, <span class="number">1</span>, <span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employee` <span class="keyword">VALUES</span>(<span class="number">207</span>, <span class="string">&#x27;小绿&#x27;</span>, <span class="string">&#x27;1985-09-16&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="number">29000</span>, <span class="number">2</span>, <span class="number">206</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employee` <span class="keyword">VALUES</span>(<span class="number">208</span>, <span class="string">&#x27;小黑&#x27;</span>, <span class="string">&#x27;2000-12-19&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="number">35000</span>, <span class="number">3</span>, <span class="number">206</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employee` <span class="keyword">VALUES</span>(<span class="number">209</span>, <span class="string">&#x27;小白&#x27;</span>, <span class="string">&#x27;1997-01-22&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="number">39000</span>, <span class="number">3</span>, <span class="number">207</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employee` <span class="keyword">VALUES</span>(<span class="number">210</span>, <span class="string">&#x27;小蓝&#x27;</span>, <span class="string">&#x27;1925-11-10&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="number">84000</span>, <span class="number">1</span>, <span class="number">207</span>);</span><br><span class="line"><span class="comment">-- 部门更新内容</span></span><br><span class="line"><span class="keyword">UPDATE</span> `branch` <span class="keyword">SET</span> `manager_id` <span class="operator">=</span> <span class="number">206</span> <span class="keyword">WHERE</span> `branch_id` <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> `branch` <span class="keyword">SET</span> `manager_id` <span class="operator">=</span> <span class="number">207</span> <span class="keyword">WHERE</span> `branch_id` <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> `branch` <span class="keyword">SET</span> `manager_id` <span class="operator">=</span> <span class="number">208</span> <span class="keyword">WHERE</span> `branch_id` <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="comment">-- 客户</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `client` <span class="keyword">VALUES</span>(<span class="number">400</span>, <span class="string">&#x27;阿猫&#x27;</span>, <span class="string">&#x27;254354335&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `client` <span class="keyword">VALUES</span>(<span class="number">401</span>, <span class="string">&#x27;阿狗&#x27;</span>, <span class="string">&#x27;25633899&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `client` <span class="keyword">VALUES</span>(<span class="number">402</span>, <span class="string">&#x27;旺来&#x27;</span>, <span class="string">&#x27;45354345&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `client` <span class="keyword">VALUES</span>(<span class="number">403</span>, <span class="string">&#x27;露西&#x27;</span>, <span class="string">&#x27;54354365&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `client` <span class="keyword">VALUES</span>(<span class="number">404</span>, <span class="string">&#x27;艾瑞克&#x27;</span>, <span class="string">&#x27;18783783&#x27;</span>);</span><br><span class="line"><span class="comment">-- 工作</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `works_with` <span class="keyword">VALUES</span>(<span class="number">206</span>, <span class="number">400</span>, <span class="string">&#x27;70000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `works_with` <span class="keyword">VALUES</span>(<span class="number">207</span>, <span class="number">401</span>, <span class="string">&#x27;24000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `works_with` <span class="keyword">VALUES</span>(<span class="number">208</span>, <span class="number">402</span>, <span class="string">&#x27;9800&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `works_with` <span class="keyword">VALUES</span>(<span class="number">208</span>, <span class="number">403</span>, <span class="string">&#x27;24000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `works_with` <span class="keyword">VALUES</span>(<span class="number">210</span>, <span class="number">404</span>, <span class="string">&#x27;87940&#x27;</span>);</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826170429151.png" alt="image-20230826170429151" style="zoom:80%;" />
<h3 id="第八课：练习">第八课：练习</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.取得所有员工资料</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `employee`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.取得所有客户资料</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `client`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.按照薪水低到高取得员工资料</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `employee` <span class="keyword">ORDER</span> <span class="keyword">BY</span> `salary`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.取得薪水前三的员工名字、薪水</span></span><br><span class="line"><span class="keyword">SELECT</span> `name`, `salary` <span class="keyword">FROM</span> `employee` <span class="keyword">ORDER</span> <span class="keyword">BY</span> `salary` <span class="keyword">DESC</span> LIMIT <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.取得所有性别，不重复</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> `sex` <span class="keyword">FROM</span> `employee`;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826174427828.png" alt="image-20230826174427828" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826174440581.png" alt="image-20230826174440581" style="zoom:80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826174620092.png" alt="image-20230826174620092" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826174917541.png" alt="image-20230826174917541" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826175123281.png" alt="image-20230826175123281" style="zoom:80%;" /></p>
<h3 id="第九课：聚合函数">第九课：聚合函数</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- aggregate functions 聚合函数</span></span><br><span class="line"><span class="comment">-- 1. 员工人数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> `employee`;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(`sup_id`) <span class="keyword">FROM</span> `employee`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 所有出生于1970-01-01之后的女性员工人数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> `employee` <span class="keyword">WHERE</span> `birth_date` <span class="operator">&gt;</span> <span class="string">&#x27;1970-01-01&#x27;</span> <span class="keyword">AND</span> `sex` <span class="operator">=</span> <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 所有员工的平均薪水</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(`salary`) <span class="keyword">FROM</span> `employee`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 所有员工薪水总和</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(`salary`) <span class="keyword">FROM</span> `employee`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 薪水最高/最低的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(`salary`) <span class="keyword">FROM</span> `employee`;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(`salary`) <span class="keyword">FROM</span> `employee`;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826175521720.png" alt="image-20230826175521720" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826175547437.png" alt="image-20230826175547437" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826175726742.png" alt="image-20230826175726742" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826175822463.png" alt="image-20230826175822463" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826175934137.png" alt="image-20230826175934137" style="zoom:80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826180047403.png" alt="image-20230826180047403" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826180059087.png" alt="image-20230826180059087" style="zoom:80%;" /></p>
<h3 id="第十课：通配符">第十课：通配符</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">通配符</span><br><span class="line">_ 单个字元</span><br><span class="line"><span class="operator">%</span> 多个字元</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE `sql_tutorial`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.全部客户</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `client`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.尾号335</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `client` <span class="keyword">WHERE</span> `phone` <span class="keyword">LIKE</span> <span class="string">&#x27;%335&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.开头25</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `client` <span class="keyword">WHERE</span> `phone` <span class="keyword">LIKE</span> <span class="string">&#x27;25%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.中间54</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `client` <span class="keyword">WHERE</span> `phone` <span class="keyword">LIKE</span> <span class="string">&#x27;%54%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.姓氏为艾</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `client` <span class="keyword">WHERE</span> `client_name` <span class="keyword">LIKE</span> <span class="string">&#x27;艾%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.生日在12月的员工</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `employee` <span class="keyword">WHERE</span> `birth_date` <span class="keyword">LIKE</span> <span class="string">&#x27;_____12%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826203100174.png" alt="image-20230826203100174" style="zoom:80%;" /> 
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826202905883.png" alt="image-20230826202905883" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826203134508.png" alt="image-20230826203134508" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826203155832.png" alt="image-20230826203155832" style="zoom:80%;" /></p>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826203325962.png" alt="image-20230826203325962" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826203600624.png" alt="image-20230826203600624" style="zoom:80%;" /></p>
<h3 id="第十一课：联集">第十一课：联集</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1. 员工、客户 </span></span><br><span class="line"><span class="keyword">SELECT</span> `name` </span><br><span class="line"><span class="keyword">FROM</span> `employee`</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> `client_name`</span><br><span class="line"><span class="keyword">FROM</span> `client`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 员工、客户、部门名 </span></span><br><span class="line"><span class="keyword">SELECT</span> `name` </span><br><span class="line"><span class="keyword">FROM</span> `employee`</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> `client_name`</span><br><span class="line"><span class="keyword">FROM</span> `client`</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> `branch_name`</span><br><span class="line"><span class="keyword">FROM</span> `branch`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. ID+名字 </span></span><br><span class="line"><span class="keyword">SELECT</span> `emp_id`,`name` </span><br><span class="line"><span class="keyword">FROM</span> `employee`</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> `client_id`,`client_name`</span><br><span class="line"><span class="keyword">FROM</span> `client`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 导出名字自定义 </span></span><br><span class="line"><span class="keyword">SELECT</span> `emp_id` <span class="keyword">AS</span> `ID`,`name` <span class="keyword">AS</span> `Name` </span><br><span class="line"><span class="keyword">FROM</span> `employee`</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> `client_id`,`client_name`</span><br><span class="line"><span class="keyword">FROM</span> `client`;</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826203945825.png" alt="image-20230826203945825" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826204115508.png" alt="image-20230826204115508" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826204308275.png" alt="image-20230826204308275" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826204536942.png" alt="image-20230826204536942" style="zoom:80%;" /></p>
<h3 id="第十二课：连接">第十二课：连接</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `branch` <span class="keyword">VALUES</span>(<span class="number">4</span>, <span class="string">&#x27;偷懒&#x27;</span>, <span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1. 取得所有部门经理信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> `employee` <span class="keyword">JOIN</span> `branch`</span><br><span class="line"><span class="keyword">ON</span> `emp_id` <span class="operator">=</span> `manager_id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 简短显示 </span></span><br><span class="line"><span class="keyword">SELECT</span> `emp_id`, `name`, `branch_name`</span><br><span class="line"><span class="keyword">FROM</span> `employee` <span class="keyword">JOIN</span> `branch`</span><br><span class="line"><span class="keyword">ON</span> `emp_id` <span class="operator">=</span> `manager_id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.防止表格冲突，更加完善的写法 </span></span><br><span class="line"><span class="keyword">SELECT</span> `employee`.`emp_id`, `employee`.`name`, `branch`.`branch_name`</span><br><span class="line"><span class="keyword">FROM</span> `employee` <span class="keyword">JOIN</span> `branch`</span><br><span class="line"><span class="keyword">ON</span> `employee`.`emp_id` <span class="operator">=</span> `branch`.`manager_id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 左表全连 </span></span><br><span class="line"><span class="keyword">SELECT</span> `employee`.`emp_id`, `employee`.`name`, `branch`.`branch_name`</span><br><span class="line"><span class="keyword">FROM</span> `employee` <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> `branch`</span><br><span class="line"><span class="keyword">ON</span> `employee`.`emp_id` <span class="operator">=</span> `branch`.`manager_id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 右表全连 </span></span><br><span class="line"><span class="keyword">SELECT</span> `employee`.`emp_id`, `employee`.`name`, `branch`.`branch_name`</span><br><span class="line"><span class="keyword">FROM</span> `employee` <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> `branch`</span><br><span class="line"><span class="keyword">ON</span> `employee`.`emp_id` <span class="operator">=</span> `branch`.`manager_id`;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826205130194.png" alt="image-20230826205130194" style="zoom:80%;" /> 
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826205315790.png" alt="image-20230826205315790" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826205515468.png" alt="image-20230826205515468" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826205651640.png" alt="image-20230826205651640" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826205805280.png" alt="image-20230826205805280" style="zoom:80%;" /></p>
<h3 id="第十三课：子查询">第十三课：子查询</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- subquery 子查询 </span></span><br><span class="line"><span class="comment">-- 1. 研发部门的经理的名字 </span></span><br><span class="line"><span class="keyword">SELECT</span> `name` <span class="keyword">FROM</span> `employee`</span><br><span class="line"><span class="keyword">WHERE</span> `emp_id` <span class="operator">=</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> `manager_id` <span class="keyword">FROM</span> `branch`</span><br><span class="line">	<span class="keyword">WHERE</span> `branch_name` <span class="operator">=</span> <span class="string">&#x27;研发&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 对客户销售金额超过50000的员工的名字 </span></span><br><span class="line"><span class="keyword">SELECT</span> `name` <span class="keyword">FROM</span> `employee`</span><br><span class="line"><span class="keyword">WHERE</span> `emp_id` <span class="keyword">IN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> `emp_id` <span class="keyword">FROM</span> `works_with`</span><br><span class="line">    <span class="keyword">WHERE</span> `total_sales` <span class="operator">&gt;</span> <span class="number">50000</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826210452530.png" alt="image-20230826210452530" style="zoom:80%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/sqlquick/image-20230826210809503.png" alt="image-20230826210809503" style="zoom:80%;" /></p>
<h3 id="第十四课：参数">第十四课：参数</h3>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 部门</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `branch`(</span><br><span class="line">	`branch_id` <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    `branch_name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    `manager_id` <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (`manager_id`) <span class="keyword">REFERENCES</span> `employee`(`emp_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 工作</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `works_with`(</span><br><span class="line">	`emp_id` <span class="type">INT</span>,</span><br><span class="line">    `client_id` <span class="type">INT</span>,</span><br><span class="line">    `total_sales` <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`emp_id`, `client_id`),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (`emp_id`) <span class="keyword">REFERENCES</span> `employee`(`emp_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (`client_id`) <span class="keyword">REFERENCES</span> `client`(`client_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><code>ON DELETE SET NULL</code></p>
<p>当指向的 employee 被删除时，此处的 manager_id 则设为 NULL。</p>
</li>
<li>
<p><code>ON DELETE CASCADE</code></p>
<p>当指向的 employee 被删除时，此处的 emp_id 跟着一起删除。</p>
</li>
</ul>
<blockquote>
<p>可以思考得知：工作关系的删除方式是不能为第一种的。</p>
<p>为什么？</p>
<p>因为works_with的这两个值同时还是主键，若是删除设为NULL，会导致出错。</p>
</blockquote>
<h3 id="第十五课：Python-连接-MySQL">第十五课：Python 连接 MySQL</h3>
<ul>
<li>Python 安装库</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install mysql-connector-python</span><br></pre></td></tr></table></figure>
<ul>
<li>创建方法</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">connection = mysql.connector.connect(</span><br><span class="line">    host = <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">	port = <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">    user = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">	password = <span class="string">&#x27;password&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cursor = connection.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">cursor.excute(<span class="string">&quot;CREATE DATABASE `sql_tutorial`;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有数据库</span></span><br><span class="line">cursor.excute(<span class="string">&quot;SHOW DATABASES;&quot;</span>)</span><br><span class="line">records = cursor.fetchall()</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> records:</span><br><span class="line">    <span class="built_in">print</span>(r)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用数据库</span></span><br><span class="line">cursor.excute(<span class="string">&quot;USE `sql_tutorial`;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表格</span></span><br><span class="line">cursor.excute(<span class="string">&quot;CREATE TABLE `qq`(`qq` INT);&quot;</span>)</span><br><span class="line"></span><br><span class="line">cursor.close()</span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure>
<ul>
<li>查询方法</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">connection = mysql.connector.connect(</span><br><span class="line">    host = <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">	port = <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">    user = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">	password = <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">	database = <span class="string">&#x27;sql_tutorial&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cursor = connection.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取得部门资料</span></span><br><span class="line">cursor.excute(<span class="string">&quot;SELECT * FROM `branch`;&quot;</span>)</span><br><span class="line">records = cursor.fetchall()</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> records:</span><br><span class="line">    <span class="built_in">print</span>(r)</span><br><span class="line"></span><br><span class="line">cursor.close()</span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure>
<ul>
<li>修改资料</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"></span><br><span class="line">connection = mysql.connector.connect(</span><br><span class="line">    host = <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">	port = <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">    user = <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">	password = <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">	database = <span class="string">&#x27;sql_tutorial&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cursor = connection.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增</span></span><br><span class="line">cursor.excute(<span class="string">&quot;INSERT INTO `branch` VALUES(5, &#x27;qq&#x27;, NULL);&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">cursor.excute(<span class="string">&quot;UPDATE `branch` SET `manager_id` = NULL WHERE `branch_id` = 4;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">cursor.excute(<span class="string">&quot;DELETE FROM `branch` WHERE `branch_id` = 5;&quot;</span>)</span><br><span class="line"></span><br><span class="line">cursor.close()</span><br><span class="line">cursor.commit()		<span class="comment"># 修改资料的最后都要进行提交</span></span><br><span class="line"></span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>《sqlmap中文用法指南》</title>
    <url>/butterflyblog/2023/09/19/%E3%80%8Asqlmap%E4%B8%AD%E6%96%87%E7%94%A8%E6%B3%95%E6%8C%87%E5%8D%97%E3%80%8B/</url>
    <content><![CDATA[<h1>《sqlmap中文用法指南》</h1>
<blockquote>
<p>sqlmap官方：<a href="https://github.com/sqlmapproject/sqlmap">sqlmap</a></p>
<p>说明：首先保证您的主机已经安装Python环境（若您未安装，请百度安装方法）</p>
</blockquote>
<h2 id="1、用法">1、用法</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python sqlmap.py [选项]</span><br></pre></td></tr></table></figure>
<h2 id="2、选项">2、选项</h2>
<h3 id="2-1-帮助信息">2.1 帮助信息</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-h, --help            显示基本帮助信息并退出</span><br><span class="line">-hh                   显示高级帮助信息并退出</span><br><span class="line">--version             显示程序版本信息并退出</span><br><span class="line">-v VERBOSE            输出信息详细程度级别：0-6（默认为 1）</span><br></pre></td></tr></table></figure>
<h3 id="2-2-目标">2.2 目标</h3>
<ul>
<li>至少提供一个以下选项以指定目标</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-d DIRECT           直接连接数据库</span><br><span class="line">-u URL, --url=URL   目标 URL（例如：&quot;http://www.site.com/vuln.php?id=1&quot;）</span><br><span class="line">-l LOGFILE          从 Burp 或 WebScarab 代理的日志文件中解析目标地址</span><br><span class="line">-x SITEMAPURL       从远程网站地图（.xml）文件中解析目标</span><br><span class="line">-m BULKFILE         从文本文件中获取批量目标</span><br><span class="line">-r REQUESTFILE      从文件中读取 HTTP 请求</span><br><span class="line">-g GOOGLEDORK       使用 Google dork 结果作为目标</span><br><span class="line">-c CONFIGFILE       从 INI 配置文件中加载选项</span><br></pre></td></tr></table></figure>
<h3 id="2-3-请求">2.3 请求</h3>
<ul>
<li>以下选项可以指定连接目标地址的方式</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--method=METHOD     强制使用提供的 HTTP 方法（例如：PUT）</span><br><span class="line">--data=DATA         使用 POST 发送数据串</span><br><span class="line">--param-del=PARA..  设置参数值分隔符</span><br><span class="line">--cookie=COOKIE     指定 HTTP Cookie </span><br><span class="line">--cookie-del=COO..  设置 cookie 分隔符</span><br><span class="line">--load-cookies=L..  指定以 Netscape/wget 格式存放 cookies 的文件</span><br><span class="line">--drop-set-cookie   忽略 HTTP 响应中的 Set-Cookie 参数</span><br><span class="line">--user-agent=AGENT  指定 HTTP User-Agent</span><br><span class="line">--random-agent      使用随机的 HTTP User-Agent</span><br><span class="line">--host=HOST         指定 HTTP Host</span><br><span class="line">--referer=REFERER   指定 HTTP Referer</span><br><span class="line">-H HEADER, --hea..  设置额外的 HTTP 头参数（例如：&quot;X-Forwarded-For: 127.0.0.1&quot;）</span><br><span class="line">--headers=HEADERS   设置额外的 HTTP 头参数（例如：&quot;Accept-Language: fr\nETag: 123&quot;）</span><br><span class="line">--auth-type=AUTH..  HTTP 认证方式（Basic，Digest，NTLM 或 PKI）</span><br><span class="line">--auth-cred=AUTH..  HTTP 认证凭证（username:password）</span><br><span class="line">--auth-file=AUTH..  HTTP 认证 PEM 证书/私钥文件</span><br><span class="line">--ignore-code=IG..  忽略 HTTP 错误码（例如：401）</span><br><span class="line">--ignore-proxy      忽略系统默认代理设置</span><br><span class="line">--ignore-redirects  忽略重定向尝试</span><br><span class="line">--ignore-timeouts   忽略连接超时</span><br><span class="line">--proxy=PROXY       使用代理连接目标 URL</span><br><span class="line">--proxy-cred=PRO..  使用代理进行认证（username:password）</span><br><span class="line">--proxy-file=PRO..  从文件中加载代理列表</span><br><span class="line">--tor               使用 Tor 匿名网络</span><br><span class="line">--tor-port=TORPORT  设置 Tor 代理端口代替默认端口</span><br><span class="line">--tor-type=TORTYPE  设置 Tor 代理方式（HTTP，SOCKS4 或 SOCKS5（默认））</span><br><span class="line">--check-tor         检查是否正确使用了 Tor</span><br><span class="line">--delay=DELAY       设置每个 HTTP 请求的延迟秒数</span><br><span class="line">--timeout=TIMEOUT   设置连接响应的有效秒数（默认为 30）</span><br><span class="line">--retries=RETRIES   连接超时时重试次数（默认为 3）</span><br><span class="line">--randomize=RPARAM  随机更改给定的参数值</span><br><span class="line">--safe-url=SAFEURL  测试过程中可频繁访问且合法的 URL 地址（译者注：</span><br><span class="line">                    有些网站在你连续多次访问错误地址时会关闭会话连接，</span><br><span class="line">                    后面的“请求”小节有详细说明）</span><br><span class="line">--safe-post=SAFE..  使用 POST 方法发送合法的数据</span><br><span class="line">--safe-req=SAFER..  从文件中加载合法的 HTTP 请求</span><br><span class="line">--safe-freq=SAFE..  每访问两次给定的合法 URL 才发送一次测试请求</span><br><span class="line">--skip-urlencode    不对 payload 数据进行 URL 编码</span><br><span class="line">--csrf-token=CSR..  设置网站用来反 CSRF 攻击的 token</span><br><span class="line">--csrf-url=CSRFURL  指定可提取反 CSRF 攻击 token 的 URL</span><br><span class="line">--force-ssl         强制使用 SSL/HTTPS</span><br><span class="line">--hpp               使用 HTTP 参数污染攻击</span><br><span class="line">--eval=EVALCODE     在发起请求前执行给定的 Python 代码（例如：</span><br><span class="line">                    &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;）</span><br></pre></td></tr></table></figure>
<h3 id="2-4-优化">2.4 优化</h3>
<ul>
<li>以下选项用于优化 sqlmap 性能</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-o                  开启所有优化开关</span><br><span class="line">--predict-output    预测常用请求的输出</span><br><span class="line">--keep-alive        使用持久的 HTTP(S) 连接</span><br><span class="line">--null-connection   仅获取页面大小而非实际的 HTTP 响应</span><br><span class="line">--threads=THREADS   设置 HTTP(S) 请求并发数最大值（默认为 1）</span><br></pre></td></tr></table></figure>
<h3 id="2-5-注入">2.5 注入</h3>
<ul>
<li>
<p>以下选项用于指定要测试的参数，</p>
<p>提供自定义注入 payloads 和篡改参数的脚本</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-p TESTPARAMETER    指定需要测试的参数</span><br><span class="line">--skip=SKIP         指定要跳过的参数</span><br><span class="line">--skip-static       指定跳过非动态参数</span><br><span class="line">--param-exclude=..  用正则表达式排除参数（例如：&quot;ses&quot;）</span><br><span class="line">--dbms=DBMS         指定 DBMS 类型（例如：MySQL）</span><br><span class="line">--dbms-cred=DBMS..  DBMS 认证凭据（username:password）</span><br><span class="line">--os=OS             指定 DBMS 服务器的操作系统类型</span><br><span class="line">--invalid-bignum    将无效值设置为大数</span><br><span class="line">--invalid-logical   对无效值使用逻辑运算</span><br><span class="line">--invalid-string    对无效值使用随机字符串</span><br><span class="line">--no-cast           关闭 payload 构造机制</span><br><span class="line">--no-escape         关闭字符串转义机制</span><br><span class="line">--prefix=PREFIX     注入 payload 的前缀字符串</span><br><span class="line">--suffix=SUFFIX     注入 payload 的后缀字符串</span><br><span class="line">--tamper=TAMPER     用给定脚本修改注入数据</span><br></pre></td></tr></table></figure>
<h3 id="2-6-检测">2.6 检测</h3>
<ul>
<li>以下选项用于自定义检测方式</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--level=LEVEL       设置测试等级（1-5，默认为 1）</span><br><span class="line">--risk=RISK         设置测试风险等级（1-3，默认为 1）</span><br><span class="line">--string=STRING     用于确定查询结果为真时的字符串</span><br><span class="line">--not-string=NOT..  用于确定查询结果为假时的字符串</span><br><span class="line">--regexp=REGEXP     用于确定查询结果为真时的正则表达式</span><br><span class="line">--code=CODE         用于确定查询结果为真时的 HTTP 状态码</span><br><span class="line">--text-only         只根据页面文本内容对比页面</span><br><span class="line">--titles            只根据页面标题对比页面</span><br></pre></td></tr></table></figure>
<h3 id="2-7-技术">2.7 技术</h3>
<ul>
<li>以下选项用于调整特定 SQL 注入技术的测试方法</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--technique=TECH    使用的 SQL 注入技术（默认为“BEUSTQ”，译者注：</span><br><span class="line">                    B: Boolean-based blind SQL injection（布尔型盲注）</span><br><span class="line">                    E: Error-based SQL injection（报错型注入）</span><br><span class="line">                    U: UNION query SQL injection（联合查询注入）</span><br><span class="line">                    S: Stacked queries SQL injection（堆查询注入）</span><br><span class="line">                    T: Time-based blind SQL injection（时间型盲注）</span><br><span class="line">                    Q: inline Query injection（内联查询注入）</span><br><span class="line">--time-sec=TIMESEC  延迟 DBMS 的响应秒数（默认为 5）</span><br><span class="line">--union-cols=UCOLS  设置联合查询注入测试的列数目范围</span><br><span class="line">--union-char=UCHAR  用于暴力猜解列数的字符</span><br><span class="line">--union-from=UFROM  设置联合查询注入 FROM 处用到的表</span><br><span class="line">--dns-domain=DNS..  设置用于 DNS 渗出攻击的域名（译者注：</span><br><span class="line">                    推荐阅读《在SQL注入中使用DNS获取数据》</span><br><span class="line">                    http://cb.drops.wiki/drops/tips-5283.html，</span><br><span class="line">                    在后面的“技术”小节中也有相应解释）</span><br><span class="line">--second-order=S..  设置二阶响应的结果显示页面的 URL（译者注：</span><br><span class="line">                    该选项用于二阶 SQL 注入）</span><br></pre></td></tr></table></figure>
<h3 id="2-8-指纹识别">2.8 指纹识别</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-f, --fingerprint   执行广泛的 DBMS 版本指纹识别</span><br></pre></td></tr></table></figure>
<h3 id="2-9-枚举">2.9 枚举</h3>
<ul>
<li>
<p>以下选项用于获取后端数据库管理系统的信息，结构和数据表中的数据。</p>
<p>此外，还可以运行你输入的 SQL 语句</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-a, --all           获取所有信息、数据</span><br><span class="line">-b, --banner        获取 DBMS banner</span><br><span class="line">--current-user      获取 DBMS 当前用户</span><br><span class="line">--current-db        获取 DBMS 当前数据库</span><br><span class="line">--hostname          获取 DBMS 服务器的主机名</span><br><span class="line">--is-dba            探测 DBMS 当前用户是否为 DBA（数据库管理员）</span><br><span class="line">--users             枚举出 DBMS 所有用户</span><br><span class="line">--passwords         枚举出 DBMS 所有用户的密码哈希</span><br><span class="line">--privileges        枚举出 DBMS 所有用户特权级</span><br><span class="line">--roles             枚举出 DBMS 所有用户角色</span><br><span class="line">--dbs               枚举出 DBMS 所有数据库</span><br><span class="line">--tables            枚举出 DBMS 数据库中的所有表</span><br><span class="line">--columns           枚举出 DBMS 表中的所有列</span><br><span class="line">--schema            枚举出 DBMS 所有模式</span><br><span class="line">--count             获取数据表数目</span><br><span class="line">--dump              导出 DBMS 数据库表项</span><br><span class="line">--dump-all          导出所有 DBMS 数据库表项</span><br><span class="line">--search            搜索列，表和/或数据库名</span><br><span class="line">--comments          获取 DBMS 注释</span><br><span class="line">-D DB               指定要枚举的 DBMS 数据库</span><br><span class="line">-T TBL              指定要枚举的 DBMS 数据表</span><br><span class="line">-C COL              指定要枚举的 DBMS 数据列</span><br><span class="line">-X EXCLUDECOL       指定要排除的 DBMS 数据列</span><br><span class="line">-U USER             指定枚举的 DBMS 用户</span><br><span class="line">--exclude-sysdbs    枚举所有数据表时，指定排除特定系统数据库</span><br><span class="line">--pivot-column=P..  指定主列</span><br><span class="line">--where=DUMPWHERE   在转储表时使用 WHERE 条件语句</span><br><span class="line">--start=LIMITSTART  指定要导出的数据表条目开始行数</span><br><span class="line">--stop=LIMITSTOP    指定要导出的数据表条目结束行数</span><br><span class="line">--first=FIRSTCHAR   指定获取返回查询结果的开始字符位</span><br><span class="line">--last=LASTCHAR     指定获取返回查询结果的结束字符位</span><br><span class="line">--sql-query=QUERY   指定要执行的 SQL 语句</span><br><span class="line">--sql-shell         调出交互式 SQL shell</span><br><span class="line">--sql-file=SQLFILE  执行文件中的 SQL 语句</span><br></pre></td></tr></table></figure>
<h3 id="2-10-暴力破解">2.10 暴力破解</h3>
<ul>
<li>以下选项用于暴力破解测试</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--common-tables     检测常见的表名是否存在</span><br><span class="line">--common-columns    检测常用的列名是否存在</span><br></pre></td></tr></table></figure>
<h3 id="2-11-用户自定义函数注入">2.11 用户自定义函数注入</h3>
<ul>
<li>以下选项用于创建用户自定义函数</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--udf-inject        注入用户自定义函数</span><br><span class="line">--shared-lib=SHLIB  共享库的本地路径</span><br></pre></td></tr></table></figure>
<h3 id="2-12-访问文件系统">2.12 访问文件系统</h3>
<ul>
<li>以下选项用于访问后端数据库管理系统的底层文件系统</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--file-read=RFILE   读取后端 DBMS 文件系统中的文件</span><br><span class="line">--file-write=WFILE  写入后端 DBMS 文件系统中的文件</span><br><span class="line">--file-dest=DFILE   使用文件绝对路径写入到后端 DBMS</span><br></pre></td></tr></table></figure>
<h3 id="2-13-访问操作系统">2.13 访问操作系统</h3>
<ul>
<li>以下选项用于访问后端数据库管理系统的底层操作系统</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--os-cmd=OSCMD      执行操作系统命令</span><br><span class="line">--os-shell          调出交互式操作系统 shell</span><br><span class="line">--os-pwn            调出 OOB shell，Meterpreter 或 VNC</span><br><span class="line">--os-smbrelay       一键调出 OOB shell，Meterpreter 或 VNC</span><br><span class="line">--os-bof            利用存储过程的缓冲区溢出</span><br><span class="line">--priv-esc          数据库进程用户提权</span><br><span class="line">--msf-path=MSFPATH  Metasploit 框架的本地安装路径</span><br><span class="line">--tmp-path=TMPPATH  远程临时文件目录的绝对路径</span><br></pre></td></tr></table></figure>
<h3 id="2-14-访问-Windows-注册表">2.14 访问 Windows 注册表</h3>
<ul>
<li>以下选项用于访问后端数据库管理系统的 Windows 注册表</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--reg-read          读取一个 Windows 注册表键值</span><br><span class="line">--reg-add           写入一个 Windows 注册表键值数据</span><br><span class="line">--reg-del           删除一个 Windows 注册表键值</span><br><span class="line">--reg-key=REGKEY    指定 Windows 注册表键</span><br><span class="line">--reg-value=REGVAL  指定 Windows 注册表键值</span><br><span class="line">--reg-data=REGDATA  指定 Windows 注册表键值数据</span><br><span class="line">--reg-type=REGTYPE  指定 Windows 注册表键值类型</span><br></pre></td></tr></table></figure>
<h3 id="2-15-通用选项">2.15 通用选项</h3>
<ul>
<li>以下选项用于设置通用的参数</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-s SESSIONFILE      从文件（.sqlite）中读入会话信息</span><br><span class="line">-t TRAFFICFILE      保存所有 HTTP 流量记录到指定文本文件</span><br><span class="line">--batch             从不询问用户输入，使用默认配置</span><br><span class="line">--binary-fields=..  具有二进制值的结果字段（例如：&quot;digest&quot;）</span><br><span class="line">--check-internet    在访问目标之前检查是否正常连接互联网</span><br><span class="line">--crawl=CRAWLDEPTH  从目标 URL 开始爬取网站</span><br><span class="line">--crawl-exclude=..  用正则表达式筛选爬取的页面（例如：&quot;logout&quot;）</span><br><span class="line">--csv-del=CSVDEL    指定输出到 CVS 文件时使用的分隔符（默认为“,”）</span><br><span class="line">--charset=CHARSET   指定 SQL 盲注字符集（例如：&quot;0123456789abcdef&quot;）</span><br><span class="line">--dump-format=DU..  导出数据的格式（CSV（默认），HTML 或 SQLITE）</span><br><span class="line">--encoding=ENCOD..  指定获取数据时使用的字符编码（例如：GBK）</span><br><span class="line">--eta               显示每个结果输出的预计到达时间</span><br><span class="line">--flush-session     清空当前目标的会话文件</span><br><span class="line">--forms             解析并测试目标 URL 的表单</span><br><span class="line">--fresh-queries     忽略存储在会话文件中的查询结果</span><br><span class="line">--har=HARFILE       将所有 HTTP 流量记录到一个 HAR 文件中</span><br><span class="line">--hex               获取数据时调用 DBMS 的 hex 函数</span><br><span class="line">--output-dir=OUT..  自定义输出目录路径</span><br><span class="line">--parse-errors      从响应中解析并显示 DBMS 错误信息</span><br><span class="line">--save=SAVECONFIG   将选项设置保存到一个 INI 配置文件</span><br><span class="line">--scope=SCOPE       用正则表达式从提供的代理日志中过滤目标</span><br><span class="line">--test-filter=TE..  根据 payloads 和/或标题（例如：ROW）选择测试</span><br><span class="line">--test-skip=TEST..  根据 payloads 和/或标题（例如：BENCHMARK）跳过部分测试</span><br><span class="line">--update            更新 sqlmap</span><br></pre></td></tr></table></figure>
<h3 id="2-16-其他选项">2.16 其他选项</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-z MNEMONICS        使用短助记符（例如：“flu,bat,ban,tec=EU”）</span><br><span class="line">--alert=ALERT       在找到 SQL 注入时运行 OS 命令</span><br><span class="line">--answers=ANSWERS   设置问题答案（例如：“quit=N,follow=N”）</span><br><span class="line">--beep              出现问题提醒或在发现 SQL 注入时发出提示音</span><br><span class="line">--cleanup           指定移除 DBMS 中的特定的 UDF 或者数据表</span><br><span class="line">--dependencies      检查 sqlmap 缺少什么（非核心）依赖</span><br><span class="line">--disable-coloring  关闭彩色控制台输出</span><br><span class="line">--gpage=GOOGLEPAGE  指定页码使用 Google dork 结果</span><br><span class="line">--identify-waf      针对 WAF/IPS/IDS 保护进行彻底的测试</span><br><span class="line">--mobile            使用 HTTP User-Agent 模仿智能手机</span><br><span class="line">--offline           在离线模式下工作（仅使用会话数据）</span><br><span class="line">--purge-output      安全地删除输出目录的所有内容</span><br><span class="line">--skip-waf          跳过启发式检测 WAF/IPS/IDS 保护</span><br><span class="line">--smart             只有在使用启发式检测时才进行彻底的测试</span><br><span class="line">--sqlmap-shell      调出交互式 sqlmap shell</span><br><span class="line">--tmp-dir=TMPDIR    指定用于存储临时文件的本地目录</span><br><span class="line">--web-root=WEBROOT  指定 Web 服务器根目录（例如：&quot;/var/www&quot;）</span><br><span class="line">--wizard            适合初级用户的向导界面</span><br></pre></td></tr></table></figure>
<blockquote>
<p>说明：</p>
<p>sqlmap默认输出路径为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\用户名\AppData\Local\sqlmap\output\网址\dump\数据库名\表名</span><br></pre></td></tr></table></figure>
<p>可以通过 <code>--output-dir=D:\自定义路径</code> 自定义输出目录路径。</p>
</blockquote>
]]></content>
      <categories>
        <category>脚本工具</category>
      </categories>
      <tags>
        <tag>sqlmap</tag>
      </tags>
  </entry>
  <entry>
    <title>《信息安全数学基础》Notes_持续更新...</title>
    <url>/butterflyblog/2024/03/01/%E3%80%8A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h1>《信息安全数学基础》Notes_持续更新…</h1>
<blockquote>
<p>来源：同济大学计算机系《信息安全数学基础》课程 SecurityMath</p>
<p>2024-03-01@isSeymour</p>
</blockquote>
<h2 id="一、密码学数学基础引论">一、密码学数学基础引论</h2>
]]></content>
      <categories>
        <category>大学课程</category>
      </categories>
      <tags>
        <tag>信息安全数学基础</tag>
      </tags>
  </entry>
  <entry>
    <title>《数据库系统原理》Notes_持续更新...</title>
    <url>/butterflyblog/2024/03/01/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h1>《数据库系统原理》Notes_持续更新…</h1>
<blockquote>
<p>来源：同济大学计算机系《数据库系统原理》课程 DatabaseSystemPrinciples</p>
<p>2024-03-01@isSeymour</p>
</blockquote>
<h2 id="Ch1-数据库系统概述">Ch1-数据库系统概述</h2>
]]></content>
      <categories>
        <category>大学课程</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>《SciPy》Notes</title>
    <url>/butterflyblog/2024/01/30/%E3%80%8ASciPy%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《SciPy》Notes</h1>
<blockquote>
<p>来源：</p>
<ul>
<li><a href="https://www.runoob.com/scipy/scipy-tutorial.html">https://www.runoob.com/scipy/scipy-tutorial.html</a></li>
<li><a href="https://docs.scipy.org/doc/scipy/reference/">https://docs.scipy.org/doc/scipy/reference/</a></li>
</ul>
<p>2024-02-14@isSeymour</p>
</blockquote>
<h1>一、简介</h1>
<p>SciPy 是一个开源的 Python 算法库和数学工具包。</p>
<p>Scipy 是基于 Numpy 的科学计算库，用于数学、科学、工程学等领域，很多有一些高阶抽象和物理模型需要使用 Scipy。</p>
<p>SciPy 包含的模块有最优化、线性代数、积分、插值、特殊函数、快速傅里叶变换、信号处理和图像处理、常微分方程求解和其他科学与工程中常用的计算。</p>
<h2 id="1-1-安装">1.1 安装</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install scipy</span><br></pre></td></tr></table></figure>
<p>使用示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(scipy.__version__)	<span class="comment"># 输出版本号1.7.0</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一英亩等于多少平方米</span></span><br><span class="line"><span class="built_in">print</span>(constants.acre)	<span class="comment"># 4046.8564223999992</span></span><br></pre></td></tr></table></figure>
<h2 id="1-2-模块列表">1.2 模块列表</h2>
<p>以下列出了 SciPy 常用的一些模块及官网 API 地址：</p>
<table>
<thead>
<tr>
<th style="text-align:left">模块名</th>
<th style="text-align:left">功能</th>
<th style="text-align:left">参考文档</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">scipy.cluster</td>
<td style="text-align:left">向量量化</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/cluster.html">cluster API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.constants</td>
<td style="text-align:left">数学常量</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/constants.html">constants API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.fft</td>
<td style="text-align:left">快速傅里叶变换</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/fft.html">fft API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.integrate</td>
<td style="text-align:left">积分</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/integrate.html">integrate API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.interpolate</td>
<td style="text-align:left">插值</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/interpolate.html">interpolate API</a></td>
</tr>
<tr>
<td style="text-align:left"><a href="http://scipy.io">scipy.io</a></td>
<td style="text-align:left">数据输入输出</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/io.html">io API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.linalg</td>
<td style="text-align:left">线性代数</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/linalg.html">linalg API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.misc</td>
<td style="text-align:left">图像处理</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/misc.html">misc API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.ndimage</td>
<td style="text-align:left">N 维图像</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/ndimage.html">ndimage API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.odr</td>
<td style="text-align:left">正交距离回归</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/odr.html">odr API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.optimize</td>
<td style="text-align:left">优化算法</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/optimize.html">optimize API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.signal</td>
<td style="text-align:left">信号处理</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/signal.html">signal API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.sparse</td>
<td style="text-align:left">稀疏矩阵</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/sparse.html">sparse API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.spatial</td>
<td style="text-align:left">空间数据结构和算法</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/spatial.html">spatial API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.special</td>
<td style="text-align:left">特殊数学函数</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/special.html">special API</a></td>
</tr>
<tr>
<td style="text-align:left">scipy.stats</td>
<td style="text-align:left">统计函数</td>
<td style="text-align:left"><a href="https://docs.scipy.org/doc/scipy/reference/stats.mstats.html">stats.mstats API</a></td>
</tr>
</tbody>
</table>
<h1>二、常量模块</h1>
<h2 id="2-1-数学常数">2.1 数学常数</h2>
<p>SciPy 常量模块 <strong>constants</strong> 提供了许多内置的数学常数。</p>
<p>圆周率是一个数学常数，为一个圆的周长和其直径的比率，近似值约等于 3.14159，常用符号 <img src="https://static.jyshare.com/images/mix/9be4ba0bb8df3af72e90a0535fabcc17431e540a.svg" alt="img"> 来表示。</p>
<p>以下实例输出圆周率：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.pi)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3.141592653589793</span><br></pre></td></tr></table></figure>
<p>以下实例输出黄金比例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.golden)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.618033988749895</span><br></pre></td></tr></table></figure>
<p>我们可以使用 <strong>dir()</strong> 函数来查看 <strong>constants</strong> 模块包含了哪些常量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(constants))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;Avogadro&#x27;, &#x27;Boltzmann&#x27;, &#x27;Btu&#x27;, ...]</span><br></pre></td></tr></table></figure>
<h2 id="2-2-单位类型">2.2 单位类型</h2>
<p>常量模块包含以下几种单位：</p>
<h3 id="国际单位制词头">国际单位制词头</h3>
<p>国际单位制词头（英语：SI prefix）表示单位的倍数和分数，目前有 20 个词头，大多数是千的整数次幂。 (centi 返回 0.01)：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.yotta)    <span class="comment">#1e+24</span></span><br><span class="line"><span class="built_in">print</span>(constants.zetta)    <span class="comment">#1e+21</span></span><br><span class="line"><span class="built_in">print</span>(constants.exa)      <span class="comment">#1e+18</span></span><br><span class="line"><span class="built_in">print</span>(constants.peta)     <span class="comment">#1e+15</span></span><br><span class="line"><span class="built_in">print</span>(constants.tera)     <span class="comment">#1e+12</span></span><br><span class="line"><span class="built_in">print</span>(constants.giga)     <span class="comment">#1e+09</span></span><br><span class="line"><span class="built_in">print</span>(constants.mega)     <span class="comment">#1e+06</span></span><br><span class="line"><span class="built_in">print</span>(constants.kilo)     <span class="comment">#1000.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.hecto)    <span class="comment">#100.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.deka)     <span class="comment">#10.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.deci)     <span class="comment">#0.1</span></span><br><span class="line"><span class="built_in">print</span>(constants.centi)    <span class="comment">#0.01</span></span><br><span class="line"><span class="built_in">print</span>(constants.milli)    <span class="comment">#0.001</span></span><br><span class="line"><span class="built_in">print</span>(constants.micro)    <span class="comment">#1e-06</span></span><br><span class="line"><span class="built_in">print</span>(constants.nano)     <span class="comment">#1e-09</span></span><br><span class="line"><span class="built_in">print</span>(constants.pico)     <span class="comment">#1e-12</span></span><br><span class="line"><span class="built_in">print</span>(constants.femto)    <span class="comment">#1e-15</span></span><br><span class="line"><span class="built_in">print</span>(constants.atto)     <span class="comment">#1e-18</span></span><br><span class="line"><span class="built_in">print</span>(constants.zepto)    <span class="comment">#1e-21</span></span><br></pre></td></tr></table></figure>
<h3 id="二进制前缀">二进制前缀</h3>
<p>返回字节单位 (kibi 返回 1024)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.kibi)    <span class="comment">#2^10  1024</span></span><br><span class="line"><span class="built_in">print</span>(constants.mebi)    <span class="comment">#2^20  1048576</span></span><br><span class="line"><span class="built_in">print</span>(constants.gibi)    <span class="comment">#2^30  1073741824</span></span><br><span class="line"><span class="built_in">print</span>(constants.tebi)    <span class="comment">#2^40  1099511627776</span></span><br><span class="line"><span class="built_in">print</span>(constants.pebi)    <span class="comment">#2^50  1125899906842624</span></span><br><span class="line"><span class="built_in">print</span>(constants.exbi)    <span class="comment">#2^60  1152921504606846976</span></span><br><span class="line"><span class="built_in">print</span>(constants.zebi)    <span class="comment">#2^70  1180591620717411303424</span></span><br><span class="line"><span class="built_in">print</span>(constants.yobi)    <span class="comment">#2^80  1208925819614629174706176</span></span><br></pre></td></tr></table></figure>
<h3 id="质量单位">质量单位</h3>
<p>返回多少千克 <strong>kg</strong>。(gram 返回 0.001)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.gram)        <span class="comment">#0.001</span></span><br><span class="line"><span class="built_in">print</span>(constants.metric_ton)  <span class="comment">#1000.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.grain)       <span class="comment">#6.479891e-05</span></span><br><span class="line"><span class="built_in">print</span>(constants.lb)          <span class="comment">#0.45359236999999997</span></span><br><span class="line"><span class="built_in">print</span>(constants.pound)       <span class="comment">#0.45359236999999997</span></span><br><span class="line"><span class="built_in">print</span>(constants.oz)          <span class="comment">#0.028349523124999998</span></span><br><span class="line"><span class="built_in">print</span>(constants.ounce)       <span class="comment">#0.028349523124999998</span></span><br><span class="line"><span class="built_in">print</span>(constants.stone)       <span class="comment">#6.3502931799999995</span></span><br><span class="line"><span class="built_in">print</span>(constants.long_ton)    <span class="comment">#1016.0469088</span></span><br><span class="line"><span class="built_in">print</span>(constants.short_ton)   <span class="comment">#907.1847399999999</span></span><br><span class="line"><span class="built_in">print</span>(constants.troy_ounce)  <span class="comment">#0.031103476799999998</span></span><br><span class="line"><span class="built_in">print</span>(constants.troy_pound)  <span class="comment">#0.37324172159999996</span></span><br><span class="line"><span class="built_in">print</span>(constants.carat)       <span class="comment">#0.0002</span></span><br><span class="line"><span class="built_in">print</span>(constants.atomic_mass) <span class="comment">#1.66053904e-27</span></span><br><span class="line"><span class="built_in">print</span>(constants.m_u)         <span class="comment">#1.66053904e-27</span></span><br><span class="line"><span class="built_in">print</span>(constants.u)           <span class="comment">#1.66053904e-27</span></span><br></pre></td></tr></table></figure>
<h3 id="角度单位">角度单位</h3>
<p>返回弧度 (degree 返回 0.017453292519943295)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.degree)     <span class="comment">#0.017453292519943295</span></span><br><span class="line"><span class="built_in">print</span>(constants.arcmin)     <span class="comment">#0.0002908882086657216</span></span><br><span class="line"><span class="built_in">print</span>(constants.arcminute)  <span class="comment">#0.0002908882086657216</span></span><br><span class="line"><span class="built_in">print</span>(constants.arcsec)     <span class="comment">#4.84813681109536e-06</span></span><br><span class="line"><span class="built_in">print</span>(constants.arcsecond)  <span class="comment">#4.84813681109536e-06</span></span><br></pre></td></tr></table></figure>
<h3 id="时间单位">时间单位</h3>
<p>返回秒数(hour 返回 3600.0)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.minute)      <span class="comment">#60.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.hour)        <span class="comment">#3600.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.day)         <span class="comment">#86400.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.week)        <span class="comment">#604800.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.year)        <span class="comment">#31536000.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.Julian_year) <span class="comment">#31557600.0</span></span><br></pre></td></tr></table></figure>
<h3 id="长度单位">长度单位</h3>
<p>返回米数(nautical_mile 返回 1852.0)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.inch)              <span class="comment">#0.0254</span></span><br><span class="line"><span class="built_in">print</span>(constants.foot)              <span class="comment">#0.30479999999999996</span></span><br><span class="line"><span class="built_in">print</span>(constants.yard)              <span class="comment">#0.9143999999999999</span></span><br><span class="line"><span class="built_in">print</span>(constants.mile)              <span class="comment">#1609.3439999999998</span></span><br><span class="line"><span class="built_in">print</span>(constants.mil)               <span class="comment">#2.5399999999999997e-05</span></span><br><span class="line"><span class="built_in">print</span>(constants.pt)                <span class="comment">#0.00035277777777777776</span></span><br><span class="line"><span class="built_in">print</span>(constants.point)             <span class="comment">#0.00035277777777777776</span></span><br><span class="line"><span class="built_in">print</span>(constants.survey_foot)       <span class="comment">#0.3048006096012192</span></span><br><span class="line"><span class="built_in">print</span>(constants.survey_mile)       <span class="comment">#1609.3472186944373</span></span><br><span class="line"><span class="built_in">print</span>(constants.nautical_mile)     <span class="comment">#1852.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.fermi)             <span class="comment">#1e-15</span></span><br><span class="line"><span class="built_in">print</span>(constants.angstrom)          <span class="comment">#1e-10</span></span><br><span class="line"><span class="built_in">print</span>(constants.micron)            <span class="comment">#1e-06</span></span><br><span class="line"><span class="built_in">print</span>(constants.au)                <span class="comment">#149597870691.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.astronomical_unit) <span class="comment">#149597870691.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.light_year)        <span class="comment">#9460730472580800.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.parsec)            <span class="comment">#3.0856775813057292e+16</span></span><br></pre></td></tr></table></figure>
<h3 id="压强单位">压强单位</h3>
<p>返回多少帕斯卡，压力的 SI 制单位。(psi 返回 6894.757293168361)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.atm)         <span class="comment">#101325.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.atmosphere)  <span class="comment">#101325.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.bar)         <span class="comment">#100000.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.torr)        <span class="comment">#133.32236842105263</span></span><br><span class="line"><span class="built_in">print</span>(constants.mmHg)        <span class="comment">#133.32236842105263</span></span><br><span class="line"><span class="built_in">print</span>(constants.psi)         <span class="comment">#6894.757293168361</span></span><br></pre></td></tr></table></figure>
<h3 id="面积单位">面积单位</h3>
<p>返回多少平方米，平方米是面积的公制单位，其定义是：<strong>在一平面上，边长为一米的正方形之面积</strong>。(hectare 返回 10000.0)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.hectare) <span class="comment">#10000.0</span></span><br><span class="line"><span class="built_in">print</span>(constants.acre)    <span class="comment">#4046.8564223999992</span></span><br></pre></td></tr></table></figure>
<h3 id="体积单位">体积单位</h3>
<p>返回多少立方米，立方米容量计量单位，1 立方米的容量相当于一个长、宽、高都等于 1 米的立方体的体积，与 1 公秉和 1 度水的容积相等，也与1000000立方厘米的体积相等。(liter 返回 0.001)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.liter)            <span class="comment">#0.001</span></span><br><span class="line"><span class="built_in">print</span>(constants.litre)            <span class="comment">#0.001</span></span><br><span class="line"><span class="built_in">print</span>(constants.gallon)           <span class="comment">#0.0037854117839999997</span></span><br><span class="line"><span class="built_in">print</span>(constants.gallon_US)        <span class="comment">#0.0037854117839999997</span></span><br><span class="line"><span class="built_in">print</span>(constants.gallon_imp)       <span class="comment">#0.00454609</span></span><br><span class="line"><span class="built_in">print</span>(constants.fluid_ounce)      <span class="comment">#2.9573529562499998e-05</span></span><br><span class="line"><span class="built_in">print</span>(constants.fluid_ounce_US)   <span class="comment">#2.9573529562499998e-05</span></span><br><span class="line"><span class="built_in">print</span>(constants.fluid_ounce_imp)  <span class="comment">#2.84130625e-05</span></span><br><span class="line"><span class="built_in">print</span>(constants.barrel)           <span class="comment">#0.15898729492799998</span></span><br><span class="line"><span class="built_in">print</span>(constants.bbl)              <span class="comment">#0.15898729492799998</span></span><br></pre></td></tr></table></figure>
<h3 id="速度单位">速度单位</h3>
<p>返回每秒多少米。(speed_of_sound 返回 340.5)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.kmh)            <span class="comment">#0.2777777777777778</span></span><br><span class="line"><span class="built_in">print</span>(constants.mph)            <span class="comment">#0.44703999999999994</span></span><br><span class="line"><span class="built_in">print</span>(constants.mach)           <span class="comment">#340.5</span></span><br><span class="line"><span class="built_in">print</span>(constants.speed_of_sound) <span class="comment">#340.5</span></span><br><span class="line"><span class="built_in">print</span>(constants.knot)           <span class="comment">#0.5144444444444445</span></span><br></pre></td></tr></table></figure>
<h3 id="温度单位">温度单位</h3>
<p>返回多少开尔文。(zero_Celsius 返回 273.15)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.zero_Celsius)      <span class="comment">#273.15</span></span><br><span class="line"><span class="built_in">print</span>(constants.degree_Fahrenheit) <span class="comment">#0.5555555555555556</span></span><br></pre></td></tr></table></figure>
<h3 id="能量单位">能量单位</h3>
<p>返回多少焦耳，焦耳（简称焦）是国际单位制中能量、功或热量的导出单位，符号为J。(calorie 返回 4.184)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.zero_Celsius)      <span class="comment">#273.15</span></span><br><span class="line"><span class="built_in">print</span>(constants.degree_Fahrenheit) <span class="comment">#0.5555555555555556</span></span><br></pre></td></tr></table></figure>
<h3 id="功率单位">功率单位</h3>
<p>返回多少瓦特，瓦特（符号：W）是国际单位制的功率单位。1瓦特的定义是1焦耳/秒（1 J/s），即每秒钟转换，使用或耗散的（以安培为量度的）能量的速率。(horsepower 返回 745.6998715822701)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.hp)         <span class="comment">#745.6998715822701</span></span><br><span class="line"><span class="built_in">print</span>(constants.horsepower) <span class="comment">#745.6998715822701</span></span><br></pre></td></tr></table></figure>
<h3 id="力学单位">力学单位</h3>
<p>返回多少牛顿，牛顿（符号为N，英语：Newton）是一种物理量纲，是力的公制单位。它是以建立经典力学（经典力学）的艾萨克·牛顿命名。。(kilogram_force 返回 9.80665)。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> constants</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(constants.dyn)             <span class="comment">#1e-05</span></span><br><span class="line"><span class="built_in">print</span>(constants.dyne)            <span class="comment">#1e-05</span></span><br><span class="line"><span class="built_in">print</span>(constants.lbf)             <span class="comment">#4.4482216152605</span></span><br><span class="line"><span class="built_in">print</span>(constants.pound_force)     <span class="comment">#4.4482216152605</span></span><br><span class="line"><span class="built_in">print</span>(constants.kgf)             <span class="comment">#9.80665</span></span><br><span class="line"><span class="built_in">print</span>(constants.kilogram_force)  <span class="comment">#9.80665</span></span><br></pre></td></tr></table></figure>
<h1>二、优化器</h1>
<p>SciPy 的 optimize 模块提供了常用的最优化算法函数实现，我们可以直接调用这些函数完成我们的优化问题，比如查找函数的最小值或方程的根等。</p>
<h2 id="2-1-线性方程求根">2.1 线性方程求根</h2>
<p>NumPy 能够找到多项式和线性方程的根，但它无法找到非线性方程的根，如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x + cos(x)</span><br></pre></td></tr></table></figure>
<p>因此我们可以使用 SciPy 的 optimze.root 函数，这个函数需要两个参数：</p>
<ul>
<li>fun - 表示方程的函数。</li>
<li>x0 - 根的初始猜测。</li>
</ul>
<p>该函数返回一个对象，其中包含有关解决方案的信息。</p>
<p>实际解决方案在返回对象的属性 x ，查看如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> root</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> cos</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eqn</span>(<span class="params">x</span>):</span><br><span class="line">  <span class="keyword">return</span> x + cos(x)</span><br><span class="line"></span><br><span class="line">myroot = root(eqn, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(myroot.x)</span><br><span class="line"><span class="comment"># 查看更多信息</span></span><br><span class="line"><span class="built_in">print</span>(myroot)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[-0.73908513]</span><br><span class="line">    fjac: array([[-1.]])</span><br><span class="line">     fun: array([0.])</span><br><span class="line"> message: &#x27;The solution converged.&#x27;</span><br><span class="line">    nfev: 9</span><br><span class="line">     qtf: array([-2.66786593e-13])</span><br><span class="line">       r: array([-1.67361202])</span><br><span class="line">  status: 1</span><br><span class="line"> success: True</span><br><span class="line">       x: array([-0.73908513])</span><br></pre></td></tr></table></figure>
<h2 id="2-2-最小化函数">2.2 最小化函数</h2>
<p>函数表示一条曲线，曲线有高点和低点。</p>
<p>高点称为最大值。</p>
<p>低点称为最小值。</p>
<p>整条曲线中的最高点称为全局最大值，其余部分称为局部最大值。</p>
<p>整条曲线的最低点称为全局最小值，其余的称为局部最小值。</p>
<p>可以使用 <strong>scipy.optimize.minimize()</strong> 函数来最小化函数。</p>
<p><code>minimize()</code> 函接受以下几个参数：</p>
<ul>
<li>
<p>fun - 要优化的函数</p>
</li>
<li>
<p>x0 - 初始猜测值</p>
</li>
<li>
<p>method - 要使用的方法名称，值可以是：‘CG’，‘BFGS’，‘Newton-CG’，‘L-BFGS-B’，‘TNC’，‘COBYLA’，，‘SLSQP’。</p>
</li>
<li>
<p>callback - 每次优化迭代后调用的函数。</p>
</li>
<li>
<p>options - 定义其他参数的字典：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     &quot;disp&quot;: boolean - print detailed description</span><br><span class="line">     &quot;gtol&quot;: number - the tolerance of the error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> minimize</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eqn</span>(<span class="params">x</span>):</span><br><span class="line">  <span class="keyword">return</span> x**<span class="number">2</span> + x + <span class="number">2</span></span><br><span class="line"></span><br><span class="line">mymin = minimize(eqn, <span class="number">0</span>, method=<span class="string">&#x27;BFGS&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mymin)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     fun: 1.75</span><br><span class="line">hess_inv: array([[0.50000001]])</span><br><span class="line">     jac: array([0.])</span><br><span class="line"> message: &#x27;Optimization terminated successfully.&#x27;</span><br><span class="line">    nfev: 8</span><br><span class="line">     nit: 2</span><br><span class="line">    njev: 4</span><br><span class="line">  status: 0</span><br><span class="line"> success: True</span><br><span class="line">       x: array([-0.50000001])</span><br></pre></td></tr></table></figure>
<h1>三、稀疏矩阵</h1>
<p>稀疏矩阵（英语：sparse matrix）指的是在数值分析中绝大多数数值为零的矩阵。反之，如果大部分元素都非零，则这个矩阵是稠密的(Dense)。</p>
<p>在科学与工程领域中求解线性模型时经常出现大型的稀疏矩阵。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2021/08/v2-d4b2cc03d5461fac7c9912aa4fe321b7_b.gif" alt="img"></p>
<p>上图中左边就是一个稀疏矩阵，可以看到包含了很多 0 元素。而稠密的矩阵，大部分元素不是 0。</p>
<p>看一个简单例子：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5.png" alt="稀疏矩阵" style="zoom:67%;" />  
<p>上述稀疏矩阵仅包含 9 个非零元素，另外包含 26 个零元。其稀疏度为 74%，密度为 26%。</p>
<p>SciPy 的 <strong>scipy.sparse</strong> 模块提供了处理稀疏矩阵的函数。</p>
<p>我们主要使用以下两种类型的稀疏矩阵：</p>
<ul>
<li>CSC - 压缩稀疏列（Compressed Sparse Column），按列压缩。</li>
<li>CSR - 压缩稀疏行（Compressed Sparse Row），按行压缩。</li>
</ul>
<p>本章节我们主要使用 CSR 矩阵。</p>
<h2 id="3-1-CSR-矩阵">3.1 CSR 矩阵</h2>
<p>我们可以通过向 <strong>scipy.sparse.csr_matrix()</strong> 函数传递数组来创建一个 CSR 矩阵。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(csr_matrix(arr))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(0, 5)        1</span><br><span class="line">(0, 6)        1</span><br><span class="line">(0, 8)        2</span><br></pre></td></tr></table></figure>
<p><strong>结果解析：</strong></p>
<ul>
<li>第一行：在矩阵第一行（索引值 0 ）第六（索引值 5 ）个位置有一个数值 1。</li>
<li>第二行：在矩阵第一行（索引值 0 ）第七（索引值 6 ）个位置有一个数值 1。</li>
<li>第三行：在矩阵第一行（索引值 0 ）第九（索引值 8 ）个位置有一个数值 2。</li>
</ul>
<h2 id="3-2-CSR-矩阵方法">3.2 CSR 矩阵方法</h2>
<p>我们可以使用 <strong>data</strong> 属性查看存储的数据（不含 0 元素）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>]])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(csr_matrix(arr).data)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1 1 2]</span><br></pre></td></tr></table></figure>
<p>使用 <strong>count_nonzero()</strong> 方法计算非 0 元素的总数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>]])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(csr_matrix(arr).count_nonzero())</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure>
<p>使用 <strong>eliminate_zeros()</strong> 方法删除矩阵中 0 元素：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>]])</span><br><span class="line"></span><br><span class="line">mat = csr_matrix(arr)</span><br><span class="line">mat.eliminate_zeros()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mat)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1, 2)    1</span><br><span class="line">(2, 0)    1</span><br><span class="line">(2, 2)    2</span><br></pre></td></tr></table></figure>
<p>使用 <code>sum_duplicates()</code> 方法来删除重复项:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>]])</span><br><span class="line"></span><br><span class="line">mat = csr_matrix(arr)</span><br><span class="line">mat.sum_duplicates()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mat)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1, 2)    1</span><br><span class="line">(2, 0)    1</span><br><span class="line">(2, 2)    2</span><br></pre></td></tr></table></figure>
<p>csr 转换为 csc 使用 tocsc() 方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>]])</span><br><span class="line"></span><br><span class="line">newarr = csr_matrix(arr).tocsc()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(newarr)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(2, 0)    1</span><br><span class="line">(1, 2)    1</span><br><span class="line">(2, 2)    2</span><br></pre></td></tr></table></figure>
<h1>四、图结构</h1>
<p>图结构是算法学中最强大的框架之一。</p>
<p>图是各种关系的节点和边的集合，节点是与对象对应的顶点，边是对象之间的连接。</p>
<p>SciPy 提供了 scipy.sparse.csgraph 模块来处理图结构。</p>
<h2 id="4-1-邻接矩阵概念">4.1 邻接矩阵概念</h2>
<p>邻接矩阵（Adjacency Matrix）是表示顶点之间相邻关系的矩阵。</p>
<p>邻接矩阵逻辑结构分为两部分：V 和 E 集合，其中，V 是顶点，E 是边，边有时会有权重，表示节点之间的连接强度。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E5%9B%BE-1.png" alt="图-1" style="zoom:67%;" /> 
<p>用一个一维数组存放图中所有顶点数据，用一个二维数组存放顶点间关系（边或弧）的数据，这个二维数组称为邻接矩阵。</p>
<p>看下下图实例：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E5%9B%BE-2.png" alt="图-2" style="zoom:67%;" /> 
<p>顶点有 A、B、C，边权重有 1 和 2。</p>
<ul>
<li>
<p>A 与 B 是连接的，权重为 1。</p>
</li>
<li>
<p>A 与 C 是连接的，权重为 2。</p>
</li>
<li>
<p>C 与 B 是没有连接的。</p>
</li>
</ul>
<p>这个邻接矩阵可以表示为以下二维数组：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   A B C</span><br><span class="line">A:[0 1 2]  </span><br><span class="line">B:[1 0 0]</span><br><span class="line">C:[2 0 0]</span><br></pre></td></tr></table></figure>
<p>邻接矩阵又分为有向图邻接矩阵和无向图邻接矩阵。</p>
<p><strong>无向图</strong>是双向关系，边没有方向：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E5%9B%BE-3.png" alt="图-3" style="zoom:67%;" /> 
<p><strong>有向图</strong>的边带有方向，是单向关系：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E5%9B%BE-4.png" alt="图-4" style="zoom:67%;" /> 
<p>**注：**上面两个图中的 D 节点是自环，自环是指一条边的两端为同一个节点。</p>
<h2 id="4-2-连接组件方法">4.2 连接组件方法</h2>
<p>查看所有连接组件使用 connected_components() 方法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse.csgraph <span class="keyword">import</span> connected_components</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([</span><br><span class="line">  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">newarr = csr_matrix(arr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(connected_components(newarr))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(1, array([0, 0, 0], dtype=int32))</span><br></pre></td></tr></table></figure>
<h2 id="4-3-最短路径算法">4.3 最短路径算法</h2>
<h3 id="Dijkstra-迪杰斯特拉算法">Dijkstra 迪杰斯特拉算法</h3>
<p>Dijkstra(迪杰斯特拉)最短路径算法，用于计算一个节点到其他所有节点的最短路径。</p>
<p>Scipy 使用 dijkstra() 方法来计算一个元素到其他元素的最短路径。</p>
<p>dijkstra() 方法可以设置以下几个参数：</p>
<ol>
<li><strong>return_predecessors:</strong> 布尔值，设置 True，遍历所有路径，如果不想遍历所有路径可以设置为 False。</li>
<li><strong>indices:</strong> 元素的索引，返回该元素的所有路径。</li>
<li><strong>limit:</strong> 路径的最大权重。</li>
</ol>
<ul>
<li>
<p>示例</p>
<p>查找元素 1 到 2 的最短路径：</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse.csgraph <span class="keyword">import</span> dijkstra</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([</span><br><span class="line">  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">newarr = csr_matrix(arr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(dijkstra(newarr, return_predecessors=<span class="literal">True</span>, indices=<span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(array([ 0.,  1.,  2.]), array([-9999,     0,     0], dtype=int32))</span><br></pre></td></tr></table></figure>
<h3 id="Floyd-Warshall-弗洛伊德算法">Floyd Warshall 弗洛伊德算法</h3>
<p>弗洛伊德算法算法是解决任意两点间的最短路径的一种算法。</p>
<p>Scipy 使用 floyd_warshall() 方法来查找所有元素对之间的最短路径。</p>
<ul>
<li>
<p>示例</p>
<p>查找所有元素对之间的最短路径径：</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse.csgraph <span class="keyword">import</span> floyd_warshall</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([</span><br><span class="line">  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">newarr = csr_matrix(arr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(floyd_warshall(newarr, return_predecessors=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(array([[ 0.,  1.,  2.],</span><br><span class="line">       [ 1.,  0.,  3.],</span><br><span class="line">       [ 2.,  3.,  0.]]), array([[-9999,     0,     0],</span><br><span class="line">       [    1, -9999,     0],</span><br><span class="line">       [    2,     0, -9999]], dtype=int32))</span><br></pre></td></tr></table></figure>
<h3 id="Bellman-Ford-贝尔曼-福特算法">Bellman Ford 贝尔曼-福特算法</h3>
<p>贝尔曼-福特算法是解决任意两点间的最短路径的一种算法。</p>
<p>Scipy 使用 bellman_ford() 方法来查找所有元素对之间的最短路径，通常可以在任何图中使用，包括有向图、带负权边的图。</p>
<ul>
<li>
<p>实例</p>
<p>使用负权边的图查找从元素 1 到元素 2 的最短路径：</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse.csgraph <span class="keyword">import</span> bellman_ford</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([</span><br><span class="line">  [<span class="number">0</span>, -<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">newarr = csr_matrix(arr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(bellman_ford(newarr, return_predecessors=<span class="literal">True</span>, indices=<span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(array([ 0., -1.,  2.]), array([-9999,     0,     0], dtype=int32))</span><br></pre></td></tr></table></figure>
<h2 id="4-4-图的遍历">4.4 图的遍历</h2>
<h3 id="深度优先顺序">深度优先顺序</h3>
<p>depth_first_order() 方法从一个节点返回深度优先遍历的顺序。</p>
<p>可以接收以下参数：</p>
<ul>
<li>图</li>
<li>图开始遍历的元素</li>
</ul>
<p>示例</p>
<p>给定一个邻接矩阵，返回深度优先遍历的顺序：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse.csgraph <span class="keyword">import</span> depth_first_order</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([</span><br><span class="line">  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">newarr = csr_matrix(arr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(depth_first_order(newarr, <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(array([1, 0, 3, 2], dtype=int32), array([    1, -9999,     1,     0], dtype=int32))</span><br></pre></td></tr></table></figure>
<h3 id="广度优先顺序">广度优先顺序</h3>
<p>breadth_first_order() 方法从一个节点返回广度优先遍历的顺序。</p>
<p>可以接收以下参数：</p>
<ul>
<li>图</li>
<li>图开始遍历的元素</li>
</ul>
<p>示例</p>
<p>给定一个邻接矩阵，返回广度优先遍历的顺序：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.sparse.csgraph <span class="keyword">import</span> breadth_first_order</span><br><span class="line"><span class="keyword">from</span> scipy.sparse <span class="keyword">import</span> csr_matrix</span><br><span class="line"></span><br><span class="line">arr = np.array([</span><br><span class="line">  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">newarr = csr_matrix(arr)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(breadth_first_order(newarr, <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(array([1, 0, 2, 3], dtype=int32), array([    1, -9999,     1,     1], dtype=int32))</span><br></pre></td></tr></table></figure>
<h1>五、空间数据</h1>
<p>空间数据又称几何数据，它用来表示物体的位置、形态、大小分布等各方面的信息，比如坐标上的点。</p>
<p>SciPy 通过 scipy.spatial 模块处理空间数据，比如判断一个点是否在边界内、计算给定点周围距离最近点以及给定距离内的所有点。</p>
<h2 id="5-1-三角测量">5.1 三角测量</h2>
<p>三角测量在三角学与几何学上是一借由测量目标点与固定基准线的已知端点的角度，测量目标距离的方法。</p>
<p>多边形的三角测量是将多边形分成多个三角形，我们可以用这些三角形来计算多边形的面积。</p>
<p>拓扑学的一个已知事实告诉我们：<strong>任何曲面都存在三角剖分。</strong></p>
<p>假设曲面上有一个三角剖分， 我们把所有三角形的顶点总个数记为 p(公共顶点只看成一个)，边数记为 a，三角形的个数记为 n，则 e=p-a+n 是曲面的拓扑不变量。 也就是说不管是什么剖分，e 总是得到相同的数值。 e 被称为称为欧拉示性数。</p>
<p>对一系列的点进行三角剖分点方法是 Delaunay() 三角剖分。</p>
<ul>
<li>
<p>实例</p>
<p>通过给定的点来创建三角形：</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> Delaunay</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">points = np.array([</span><br><span class="line">  [<span class="number">2</span>, <span class="number">4</span>],</span><br><span class="line">  [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">  [<span class="number">3</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">4</span>, <span class="number">1</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">simplices = Delaunay(points).simplices    <span class="comment"># 三角形中顶点的索引</span></span><br><span class="line"></span><br><span class="line">plt.triplot(points[:, <span class="number">0</span>], points[:, <span class="number">1</span>], simplices)</span><br><span class="line">plt.scatter(points[:, <span class="number">0</span>], points[:, <span class="number">1</span>], color=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>输出结果如下图所示：</p>
 <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E4%B8%89%E8%A7%92%E6%B5%8B%E9%87%8F.png" alt="三角测量" style="zoom:67%;" /> 
<p>**注：**三角形顶点的 id 存储在三角剖分对象的 simplices 属性中。</p>
<h2 id="5-2-凸包">5.2 凸包</h2>
<p>凸包（Convex Hull）是一个计算几何（图形学）中的概念。</p>
<p>在一个实数向量空间 V 中，对于给定集合 X，所有包含 X 的凸集的交集 S 被称为 X 的凸包。X 的凸包可以用 X 内所有点(X1，…Xn)的凸组合来构造。</p>
<p>我们可以使用 ConvexHull() 方法来创建凸包。</p>
<ul>
<li>
<p>示例</p>
<p>通过给定的点来创建凸包：</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> ConvexHull</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">points = np.array([</span><br><span class="line">  [<span class="number">2</span>, <span class="number">4</span>],</span><br><span class="line">  [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">  [<span class="number">3</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">4</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">5</span>, <span class="number">0</span>],</span><br><span class="line">  [<span class="number">3</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">  [<span class="number">0</span>, <span class="number">2</span>]</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">hull = ConvexHull(points)</span><br><span class="line">hull_points = hull.simplices</span><br><span class="line"></span><br><span class="line">plt.scatter(points[:,<span class="number">0</span>], points[:,<span class="number">1</span>])</span><br><span class="line"><span class="keyword">for</span> simplex <span class="keyword">in</span> hull_points:</span><br><span class="line">  plt.plot(points[simplex,<span class="number">0</span>], points[simplex,<span class="number">1</span>], <span class="string">&#x27;k-&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E5%87%B8%E5%8C%85.png" alt="凸包" style="zoom:67%;" /> 
<h2 id="5-3-K-D-树">5.3 K-D 树</h2>
<p>kd-tree（k-dimensional树的简称），是一种对k维空间中的实例点进行存储以便对其进行快速检索的树形数据结构。主要应用于多维空间关键数据的搜索（如：范围搜索和最近邻搜索）。</p>
<p>K-D 树可以使用在多种应用场合，如多维键值搜索（范围搜寻及最邻近搜索）。</p>
<p>最邻近搜索用来找出在树中与输入点最接近的点。</p>
<p><strong>KDTree()</strong> 方法返回一个 KDTree 对象。</p>
<p><strong>query()</strong> 方法返回最邻近距离和最邻近位置。</p>
<ul>
<li>
<p>示例</p>
<p>查找到 (1,1) 的最邻近距离:</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> KDTree</span><br><span class="line"></span><br><span class="line">points = [(<span class="number">1</span>, -<span class="number">1</span>), (<span class="number">2</span>, <span class="number">3</span>), (-<span class="number">2</span>, <span class="number">3</span>), (<span class="number">2</span>, -<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line">kdtree = KDTree(points)</span><br><span class="line"></span><br><span class="line">res = kdtree.query((<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(2.0, 0)</span><br></pre></td></tr></table></figure>
<h2 id="5-4-距离矩阵">5.4 距离矩阵</h2>
<p>在数学中, 一个距离矩阵是一个各项元素为点之间距离的矩阵（二维数组）。因此给定 N 个欧几里得空间中的点，其距离矩阵就是一个非负实数作为元素的 <strong>N×N</strong> 的对称矩阵距离矩阵和邻接矩阵概念相似，其区别在于后者仅包含元素（点）之间是否有连边，并没有包含元素（点）之间的连通的距离的讯息。因此，距离矩阵可以看成是邻接矩阵的加权形式。</p>
<p>举例来说，我们分析如下二维点 a 至 f。在这里，我们把点所在像素之间的欧几里得度量作为距离度量。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E8%B7%9D%E7%A6%BB%E7%9F%A9%E9%98%B5-1.png" alt="距离矩阵-1" style="zoom:67%;" /> 
<p>其距离矩阵为：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E8%B7%9D%E7%A6%BB%E7%9F%A9%E9%98%B5-2.png" alt="距离矩阵-2" style="zoom:67%;" /> 
<p>距离矩阵的这些数据可以进一步被看成是图形表示的热度图（如下图所示），其中黑色代表距离为零，白色代表最大距离。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E8%B7%9D%E7%A6%BB%E7%9F%A9%E9%98%B5-3.png" alt="距离矩阵-3" style="zoom:67%;" /> 
<p>在生物信息学中，距离矩阵用来表示与坐标系无关的蛋白质结构，还有序列空间中两个序列之间的距离。这些表示被用在结构比对，序列比对，还有在核磁共振，X射线和结晶学中确定蛋白质结构。</p>
<h3 id="欧几里得距离">欧几里得距离</h3>
<p>在数学中，欧几里得距离或欧几里得度量是欧几里得空间中两点间&quot;普通&quot;（即直线）距离。使用这个距离，欧氏空间成为度量空间。相关联的范数称为欧几里得范数。较早的文献称之为毕达哥拉斯度量。</p>
<p>欧几里得度量（euclidean metric）（也称欧氏距离）是一个通常采用的距离定义，指在m维空间中两个点之间的真实距离，或者向量的自然长度（即该点到原点的距离）。在二维和三维空间中的欧氏距离就是两点之间的实际距离。</p>
<p>以下实例查看给定点之间的欧几里德距离：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial.distance <span class="keyword">import</span> euclidean</span><br><span class="line"></span><br><span class="line">p1 = (<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">p2 = (<span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">res = euclidean(p1, p2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9.21954445729</span><br></pre></td></tr></table></figure>
<h3 id="曼哈顿距离">曼哈顿距离</h3>
<p>出租车几何或曼哈顿距离（Manhattan Distance）是由十九世纪的赫尔曼·闵可夫斯基所创词汇 ，是种使用在几何度量空间的几何学用语，用以标明两个点在标准坐标系上的绝对轴距总和。</p>
<p>曼哈顿距离 只能上、下、左、右四个方向进行移动，并且两点之间的曼哈顿距离是两点之间的最短距离。</p>
<p>曼哈顿与欧几里得距离： 红、蓝与黄线分别表示所有曼哈顿距离都拥有一样长度（12），而绿线表示欧几里得距离有6×√2 ≈ 8.48的长度。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/SciPy/%E8%B7%9D%E7%A6%BB%E7%9F%A9%E9%98%B5-4.png" alt="距离矩阵-4" style="zoom:67%;" /> 
<p>以下实例通过给点的点计算曼哈顿距离：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial.distance <span class="keyword">import</span> cityblock</span><br><span class="line"></span><br><span class="line">p1 = (<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">p2 = (<span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">res = cityblock(p1, p2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure>
<h3 id="余弦距离">余弦距离</h3>
<p>余弦距离，也称为余弦相似度，通过测量两个向量的夹角的余弦值来度量它们之间的相似性。</p>
<p>0 度角的余弦值是 1，而其他任何角度的余弦值都不大于 1，并且其最小值是 -1。</p>
<p>以下实例计算 A 与 B 两点的余弦距离：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial.distance <span class="keyword">import</span> cosine</span><br><span class="line"></span><br><span class="line">p1 = (<span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">p2 = (<span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">res = cosine(p1, p2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.019419324309079777</span><br></pre></td></tr></table></figure>
<h3 id="汉明距离">汉明距离</h3>
<p>在信息论中，两个等长字符串之间的汉明距离（英语：Hamming distance）是两个字符串对应位置的不同字符的个数。换句话说，它就是将一个字符串变换成另外一个字符串所需要替换的字符个数。</p>
<p>汉明重量是字符串相对于同样长度的零字符串的汉明距离，也就是说，它是字符串中非零的元素个数：对于二进制字符串来说，就是 1 的个数，所以 11101 的汉明重量是 4。</p>
<ul>
<li><strong>1011101</strong>与<strong>1001001</strong>之间的汉明距离是2。</li>
<li><strong>2143896</strong>与<strong>2233796</strong>之间的汉明距离是3。</li>
<li>&quot;<strong>toned</strong>&quot;与&quot;<strong>roses</strong>&quot;之间的汉明距离是3。</li>
</ul>
<p>以下实例计算两个点之间的汉明距离：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.spatial.distance <span class="keyword">import</span> hamming</span><br><span class="line"></span><br><span class="line">p1 = (<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>)</span><br><span class="line">p2 = (<span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">res = hamming(p1, p2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.666666666667</span><br></pre></td></tr></table></figure>
<h1>六、Matlab 数组</h1>
<p>NumPy 提供了 Python 可读格式的数据保存方法。</p>
<p>SciPy 提供了与 Matlab 的交互的方法。</p>
<p>SciPy 的 <a href="http://scipy.io">scipy.io</a> 模块提供了很多函数来处理 Matlab 的数组。</p>
<h2 id="6-1-以-Matlab-格式导出数据">6.1 以 Matlab 格式导出数据</h2>
<p><strong>savemat()</strong> 方法可以导出 Matlab 格式的数据。</p>
<p>该方法参数有：</p>
<ul>
<li><strong>filename</strong> - 保存数据的文件名。</li>
<li><strong>mdict</strong> - 包含数据的字典。</li>
<li><strong>do_compression</strong> - 布尔值，指定结果数据是否压缩。默认为 False。</li>
</ul>
<p>将数组作为变量 “vec” 导出到 mat 文件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr = np.arange(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">io.savemat(<span class="string">&#x27;arr.mat&#x27;</span>, &#123;<span class="string">&quot;vec&quot;</span>: arr&#125;)</span><br></pre></td></tr></table></figure>
<p>**注意：**上面的代码会在您的计算机上保存了一个名为 “arr.mat” 的文件。</p>
<h2 id="6-2-导入-Matlab-格式数据">6.2 导入 Matlab 格式数据</h2>
<p>loadmat() 方法可以导入 Matlab 格式数据。</p>
<p>该方法参数：</p>
<ul>
<li><strong>filename</strong> - 保存数据的文件名。</li>
</ul>
<p>返回一个结构化数组，其键是变量名，对应的值是变量值。</p>
<p>以下实例从 mat 文件中导入数组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>,])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出</span></span><br><span class="line">io.savemat(<span class="string">&#x27;arr.mat&#x27;</span>, &#123;<span class="string">&quot;vec&quot;</span>: arr&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入</span></span><br><span class="line">mydata = io.loadmat(<span class="string">&#x27;arr.mat&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mydata)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &#x27;__header__&#x27;: b&#x27;MATLAB 5.0 MAT-file Platform: nt, Created on: Tue Sep 22 13:12:32 2020&#x27;,</span><br><span class="line">   &#x27;__version__&#x27;: &#x27;1.0&#x27;,</span><br><span class="line">   &#x27;__globals__&#x27;: [],</span><br><span class="line">   &#x27;vec&#x27;: array([[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h2 id="6-3-显示-Matlab-数据">6.3 显示 Matlab 数据</h2>
<p>使用变量名 “vec” 只显示 matlab 数据的数组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>,])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出</span></span><br><span class="line">io.savemat(<span class="string">&#x27;arr.mat&#x27;</span>, &#123;<span class="string">&quot;vec&quot;</span>: arr&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入</span></span><br><span class="line">mydata = io.loadmat(<span class="string">&#x27;arr.mat&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mydata[<span class="string">&#x27;vec&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[0 1 2 3 4 5 6 7 8 9]]</span><br></pre></td></tr></table></figure>
<p>从结果可以看出数组最初是一维的，但在提取时它增加了一个维度，变成了二维数组。</p>
<p>解决这个问题可以传递一个额外的参数 <strong>squeeze_me=True</strong>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>,])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出</span></span><br><span class="line">io.savemat(<span class="string">&#x27;arr.mat&#x27;</span>, &#123;<span class="string">&quot;vec&quot;</span>: arr&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入</span></span><br><span class="line">mydata = io.loadmat(<span class="string">&#x27;arr.mat&#x27;</span>, squeeze_me=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(mydata[<span class="string">&#x27;vec&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[0 1 2 3 4 5 6 7 8 9]</span><br></pre></td></tr></table></figure>
<h1>七、插值</h1>
<h2 id="7-1-什么是插值">7.1 什么是插值</h2>
<p>在数学的数值分析领域中，插值（英语：interpolation）是一种通过已知的、离散的数据点，在范围内推求新数据点的过程或方法。</p>
<p>简单来说插值是一种在给定的点之间生成点的方法。</p>
<p>**例如：**对于两个点 1 和 2，我们可以插值并找到点 1.33 和 1.66。</p>
<p>插值有很多用途，在机器学习中我们经常处理数据缺失的数据，插值通常可用于替换这些值。</p>
<p>这种填充值的方法称为插补。</p>
<p>除了插补，插值经常用于我们需要平滑数据集中离散点的地方。</p>
<h2 id="7-2-实现插值">7.2 实现插值</h2>
<p>SciPy 提供了 scipy.interpolate 模块来处理插值。</p>
<h3 id="一维插值">一维插值</h3>
<p>一维数据的插值运算可以通过方法 <strong>interp1d()</strong> 完成。</p>
<p>该方法接收两个参数 x 点和 y 点。</p>
<p>返回值是可调用函数，该函数可以用新的 x 调用并返回相应的 y，<strong>y = f(x)</strong>。</p>
<p>对给定的 xs 和 ys 插值，从 2.1、2.2… 到 2.9：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.interpolate <span class="keyword">import</span> interp1d</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">xs = np.arange(<span class="number">10</span>)</span><br><span class="line">ys = <span class="number">2</span>*xs + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">interp_func = interp1d(xs, ys)</span><br><span class="line"></span><br><span class="line">newarr = interp_func(np.arange(<span class="number">2.1</span>, <span class="number">3</span>, <span class="number">0.1</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(newarr)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[5.2  5.4  5.6  5.8  6.   6.2  6.4  6.6  6.8]</span><br></pre></td></tr></table></figure>
<p>**注意：**新的 xs 应该与旧的 xs 处于相同的范围内，这意味着我们不能使用大于 10 或小于 0 的值调用 interp_func()。</p>
<h3 id="单变量插值">单变量插值</h3>
<p>在一维插值中，点是针对单个曲线拟合的，而在样条插值中，点是针对使用多项式分段定义的函数拟合的。</p>
<p>单变量插值使用 UnivariateSpline() 函数，该函数接受 xs 和 ys 并生成一个可调用函数，该函数可以用新的 xs 调用。</p>
<p>分段函数，就是对于自变量 x 的不同的取值范围，有着不同的解析式的函数。</p>
<p>为非线性点找到 2.1、2.2…2.9 的单变量样条插值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.interpolate <span class="keyword">import</span> UnivariateSpline</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">xs = np.arange(<span class="number">10</span>)</span><br><span class="line">ys = xs**<span class="number">2</span> + np.sin(xs) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">interp_func = UnivariateSpline(xs, ys)</span><br><span class="line"></span><br><span class="line">newarr = interp_func(np.arange(<span class="number">2.1</span>, <span class="number">3</span>, <span class="number">0.1</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(newarr)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[5.62826474 6.03987348 6.47131994 6.92265019 7.3939103  7.88514634</span><br><span class="line">   8.39640439 8.92773053 9.47917082]</span><br></pre></td></tr></table></figure>
<h3 id="径向基函数插值">径向基函数插值</h3>
<p>径向基函数是对应于固定参考点定义的函数。</p>
<p>曲面插值里我们一般使用径向基函数插值。</p>
<p>Rbf() 函数接受 xs 和 ys 作为参数，并生成一个可调用函数，该函数可以用新的 xs 调用。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.interpolate <span class="keyword">import</span> Rbf</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">xs = np.arange(<span class="number">10</span>)</span><br><span class="line">ys = xs**<span class="number">2</span> + np.sin(xs) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">interp_func = Rbf(xs, ys)</span><br><span class="line"></span><br><span class="line">newarr = interp_func(np.arange(<span class="number">2.1</span>, <span class="number">3</span>, <span class="number">0.1</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(newarr)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[6.25748981  6.62190817  7.00310702  7.40121814  7.8161443   8.24773402</span><br><span class="line"> 8.69590519  9.16070828  9.64233874]</span><br></pre></td></tr></table></figure>
<h1>八、显著性检验</h1>
<p>显著性检验（significance test）就是事先对总体（随机变量）的参数或总体分布形式做出一个假设，然后利用样本信息来判断这个假设（备择假设）是否合理，即判断总体的真实情况与原假设是否有显著性差异。或者说，显著性检验要判断样本与我们对总体所做的假设之间的差异是纯属机会变异，还是由我们所做的假设与总体真实情况之间不一致所引起的。 显著性检验是针对我们对总体所做的假设做检验，其原理就是&quot;<strong>小概率事件实际不可能性原理</strong>&quot;来接受或否定假设。</p>
<p>显著性检验即用于实验处理组与对照组或两种不同处理的效应之间是否有差异，以及这种差异是否显著的方法。</p>
<p>SciPy 提供了 scipy.stats 的模块来执行Scipy 显著性检验的功能。</p>
<h2 id="8-1-统计假设">8.1 统计假设</h2>
<p>统计假设是关于一个或多个随机变量的未知分布的假设。</p>
<p>随机变量的分布形式已知，而仅涉及分布中的一个或几个未知参数的统计假设，称为参数假设。</p>
<p>检验统计假设的过程称为假设检验，判别参数假设的检验称为参数检验。</p>
<h3 id="零假设">零假设</h3>
<p>零假设（null hypothesis），统计学术语，又称原假设，指进行统计检验时预先建立的假设。 零假设成立时，有关统计量应服从已知的某种概率分布。</p>
<p>当统计量的计算值落入否定域时，可知发生了小概率事件，应否定原假设。</p>
<p>常把一个要检验的假设记作 H0，称为原假设（或零假设） (null hypothesis) ，与 H0 对立的假设记作 H1，称为备择假设(alternative hypothesis) 。</p>
<ul>
<li>在原假设为真时，决定放弃原假设，称为第一类错误，其出现的概率通常记作 <strong>α</strong>；</li>
<li>在原假设不真时，决定不放弃原假设，称为第二类错误，其出现的概率通常记作 <strong>β</strong></li>
<li>α+β 不一定等于 1。</li>
</ul>
<p>通常只限定犯第一类错误的最大概率 <strong>α</strong>， 不考虑犯第二类错误的概率 <strong>β</strong>。这样的假设 检验又称为显著性检验，概率 <strong>α</strong> 称为显著性水平。</p>
<p>最常用的 <strong>α</strong> 值为 0.01、0.05、0.10 等。一般情况下，根据研究的问题，如果放弃真假设损失大，为减少这类错误，<strong>α</strong> 取值小些 ，反之，<strong>α</strong> 取值大些。</p>
<h3 id="备择假设">备择假设</h3>
<p>备择假设(alternative hypothesis)是统计学的基本概念之一，其包含关于总体分布的一切使原假设不成立的命题。备择假设亦称对立假设、备选假设。</p>
<p>备择假设可以替代零假设。</p>
<p>例如我们对于学生的评估，我们将采取：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“学生比平均水平差” ——  作为零假设</span><br><span class="line"></span><br><span class="line">“学生优于平均水平” —— 作为替代假设。</span><br></pre></td></tr></table></figure>
<h3 id="单边检验">单边检验</h3>
<p>单边检验(one-sided test)亦称单尾检验，又称单侧检验，在假设检验中，用检验统计量的密度曲线和二轴所围成面积中的单侧尾部面积来构造临界区域进行检验的方法称为单边检验。</p>
<p>当我们的假设仅测试值的一侧时，它被称为&quot;单尾测试&quot;。</p>
<p>例子：</p>
<p>对于零假设：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“均值等于 k”</span><br></pre></td></tr></table></figure>
<p>我们可以有替代假设：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“平均值小于 k”</span><br><span class="line">或</span><br><span class="line">“平均值大于 k”</span><br></pre></td></tr></table></figure>
<h3 id="双边检验">双边检验</h3>
<p>边检验(two-sided test)，亦称双尾检验、双侧检验.在假设检验中，用检验统计量的密度曲线和x轴所围成的面积的左右两边的尾部面积来构造临界区域进行检验的方法。</p>
<p>当我们的假设测试值的两边时。</p>
<p>例子：</p>
<p>对于零假设：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“均值等于 k”</span><br></pre></td></tr></table></figure>
<p>我们可以有替代假设：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“均值不等于k”</span><br></pre></td></tr></table></figure>
<p>在这种情况下，均值小于或大于 k，两边都要检查。</p>
<h2 id="8-2-阿尔法值-与-P-值">8.2 阿尔法值 与 P 值</h2>
<h3 id="阿尔法值">阿尔法值</h3>
<p>阿尔法值是显著性水平。</p>
<p>显著性水平是估计总体参数落在某一区间内，可能犯错误的概率，用 <strong>α</strong> 表示。</p>
<p>数据必须有多接近极端才能拒绝零假设。</p>
<p>通常取为 0.01、0.05 或 0.1。</p>
<h3 id="P-值">P 值</h3>
<p>P 值表明数据实际接近极端的程度。</p>
<p>比较 P 值和阿尔法值(alpha)来确定统计显著性水平。</p>
<p>如果 p 值 &lt;= alpha，我们拒绝原假设并说数据具有统计显著性，否则我们接受原假设。</p>
<h2 id="8-3-检验">8.3 检验</h2>
<h3 id="T-检验（T-Test）">T 检验（T-Test）</h3>
<p>T 检验用于确定两个变量的均值之间是否存在显著差异，并判断它们是否属于同一分布。</p>
<p>这是一个双尾测试。</p>
<p>函数 ttest_ind() 获取两个相同大小的样本，并生成 t 统计和 p 值的元组。</p>
<p>查找给定值 v1 和 v2 是否来自相同的分布：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> ttest_ind</span><br><span class="line"></span><br><span class="line">v1 = np.random.normal(size=<span class="number">100</span>)</span><br><span class="line">v2 = np.random.normal(size=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">res = ttest_ind(v1, v2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ttest_indResult(statistic=0.40833510339674095, pvalue=0.68346891833752133)</span><br></pre></td></tr></table></figure>
<p>如果只想返回 p 值，请使用 pvalue 属性：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> ttest_ind</span><br><span class="line"></span><br><span class="line">v1 = np.random.normal(size=<span class="number">100</span>)</span><br><span class="line">v2 = np.random.normal(size=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">res = ttest_ind(v1, v2).pvalue</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.68346891833752133</span><br></pre></td></tr></table></figure>
<h3 id="KS-检验">KS 检验</h3>
<p>KS 检验用于检查给定值是否符合分布。</p>
<p>该函数接收两个参数：</p>
<ul>
<li>测试的值</li>
<li>CDF</li>
</ul>
<p>CDF 为累积分布函数(Cumulative Distribution Function)，又叫分布函数。</p>
<p>CDF 可以是字符串，也可以是返回概率的可调用函数。</p>
<p>它可以用作单尾或双尾测试。</p>
<p>默认情况下它是双尾测试。 我们可以将参数替代作为两侧、小于或大于其中之一的字符串传递。</p>
<p>查找给定值是否符合正态分布：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> kstest</span><br><span class="line"></span><br><span class="line">v = np.random.normal(size=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">res = kstest(v, <span class="string">&#x27;norm&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">KstestResult(statistic=0.047798701221956841, pvalue=0.97630967161777515)</span><br></pre></td></tr></table></figure>
<h2 id="8-4-正态性检验">8.4 正态性检验</h2>
<p>利用观测数据判断总体是否服从正态分布的检验称为正态性检验，它是统计判决中重要的一种特殊的拟合优度假设检验。</p>
<p>正态性检验基于偏度和峰度。</p>
<p>normaltest() 函数返回零假设的 p 值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“x 来自正态分布”</span><br></pre></td></tr></table></figure>
<h3 id="偏度">偏度</h3>
<p>数据对称性的度量。</p>
<p>对于正态分布，它是 0。</p>
<p>如果为负，则表示数据向左倾斜。</p>
<p>如果是正数，则意味着数据是正确倾斜的。</p>
<h3 id="峰度">峰度</h3>
<p>衡量数据是重尾还是轻尾正态分布的度量。</p>
<p>正峰度意味着重尾。</p>
<p>负峰度意味着轻尾。</p>
<p>查找数组中值的偏度和峰度：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> skew, kurtosis</span><br><span class="line"></span><br><span class="line">v = np.random.normal(size=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(skew(v))</span><br><span class="line"><span class="built_in">print</span>(kurtosis(v))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.11168446328610283</span><br><span class="line"> -0.1879320563260931</span><br></pre></td></tr></table></figure>
<p>查找数据是否来自正态分布：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> normaltest</span><br><span class="line"></span><br><span class="line">v = np.random.normal(size=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(normaltest(v))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NormaltestResult(statistic=4.4783745697002848, pvalue=0.10654505998635538)</span><br></pre></td></tr></table></figure>
<h2 id="8-5-数据统计说明">8.5 数据统计说明</h2>
<p>使用 describe() 函数可以查看数组的信息，包含以下值：</p>
<ol>
<li>nobs – 观测次数</li>
<li>minmax – 最小值和最大值</li>
<li>mean – 数学平均数</li>
<li>variance – 方差</li>
<li>skewness – 偏度</li>
<li>kurtosis – 峰度</li>
</ol>
<p>显示数组中的统计描述信息：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> describe</span><br><span class="line"></span><br><span class="line">v = np.random.normal(size=<span class="number">100</span>)</span><br><span class="line">res = describe(v)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DescribeResult(</span><br><span class="line">    nobs=100,</span><br><span class="line">    minmax=(-2.0991855456740121, 2.1304142707414964),</span><br><span class="line">    mean=0.11503747689121079,</span><br><span class="line">    variance=0.99418092655064605,</span><br><span class="line">    skewness=0.013953400984243667,</span><br><span class="line">    kurtosis=-0.671060517912661</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>《现代密码学》Notes_持续更新...</title>
    <url>/butterflyblog/2024/03/01/%E3%80%8A%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h1>《现代密码学》Notes_持续更新…</h1>
<blockquote>
<p>来源：同济大学计算机系《现代密码学》课程 Cryptology</p>
<p>2024-03-01@isSeymour</p>
</blockquote>
<h2 id="第1章-古典密码">第1章 古典密码</h2>
]]></content>
      <categories>
        <category>大学课程</category>
      </categories>
      <tags>
        <tag>现代密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>《算法设计与分析》Notes_持续更新...</title>
    <url>/butterflyblog/2024/03/01/%E3%80%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h1>《算法设计与分析》Notes_持续更新…</h1>
<blockquote>
<p>来源：同济大学计算机系《算法分析与设计》课程 Algorithm</p>
<p>2024-03-01@isSeymour</p>
</blockquote>
<h2 id="第1章-算法概述">第1章 算法概述</h2>
<h3 id="1-1-算法的概念">1.1 算法的概念</h3>
<ul>
<li>
<p>算法</p>
<ul>
<li>算法是解决问题的一种方法或一个过程。</li>
<li>算法是若干指令的有穷序列，满足性质：
<ol>
<li>输入：有外部提供的量作为算法的输入。</li>
<li>输出：算法至少产生一个量作为输出。</li>
<li>确定性：组成算法的每条指令是清晰、无歧义的。</li>
<li>有限性：算法中每条指令的执行次数是有限的，执行每条指令的时间也是有限的。</li>
</ol>
</li>
</ul>
</li>
<li>
<p>程序</p>
<p>是算法用某种程序设计语言的具体实现。</p>
<ul>
<li>
<p>程序可以不满足算法的性质（4）有限性。</p>
<blockquote>
<p>如，操作系统是一个在无限循环中执行的程序，因而不是一个算法。</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p>描述算法的形式</p>
<ol>
<li>自然语言</li>
<li>程序流程图</li>
<li>伪代码</li>
</ol>
</li>
<li>
<p>问题求解</p>
<p>算法是问题的程序化解决方案。</p>
</li>
<li>
<p>算法复杂性</p>
<p>= 算法所需要的计算机资源</p>
<ul>
<li>时间复杂性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
<li>空间复杂性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li>
</ul>
<p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>​ 是问题的规模（输入大小）。</p>
<blockquote>
<p>分析：</p>
<ol>
<li>事后统计</li>
<li>事前分析 √</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">算法运行时间 = 每条语句频度之和 * 该语句执行一次所需的时间</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li>
<p>渐进分析</p>
<p>下面讨论中2，对所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≥</mo><mn>0</mn><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n,f(n) \geq 0,g(n) \geq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 。</p>
<ol>
<li>
<p>渐进上界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>​</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mtext>存在正常数</mtext><mi>c</mi><mtext>和</mtext><msub><mi>n</mi><mn>0</mn></msub><mtext>使得对所有</mtext><mi>n</mi><mo>≥</mo><msub><mi>n</mi><mn>0</mn></msub><mtext>有</mtext><mn>0</mn><mo>≤</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>c</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">O(g(n)) = \{ f(n)|存在正常数c和n_0使得对所有 n \geq n_0 有0\leq f(n)\leq cg(n)\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord cjk_fallback">存在正常数</span><span class="mord mathnormal">c</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">使得对所有</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">有</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)}</span></span></span></span></span></p>
<ul>
<li>
<p>示例</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>n</mi><mo>+</mo><mn>3</mn><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2n+3=O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><msup><mi>n</mi><mn>3</mn></msup><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>4</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3n^3 = O(n^4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
</li>
</ul>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span>是增长次数<strong>小于或等于</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的函数集合。</p>
</li>
<li>
<p>渐进上界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Ω</span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mtext>存在正常数</mtext><mi>c</mi><mtext>和</mtext><msub><mi>n</mi><mn>0</mn></msub><mtext>使得对所有</mtext><mi>n</mi><mo>≥</mo><msub><mi>n</mi><mn>0</mn></msub><mtext>有</mtext><mn>0</mn><mo>≤</mo><mi>c</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Omega(g(n)) = \{ f(n)|存在正常数c和n_0使得对所有 n \geq n_0 有0\leq cg(n)\leq f(n)\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord cjk_fallback">存在正常数</span><span class="mord mathnormal">c</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">使得对所有</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">有</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)}</span></span></span></span></span></p>
<ul>
<li>
<p>示例</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><msup><mi>n</mi><mn>3</mn></msup><mo>=</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3n^3 = \Omega(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
</li>
</ul>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Omega(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span>是增长次数<strong>大于或等于</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>​ 的函数集合。</p>
</li>
<li>
<p>紧渐进界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Θ</span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mtext>存在正常数</mtext><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mtext>和</mtext><msub><mi>n</mi><mn>0</mn></msub><mtext>使得对所有</mtext><mi>n</mi><mo>≥</mo><msub><mi>n</mi><mn>0</mn></msub><mtext>有</mtext><msub><mi>c</mi><mn>1</mn></msub><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><msub><mi>c</mi><mn>2</mn></msub><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Theta(g(n)) = \{ f(n)|存在正常数c_1,c_2和n_0使得对所有 n \geq n_0 有c_1g(n)\leq f(n)\leq c_2g(n)\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord cjk_fallback">存在正常数</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">使得对所有</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">有</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)}</span></span></span></span></span></p>
<ul>
<li>
<p>定理1：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∩</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Theta(g(n)) = O(g(n))\cap \Theta(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></p>
</li>
<li>
<p>示例</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5</mn><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">0.5n(n-1) = \Omega(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.5</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
</li>
</ul>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Omega(g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span>是增长次数<strong>等于</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>​​ 的函数集合。</p>
</li>
<li>
<p>非紧上界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">o</span></span></span></span></p>
</li>
<li>
<p>非紧下界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi></mrow><annotation encoding="application/x-tex">\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span>​</p>
</li>
</ol>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-1.png" alt="L1-1" style="zoom:67%;" /> 
</li>
<li>
<p>渐进分析记号的若干性质</p>
<ol>
<li>传递性（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mtext>、</mtext><mi mathvariant="normal">Ω</mi><mtext>、</mtext><mi mathvariant="normal">Θ</mi><mtext>、</mtext><mi>o</mi><mtext>、</mtext><mi>ω</mi></mrow><annotation encoding="application/x-tex">O 、\Omega、\Theta、o、\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord cjk_fallback">、</span><span class="mord">Ω</span><span class="mord cjk_fallback">、</span><span class="mord">Θ</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">o</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span>）</li>
<li>反身性（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mtext>、</mtext><mi mathvariant="normal">Ω</mi><mtext>、</mtext><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">O 、\Omega、\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord cjk_fallback">、</span><span class="mord">Ω</span><span class="mord cjk_fallback">、</span><span class="mord">Θ</span></span></span></span>）</li>
<li>对称性（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Θ</span></span></span></span>）</li>
<li>互对称性（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mtext>与</mtext><mi mathvariant="normal">Ω</mi><mo separator="true">,</mo><mi>o</mi><mtext>与</mtext><mi>ω</mi></mrow><annotation encoding="application/x-tex">O 与\Omega,o与\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord cjk_fallback">与</span><span class="mord">Ω</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">o</span><span class="mord cjk_fallback">与</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span>）</li>
<li>算术运算
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>c</mi><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(cf(n)) = O(f(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(f(n))+O(g(n)) = O(f(n)+g(n)) =  O(max\{ f(n),g(n) \})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)})</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∗</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(f(n))*O(g(n)) = O(f(n)*g(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⇒</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(n)=O(f(n)) \Rightarrow O(f(n))+O(g(n))=O(f(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></li>
</ul>
</li>
</ol>
<blockquote>
<p>证明其中一条：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-2.png" alt="L1-2" style="zoom:67%;" /> 
</blockquote>
</li>
</ul>
<h3 id="1-2-常见复杂性函数">1.2 常见复杂性函数</h3>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msup><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msqrt><mi>n</mi></msqrt><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">!</mo><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1) &lt; O(\log n) &lt; O(\log^2 n) &lt; O(\sqrt{n}) &lt; O(n) &lt; O(n\log n) &lt; O(n^2) &lt; O(n^3) &lt; O(2^n) &lt; O(n!) &lt; O(n^n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1484em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984em;"><span style="top:-3.1473em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0992em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8492em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">n</span></span></span><span style="top:-2.8092em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1908em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">!)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>注：</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mn>3</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(2^n) &lt;O(3^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>​</li>
</ol>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-10-1.png" alt="L1-10-1" style="zoom:67%;" /> 
<h3 id="1-3-递归-Recursion">1.3 递归 Recursion</h3>
<ul>
<li>
<p>递归过程一般可以通过解递归方程进行分析。</p>
</li>
<li>
<p>基本形式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">T(n) = </span><br><span class="line">   base case: some constant</span><br><span class="line">   recursive case: T(subproblems) + T(combine)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>结果依赖于：</p>
<ul>
<li>子问题的个数</li>
<li>子问题的规模</li>
<li>子问题的解如何合并形成整个问题的解</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-3.png" alt="L1-3" style="zoom:67%;" /> 
</li>
</ul>
<h3 id="1-4-算法分析的基本法则">1.4 算法分析的基本法则</h3>
<h4 id="非递归算法">非递归算法</h4>
<ol>
<li>
<p>for/while 循环</p>
<p>循环体内计算时间 * 循环次数</p>
</li>
<li>
<p>嵌套循环</p>
<p>循环体内计算时间 * 所有循环次数</p>
</li>
<li>
<p>顺序语句</p>
<p>各语句计算时间相加</p>
</li>
<li>
<p>if-else 语句</p>
<p>if 语句计算时间和 else 语句计算时间的较大者</p>
</li>
</ol>
<blockquote>
<p>其中，下面两种都是一样的复杂性：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1</span> to n <span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> j=<span class="number">1</span> to n <span class="keyword">do</span></span><br><span class="line">		sum = sum + <span class="number">1</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i=<span class="number">1</span> to n <span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> j=i to n <span class="keyword">do</span></span><br><span class="line">		sum = sum + <span class="number">1</span></span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-4-1.png" alt="L1-4-1" style="zoom: 33%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-4-2.png" alt="L1-4-2" style="zoom: 50%;" /> 
</blockquote>
<h4 id="最优算法">最优算法</h4>
<ul>
<li>
<p>问题的计算时间下界为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Omega(f(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span> ，</p>
<p>则计算时间复杂性为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(f(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span> 的算法是最优算法。</p>
</li>
</ul>
<blockquote>
<p>例如，堆排序算法 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 是最优算法。</p>
</blockquote>
<h4 id="分析常用函数">分析常用函数</h4>
<h5 id="1-单调函数">1. 单调函数</h5>
<p>单调递增、单调递减、严格单调递增、严格单调递减</p>
<h5 id="2-取整函数">2. 取整函数</h5>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>x</mi><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor x \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">x</span><span class="mclose">⌋</span></span></span></span> ：不大于 x 的最大整数；</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>x</mi><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor x \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">x</span><span class="mclose">⌋</span></span></span></span> ：不小于 x 的最小整数。</p>
<ul>
<li>
<p>性质</p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">⌊</mo><mi>x</mi><mo stretchy="false">⌋</mo><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">⌈</mo><mi>x</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">f(x) =\lfloor x \rfloor,g(x) = \lceil x \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">x</span><span class="mclose">⌋</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">x</span><span class="mclose">⌉</span></span></span></span> 为单调递增函数。</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>−</mo><mn>1</mn><mo>&lt;</mo><mo stretchy="false">⌊</mo><mi>x</mi><mo stretchy="false">⌋</mo><mo>≤</mo><mi>x</mi><mo>≤</mo><mo stretchy="false">⌈</mo><mi>x</mi><mo stretchy="false">⌉</mo><mo>&lt;</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x-1 &lt; \lfloor x \rfloor \leq x \leq \lceil x \rceil &lt;x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">x</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">x</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mfrac><mi>n</mi><mn>2</mn></mfrac><mo stretchy="false">⌋</mo><mo>+</mo><mo stretchy="false">⌈</mo><mfrac><mi>n</mi><mn>2</mn></mfrac><mo stretchy="false">⌉</mo><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\lfloor \frac{n}{2} \rfloor+\lceil \frac{n}{2} \rceil = n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></p>
</li>
<li>
<p>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≥</mo><mn>0</mn><mtext>，</mtext><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n\geq 0，a,b&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 有：</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mrow><mo stretchy="false">⌈</mo><mfrac><mi>n</mi><mi>a</mi></mfrac><mo stretchy="false">⌉</mo></mrow><mi>b</mi></mfrac><mo stretchy="false">⌉</mo><mo>=</mo><mo stretchy="false">⌈</mo><mfrac><mi>n</mi><mrow><mi>a</mi><mi>b</mi></mrow></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil \frac{ \lceil \frac{n}{a} \rceil}{b}  \rceil = \lceil \frac{n}{ab} \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4208em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0758em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5508em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌈</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">⌉</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ab</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mfrac><mrow><mo stretchy="false">⌊</mo><mfrac><mi>n</mi><mi>a</mi></mfrac><mo stretchy="false">⌋</mo></mrow><mi>b</mi></mfrac><mo stretchy="false">⌋</mo><mo>=</mo><mo stretchy="false">⌊</mo><mfrac><mi>n</mi><mrow><mi>a</mi><mi>b</mi></mrow></mfrac><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor \frac{ \lfloor \frac{n}{a} \rfloor}{b}  \rfloor = \lfloor \frac{n}{ab} \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4208em;vertical-align:-0.345em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0758em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5508em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">⌋</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ab</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy="false">⌉</mo><mo>≤</mo><mfrac><mrow><mi>a</mi><mo>+</mo><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mi>b</mi></mfrac></mrow><annotation encoding="application/x-tex">\lceil \frac{a}{b} \rceil \leq \frac{a+(b-1)}{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mbin mtight">+</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo stretchy="false">⌋</mo><mo>≤</mo><mfrac><mrow><mi>a</mi><mo>−</mo><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mi>b</mi></mfrac></mrow><annotation encoding="application/x-tex">\lfloor \frac{a}{b} \rfloor \leq \frac{a-(b-1)}{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mbin mtight">−</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ol>
</li>
</ul>
</li>
</ul>
<h5 id="3-多项式函数">3. 多项式函数</h5>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>a</mi><mn>0</mn></msub><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>n</mi><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>d</mi></msub><msup><mi>n</mi><mi>d</mi></msup><mtext>，其中</mtext><msub><mi>a</mi><mi>d</mi></msub><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">p(n) = a_0+a_1n+a_2n^2+...+a_dn^d，其中a_d &gt; 0
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0141em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0491em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">，其中</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p>
<ul>
<li>性质
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>d</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(n) = \Theta(n^d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⇔</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">f(n)=O(1) \Leftrightarrow f(n) \leq c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy="false">)</mo><mo>⇔</mo><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>多项式有界</mtext></mrow><annotation encoding="application/x-tex">f(n)=O(n^k) \Leftrightarrow f(n)多项式有界</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord cjk_fallback">多项式有界</span></span></span></span>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>≥</mo><mi>d</mi><mo>⇒</mo><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k\geq d \Rightarrow p(n)=O(n^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>≤</mo><mi>d</mi><mo>⇒</mo><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Ω</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k\leq d \Rightarrow p(n)=\Omega(n^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord">Ω</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>​</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>&gt;</mo><mi>d</mi><mo>⇒</mo><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k&gt; d \Rightarrow p(n)=o(n^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>d</mi><mo>⇒</mo><mi>p</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ω</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k d \Rightarrow p(n)=\omega(n^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ol>
</li>
</ul>
</li>
</ul>
<h5 id="4-指数函数">4. 指数函数</h5>
<p>对于正整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">m,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span> 和实数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>1</mn><mo>⇒</mo><msup><mi>a</mi><mi>n</mi></msup><mtext>为单调递增函数</mtext></mrow><annotation encoding="application/x-tex">a&gt;1 \Rightarrow a^n为单调递增函数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">为单调递增函数</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>1</mn><mo>⇒</mo><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><msup><mi>n</mi><mi>b</mi></msup><msup><mi>a</mi><mi>n</mi></msup></mfrac><mo>=</mo><mn>0</mn><mo>⇒</mo><msup><mi>n</mi><mi>b</mi></msup><mo>=</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>a</mi><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a&gt;1\Rightarrow \lim \limits_{n \rightarrow \infty} \frac{n^b}{a^n} = 0 \Rightarrow n^b = o(a^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7429em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0429em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.927em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-5.png" alt="L1-5" style="zoom: 67%;" /> 
</blockquote>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>=</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>2</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mrow><mn>3</mn><mo stretchy="false">!</mo></mrow></mfrac><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><mfrac><msup><mi>x</mi><mi>i</mi></msup><mrow><mi>i</mi><mo stretchy="false">!</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">e^x = 1+x+\frac{x^2}{2!}+\frac{x^3}{3!}+...=\sum\limits_{i=0}^{\infty}\frac{x^i}{i!}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3629em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3629em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3291em;vertical-align:-0.9777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0255em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9021em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>≥</mo><mn>1</mn><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">e^x \geq 1+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8004em;vertical-align:-0.136em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mn>1</mn><mtext> </mtext><mo>⇒</mo><mtext> </mtext><mn>1</mn><mo>+</mo><mi>x</mi><mo>≤</mo><msup><mi>e</mi><mi>x</mi></msup><mo>≤</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">|x| \leq 1 \, \Rightarrow \, 1+x \leq e^x \leq1+x+x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8004em;vertical-align:-0.136em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>=</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo>+</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mi>s</mi><mtext>  </mtext><mi>x</mi><mo>→</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">e^x = 1+x+\Theta(x^2) , as \; x \rightarrow 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><mn>1</mn><mo>+</mo><mfrac><mi>x</mi><mi>n</mi></mfrac><msup><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo><mi>n</mi></msup><mo>=</mo><msup><mi>e</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">\lim \limits_{n \rightarrow \infty} \Big( 1+\frac{x}{n} \Big)^n = e^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.85em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8543em;vertical-align:-0.65em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord"><span class="delimsizing size2">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.2043em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
<h5 id="5-对数函数">5. 对数函数</h5>
<ul>
<li>
<p>简写</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>n</mi><mo>=</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">\log n = \log_2n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lg</mi><mo>⁡</mo><mi>n</mi><mo>=</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>1</mn></msub><mn>0</mn><mi>n</mi></mrow><annotation encoding="application/x-tex">\lg n = \log_10 n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mord mathnormal">n</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>n</mi><mo>=</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>e</mi></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">\ln n = \log_en</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9386em;vertical-align:-0.2441em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0573em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>k</mi></msup><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><msup><mo stretchy="false">)</mo><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">\log^k n = (\log n)^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1279em;vertical-align:-0.1944em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334em;"><span style="top:-3.1473em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo>=</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log \log n = \log (\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>性质</p>
<p>…略</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>b</mi></msub><mi>c</mi></mrow></msup><mo>=</mo><msup><mi>c</mi><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>b</mi></msub><mi>a</mi></mrow></msup></mrow><annotation encoding="application/x-tex">a^{\log_bc} = c^{\log_b a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2302em;"><span style="top:-2.2341em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2659em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2302em;"><span style="top:-2.2341em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2659em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mn>1</mn><mo>⇒</mo><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo>−</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mn>2</mn></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>3</mn></msup><mn>3</mn></mfrac><mo>−</mo><mfrac><msup><mi>x</mi><mn>4</mn></msup><mn>4</mn></mfrac><mo>+</mo><mfrac><msup><mi>x</mi><mn>5</mn></msup><mn>5</mn></mfrac><mo>−</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">|x| \leq 1 \Rightarrow \ln(1+x) = x-\frac{x^2}{2}+\frac{x^3}{3}-\frac{x^4}{4}+\frac{x^5}{5}-...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3629em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3629em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3629em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.3629em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0179em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.1056em;"></span><span class="mord">...</span></span></span></span></p>
</li>
<li>
<p>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>&gt;</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x&gt;-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span> 有</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>x</mi><mrow><mn>1</mn><mo>+</mo><mi>x</mi></mrow></mfrac><mo>≤</mo><mi>ln</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\frac{x}{1+x} \leq \ln(1+x) \leq x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0987em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ln</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></p>
</li>
<li>
<p>对于任何 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 有</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mrow><mi>l</mi><mi>o</mi><msup><mi>g</mi><mi>b</mi></msup><mi>n</mi></mrow><mrow><mo stretchy="false">(</mo><msup><mn>2</mn><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mi>log</mi><mo>⁡</mo><mi>n</mi></mrow></msup></mrow></mfrac><mo>=</mo><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mrow><mi>l</mi><mi>o</mi><msup><mi>g</mi><mi>b</mi></msup><mi>n</mi></mrow><msup><mi>n</mi><mi>a</mi></msup></mfrac><mo>=</mo><mn>0</mn><mo>⇒</mo><msup><mrow><mi>log</mi><mo>⁡</mo></mrow><mi>b</mi></msup><mi>n</mi><mo>=</mo><mi>o</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mi>a</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\lim \limits_{n \rightarrow \infty} \frac{log^b n}{(2^a)^{\log n}} = \lim \limits_{n \rightarrow \infty} \frac{log^b n}{n^a}=0 \Rightarrow \log^b n = o(n^a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.795em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.095em;"><span style="top:-2.6426em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.782em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="mspace mtight" style="margin-right:0.2453em;"></span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.927em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5324em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.795em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.095em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.927em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1279em;vertical-align:-0.1944em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334em;"><span style="top:-3.1473em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-6.png" alt="L1-6" style="zoom:60%;" /> 
</blockquote>
</li>
</ul>
<h5 id="6-阶层函数">6. 阶层函数</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-7-1.png" alt="L1-7-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-7-2.png" alt="L1-7-2" style="zoom:67%;" /> 
<h3 id="1-5-主定理">1.5 主定理</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-8-1.png" alt="L1-8-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-8-2.png" alt="L1-8-2" style="zoom:67%;" /> 
<h4 id="应用示例">应用示例</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-9-1.png" alt="L1-9-1" style="zoom:67%;" /> 
<h4 id="使用的例子">使用的例子</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-9-2.png" alt="L1-9-2" style="zoom: 50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-9-3.png" alt="L1-9-3" style="zoom: 50%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-9-4.png" alt="L1-9-4" style="zoom:50%;" /> 
<h4 id="不能使用的例子">不能使用的例子</h4>
 <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-9-5.png" alt="L1-9-5" style="zoom:50%;" />
 <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-9-6.png" alt="L1-9-6" style="zoom:50%;" /> 
<h4 id="证明主定理">证明主定理</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-8-1-0.png" alt="L1-8-1-0" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-8-1-1.png" alt="L1-8-1-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-8-1-2.png" alt="L1-8-1-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/Algorithm/bak/L1-8-1-3.png" alt="L1-8-1-3" style="zoom:67%;" /> 
<h3 id="1-6-NP完全性理论">1.6 NP完全性理论</h3>
<blockquote>
<p><strong>如何区分一个问题的难易？</strong></p>
</blockquote>
<ul>
<li>
<p>多项式时间</p>
<p>在计算复杂度理论中，指的是一个问题的计算时间不大于问题规模n的多项式倍数。</p>
<ul>
<li>
<p>即多项式时间就是指时间复杂度是个多项式。</p>
</li>
<li>
<p>程序运行的时间随着数据规模n变化的函数为f(n)，f(n)是个多项式函数，那么就可以说是控制在多项式之内。</p>
</li>
</ul>
</li>
<li>
<p>P类问题</p>
<p>所有可以在多项式时间内求解的判定问题构成P类问题。</p>
<ul>
<li>
<p>判定问题：判断是否有一种能够解决某一类问题的能行算法的研究课题。</p>
</li>
<li>
<p>时间复杂度如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup><mo separator="true">,</mo><msup><mi>n</mi><mn>4</mn></msup><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n^2, n^4, n(log(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span>都是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span> 时间的，</p>
<p>指数级别的如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mtext>，</mtext><msup><mi>n</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n，n^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> 这些就不是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span> 时间。</p>
</li>
</ul>
</li>
<li>
<p>NP类问题</p>
<p>所有的非确定性多项式时间可解的判定问题构成NP类问题。( Nondeterministic polynomial )</p>
<ul>
<li>给定一个问题，我们可能不知道如何解，但如果通过连蒙带猜，得到了一个解，对于这个解，我们可以在P时间内验证它正确与否的一类问题，成为NP问题。</li>
</ul>
</li>
</ul>
<h2 id="第2章-递归与分治策略">第2章 递归与分治策略</h2>
]]></content>
      <categories>
        <category>大学课程</category>
      </categories>
      <tags>
        <tag>算法设计与分析</tag>
      </tags>
  </entry>
  <entry>
    <title>《NumPy》Notes</title>
    <url>/butterflyblog/2024/01/29/%E3%80%8ANumPy%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《NumPy》Notes</h1>
<blockquote>
<h5 id="NumPy-官网"><a href="https://numpy.org/">NumPy 官网</a></h5>
<h5 id="NumPy-源码"><a href="https://github.com/numpy/numpy">NumPy 源码</a></h5>
<p>Source From: <a href="https://www.runoob.com/numpy/numpy-tutorial.html">菜鸟教程 | NumPy</a></p>
<p>2024-01-29@isSeymour</p>
</blockquote>
<h1>一、开始</h1>
<h2 id="1-1-简介">1.1 简介</h2>
<p>NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。</p>
<p>NumPy 的前身 Numeric 最早是由 Jim Hugunin 与其它协作者共同开发，2005 年，Travis Oliphant 在 Numeric 中结合了另一个同性质的程序库 Numarray 的特色，并加入了其它扩展而开发了 NumPy。NumPy 为开放源代码并且由许多协作者共同维护开发。</p>
<p>NumPy 是一个运行速度非常快的数学库，主要用于数组计算，包含：</p>
<ul>
<li>一个强大的N维数组对象 ndarray</li>
<li>广播功能函数</li>
<li>整合 C/C++/Fortran 代码的工具</li>
<li>线性代数、傅里叶变换、随机数生成等功能</li>
</ul>
<h2 id="1-2-应用">1.2 应用</h2>
<ul>
<li>
<p>NumPy 通常与 SciPy（Scientific Python）和 Matplotlib（绘图库）一起使用， 这种组合广泛用于替代 MatLab，是一个强大的科学计算环境，有助于我们通过 Python 学习数据科学或者机器学习。</p>
</li>
<li>
<p>SciPy 是一个开源的 Python 算法库和数学工具包。SciPy 包含的模块有最优化、线性代数、积分、插值、特殊函数、快速傅里叶变换、信号处理和图像处理、常微分方程求解和其他科学与工程中常用的计算。</p>
</li>
<li>
<p>Matplotlib 是 Python 编程语言及其数值数学扩展包 NumPy 的可视化操作界面。它为利用通用的图形用户界面工具包，如 Tkinter, wxPython, Qt 或 GTK+ 向应用程序嵌入式绘图提供了应用程序接口（API）。</p>
</li>
</ul>
<h2 id="1-3-安装">1.3 安装</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip3 install numpy scipy matplotlib -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<blockquote>
<h4 id="Linux-下安装">Linux 下安装</h4>
<p><strong>Ubuntu &amp; Debian</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python3-numpy python3-scipy python3-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose</span><br></pre></td></tr></table></figure>
<p><strong>CentOS/Fedora</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dnf install numpy scipy python-matplotlib ipython python-pandas sympy python-nose atlas-devel</span><br></pre></td></tr></table></figure>
<p><strong>Mac 系统</strong></p>
<p>Mac 系统的 Homebrew 不包含 NumPy 或其他一些科学计算包，所以可以使用以下方式来安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install numpy scipy matplotlib -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="1-4-测试">1.4 测试</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>eye(<span class="number">4</span>)</span><br><span class="line">array([[<span class="number">1.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">1.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">1.</span>, <span class="number">0.</span>],</span><br><span class="line">       [<span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">1.</span>]])</span><br></pre></td></tr></table></figure>
<h1>二、数据</h1>
<h2 id="2-1-Ndarray-对象">2.1 Ndarray 对象</h2>
<p>NumPy 最重要的一个特点是其 N 维数组对象 ndarray，它是一系列同类型数据的集合，以 0 下标为开始进行集合中元素的索引。</p>
<p>ndarray 对象是用于存放同类型元素的多维数组。</p>
<p>ndarray 中的每个元素在内存中都有相同存储大小的区域。</p>
<p>ndarray 内部由以下内容组成：</p>
<ul>
<li>一个指向数据（内存或内存映射文件中的一块数据）的指针。</li>
<li>数据类型或 dtype，描述在数组中的固定大小值的格子。</li>
<li>一个表示数组形状（shape）的元组，表示各维度大小的元组。</li>
<li>一个跨度元组（stride），其中的整数指的是为了前进到当前维度下一个元素需要&quot;跨过&quot;的字节数。</li>
</ul>
<p>ndarray 的内部结构:</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240129210210722.png" alt="image-20240129210210722" style="zoom:67%;" /> 
<p>跨度可以是负数，这样会使数组在内存中后向移动，切片中 <strong>obj[::-1]</strong> 或 <strong>obj[:,::-1]</strong> 就是如此。</p>
<h3 id="创建">创建</h3>
<p>创建一个 ndarray 只需调用 NumPy 的 array 函数即可：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.array(<span class="built_in">object</span>, dtype = <span class="literal">None</span>, copy = <span class="literal">True</span>, order = <span class="literal">None</span>, subok = <span class="literal">False</span>, ndmin = <span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">object</td>
<td style="text-align:left">数组或嵌套的数列</td>
</tr>
<tr>
<td style="text-align:left">dtype</td>
<td style="text-align:left">数组元素的数据类型，可选</td>
</tr>
<tr>
<td style="text-align:left">copy</td>
<td style="text-align:left">对象是否需要复制，可选</td>
</tr>
<tr>
<td style="text-align:left">order</td>
<td style="text-align:left">创建数组的样式，C为行方向，F为列方向，A为任意方向（默认）</td>
</tr>
<tr>
<td style="text-align:left">subok</td>
<td style="text-align:left">默认返回一个与基类类型一致的数组</td>
</tr>
<tr>
<td style="text-align:left">ndmin</td>
<td style="text-align:left">指定生成数组的最小维度</td>
</tr>
</tbody>
</table>
<h3 id="实例">实例</h3>
<p>接下来可以通过以下实例帮助我们更好的理解。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 多于一个维度  </span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([[<span class="number">1</span>,  <span class="number">2</span>],  [<span class="number">3</span>,  <span class="number">4</span>]])  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span>  <span class="number">2</span>] </span><br><span class="line"> [<span class="number">3</span>  <span class="number">4</span>]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 最小维度  </span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], ndmin =  <span class="number">2</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># dtype 参数  </span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([<span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>], dtype = <span class="built_in">complex</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">[<span class="number">1.</span>+<span class="number">0.j</span> <span class="number">2.</span>+<span class="number">0.j</span> <span class="number">3.</span>+<span class="number">0.j</span>]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>ndarray 对象由计算机内存的连续一维部分组成，并结合索引模式，将每个元素映射到内存块中的一个位置。内存块以行顺序(C样式)或列顺序(FORTRAN或MatLab风格，即前述的F样式)来保存元素。</p>
</blockquote>
<h2 id="2-2-数据类型">2.2 数据类型</h2>
<h3 id="NumPy-基本类型">NumPy 基本类型</h3>
<p>numpy 支持的数据类型比 Python 内置的类型要多很多，基本上可以和 C 语言的数据类型对应上，其中部分类型对应为 Python 内置的类型。下表列举了常用 NumPy 基本类型。</p>
<table>
<thead>
<tr>
<th style="text-align:left">名称</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>bool_</code></td>
<td style="text-align:left">布尔型数据类型（True 或者 False）</td>
</tr>
<tr>
<td style="text-align:left"><code>int_</code></td>
<td style="text-align:left">默认的整数类型（类似于 C 语言中的 long，int32 或 int64）</td>
</tr>
<tr>
<td style="text-align:left"><code>intc</code></td>
<td style="text-align:left">与 C 的 int 类型一样，一般是 int32 或 int 64</td>
</tr>
<tr>
<td style="text-align:left"><code>intp</code></td>
<td style="text-align:left">用于索引的整数类型（类似于 C 的 ssize_t，一般情况下仍然是 int32 或 int64）</td>
</tr>
<tr>
<td style="text-align:left"><code>int8</code></td>
<td style="text-align:left">字节（-128 to 127）</td>
</tr>
<tr>
<td style="text-align:left"><code>int16</code></td>
<td style="text-align:left">整数（-32768 to 32767）</td>
</tr>
<tr>
<td style="text-align:left"><code>int32</code></td>
<td style="text-align:left">整数（-2147483648 to 2147483647）</td>
</tr>
<tr>
<td style="text-align:left"><code>int64</code></td>
<td style="text-align:left">整数（-9223372036854775808 to 9223372036854775807）</td>
</tr>
<tr>
<td style="text-align:left"><code>uint8</code></td>
<td style="text-align:left">无符号整数（0 to 255）</td>
</tr>
<tr>
<td style="text-align:left"><code>uint16</code></td>
<td style="text-align:left">无符号整数（0 to 65535）</td>
</tr>
<tr>
<td style="text-align:left"><code>uint32</code></td>
<td style="text-align:left">无符号整数（0 to 4294967295）</td>
</tr>
<tr>
<td style="text-align:left"><code>uint64</code></td>
<td style="text-align:left">无符号整数（0 to 18446744073709551615）</td>
</tr>
<tr>
<td style="text-align:left"><code>float_</code></td>
<td style="text-align:left">float64 类型的简写</td>
</tr>
<tr>
<td style="text-align:left"><code>float16</code></td>
<td style="text-align:left">半精度浮点数，包括：1 个符号位，5 个指数位，10 个尾数位</td>
</tr>
<tr>
<td style="text-align:left"><code>float32</code></td>
<td style="text-align:left">单精度浮点数，包括：1 个符号位，8 个指数位，23 个尾数位</td>
</tr>
<tr>
<td style="text-align:left"><code>float64</code></td>
<td style="text-align:left">双精度浮点数，包括：1 个符号位，11 个指数位，52 个尾数位</td>
</tr>
<tr>
<td style="text-align:left"><code>complex_</code></td>
<td style="text-align:left">complex128 类型的简写，即 128 位复数</td>
</tr>
<tr>
<td style="text-align:left"><code>complex64</code></td>
<td style="text-align:left">复数，表示双 32 位浮点数（实数部分和虚数部分）</td>
</tr>
<tr>
<td style="text-align:left"><code>complex128</code></td>
<td style="text-align:left">复数，表示双 64 位浮点数（实数部分和虚数部分）</td>
</tr>
</tbody>
</table>
<p>numpy 的数值类型实际上是 dtype 对象的实例，并对应唯一的字符，包括 <code>np.bool_</code>，<code>np.int32</code>，<code>np.float32</code>，等等。</p>
<h2 id="2-3-数据类型对象">2.3 数据类型对象</h2>
<h3 id="定义">定义</h3>
<p>数据类型对象（<code>numpy.dtype</code> 类的实例）用来描述与数组对应的内存区域是如何使用，它描述了数据的以下几个方面：：</p>
<ul>
<li>数据的类型（整数，浮点数或者 Python 对象）</li>
<li>数据的大小（例如， 整数使用多少个字节存储）</li>
<li>数据的字节顺序（小端法或大端法）</li>
<li>在结构化类型的情况下，字段的名称、每个字段的数据类型和每个字段所取的内存块的部分</li>
<li>如果数据类型是子数组，那么它的形状和数据类型是什么。</li>
</ul>
<p>字节顺序是通过对数据类型预先设定 <strong>&lt;</strong> 或 <strong>&gt;</strong> 来决定的。 <strong>&lt;</strong> 意味着小端法(最小值存储在最小的地址，即低位组放在最前面)。<strong>&gt;</strong> 意味着大端法(最重要的字节存储在最小的地址，即高位组放在最前面)。</p>
<p>dtype 对象是使用以下语法构造的：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">numpy.dtype(<span class="built_in">object</span>, align, copy)</span><br></pre></td></tr></table></figure>
<ul>
<li>object - 要转换为的数据类型对象</li>
<li>align - 如果为 true，填充字段使其类似 C 的结构体。</li>
<li>copy - 复制 dtype 对象 ，如果为 false，则是对内置数据类型对象的引用</li>
</ul>
<h3 id="实例-2">实例</h3>
<p>接下来我们可以通过实例来理解。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># 使用标量类型</span></span><br><span class="line">dt = np.dtype(np.int32)</span><br><span class="line"><span class="built_in">print</span>(dt)</span><br><span class="line"></span><br><span class="line">int32</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># int8, int16, int32, int64 四种数据类型可以使用字符串 &#x27;i1&#x27;, &#x27;i2&#x27;,&#x27;i4&#x27;,&#x27;i8&#x27; 代替</span></span><br><span class="line">dt = np.dtype(<span class="string">&#x27;i4&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(dt)</span><br><span class="line"></span><br><span class="line">int32</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># 字节顺序标注</span></span><br><span class="line">dt = np.dtype(<span class="string">&#x27;&lt;i4&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(dt)</span><br><span class="line"></span><br><span class="line">int32</span><br></pre></td></tr></table></figure>
<p>下面实例展示结构化数据类型的使用，类型字段和对应的实际类型将被创建。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先创建结构化数据类型</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">dt = np.dtype([(<span class="string">&#x27;age&#x27;</span>,np.int8)]) </span><br><span class="line"><span class="built_in">print</span>(dt)</span><br><span class="line"></span><br><span class="line">[(<span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;i1&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将数据类型应用于 ndarray 对象</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">dt = np.dtype([(<span class="string">&#x27;age&#x27;</span>,np.int8)]) </span><br><span class="line">a = np.array([(<span class="number">10</span>,),(<span class="number">20</span>,),(<span class="number">30</span>,)], dtype = dt) </span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">[(<span class="number">10</span>,) (<span class="number">20</span>,) (<span class="number">30</span>,)]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 类型字段名可以用于存取实际的 age 列</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">dt = np.dtype([(<span class="string">&#x27;age&#x27;</span>,np.int8)]) </span><br><span class="line">a = np.array([(<span class="number">10</span>,),(<span class="number">20</span>,),(<span class="number">30</span>,)], dtype = dt) </span><br><span class="line"><span class="built_in">print</span>(a[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"></span><br><span class="line">[<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>]</span><br></pre></td></tr></table></figure>
<p>下面的示例定义一个结构化数据类型 student，包含字符串字段 name，整数字段 age，及浮点字段 marks，并将这个 dtype 应用到 ndarray 对象。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">student = np.dtype([(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;S20&#x27;</span>), (<span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;i1&#x27;</span>), (<span class="string">&#x27;marks&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>)]) </span><br><span class="line"><span class="built_in">print</span>(student)</span><br><span class="line"></span><br><span class="line">[(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;S20&#x27;</span>), (<span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;i1&#x27;</span>), (<span class="string">&#x27;marks&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">student = np.dtype([(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;S20&#x27;</span>), (<span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;i1&#x27;</span>), (<span class="string">&#x27;marks&#x27;</span>, <span class="string">&#x27;f4&#x27;</span>)]) </span><br><span class="line">a = np.array([(<span class="string">&#x27;abc&#x27;</span>, <span class="number">21</span>, <span class="number">50</span>),(<span class="string">&#x27;xyz&#x27;</span>, <span class="number">18</span>, <span class="number">75</span>)], dtype = student) </span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">[(<span class="string">&#x27;abc&#x27;</span>, <span class="number">21</span>, <span class="number">50.0</span>), (<span class="string">&#x27;xyz&#x27;</span>, <span class="number">18</span>, <span class="number">75.0</span>)]</span><br></pre></td></tr></table></figure>
<p>每个内建类型都有一个唯一定义它的字符代码，如下：</p>
<table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">对应类型</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">b</td>
<td style="text-align:left">布尔型</td>
</tr>
<tr>
<td style="text-align:left">i</td>
<td style="text-align:left">(有符号) 整型</td>
</tr>
<tr>
<td style="text-align:left">u</td>
<td style="text-align:left">无符号整型 integer</td>
</tr>
<tr>
<td style="text-align:left">f</td>
<td style="text-align:left">浮点型</td>
</tr>
<tr>
<td style="text-align:left">c</td>
<td style="text-align:left">复数浮点型</td>
</tr>
<tr>
<td style="text-align:left">m</td>
<td style="text-align:left">timedelta（时间间隔）</td>
</tr>
<tr>
<td style="text-align:left">M</td>
<td style="text-align:left">datetime（日期时间）</td>
</tr>
<tr>
<td style="text-align:left">O</td>
<td style="text-align:left">(Python) 对象</td>
</tr>
<tr>
<td style="text-align:left">S, a</td>
<td style="text-align:left">(byte-)字符串</td>
</tr>
<tr>
<td style="text-align:left">U</td>
<td style="text-align:left">Unicode</td>
</tr>
<tr>
<td style="text-align:left">V</td>
<td style="text-align:left">原始数据 (void)</td>
</tr>
</tbody>
</table>
<h2 id="2-4-数组属性">2.4 数组属性</h2>
<h3 id="基本属性">基本属性</h3>
<p>本章节我们将来了解 NumPy 数组的一些基本属性。</p>
<p>NumPy 数组的维数称为秩（rank），秩就是轴的数量，即数组的维度，一维数组的秩为 1，二维数组的秩为 2，以此类推。</p>
<p>在 NumPy中，每一个线性的数组称为是一个轴（axis），也就是维度（dimensions）。比如说，二维数组相当于是两个一维数组，其中第一个一维数组中每个元素又是一个一维数组。所以一维数组就是 NumPy 中的轴（axis），第一个轴相当于是底层数组，第二个轴是底层数组里的数组。而轴的数量——秩，就是数组的维数。</p>
<p>很多时候可以声明 axis。axis=0，表示沿着第 0 轴进行操作，即对每一列进行操作；axis=1，表示沿着第1轴进行操作，即对每一行进行操作。</p>
<p>NumPy 的数组中比较重要 ndarray 对象属性有：</p>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>ndarray.ndim</code></td>
<td style="text-align:left">秩，即轴的数量或维度的数量</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.shape</code></td>
<td style="text-align:left">数组的维度，对于矩阵，n 行 m 列</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.size</code></td>
<td style="text-align:left">数组元素的总个数，相当于 .shape 中 n*m 的值</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.dtype</code></td>
<td style="text-align:left">ndarray 对象的元素类型</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.itemsize</code></td>
<td style="text-align:left">ndarray 对象中每个元素的大小，以字节为单位</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.flags</code></td>
<td style="text-align:left">ndarray 对象的内存信息</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.real</code></td>
<td style="text-align:left">ndarray 元素的实部</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.imag</code></td>
<td style="text-align:left">ndarray 元素的虚部</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.data</code></td>
<td style="text-align:left">包含实际数组元素的缓冲区，由于一般通过数组的索引获取元素，所以通常不需要使用这个属性。</td>
</tr>
</tbody>
</table>
<p>其中，<code>ndarray.flags</code> 返回 ndarray 对象的内存信息，包含以下属性：</p>
<table>
<thead>
<tr>
<th style="text-align:left">属性</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>C_CONTIGUOUS (C)</code></td>
<td style="text-align:left">数据是在一个单一的C风格的连续段中</td>
</tr>
<tr>
<td style="text-align:left"><code>F_CONTIGUOUS (F)</code></td>
<td style="text-align:left">数据是在一个单一的Fortran风格的连续段中</td>
</tr>
<tr>
<td style="text-align:left"><code>OWNDATA (O)</code></td>
<td style="text-align:left">数组拥有它所使用的内存或从另一个对象中借用它</td>
</tr>
<tr>
<td style="text-align:left"><code>WRITEABLE (W)</code></td>
<td style="text-align:left">数据区域可以被写入，将该值设置为 False，则数据为只读</td>
</tr>
<tr>
<td style="text-align:left"><code>ALIGNED (A)</code></td>
<td style="text-align:left">数据和所有元素都适当地对齐到硬件上</td>
</tr>
<tr>
<td style="text-align:left"><code>UPDATEIFCOPY (U)</code></td>
<td style="text-align:left">这个数组是其它数组的一个副本，当这个数组被释放时，原数组的内容将被更新</td>
</tr>
</tbody>
</table>
<h3 id="实例-3">实例</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">24</span>)  </span><br><span class="line"><span class="built_in">print</span> (a.ndim)             <span class="comment"># a 现只有一个维度</span></span><br><span class="line"><span class="comment"># 现在调整其大小</span></span><br><span class="line">b = a.reshape(<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>)  <span class="comment"># b 现在拥有三个维度</span></span><br><span class="line"><span class="built_in">print</span> (b.ndim)</span><br><span class="line"></span><br><span class="line">---------------</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])  </span><br><span class="line"><span class="built_in">print</span> (a.shape)</span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]) </span><br><span class="line">a.shape =  (<span class="number">3</span>,<span class="number">2</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">-----------</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]]) </span><br><span class="line">b = a.reshape(<span class="number">3</span>,<span class="number">2</span>)  </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 数组的 dtype 为 int8（一个字节）  </span></span><br><span class="line">x = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], dtype = np.int8)  </span><br><span class="line"><span class="built_in">print</span> (x.itemsize)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 数组的 dtype 现在为 float64（八个字节） </span></span><br><span class="line">y = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], dtype = np.float64)  </span><br><span class="line"><span class="built_in">print</span> (y.itemsize)</span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])  </span><br><span class="line"><span class="built_in">print</span> (x.flags)</span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line">  C_CONTIGUOUS : <span class="literal">True</span></span><br><span class="line">  F_CONTIGUOUS : <span class="literal">True</span></span><br><span class="line">  OWNDATA : <span class="literal">True</span></span><br><span class="line">  WRITEABLE : <span class="literal">True</span></span><br><span class="line">  ALIGNED : <span class="literal">True</span></span><br><span class="line">  WRITEBACKIFCOPY : <span class="literal">False</span></span><br><span class="line">  UPDATEIFCOPY : <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<h2 id="2-5-特殊创建数组1">2.5 特殊创建数组1</h2>
<p>ndarray 数组除了可以使用底层 ndarray 构造器来创建外，也可以通过以下几种方式来创建。</p>
<h3 id="numpy-empty">numpy.empty</h3>
<p>numpy.empty 方法用来创建一个指定形状（shape）、数据类型（dtype）且未初始化的数组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.empty(shape, dtype = <span class="built_in">float</span>, order = <span class="string">&#x27;C&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">shape</td>
<td style="text-align:left">数组形状</td>
</tr>
<tr>
<td style="text-align:left">dtype</td>
<td style="text-align:left">数据类型，可选</td>
</tr>
<tr>
<td style="text-align:left">order</td>
<td style="text-align:left">有&quot;C&quot;和&quot;F&quot;两个选项,分别代表，行优先和列优先，在计算机内存中的存储元素的顺序。</td>
</tr>
</tbody>
</table>
<p>下面是一个创建空数组的实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">x = np.empty([<span class="number">3</span>,<span class="number">2</span>], dtype = <span class="built_in">int</span>) </span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line">[[ <span class="number">6917529027641081856</span>  <span class="number">5764616291768666155</span>]</span><br><span class="line"> [ <span class="number">6917529027641081859</span> -<span class="number">5764598754299804209</span>]</span><br><span class="line"> [          <span class="number">4497473538</span>      <span class="number">844429428932120</span>]]</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意</strong> − 数组元素为随机值，因为它们未初始化。</p>
</blockquote>
<h3 id="numpy-zeros">numpy.zeros</h3>
<p>创建指定大小的数组，数组元素以 0 来填充：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.zeros(shape, dtype = <span class="built_in">float</span>, order = <span class="string">&#x27;C&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>实例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 默认为浮点数</span></span><br><span class="line">x = np.zeros(<span class="number">5</span>) </span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置类型为整数</span></span><br><span class="line">y = np.zeros((<span class="number">5</span>,), dtype = <span class="built_in">int</span>) </span><br><span class="line"><span class="built_in">print</span>(y)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 自定义类型</span></span><br><span class="line">z = np.zeros((<span class="number">2</span>,<span class="number">2</span>), dtype = [(<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;i4&#x27;</span>), (<span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;i4&#x27;</span>)])  </span><br><span class="line"><span class="built_in">print</span>(z)</span><br><span class="line"></span><br><span class="line">----------------------</span><br><span class="line">[<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span>]</span><br><span class="line">[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line">[[(<span class="number">0</span>, <span class="number">0</span>) (<span class="number">0</span>, <span class="number">0</span>)]</span><br><span class="line"> [(<span class="number">0</span>, <span class="number">0</span>) (<span class="number">0</span>, <span class="number">0</span>)]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-ones">numpy.ones</h3>
<p>创建指定形状的数组，数组元素以 1 来填充：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.ones(shape, dtype = <span class="literal">None</span>, order = <span class="string">&#x27;C&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>实例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 默认为浮点数</span></span><br><span class="line">x = np.ones(<span class="number">5</span>) </span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 自定义类型</span></span><br><span class="line">x = np.ones([<span class="number">2</span>,<span class="number">2</span>], dtype = <span class="built_in">int</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line">[<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>]</span><br><span class="line">[[<span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">1</span>]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-zeros-like">numpy.zeros_like</h3>
<p>numpy.zeros_like 用于创建一个与给定数组具有相同形状的数组，数组元素以 0 来填充。</p>
<p>numpy.zeros 和 numpy.zeros_like 都是用于创建一个指定形状的数组，其中所有元素都是 0。</p>
<p>它们之间的区别在于：numpy.zeros 可以直接指定要创建的数组的形状，而 numpy.zeros_like 则是创建一个与给定数组具有相同形状的数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.zeros_like(a, dtype=<span class="literal">None</span>, order=<span class="string">&#x27;K&#x27;</span>, subok=<span class="literal">True</span>, shape=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">a</td>
<td style="text-align:left">给定要创建相同形状的数组</td>
</tr>
<tr>
<td style="text-align:left">dtype</td>
<td style="text-align:left">创建的数组的数据类型</td>
</tr>
<tr>
<td style="text-align:left">order</td>
<td style="text-align:left">数组在内存中的存储顺序，可选值为 ‘C’（按行优先）或 ‘F’（按列优先），默认为 ‘K’（保留输入数组的存储顺序）</td>
</tr>
<tr>
<td style="text-align:left">subok</td>
<td style="text-align:left">是否允许返回子类，如果为 True，则返回一个子类对象，否则返回一个与 a 数组具有相同数据类型和存储顺序的数组</td>
</tr>
<tr>
<td style="text-align:left">shape</td>
<td style="text-align:left">创建的数组的形状，如果不指定，则默认为 a 数组的形状。</td>
</tr>
</tbody>
</table>
<p>创建一个与 arr 形状相同的，所有元素都为 0 的数组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建一个 3x3 的二维数组</span></span><br><span class="line">arr = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建一个与 arr 形状相同的，所有元素都为 0 的数组</span></span><br><span class="line">zeros_arr = np.zeros_like(arr)</span><br><span class="line"><span class="built_in">print</span>(zeros_arr)</span><br><span class="line"></span><br><span class="line">----------------</span><br><span class="line">[[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"> [<span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-ones-like">numpy.ones_like</h3>
<p>numpy.ones_like 用于创建一个与给定数组具有相同形状的数组，数组元素以 1 来填充。</p>
<p>numpy.ones 和 numpy.ones_like 都是用于创建一个指定形状的数组，其中所有元素都是 1。</p>
<p>它们之间的区别在于：numpy.ones 可以直接指定要创建的数组的形状，而 numpy.ones_like 则是创建一个与给定数组具有相同形状的数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.ones_like(a, dtype=<span class="literal">None</span>, order=<span class="string">&#x27;K&#x27;</span>, subok=<span class="literal">True</span>, shape=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>实例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建一个 3x3 的二维数组</span></span><br><span class="line">arr = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建一个与 arr 形状相同的，所有元素都为 1 的数组</span></span><br><span class="line">ones_arr = np.ones_like(arr)</span><br><span class="line"><span class="built_in">print</span>(ones_arr)</span><br><span class="line"></span><br><span class="line">-----------------</span><br><span class="line">[[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"> [<span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]]</span><br></pre></td></tr></table></figure>
<h2 id="2-6-特殊创建数组2">2.6 特殊创建数组2</h2>
<p>本章节我们将学习如何从已有的数组创建数组。</p>
<h3 id="numpy-asarray">numpy.asarray</h3>
<p>numpy.asarray 类似 numpy.array，但 numpy.asarray 参数只有三个，比 numpy.array 少两个。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">numpy.asarray(a, dtype = None, order = None)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">a</td>
<td style="text-align:left">任意形式的输入参数，可以是，列表, 列表的元组, 元组, 元组的元组, 元组的列表，多维数组</td>
</tr>
<tr>
<td style="text-align:left">dtype</td>
<td style="text-align:left">数据类型，可选</td>
</tr>
<tr>
<td style="text-align:left">order</td>
<td style="text-align:left">可选，有&quot;C&quot;和&quot;F&quot;两个选项,分别代表，行优先和列优先，在计算机内存中的存储元素的顺序。</td>
</tr>
</tbody>
</table>
<p>实例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x =  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] </span><br><span class="line">a = np.asarray(x)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">-----------</span><br><span class="line">[<span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x =  (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>) </span><br><span class="line">a = np.asarray(x)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[<span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x =  [(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),(<span class="number">4</span>,<span class="number">5</span>)] </span><br><span class="line">a = np.asarray(x)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) (<span class="number">4</span>, <span class="number">5</span>)]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x =  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] </span><br><span class="line">a = np.asarray(x, dtype =  <span class="built_in">float</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[ <span class="number">1.</span>  <span class="number">2.</span>  <span class="number">3.</span>]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-frombuffer">numpy.frombuffer</h3>
<p>numpy.frombuffer 用于实现动态数组。</p>
<p>numpy.frombuffer 接受 buffer 输入参数，以流的形式读入转化成 ndarray 对象。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.frombuffer(buffer, dtype = <span class="built_in">float</span>, count = -<span class="number">1</span>, offset = <span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>**注意：**buffer 是字符串的时候，Python3 默认 str 是 Unicode 类型，所以要转成 bytestring 在原 str 前加上 b。</p>
</blockquote>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">buffer</td>
<td style="text-align:left">可以是任意对象，会以流的形式读入。</td>
</tr>
<tr>
<td style="text-align:left">dtype</td>
<td style="text-align:left">返回数组的数据类型，可选</td>
</tr>
<tr>
<td style="text-align:left">count</td>
<td style="text-align:left">读取的数据数量，默认为-1，读取所有数据。</td>
</tr>
<tr>
<td style="text-align:left">offset</td>
<td style="text-align:left">读取的起始位置，默认为0。</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">s =  <span class="string">b&#x27;Hello World&#x27;</span> </span><br><span class="line">a = np.frombuffer(s, dtype =  <span class="string">&#x27;S1&#x27;</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line">[<span class="string">b&#x27;H&#x27;</span> <span class="string">b&#x27;e&#x27;</span> <span class="string">b&#x27;l&#x27;</span> <span class="string">b&#x27;l&#x27;</span> <span class="string">b&#x27;o&#x27;</span> <span class="string">b&#x27; &#x27;</span> <span class="string">b&#x27;W&#x27;</span> <span class="string">b&#x27;o&#x27;</span> <span class="string">b&#x27;r&#x27;</span> <span class="string">b&#x27;l&#x27;</span> <span class="string">b&#x27;d&#x27;</span>]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-fromiter">numpy.fromiter</h3>
<p>numpy.fromiter 方法从可迭代对象中建立 ndarray 对象，返回一维数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.fromiter(iterable, dtype, count=-<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">iterable</td>
<td style="text-align:left">可迭代对象</td>
</tr>
<tr>
<td style="text-align:left">dtype</td>
<td style="text-align:left">返回数组的数据类型</td>
</tr>
<tr>
<td style="text-align:left">count</td>
<td style="text-align:left">读取的数据数量，默认为-1，读取所有数据</td>
</tr>
</tbody>
</table>
<p>实例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用 range 函数创建列表对象  </span></span><br><span class="line"><span class="built_in">list</span>=<span class="built_in">range</span>(<span class="number">5</span>)</span><br><span class="line">it=<span class="built_in">iter</span>(<span class="built_in">list</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用迭代器创建 ndarray </span></span><br><span class="line">x=np.fromiter(it, dtype=<span class="built_in">float</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">-----------</span><br><span class="line">[<span class="number">0.</span> <span class="number">1.</span> <span class="number">2.</span> <span class="number">3.</span> <span class="number">4.</span>]</span><br></pre></td></tr></table></figure>
<h2 id="2-7-特殊创建数组3">2.7 特殊创建数组3</h2>
<p>这一章节我们将学习如何从数值范围创建数组。</p>
<h3 id="numpy-arange">numpy.arange</h3>
<p>numpy 包中的使用 arange 函数创建数值范围并返回 ndarray 对象，函数格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.arange(start, stop, step, dtype)</span><br></pre></td></tr></table></figure>
<p>根据 start 与 stop 指定的范围以及 step 设定的步长，生成一个 ndarray。</p>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>start</code></td>
<td style="text-align:left">起始值，默认为<code>0</code></td>
</tr>
<tr>
<td style="text-align:left"><code>stop</code></td>
<td style="text-align:left">终止值（不包含）</td>
</tr>
<tr>
<td style="text-align:left"><code>step</code></td>
<td style="text-align:left">步长，默认为<code>1</code></td>
</tr>
<tr>
<td style="text-align:left"><code>dtype</code></td>
<td style="text-align:left">返回<code>ndarray</code>的数据类型，如果没有提供，则会使用输入数据的类型。</td>
</tr>
</tbody>
</table>
<p>实例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">x = np.arange(<span class="number">5</span>)  </span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[<span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置了 dtype</span></span><br><span class="line">x = np.arange(<span class="number">5</span>, dtype =  <span class="built_in">float</span>)  </span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[<span class="number">0.</span>  <span class="number">1.</span>  <span class="number">2.</span>  <span class="number">3.</span>  <span class="number">4.</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.arange(<span class="number">10</span>,<span class="number">20</span>,<span class="number">2</span>)  </span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[<span class="number">10</span>  <span class="number">12</span>  <span class="number">14</span>  <span class="number">16</span>  <span class="number">18</span>]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-linspace">numpy.linspace</h3>
<p>numpy.linspace 函数用于创建一个一维数组，数组是一个等差数列构成的，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.linspace(start, stop, num=<span class="number">50</span>, endpoint=<span class="literal">True</span>, retstep=<span class="literal">False</span>, dtype=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>start</code></td>
<td style="text-align:left">序列的起始值</td>
</tr>
<tr>
<td style="text-align:left"><code>stop</code></td>
<td style="text-align:left">序列的终止值，如果<code>endpoint</code>为<code>true</code>，该值包含于数列中</td>
</tr>
<tr>
<td style="text-align:left"><code>num</code></td>
<td style="text-align:left">要生成的等步长的样本数量，默认为<code>50</code></td>
</tr>
<tr>
<td style="text-align:left"><code>endpoint</code></td>
<td style="text-align:left">该值为 <code>true</code> 时，数列中包含<code>stop</code>值，反之不包含，默认是True。</td>
</tr>
<tr>
<td style="text-align:left"><code>retstep</code></td>
<td style="text-align:left">如果为 True 时，生成的数组中会显示间距，反之不显示。</td>
</tr>
<tr>
<td style="text-align:left"><code>dtype</code></td>
<td style="text-align:left"><code>ndarray</code> 的数据类型</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.linspace(<span class="number">1</span>,<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">--------</span><br><span class="line">[ <span class="number">1.</span>  <span class="number">2.</span>  <span class="number">3.</span>  <span class="number">4.</span>  <span class="number">5.</span>  <span class="number">6.</span>  <span class="number">7.</span>  <span class="number">8.</span>  <span class="number">9.</span> <span class="number">10.</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.linspace(<span class="number">1</span>,<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">--------</span><br><span class="line">[<span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span> <span class="number">1.</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.linspace(<span class="number">10</span>, <span class="number">20</span>,  <span class="number">5</span>, endpoint =  <span class="literal">False</span>)  <span class="comment"># 不包含终止值</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[<span class="number">10.</span> <span class="number">12.</span> <span class="number">14.</span> <span class="number">16.</span> <span class="number">18.</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a =np.linspace(<span class="number">1</span>,<span class="number">10</span>,<span class="number">10</span>,retstep= <span class="literal">True</span>)  <span class="comment"># 设置间距</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># 拓展例子</span></span><br><span class="line">b =np.linspace(<span class="number">1</span>,<span class="number">10</span>,<span class="number">10</span>).reshape([<span class="number">10</span>,<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line">(array([ <span class="number">1.</span>,  <span class="number">2.</span>,  <span class="number">3.</span>,  <span class="number">4.</span>,  <span class="number">5.</span>,  <span class="number">6.</span>,  <span class="number">7.</span>,  <span class="number">8.</span>,  <span class="number">9.</span>, <span class="number">10.</span>]), <span class="number">1.0</span>)</span><br><span class="line">[[ <span class="number">1.</span>]</span><br><span class="line"> [ <span class="number">2.</span>]</span><br><span class="line"> [ <span class="number">3.</span>]</span><br><span class="line"> [ <span class="number">4.</span>]</span><br><span class="line"> [ <span class="number">5.</span>]</span><br><span class="line"> [ <span class="number">6.</span>]</span><br><span class="line"> [ <span class="number">7.</span>]</span><br><span class="line"> [ <span class="number">8.</span>]</span><br><span class="line"> [ <span class="number">9.</span>]</span><br><span class="line"> [<span class="number">10.</span>]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-logspace">numpy.logspace</h3>
<p>numpy.logspace 函数用于创建一个于等比数列。格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.logspace(start, stop, num=<span class="number">50</span>, endpoint=<span class="literal">True</span>, base=<span class="number">10.0</span>, dtype=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>base 参数意思是取对数的时候 log 的下标。</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>start</code></td>
<td style="text-align:left">序列的起始值为：base ** start</td>
</tr>
<tr>
<td style="text-align:left"><code>stop</code></td>
<td style="text-align:left">序列的终止值为：base ** stop。如果<code>endpoint</code>为<code>true</code>，该值包含于数列中</td>
</tr>
<tr>
<td style="text-align:left"><code>num</code></td>
<td style="text-align:left">要生成的等步长的样本数量，默认为<code>50</code></td>
</tr>
<tr>
<td style="text-align:left"><code>endpoint</code></td>
<td style="text-align:left">该值为 <code>true</code> 时，数列中中包含<code>stop</code>值，反之不包含，默认是True。</td>
</tr>
<tr>
<td style="text-align:left"><code>base</code></td>
<td style="text-align:left">对数 log 的底数。</td>
</tr>
<tr>
<td style="text-align:left"><code>dtype</code></td>
<td style="text-align:left"><code>ndarray</code> 的数据类型</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># 默认底数是 10</span></span><br><span class="line">a = np.logspace(<span class="number">1.0</span>,  <span class="number">2.0</span>, num =  <span class="number">10</span>)  </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">--------</span><br><span class="line">[ <span class="number">10.</span>           <span class="number">12.91549665</span>     <span class="number">16.68100537</span>      <span class="number">21.5443469</span>  <span class="number">27.82559402</span>      </span><br><span class="line">  <span class="number">35.93813664</span>   <span class="number">46.41588834</span>     <span class="number">59.94842503</span>      <span class="number">77.42636827</span>    <span class="number">100.</span>    ]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.logspace(<span class="number">0</span>,<span class="number">9</span>,<span class="number">10</span>,base=<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line">[  <span class="number">1.</span>   <span class="number">2.</span>   <span class="number">4.</span>   <span class="number">8.</span>  <span class="number">16.</span>  <span class="number">32.</span>  <span class="number">64.</span> <span class="number">128.</span> <span class="number">256.</span> <span class="number">512.</span>]</span><br></pre></td></tr></table></figure>
<h1>三、操作</h1>
<h2 id="3-1-切片和索引">3.1 切片和索引</h2>
<p>ndarray对象的内容可以通过索引或切片来访问和修改，与 Python 中 list 的切片操作一样。</p>
<p>ndarray 数组可以基于 0 - n 的下标进行索引，切片对象可以通过内置的 slice 函数，并设置 start, stop 及 step 参数进行，从原数组中切割出一个新数组。</p>
<h3 id="使用">使用 :</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line">s = <span class="built_in">slice</span>(<span class="number">2</span>,<span class="number">7</span>,<span class="number">2</span>)   <span class="comment"># 从索引 2 开始到索引 7 停止，间隔为2</span></span><br><span class="line"><span class="built_in">print</span>(a[s])</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line">[<span class="number">2</span>  <span class="number">4</span>  <span class="number">6</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">10</span>)  </span><br><span class="line">b = a[<span class="number">2</span>:<span class="number">7</span>:<span class="number">2</span>]   <span class="comment"># 从索引 2 开始到索引 7 停止，间隔为 2</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line">[<span class="number">2</span>  <span class="number">4</span>  <span class="number">6</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">10</span>)  <span class="comment"># [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line">b = a[<span class="number">5</span>] </span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line">[<span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">10</span>)  <span class="comment"># [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">2</span>:<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line">[<span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># 从某个索引处开始切割</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;从数组索引 a[1:] 处开始切割&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br><span class="line">从数组索引 a[<span class="number">1</span>:] 处开始切割</span><br><span class="line">[[<span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>
<h3 id="使用-2">使用 ,</h3>
<ul>
<li><code>,</code>左右两边表示 <strong>行</strong> 和 <strong>列</strong>。</li>
</ul>
<p>切片还可以包括省略号 <code>…</code>，来使选择元组的长度与数组的维度相同。 如果在行位置使用省略号，它将返回包含行中元素的 ndarray。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])  </span><br><span class="line"><span class="built_in">print</span> (a[...,<span class="number">1</span>])   <span class="comment"># 第2列元素</span></span><br><span class="line"><span class="built_in">print</span> (a[<span class="number">1</span>,...])   <span class="comment"># 第2行元素</span></span><br><span class="line"><span class="built_in">print</span> (a[...,<span class="number">1</span>:])  <span class="comment"># 第2列及剩下的所有元素</span></span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[<span class="number">2</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line">[<span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line">[[<span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>
<h2 id="3-2-高级索引">3.2 高级索引</h2>
<p>NumPy 比一般的 Python 序列提供更多的索引方式。</p>
<p>除了之前看到的用整数和切片的索引外，数组可以由整数数组索引、布尔索引及花式索引。</p>
<p>NumPy 中的高级索引指的是使用整数数组、布尔数组或者其他序列来访问数组的元素。相比于基本索引，高级索引可以访问到数组中的任意元素，并且可以用来对数组进行复杂的操作和修改。</p>
<h3 id="整数数组索引">整数数组索引</h3>
<p>整数数组索引是指使用一个数组来访问另一个数组的元素。这个数组中的每个元素都是目标数组中某个维度上的索引值。</p>
<p>以下实例获取数组中 <strong>(0,0)，(1,1)</strong> 和 <strong>(2,0)</strong> 位置处的元素。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x = np.array([[<span class="number">1</span>,  <span class="number">2</span>],  [<span class="number">3</span>,  <span class="number">4</span>],  [<span class="number">5</span>,  <span class="number">6</span>]]) </span><br><span class="line">y = x[[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>],  [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>]]  </span><br><span class="line"><span class="built_in">print</span> (y)</span><br><span class="line"></span><br><span class="line">--------</span><br><span class="line">[<span class="number">1</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<p>以下实例获取了 4X3 数组中的四个角的元素。</p>
<p>行索引是 [0,0] 和 [3,3]，而列索引是 [0,2] 和 [0,2]。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x = np.array([[  <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>],[  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>],[  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],[  <span class="number">9</span>,  <span class="number">10</span>,  <span class="number">11</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span> )</span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">rows = np.array([[<span class="number">0</span>,<span class="number">0</span>],[<span class="number">3</span>,<span class="number">3</span>]]) </span><br><span class="line">cols = np.array([[<span class="number">0</span>,<span class="number">2</span>],[<span class="number">0</span>,<span class="number">2</span>]]) </span><br><span class="line">y = x[rows,cols]  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;这个数组的四个角元素是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (y)</span><br><span class="line"></span><br><span class="line">-------------</span><br><span class="line">我们的数组是：</span><br><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>]</span><br><span class="line"> [ <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>]</span><br><span class="line"> [ <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这个数组的四个角元素是：</span><br><span class="line">[[ <span class="number">0</span>  <span class="number">2</span>]</span><br><span class="line"> [ <span class="number">9</span> <span class="number">11</span>]]</span><br></pre></td></tr></table></figure>
<p>返回的结果是包含每个角元素的 ndarray 对象。</p>
<p>可以借助切片<code> :</code> 或<code>…</code> 与索引数组组合。</p>
<p>如下面例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]])</span><br><span class="line">b = a[<span class="number">1</span>:<span class="number">3</span>, <span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">c = a[<span class="number">1</span>:<span class="number">3</span>,[<span class="number">1</span>,<span class="number">2</span>]]</span><br><span class="line">d = a[...,<span class="number">1</span>:]</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line">[[<span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">8</span> <span class="number">9</span>]]</span><br><span class="line">[[<span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">8</span> <span class="number">9</span>]]</span><br><span class="line">[[<span class="number">2</span> <span class="number">3</span>]</span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span>]</span><br><span class="line"> [<span class="number">8</span> <span class="number">9</span>]]</span><br></pre></td></tr></table></figure>
<h3 id="布尔索引">布尔索引</h3>
<p>我们可以通过一个布尔数组来索引目标数组。</p>
<p>布尔索引通过布尔运算（如：比较运算符）来获取符合指定条件的元素的数组。</p>
<p>以下实例获取大于 5 的元素：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x = np.array([[  <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>],[  <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>],[  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],[  <span class="number">9</span>,  <span class="number">10</span>,  <span class="number">11</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 现在我们会打印出大于 5 的元素  </span></span><br><span class="line"><span class="built_in">print</span>  (<span class="string">&#x27;大于 5 的元素是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x[x &gt;  <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">-----------</span><br><span class="line">我们的数组是：</span><br><span class="line">[[ <span class="number">0</span>  <span class="number">1</span>  <span class="number">2</span>]</span><br><span class="line"> [ <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>]</span><br><span class="line"> [ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>]</span><br><span class="line"> [ <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">大于 <span class="number">5</span> 的元素是：</span><br><span class="line">[ <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span>]</span><br></pre></td></tr></table></figure>
<p>以下实例使用了 <code>~</code>（取补运算符）来过滤 <code>NaN</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([np.nan,  <span class="number">1</span>,<span class="number">2</span>,np.nan,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])  </span><br><span class="line"><span class="built_in">print</span> (a[~np.isnan(a)])</span><br><span class="line"></span><br><span class="line">-------</span><br><span class="line">[ <span class="number">1.</span>   <span class="number">2.</span>   <span class="number">3.</span>   <span class="number">4.</span>   <span class="number">5.</span>]</span><br></pre></td></tr></table></figure>
<p>以下实例演示如何从数组中过滤掉非复数元素。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">1</span>,  <span class="number">2</span>+<span class="number">6j</span>,  <span class="number">5</span>,  <span class="number">3.5</span>+<span class="number">5j</span>])  </span><br><span class="line"><span class="built_in">print</span> (a[np.iscomplex(a)])</span><br><span class="line"></span><br><span class="line">--------</span><br><span class="line">[<span class="number">2.0</span>+<span class="number">6.j</span>  <span class="number">3.5</span>+<span class="number">5.j</span>]</span><br></pre></td></tr></table></figure>
<h3 id="花式索引">花式索引</h3>
<p>花式索引指的是利用整数数组进行索引。</p>
<p><strong>花式索引根据索引数组的值作为目标数组的某个轴的下标来取值。</strong></p>
<p>对于使用一维整型数组作为索引，如果目标是一维数组，那么索引的结果就是对应位置的元素，如果目标是二维数组，那么就是对应下标的行。</p>
<p>花式索引跟切片不一样，它总是将数据复制到新数组中。</p>
<ul>
<li>一维数组</li>
</ul>
<p>一维数组只有一个轴 <strong>axis = 0</strong>，所以一维数组就在 <strong>axis = 0</strong> 这个轴上取值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">9</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="comment"># 一维数组读取指定下标对应的元素</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-------读取下标对应的元素-------&quot;</span>)</span><br><span class="line">x2 = x[[<span class="number">0</span>, <span class="number">6</span>]] <span class="comment"># 使用花式索引</span></span><br><span class="line"><span class="built_in">print</span>(x2) </span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(x2[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(x2[<span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<p>输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[0 1 2 3 4 5 6 7 8]</span><br><span class="line">-------读取下标对应的元素-------</span><br><span class="line">[0 6]</span><br><span class="line">0</span><br><span class="line">6</span><br></pre></td></tr></table></figure>
<ul>
<li>二维数组</li>
</ul>
<p>1、传入顺序索引数组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x=np.arange(<span class="number">32</span>).reshape((<span class="number">8</span>,<span class="number">4</span>))</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="comment"># 二维数组读取指定下标对应的行</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-------读取下标对应的行-------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span> (x[[<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">7</span>]])</span><br></pre></td></tr></table></figure>
<p><strong>print (x[[4,2,1,7]])</strong> 输出下表为 <strong>4, 2, 1, 7</strong> 对应的行，输出结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]</span><br><span class="line"> [12 13 14 15]</span><br><span class="line"> [16 17 18 19]</span><br><span class="line"> [20 21 22 23]</span><br><span class="line"> [24 25 26 27]</span><br><span class="line"> [28 29 30 31]]</span><br><span class="line">-------读取下标对应的行-------</span><br><span class="line">[[16 17 18 19]</span><br><span class="line"> [ 8  9 10 11]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [28 29 30 31]]</span><br></pre></td></tr></table></figure>
<p>2、传入倒序索引数组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x=np.arange(<span class="number">32</span>).reshape((<span class="number">8</span>,<span class="number">4</span>))</span><br><span class="line"><span class="built_in">print</span> (x[[-<span class="number">4</span>,-<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">7</span>]])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[16 17 18 19]</span><br><span class="line"> [24 25 26 27]</span><br><span class="line"> [28 29 30 31]</span><br><span class="line"> [ 4  5  6  7]]</span><br></pre></td></tr></table></figure>
<p>3、传入多个索引数组（要使用 <code>np.ix_</code>）</p>
<p><code>np.ix_</code> 函数就是输入两个数组，产生笛卡尔积的映射关系。</p>
<p>笛卡尔乘积是指在数学中，两个集合 X 和 Y 的笛卡尔积（Cartesian product），又称直积，表示为 <strong>X×Y</strong>，第一个对象是X的成员而第二个对象是 Y 的所有可能有序对的其中一个成员。</p>
<p>例如 <strong>A={a,b}, B={0,1,2}</strong>，则：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A×B=&#123;(a, 0), (a, 1), (a, 2), (b, 0), (b, 1), (b, 2)&#125;</span><br><span class="line">B×A=&#123;(0, a), (0, b), (1, a), (1, b), (2, a), (2, b)&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x=np.arange(<span class="number">32</span>).reshape((<span class="number">8</span>,<span class="number">4</span>))</span><br><span class="line"><span class="built_in">print</span> (x[np.ix_([<span class="number">1</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">2</span>],[<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>])])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[ 4  7  5  6]</span><br><span class="line"> [20 23 21 22]</span><br><span class="line"> [28 31 29 30]</span><br><span class="line"> [ 8 11  9 10]]</span><br></pre></td></tr></table></figure>
<h2 id="3-3-广播">3.3 广播</h2>
<p>广播(Broadcast)是 numpy 对不同形状(shape)的数组进行数值计算的方式， 对数组的算术运算通常在相应的元素上进行。</p>
<p>如果两个数组 a 和 b 形状相同，即满足 <strong>a.shape == b.shape</strong>，那么 a*b 的结果就是 a 与 b 数组对应位相乘。这要求维数相同，且各维度的长度相同。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]) </span><br><span class="line">b = np.array([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>]) </span><br><span class="line">c = a * b </span><br><span class="line"><span class="built_in">print</span> (c)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[ 10  40  90 160]</span><br></pre></td></tr></table></figure>
<p>当运算中的 2 个数组的形状不同时，numpy 将自动触发广播机制。如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[ <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">           [<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>],</span><br><span class="line">           [<span class="number">20</span>,<span class="number">20</span>,<span class="number">20</span>],</span><br><span class="line">           [<span class="number">30</span>,<span class="number">30</span>,<span class="number">30</span>]])</span><br><span class="line">b = np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(a + b)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[ 0  1  2]</span><br><span class="line"> [10 11 12]</span><br><span class="line"> [20 21 22]</span><br><span class="line"> [30 31 32]]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>下面的图片展示了数组 b 如何通过广播来与数组 a 兼容。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130002329657.png" alt="image-20240130002329657" style="zoom:67%;" /> 
</blockquote>
<p>4x3 的二维数组与长为 3 的一维数组相加，等效于把数组 b 在二维上重复 4 次再运算：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[ <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">           [<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>],</span><br><span class="line">           [<span class="number">20</span>,<span class="number">20</span>,<span class="number">20</span>],</span><br><span class="line">           [<span class="number">30</span>,<span class="number">30</span>,<span class="number">30</span>]])</span><br><span class="line">b = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">bb = np.tile(b, (<span class="number">4</span>, <span class="number">1</span>))  <span class="comment"># 重复 b 的各个维度</span></span><br><span class="line"><span class="built_in">print</span>(a + bb)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[ 1  2  3]</span><br><span class="line"> [11 12 13]</span><br><span class="line"> [21 22 23]</span><br><span class="line"> [31 32 33]]</span><br></pre></td></tr></table></figure>
<p><strong>广播的规则:</strong></p>
<ul>
<li>让所有输入数组都向其中形状最长的数组看齐，形状中不足的部分都通过在前面加 1 补齐。</li>
<li>输出数组的形状是输入数组形状的各个维度上的最大值。</li>
<li>如果输入数组的某个维度和输出数组的对应维度的长度相同或者其长度为 1 时，这个数组能够用来计算，否则出错。</li>
<li>当输入数组的某个维度的长度为 1 时，沿着此维度运算时都用此维度上的第一组值。</li>
</ul>
<p>**简单理解：**对两个数组，分别比较他们的每一个维度（若其中一个数组没有当前维度则忽略），满足：</p>
<ul>
<li>数组拥有相同形状。</li>
<li>当前维度的值相等。</li>
<li>当前维度的值有一个是 1。</li>
</ul>
<p>若条件不满足，抛出 <strong>“ValueError: frames are not aligned”</strong> 异常。</p>
<h2 id="3-4-迭代数组">3.4 迭代数组</h2>
<h3 id="迭代器">迭代器</h3>
<p>NumPy 迭代器对象 <code>numpy.nditer</code> 提供了一种灵活访问一个或者多个数组元素的方式。</p>
<p>迭代器最基本的任务是可以完成对数组元素的访问。</p>
<p>接下来我们使用 arange() 函数创建一个 2X3 数组，并使用 nditer 对它进行迭代。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">6</span>).reshape(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原始数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;迭代输出元素：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a):</span><br><span class="line">    <span class="built_in">print</span> (x, end=<span class="string">&quot;, &quot;</span> )</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始数组是：</span><br><span class="line">[[0 1 2]</span><br><span class="line"> [3 4 5]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">迭代输出元素：</span><br><span class="line">0, 1, 2, 3, 4, 5, </span><br></pre></td></tr></table></figure>
<p>以上实例不是使用标准 C 或者 Fortran 顺序，选择的顺序是和数组内存布局一致的，这样做是为了提升访问的效率，默认是行序优先（row-major order，或者说是 C-order）。</p>
<p>这反映了默认情况下只需访问每个元素，而无需考虑其特定顺序。我们可以通过迭代上述数组的转置来看到这一点，并与以 C 顺序访问数组转置的 copy 方式做对比，如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">6</span>).reshape(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a.T):</span><br><span class="line">    <span class="built_in">print</span> (x, end=<span class="string">&quot;, &quot;</span> )</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a.T.copy(order=<span class="string">&#x27;C&#x27;</span>)):</span><br><span class="line">    <span class="built_in">print</span> (x, end=<span class="string">&quot;, &quot;</span> )</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0, 1, 2, 3, 4, 5, </span><br><span class="line"></span><br><span class="line">0, 3, 1, 4, 2, 5, </span><br></pre></td></tr></table></figure>
<p>从上述例子可以看出，a 和 a.T 的遍历顺序是一样的，也就是他们在内存中的存储顺序也是一样的，但是 <strong>a.T.copy(order = ‘C’)</strong> 的遍历结果是不同的，那是因为它和前两种的存储方式是不一样的，默认是按行访问。</p>
<h3 id="控制遍历顺序">控制遍历顺序</h3>
<ul>
<li><code>for x in np.nditer(a, order='F'):</code>Fortran order，即是列序优先；</li>
<li><code>for x in np.nditer(a.T, order='C'):</code>C order，即是行序优先；</li>
</ul>
<p>通过显式设置，来强制 nditer 对象使用某种顺序：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">0</span>,<span class="number">60</span>,<span class="number">5</span>) </span><br><span class="line">a = a.reshape(<span class="number">3</span>,<span class="number">4</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原始数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;以 C 风格顺序排序：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a, order =  <span class="string">&#x27;C&#x27;</span>):  </span><br><span class="line">    <span class="built_in">print</span> (x, end=<span class="string">&quot;, &quot;</span> )</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;以 F 风格顺序排序：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a, order =  <span class="string">&#x27;F&#x27;</span>):  </span><br><span class="line">    <span class="built_in">print</span> (x, end=<span class="string">&quot;, &quot;</span> )</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始数组是：</span><br><span class="line">[[ 0  5 10 15]</span><br><span class="line"> [20 25 30 35]</span><br><span class="line"> [40 45 50 55]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以 C 风格顺序排序：</span><br><span class="line">0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, </span><br><span class="line"></span><br><span class="line">以 F 风格顺序排序：</span><br><span class="line">0, 20, 40, 5, 25, 45, 10, 30, 50, 15, 35, 55,</span><br></pre></td></tr></table></figure>
<h3 id="修改数组中元素的值">修改数组中元素的值</h3>
<p>nditer 对象有另一个可选参数 <code>op_flags</code>。 默认情况下，nditer 将视待迭代遍历的数组为只读对象（read-only），为了在遍历数组的同时，实现对数组元素值的修改，必须指定 <code>readwrite</code> 或者 <code>writeonly</code> 的模式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">0</span>,<span class="number">60</span>,<span class="number">5</span>) </span><br><span class="line">a = a.reshape(<span class="number">3</span>,<span class="number">4</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原始数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a, op_flags=[<span class="string">&#x27;readwrite&#x27;</span>]): </span><br><span class="line">    x[...]=<span class="number">2</span>*x </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始数组是：</span><br><span class="line">[[ 0  5 10 15]</span><br><span class="line"> [20 25 30 35]</span><br><span class="line"> [40 45 50 55]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改后的数组是：</span><br><span class="line">[[  0  10  20  30]</span><br><span class="line"> [ 40  50  60  70]</span><br><span class="line"> [ 80  90 100 110]]</span><br></pre></td></tr></table></figure>
<h3 id="使用外部循环">使用外部循环</h3>
<p>nditer 类的构造器拥有 flags 参数，它可以接受下列值：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>c_index</code></td>
<td style="text-align:left">可以跟踪 C 顺序的索引</td>
</tr>
<tr>
<td style="text-align:left"><code>f_index</code></td>
<td style="text-align:left">可以跟踪 Fortran 顺序的索引</td>
</tr>
<tr>
<td style="text-align:left"><code>multi_index</code></td>
<td style="text-align:left">每次迭代可以跟踪一种索引类型</td>
</tr>
<tr>
<td style="text-align:left"><code>external_loop</code></td>
<td style="text-align:left">给出的值是具有多个值的一维数组，而不是零维数组</td>
</tr>
</tbody>
</table>
<p>在下面的实例中，迭代器遍历对应于每列，并组合为一维数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.arange(<span class="number">0</span>,<span class="number">60</span>,<span class="number">5</span>) </span><br><span class="line">a = a.reshape(<span class="number">3</span>,<span class="number">4</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原始数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组是：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> np.nditer(a, flags =  [<span class="string">&#x27;external_loop&#x27;</span>], order =  <span class="string">&#x27;F&#x27;</span>):  </span><br><span class="line">   <span class="built_in">print</span> (x, end=<span class="string">&quot;, &quot;</span> )</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始数组是：</span><br><span class="line">[[ 0  5 10 15]</span><br><span class="line"> [20 25 30 35]</span><br><span class="line"> [40 45 50 55]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改后的数组是：</span><br><span class="line">[ 0 20 40], [ 5 25 45], [10 30 50], [15 35 55],</span><br></pre></td></tr></table></figure>
<h3 id="广播迭代">广播迭代</h3>
<p>如果两个数组是可广播的，nditer 组合对象能够同时迭代它们。 假设数组 a 的维度为 3X4，数组 b 的维度为 1X4 ，则使用以下迭代器（数组 b 被广播到 a 的大小）。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">0</span>,<span class="number">60</span>,<span class="number">5</span>) </span><br><span class="line">a = a.reshape(<span class="number">3</span>,<span class="number">4</span>)  </span><br><span class="line"><span class="built_in">print</span>  (<span class="string">&#x27;第一个数组为：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span>  (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组为：&#x27;</span>)</span><br><span class="line">b = np.array([<span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>], dtype =  <span class="built_in">int</span>)  </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组为：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> np.nditer([a,b]):  </span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;%d:%d&quot;</span>  %  (x,y), end=<span class="string">&quot;, &quot;</span> )</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组为：</span><br><span class="line">[[ 0  5 10 15]</span><br><span class="line"> [20 25 30 35]</span><br><span class="line"> [40 45 50 55]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组为：</span><br><span class="line">[1 2 3 4]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改后的数组为：</span><br><span class="line">0:1, 5:2, 10:3, 15:4, 20:1, 25:2, 30:3, 35:4, 40:1, 45:2, 50:3, 55:4,</span><br></pre></td></tr></table></figure>
<h1>四、函数变形</h1>
<h2 id="4-1-修改数组形状">4.1 修改数组形状</h2>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>reshape</code></td>
<td style="text-align:left">不改变数据的条件下修改形状</td>
</tr>
<tr>
<td style="text-align:left"><code>flat</code></td>
<td style="text-align:left">数组元素迭代器</td>
</tr>
<tr>
<td style="text-align:left"><code>flatten</code></td>
<td style="text-align:left">返回一份数组拷贝，对拷贝所做的修改不会影响原始数组</td>
</tr>
<tr>
<td style="text-align:left"><code>ravel</code></td>
<td style="text-align:left">返回展开数组</td>
</tr>
</tbody>
</table>
<h3 id="numpy-reshape">numpy.reshape</h3>
<p>numpy.reshape 函数可以在不改变数据的条件下修改形状，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.reshape(arr, newshape, order=<span class="string">&#x27;C&#x27;</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>arr</code>：要修改形状的数组</li>
<li><code>newshape</code>：整数或者整数数组，新的形状应当兼容原有形状</li>
<li>order：‘C’ – 按行，‘F’ – 按列，‘A’ – 原顺序，‘k’ – 元素在内存中的出现顺序。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">8</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原始数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">b = a.reshape(<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始数组：</span><br><span class="line">[0 1 2 3 4 5 6 7]</span><br><span class="line"></span><br><span class="line">修改后的数组：</span><br><span class="line">[[0 1]</span><br><span class="line"> [2 3]</span><br><span class="line"> [4 5]</span><br><span class="line"> [6 7]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-ndarray-flat">numpy.ndarray.flat</h3>
<p>numpy.ndarray.flat 是一个数组元素迭代器，实例如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">9</span>).reshape(<span class="number">3</span>,<span class="number">3</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原始数组：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span> (row)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#对数组中每个元素都进行处理，可以使用flat属性，该属性是一个数组元素迭代器：</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;迭代后的数组：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> a.flat:</span><br><span class="line">    <span class="built_in">print</span> (element)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始数组：</span><br><span class="line">[0 1 2]</span><br><span class="line">[3 4 5]</span><br><span class="line">[6 7 8]</span><br><span class="line">迭代后的数组：</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td></tr></table></figure>
<h3 id="numpy-ndarray-flatten">numpy.ndarray.flatten</h3>
<p>numpy.ndarray.flatten 返回一份数组拷贝，对拷贝所做的修改不会影响原始数组，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ndarray.flatten(order=<span class="string">&#x27;C&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>order：‘C’ – 按行，‘F’ – 按列，‘A’ – 原顺序，‘K’ – 元素在内存中的出现顺序。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">8</span>).reshape(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 默认按行</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;展开的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a.flatten())</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;以 F 风格顺序展开的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a.flatten(order = <span class="string">&#x27;F&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[[0 1 2 3]</span><br><span class="line"> [4 5 6 7]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">展开的数组：</span><br><span class="line">[0 1 2 3 4 5 6 7]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以 F 风格顺序展开的数组：</span><br><span class="line">[0 4 1 5 2 6 3 7]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-ravel">numpy.ravel</h3>
<p>numpy.ravel() 展平的数组元素，顺序通常是&quot;C风格&quot;，返回的是数组视图（view，有点类似 C/C++引用reference的意味），修改会影响原始数组。</p>
<p>该函数接收两个参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.ravel(a, order=<span class="string">&#x27;C&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>order：‘C’ – 按行，‘F’ – 按列，‘A’ – 原顺序，‘K’ – 元素在内存中的出现顺序。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">8</span>).reshape(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 ravel 函数之后：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a.ravel())</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;以 F 风格顺序调用 ravel 函数之后：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a.ravel(order = <span class="string">&#x27;F&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[[0 1 2 3]</span><br><span class="line"> [4 5 6 7]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 ravel 函数之后：</span><br><span class="line">[0 1 2 3 4 5 6 7]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以 F 风格顺序调用 ravel 函数之后：</span><br><span class="line">[0 4 1 5 2 6 3 7]</span><br></pre></td></tr></table></figure>
<h2 id="4-2-翻转数组">4.2 翻转数组</h2>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>transpose</code></td>
<td style="text-align:left">对换数组的维度</td>
</tr>
<tr>
<td style="text-align:left"><code>ndarray.T</code></td>
<td style="text-align:left">和 <code>self.transpose()</code> 相同</td>
</tr>
<tr>
<td style="text-align:left"><code>rollaxis</code></td>
<td style="text-align:left">向后滚动指定的轴</td>
</tr>
<tr>
<td style="text-align:left"><code>swapaxes</code></td>
<td style="text-align:left">对换数组的两个轴</td>
</tr>
</tbody>
</table>
<h3 id="numpy-transpose">numpy.transpose</h3>
<p>numpy.transpose 函数用于对换数组的维度，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.transpose(arr, axes)</span><br></pre></td></tr></table></figure>
<p>参数说明:</p>
<ul>
<li><code>arr</code>：要操作的数组</li>
<li><code>axes</code>：整数列表，对应维度，通常所有维度都会对换。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a )</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;对换数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.transpose(a))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">对换数组：</span><br><span class="line">[[ 0  4  8]</span><br><span class="line"> [ 1  5  9]</span><br><span class="line"> [ 2  6 10]</span><br><span class="line"> [ 3  7 11]]</span><br></pre></td></tr></table></figure>
<p>numpy.ndarray.T 类似 numpy.transpose：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;转置数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a.T)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">转置数组：</span><br><span class="line">[[ 0  4  8]</span><br><span class="line"> [ 1  5  9]</span><br><span class="line"> [ 2  6 10]</span><br><span class="line"> [ 3  7 11]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-rollaxis">numpy.rollaxis</h3>
<p>numpy.rollaxis 函数向后滚动特定的轴到一个特定位置，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.rollaxis(arr, axis, start)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>arr</code>：数组</li>
<li><code>axis</code>：要向后滚动的轴，其它轴的相对位置不会改变</li>
<li><code>start</code>：默认为零，表示完整的滚动。会滚动到特定位置。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建了三维的 ndarray</span></span><br><span class="line">a = np.arange(<span class="number">8</span>).reshape(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;获取数组中一个值：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(np.where(a==<span class="number">6</span>))   </span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>])  <span class="comment"># 为 6</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将轴 2 滚动到轴 0（宽度到深度）</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 rollaxis 函数：&#x27;</span>)</span><br><span class="line">b = np.rollaxis(a,<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="comment"># 查看元素 a[1,1,0]，即 6 的坐标，变成 [0, 1, 1]</span></span><br><span class="line"><span class="comment"># 最后一个 0 移动到最前面</span></span><br><span class="line"><span class="built_in">print</span>(np.where(b==<span class="number">6</span>))   </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将轴 2 滚动到轴 1：（宽度到高度）</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 rollaxis 函数：&#x27;</span>)</span><br><span class="line">c = np.rollaxis(a,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span> (c)</span><br><span class="line"><span class="comment"># 查看元素 a[1,1,0]，即 6 的坐标，变成 [1, 0, 1]</span></span><br><span class="line"><span class="comment"># 最后的 0 和 它前面的 1 对换位置</span></span><br><span class="line"><span class="built_in">print</span>(np.where(c==<span class="number">6</span>))   </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[[[0 1]</span><br><span class="line">  [2 3]]</span><br><span class="line"></span><br><span class="line"> [[4 5]</span><br><span class="line">  [6 7]]]</span><br><span class="line">获取数组中一个值：</span><br><span class="line">(array([1]), array([1]), array([0]))</span><br><span class="line">6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 rollaxis 函数：</span><br><span class="line">[[[0 2]</span><br><span class="line">  [4 6]]</span><br><span class="line"></span><br><span class="line"> [[1 3]</span><br><span class="line">  [5 7]]]</span><br><span class="line">(array([0]), array([1]), array([1]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 rollaxis 函数：</span><br><span class="line">[[[0 2]</span><br><span class="line">  [1 3]]</span><br><span class="line"></span><br><span class="line"> [[4 6]</span><br><span class="line">  [5 7]]]</span><br><span class="line">(array([1]), array([0]), array([1]))</span><br></pre></td></tr></table></figure>
<h3 id="numpy-swapaxes">numpy.swapaxes</h3>
<p>numpy.swapaxes 函数用于交换数组的两个轴，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.swapaxes(arr, axis1, axis2)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>arr</code>：输入的数组</li>
<li><code>axis1</code>：对应第一个轴的整数</li>
<li><code>axis2</code>：对应第二个轴的整数</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建了三维的 ndarray</span></span><br><span class="line">a = np.arange(<span class="number">8</span>).reshape(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 现在交换轴 0（深度方向）到轴 2（宽度方向）</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 swapaxes 函数后的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.swapaxes(a, <span class="number">2</span>, <span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[[[0 1]</span><br><span class="line">  [2 3]]</span><br><span class="line"></span><br><span class="line"> [[4 5]</span><br><span class="line">  [6 7]]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 swapaxes 函数后的数组：</span><br><span class="line">[[[0 4]</span><br><span class="line">  [2 6]]</span><br><span class="line"></span><br><span class="line"> [[1 5]</span><br><span class="line">  [3 7]]]</span><br></pre></td></tr></table></figure>
<h2 id="4-3-修改数组维度">4.3 修改数组维度</h2>
<table>
<thead>
<tr>
<th style="text-align:left">维度</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>broadcast</code></td>
<td style="text-align:left">产生模仿广播的对象</td>
</tr>
<tr>
<td style="text-align:left"><code>broadcast_to</code></td>
<td style="text-align:left">将数组广播到新形状</td>
</tr>
<tr>
<td style="text-align:left"><code>expand_dims</code></td>
<td style="text-align:left">扩展数组的形状</td>
</tr>
<tr>
<td style="text-align:left"><code>squeeze</code></td>
<td style="text-align:left">从数组的形状中删除一维条目</td>
</tr>
</tbody>
</table>
<h3 id="numpy-broadcast">numpy.broadcast</h3>
<p>numpy.broadcast 用于模仿广播的对象，它返回一个对象，该对象封装了将一个数组广播到另一个数组的结果。</p>
<p>该函数使用两个数组作为输入参数，如下实例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">x = np.array([[<span class="number">1</span>], [<span class="number">2</span>], [<span class="number">3</span>]])</span><br><span class="line">y = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])  </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 对 y 广播 x</span></span><br><span class="line">b = np.broadcast(x,y)  </span><br><span class="line"><span class="comment"># 它拥有 iterator 属性，基于自身组件的迭代器元组</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;对 y 广播 x：&#x27;</span>)</span><br><span class="line">r,c = b.iters</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Python3.x 为 next(context) ，Python2.x 为 context.next()</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">next</span>(r), <span class="built_in">next</span>(c))</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">next</span>(r), <span class="built_in">next</span>(c))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># shape 属性返回广播对象的形状</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;广播对象的形状：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b.shape)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 手动使用 broadcast 将 x 与 y 相加</span></span><br><span class="line">b = np.broadcast(x,y)</span><br><span class="line">c = np.empty(b.shape)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;手动使用 broadcast 将 x 与 y 相加：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (c.shape)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">c.flat = [u + v <span class="keyword">for</span> (u,v) <span class="keyword">in</span> b]</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 flat 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (c)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 获得了和 NumPy 内建的广播支持相同的结果</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;x 与 y 的和：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x + y)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对 y 广播 x：</span><br><span class="line">1 4</span><br><span class="line">1 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">广播对象的形状：</span><br><span class="line">(3, 3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">手动使用 broadcast 将 x 与 y 相加：</span><br><span class="line">(3, 3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 flat 函数：</span><br><span class="line">[[5. 6. 7.]</span><br><span class="line"> [6. 7. 8.]</span><br><span class="line"> [7. 8. 9.]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x 与 y 的和：</span><br><span class="line">[[5 6 7]</span><br><span class="line"> [6 7 8]</span><br><span class="line"> [7 8 9]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-broadcast-to">numpy.broadcast_to</h3>
<p>numpy.broadcast_to 函数将数组广播到新形状。它在原始数组上返回只读视图。 它通常不连续。 如果新形状不符合 NumPy 的广播规则，该函数可能会抛出ValueError。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.broadcast_to(array, shape, subok)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">4</span>).reshape(<span class="number">1</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 broadcast_to 函数之后：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.broadcast_to(a,(<span class="number">4</span>,<span class="number">4</span>)))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[[0 1 2 3]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 broadcast_to 函数之后：</span><br><span class="line">[[0 1 2 3]</span><br><span class="line"> [0 1 2 3]</span><br><span class="line"> [0 1 2 3]</span><br><span class="line"> [0 1 2 3]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-expand-dims">numpy.expand_dims</h3>
<p>numpy.expand_dims 函数通过在指定位置插入新的轴来扩展数组形状，函数格式如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.expand_dims(arr, axis)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>arr</code>：输入数组</li>
<li><code>axis</code>：新轴插入的位置</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">x = np.array(([<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]))</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 x：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">y = np.expand_dims(x, axis = <span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 y：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (y)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 x 和 y 的形状：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x.shape, y.shape)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 在位置 1 插入轴</span></span><br><span class="line">y = np.expand_dims(x, axis = <span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;在位置 1 插入轴之后的数组 y：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (y)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;x.ndim 和 y.ndim：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x.ndim,y.ndim)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;x.shape 和 y.shape：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x.shape, y.shape)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数组 x：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数组 y：</span><br><span class="line">[[[1 2]</span><br><span class="line">  [3 4]]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数组 x 和 y 的形状：</span><br><span class="line">(2, 2) (1, 2, 2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在位置 1 插入轴之后的数组 y：</span><br><span class="line">[[[1 2]]</span><br><span class="line"></span><br><span class="line"> [[3 4]]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x.ndim 和 y.ndim：</span><br><span class="line">2 3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x.shape 和 y.shape：</span><br><span class="line">(2, 2) (2, 1, 2)</span><br></pre></td></tr></table></figure>
<h3 id="numpy-squeeze">numpy.squeeze</h3>
<p>numpy.squeeze 函数从给定数组的形状中删除一维的条目，函数格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.squeeze(arr, axis)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>arr</code>：输入数组</li>
<li><code>axis</code>：整数或整数元组，用于选择形状中一维条目的子集</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">x = np.arange(<span class="number">9</span>).reshape(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 x：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">y = np.squeeze(x)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 y：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (y)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 x 和 y 的形状：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x.shape, y.shape)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数组 x：</span><br><span class="line">[[[0 1 2]</span><br><span class="line">  [3 4 5]</span><br><span class="line">  [6 7 8]]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数组 y：</span><br><span class="line">[[0 1 2]</span><br><span class="line"> [3 4 5]</span><br><span class="line"> [6 7 8]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数组 x 和 y 的形状：</span><br><span class="line">(1, 3, 3) (3, 3)</span><br></pre></td></tr></table></figure>
<h2 id="4-4-连接数组">4.4 连接数组</h2>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>concatenate</code></td>
<td style="text-align:left">连接沿现有轴的数组序列</td>
</tr>
<tr>
<td style="text-align:left"><code>stack</code></td>
<td style="text-align:left">沿着新的轴加入一系列数组。</td>
</tr>
<tr>
<td style="text-align:left"><code>hstack</code></td>
<td style="text-align:left">水平堆叠序列中的数组（列方向）</td>
</tr>
<tr>
<td style="text-align:left"><code>vstack</code></td>
<td style="text-align:left">竖直堆叠序列中的数组（行方向）</td>
</tr>
</tbody>
</table>
<h3 id="numpy-concatenate">numpy.concatenate</h3>
<p>numpy.concatenate 函数用于沿指定轴连接相同形状的两个或多个数组，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.concatenate((a1, a2, ...), axis)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>a1, a2, ...</code>：相同类型的数组</li>
<li><code>axis</code>：沿着它连接数组的轴，默认为 0</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">b = np.array([[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 两个数组的维度相同</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 连接两个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.concatenate((a,b)))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 连接两个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.concatenate((a,b),axis = <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组：</span><br><span class="line">[[5 6]</span><br><span class="line"> [7 8]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 0 连接两个数组：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]</span><br><span class="line"> [5 6]</span><br><span class="line"> [7 8]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 连接两个数组：</span><br><span class="line">[[1 2 5 6]</span><br><span class="line"> [3 4 7 8]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-stack">numpy.stack</h3>
<p>numpy.stack 函数用于沿新轴连接数组序列，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.stack(arrays, axis)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>arrays</code>相同形状的数组序列</li>
<li><code>axis</code>：返回数组中的轴，输入数组沿着它来堆叠</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">b = np.array([[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 堆叠两个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.stack((a,b),<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 堆叠两个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.stack((a,b),<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组：</span><br><span class="line">[[5 6]</span><br><span class="line"> [7 8]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 0 堆叠两个数组：</span><br><span class="line">[[[1 2]</span><br><span class="line">  [3 4]]</span><br><span class="line"></span><br><span class="line"> [[5 6]</span><br><span class="line">  [7 8]]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 堆叠两个数组：</span><br><span class="line">[[[1 2]</span><br><span class="line">  [5 6]]</span><br><span class="line"></span><br><span class="line"> [[3 4]</span><br><span class="line">  [7 8]]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-hstack">numpy.hstack</h3>
<p>numpy.hstack 是 numpy.stack 函数的变体，它通过水平堆叠来生成数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">b = np.array([[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;水平堆叠：&#x27;</span>)</span><br><span class="line">c = np.hstack((a,b))</span><br><span class="line"><span class="built_in">print</span> (c)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组：</span><br><span class="line">[[5 6]</span><br><span class="line"> [7 8]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">水平堆叠：</span><br><span class="line">[[1 2 5 6]</span><br><span class="line"> [3 4 7 8]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-vstack">numpy.vstack</h3>
<p>numpy.vstack 是 numpy.stack 函数的变体，它通过垂直堆叠来生成数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">b = np.array([[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;竖直堆叠：&#x27;</span>)</span><br><span class="line">c = np.vstack((a,b))</span><br><span class="line"><span class="built_in">print</span> (c)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组：</span><br><span class="line">[[5 6]</span><br><span class="line"> [7 8]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">竖直堆叠：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]</span><br><span class="line"> [5 6]</span><br><span class="line"> [7 8]]</span><br></pre></td></tr></table></figure>
<h2 id="4-5-分割数组">4.5 分割数组</h2>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">数组及操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>split</code></td>
<td style="text-align:left">将一个数组分割为多个子数组</td>
</tr>
<tr>
<td style="text-align:left"><code>hsplit</code></td>
<td style="text-align:left">将一个数组水平分割为多个子数组（按列）</td>
</tr>
<tr>
<td style="text-align:left"><code>vsplit</code></td>
<td style="text-align:left">将一个数组垂直分割为多个子数组（按行）</td>
</tr>
</tbody>
</table>
<h3 id="numpy-split">numpy.split</h3>
<p>numpy.split 函数沿特定的轴将数组分割为子数组，格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.split(ary, indices_or_sections, axis)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>ary</code>：被分割的数组</li>
<li><code>indices_or_sections</code>：如果是一个整数，就用该数平均切分，如果是一个数组，为沿轴切分的位置（左开右闭）</li>
<li><code>axis</code>：设置沿着哪个方向进行切分，默认为 0，横向切分，即水平方向。为 1 时，纵向切分，即竖直方向。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">9</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;将数组分为三个大小相等的子数组：&#x27;</span>)</span><br><span class="line">b = np.split(a,<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;将数组在一维数组中表明的位置分割：&#x27;</span>)</span><br><span class="line">b = np.split(a,[<span class="number">4</span>,<span class="number">7</span>])</span><br><span class="line"><span class="built_in">print</span> (b)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[0 1 2 3 4 5 6 7 8]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">将数组分为三个大小相等的子数组：</span><br><span class="line">[array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8])]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">将数组在一维数组中表明的位置分割：</span><br><span class="line">[array([0, 1, 2, 3]), array([4, 5, 6]), array([7, 8])]</span><br></pre></td></tr></table></figure>
<p>axis 为 0 时在水平方向分割，axis 为 1 时在垂直方向分割：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">16</span>).reshape(<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;默认分割（0轴）：&#x27;</span>)</span><br><span class="line">b = np.split(a,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;沿水平方向分割：&#x27;</span>)</span><br><span class="line">c = np.split(a,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;沿水平方向分割：&#x27;</span>)</span><br><span class="line">d= np.hsplit(a,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]</span><br><span class="line"> [12 13 14 15]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">默认分割（0轴）：</span><br><span class="line">[array([[0, 1, 2, 3],</span><br><span class="line">       [4, 5, 6, 7]]), array([[ 8,  9, 10, 11],</span><br><span class="line">       [12, 13, 14, 15]])]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿水平方向分割：</span><br><span class="line">[array([[ 0,  1],</span><br><span class="line">       [ 4,  5],</span><br><span class="line">       [ 8,  9],</span><br><span class="line">       [12, 13]]), array([[ 2,  3],</span><br><span class="line">       [ 6,  7],</span><br><span class="line">       [10, 11],</span><br><span class="line">       [14, 15]])]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿水平方向分割：</span><br><span class="line">[array([[ 0,  1],</span><br><span class="line">       [ 4,  5],</span><br><span class="line">       [ 8,  9],</span><br><span class="line">       [12, 13]]), array([[ 2,  3],</span><br><span class="line">       [ 6,  7],</span><br><span class="line">       [10, 11],</span><br><span class="line">       [14, 15]])]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-hsplit">numpy.hsplit</h3>
<p>numpy.hsplit 函数用于水平分割数组，通过指定要返回的相同形状的数组数量来拆分原数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">harr = np.floor(<span class="number">10</span> * np.random.random((<span class="number">2</span>, <span class="number">6</span>)))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原array：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(harr)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;拆分后：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(np.hsplit(harr, <span class="number">3</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原array：</span><br><span class="line">[[4. 7. 6. 3. 2. 6.]</span><br><span class="line"> [6. 3. 6. 7. 9. 7.]]</span><br><span class="line">拆分后：</span><br><span class="line">[array([[4., 7.],</span><br><span class="line">       [6., 3.]]), array([[6., 3.],</span><br><span class="line">       [6., 7.]]), array([[2., 6.],</span><br><span class="line">       [9., 7.]])]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-vsplit">numpy.vsplit</h3>
<p>numpy.vsplit 沿着垂直轴分割，其分割方式与hsplit用法相同。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">16</span>).reshape(<span class="number">4</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;竖直分割：&#x27;</span>)</span><br><span class="line">b = np.vsplit(a,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]</span><br><span class="line"> [12 13 14 15]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">竖直分割：</span><br><span class="line">[array([[0, 1, 2, 3],</span><br><span class="line">       [4, 5, 6, 7]]), array([[ 8,  9, 10, 11],</span><br><span class="line">       [12, 13, 14, 15]])]</span><br></pre></td></tr></table></figure>
<h2 id="4-6-数组元素的添加与删除">4.6 数组元素的添加与删除</h2>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">元素及描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>resize</code></td>
<td style="text-align:left">返回指定形状的新数组</td>
</tr>
<tr>
<td style="text-align:left"><code>append</code></td>
<td style="text-align:left">将值添加到数组末尾</td>
</tr>
<tr>
<td style="text-align:left"><code>insert</code></td>
<td style="text-align:left">沿指定轴将值插入到指定下标之前</td>
</tr>
<tr>
<td style="text-align:left"><code>delete</code></td>
<td style="text-align:left">删掉某个轴的子数组，并返回删除后的新数组</td>
</tr>
<tr>
<td style="text-align:left"><code>unique</code></td>
<td style="text-align:left">查找数组内的唯一元素</td>
</tr>
</tbody>
</table>
<h3 id="numpy-resize">numpy.resize</h3>
<p>numpy.resize 函数返回指定大小的新数组。</p>
<p>如果新数组大小大于原始大小，则包含原始数组中的元素的副本。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.resize(arr, shape)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>arr</code>：要修改大小的数组</li>
<li><code>shape</code>：返回数组的新形状</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组的形状：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a.shape)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">b = np.resize(a, (<span class="number">3</span>,<span class="number">2</span>))</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组的形状：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b.shape)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 要注意 a 的第一行在 b 中重复出现，因为尺寸变大了</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改第二个数组的大小：&#x27;</span>)</span><br><span class="line">b = np.resize(a,(<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span> (b)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[1 2 3]</span><br><span class="line"> [4 5 6]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第一个数组的形状：</span><br><span class="line">(2, 3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]</span><br><span class="line"> [5 6]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组的形状：</span><br><span class="line">(3, 2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改第二个数组的大小：</span><br><span class="line">[[1 2 3]</span><br><span class="line"> [4 5 6]</span><br><span class="line"> [1 2 3]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-append">numpy.append</h3>
<p>numpy.append 函数在数组的末尾添加值。 追加操作会分配整个数组，并把原来的数组复制到新数组中。 此外，输入数组的维度必须匹配否则将生成ValueError。</p>
<p>append 函数返回的始终是一个一维数组。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.append(arr, values, axis=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>arr</code>：输入数组</li>
<li><code>values</code>：要向<code>arr</code>添加的值，需要和<code>arr</code>形状相同（除了要添加的轴）</li>
<li><code>axis</code>：默认为 None。当axis无定义时，是横向加成，返回总是为一维数组！当axis有定义的时候，分别为0和1的时候。当axis有定义的时候，分别为0和1的时候（列数要相同）。当axis为1时，数组是加在右边（行数要相同）。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;向数组添加元素：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.append(a, [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 添加元素：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.append(a, [[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]],axis = <span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 添加元素：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.append(a, [[<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]],axis = <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[1 2 3]</span><br><span class="line"> [4 5 6]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">向数组添加元素：</span><br><span class="line">[1 2 3 4 5 6 7 8 9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 0 添加元素：</span><br><span class="line">[[1 2 3]</span><br><span class="line"> [4 5 6]</span><br><span class="line"> [7 8 9]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 添加元素：</span><br><span class="line">[[1 2 3 5 5 5]</span><br><span class="line"> [4 5 6 7 8 9]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-insert">numpy.insert</h3>
<p>numpy.insert 函数在给定索引之前，沿给定轴在输入数组中插入值。</p>
<p>如果值的类型转换为要插入，则它与输入数组不同。 插入没有原地的，函数会返回一个新数组。 此外，如果未提供轴，则输入数组会被展开。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.insert(arr, obj, values, axis)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>arr</code>：输入数组</li>
<li><code>obj</code>：在其之前插入值的索引</li>
<li><code>values</code>：要插入的值</li>
<li><code>axis</code>：沿着它插入的轴，如果未提供，则输入数组会被展开</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;未传递 Axis 参数。 在删除之前输入数组会被展开。&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.insert(a,<span class="number">3</span>,[<span class="number">11</span>,<span class="number">12</span>]))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;传递了 Axis 参数。 会广播值数组来配输入数组。&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 广播：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.insert(a,<span class="number">1</span>,[<span class="number">11</span>],axis = <span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 广播：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.insert(a,<span class="number">1</span>,<span class="number">11</span>,axis = <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]</span><br><span class="line"> [5 6]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">未传递 Axis 参数。 在删除之前输入数组会被展开。</span><br><span class="line">[ 1  2  3 11 12  4  5  6]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">传递了 Axis 参数。 会广播值数组来配输入数组。</span><br><span class="line">沿轴 0 广播：</span><br><span class="line">[[ 1  2]</span><br><span class="line"> [11 11]</span><br><span class="line"> [ 3  4]</span><br><span class="line"> [ 5  6]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 广播：</span><br><span class="line">[[ 1 11  2]</span><br><span class="line"> [ 3 11  4]</span><br><span class="line"> [ 5 11  6]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-delete">numpy.delete</h3>
<p>numpy.delete 函数返回从输入数组中删除指定子数组的新数组。 与 insert() 函数的情况一样，如果未提供轴参数，则输入数组将展开。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Numpy.delete(arr, obj, axis)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>arr</code>：输入数组</li>
<li><code>obj</code>：可以被切片，整数或者整数数组，表明要从输入数组删除的子数组</li>
<li><code>axis</code>：沿着它删除给定子数组的轴，如果未提供，则输入数组会被展开</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;未传递 Axis 参数。 在插入之前输入数组会被展开。&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.delete(a,<span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;删除第二列：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.delete(a,<span class="number">1</span>,axis = <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;包含从数组中删除的替代值的切片：&#x27;</span>)</span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span> (np.delete(a, np.s_[::<span class="number">2</span>]))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">未传递 Axis 参数。 在插入之前输入数组会被展开。</span><br><span class="line">[ 0  1  2  3  4  6  7  8  9 10 11]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除第二列：</span><br><span class="line">[[ 0  2  3]</span><br><span class="line"> [ 4  6  7]</span><br><span class="line"> [ 8 10 11]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">包含从数组中删除的替代值的切片：</span><br><span class="line">[ 2  4  6  8 10]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-unique">numpy.unique</h3>
<p>numpy.unique 函数用于去除数组中的重复元素。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.unique(arr, return_index, return_inverse, return_counts)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>arr</code>：输入数组，如果不是一维数组则会展开</li>
<li><code>return_index</code>：如果为<code>true</code>，返回新列表元素在旧列表中的位置（下标），并以列表形式储</li>
<li><code>return_inverse</code>：如果为<code>true</code>，返回旧列表元素在新列表中的位置（下标），并以列表形式储</li>
<li><code>return_counts</code>：如果为<code>true</code>，返回去重数组中的元素在原数组中的出现次数</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">5</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">9</span>])</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组的去重值：&#x27;</span>)</span><br><span class="line">u = np.unique(a)</span><br><span class="line"><span class="built_in">print</span> (u)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;去重数组的索引数组：&#x27;</span>)</span><br><span class="line">u,indices = np.unique(a, return_index = <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span> (indices)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们可以看到每个和原数组下标对应的数值：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;去重数组的下标：&#x27;</span>)</span><br><span class="line">u,indices = np.unique(a,return_inverse = <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span> (u)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;下标为：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (indices)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;使用下标重构原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (u[indices])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;返回去重元素的重复数量：&#x27;</span>)</span><br><span class="line">u,indices = np.unique(a,return_counts = <span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span> (u)</span><br><span class="line"><span class="built_in">print</span> (indices)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[5 2 6 2 7 5 6 8 2 9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第一个数组的去重值：</span><br><span class="line">[2 5 6 7 8 9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">去重数组的索引数组：</span><br><span class="line">[1 0 2 4 7 9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我们可以看到每个和原数组下标对应的数值：</span><br><span class="line">[5 2 6 2 7 5 6 8 2 9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">去重数组的下标：</span><br><span class="line">[2 5 6 7 8 9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">下标为：</span><br><span class="line">[1 0 2 0 3 1 2 4 0 5]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用下标重构原数组：</span><br><span class="line">[5 2 6 2 7 5 6 8 2 9]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">返回去重元素的重复数量：</span><br><span class="line">[2 5 6 7 8 9]</span><br><span class="line">[3 2 2 1 1 1]</span><br></pre></td></tr></table></figure>
<h1>五、位运算</h1>
<p>位运算是一种在二进制数字的位级别上进行操作的一类运算，它们直接操作二进制数字的各个位，而不考虑数字的整体值。</p>
<p>位运算在计算机科学中广泛应用于优化和处理底层数据。</p>
<h2 id="5-1-位运算函数">5.1 位运算函数</h2>
<p>NumPy <strong>“bitwise_”</strong> 开头的函数是位运算函数。</p>
<p>NumPy 位运算包括以下几个函数：</p>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>bitwise_and</code></td>
<td style="text-align:left">按位与，对数组元素执行位与操作</td>
</tr>
<tr>
<td style="text-align:left"><code>bitwise_or</code></td>
<td style="text-align:left">按位或，对数组元素执行位或操作</td>
</tr>
<tr>
<td style="text-align:left"><code>bitwise_xor</code></td>
<td style="text-align:left">按位异或</td>
</tr>
<tr>
<td style="text-align:left"><code>bitwise_not</code></td>
<td style="text-align:left">按位取反</td>
</tr>
<tr>
<td style="text-align:left"><code>invert</code></td>
<td style="text-align:left">按位取反</td>
</tr>
<tr>
<td style="text-align:left"><code>left_shift</code></td>
<td style="text-align:left">左移位运算，向左移动二进制表示的位</td>
</tr>
<tr>
<td style="text-align:left"><code>right_shift</code></td>
<td style="text-align:left">右移位运算，向右移动二进制表示的位</td>
</tr>
</tbody>
</table>
<h3 id="bitwise">bitwise_</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">arr1 = np.array([<span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">True</span>], dtype=<span class="built_in">bool</span>)</span><br><span class="line">arr2 = np.array([<span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">False</span>], dtype=<span class="built_in">bool</span>)</span><br><span class="line"></span><br><span class="line">result_and = np.bitwise_and(arr1, arr2)</span><br><span class="line">result_or = np.bitwise_or(arr1, arr2)</span><br><span class="line">result_xor = np.bitwise_xor(arr1, arr2)</span><br><span class="line">result_not = np.bitwise_not(arr1)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;AND:&quot;</span>, result_and)  <span class="comment"># [False, False, False]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;OR:&quot;</span>, result_or)    <span class="comment"># [True, True, True]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;XOR:&quot;</span>, result_xor)  <span class="comment"># [True, True, True]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;NOT:&quot;</span>, result_not)  <span class="comment"># [False, True, False]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按位取反</span></span><br><span class="line">arr_invert = np.invert(np.array([<span class="number">1</span>, <span class="number">2</span>], dtype=np.int8))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Invert:&quot;</span>, arr_invert)  <span class="comment"># [-2, -3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 左移位运算</span></span><br><span class="line">arr_left_shift = np.left_shift(<span class="number">5</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Left Shift:&quot;</span>, arr_left_shift)  <span class="comment"># 20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 右移位运算</span></span><br><span class="line">arr_right_shift = np.right_shift(<span class="number">10</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Right Shift:&quot;</span>, arr_right_shift)  <span class="comment"># 5</span></span><br></pre></td></tr></table></figure>
<p>也可以使用 <strong>“&amp;”、 “~”、 “|” 和 “^”</strong> 等操作符进行计算：</p>
<ol>
<li>
<p><strong>与运算（&amp;）：</strong> 对应位上的两个数字都为1时，结果为1；否则，结果为0。</p>
<p>例如：1010 &amp; 1100 = 1000</p>
</li>
<li>
<p><strong>或运算（|）：</strong> 对应位上的两个数字有一个为1时，结果为1；否则，结果为0。</p>
<p>例如：1010 | 1100 = 1110</p>
</li>
<li>
<p><strong>异或运算（^）：</strong> 对应位上的两个数字相异时，结果为1；相同时，结果为0。</p>
<p>例如：1010 ^ 1100 = 0110</p>
</li>
<li>
<p><strong>取反运算（~）：</strong> 对数字的每个位取反，即0变为1，1变为0。</p>
<p>例如：~1010 = 0101</p>
</li>
<li>
<p><strong>左移运算（&lt;&lt;）：</strong> 将数字的所有位向左移动指定的位数，右侧用0填充。</p>
<p>例如：1010 &lt;&lt; 2 = 101000</p>
</li>
<li>
<p><strong>右移运算（&gt;&gt;）：</strong> 将数字的所有位向右移动指定的位数，左侧根据符号位或补零。</p>
<p>例如：1010 &gt;&gt; 2 = 0010</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;13 和 17 的二进制形式：&#x27;</span>)</span><br><span class="line">a,b = <span class="number">13</span>,<span class="number">17</span></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">bin</span>(a), <span class="built_in">bin</span>(b))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;13 和 17 的位与：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.bitwise_and(<span class="number">13</span>, <span class="number">17</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13 和 17 的二进制形式：</span><br><span class="line">0b1101 0b10001</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">13 和 17 的位与：</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a,b = <span class="number">13</span>,<span class="number">17</span> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;13 和 17 的二进制形式：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">bin</span>(a), <span class="built_in">bin</span>(b))</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;13 和 17 的位或：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.bitwise_or(<span class="number">13</span>, <span class="number">17</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13 和 17 的二进制形式：</span><br><span class="line">0b1101 0b10001</span><br><span class="line">13 和 17 的位或：</span><br><span class="line">29</span><br></pre></td></tr></table></figure>
<h3 id="invert">invert</h3>
<p>invert() 函数对数组中整数进行位取反运算，即 0 变成 1，1 变成 0。</p>
<p>对于有符号整数，取该二进制数的补码，然后 +1。二进制数，最高位为0表示正数，最高位为 1 表示负数。</p>
<p>看看 ~1 的计算步骤：</p>
<ul>
<li>将**<code>1</code>**(这里叫：原码)转二进制 ＝ <strong><code>00000001</code></strong></li>
<li>按位取反 ＝ <strong><code>11111110</code></strong></li>
<li>发现符号位(即最高位)为**<code>1</code>**(表示负数)，将除符号位之外的其他数字取反 ＝ <strong><code>10000001</code></strong></li>
<li>末位加1取其补码 ＝ <strong><code>10000010</code></strong></li>
<li>转换回十进制 ＝ <strong><code>-2</code></strong></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">表达式</th>
<th style="text-align:left">二进制值（2 的补数）</th>
<th style="text-align:left">十进制值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">00000000 00000000 00000000 00000101</td>
<td style="text-align:left">5</td>
</tr>
<tr>
<td style="text-align:left">~5</td>
<td style="text-align:left">11111111 11111111 11111111 11111010</td>
<td style="text-align:left">-6</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;13 的位反转，其中 ndarray 的 dtype 是 uint8：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.invert(np.array([<span class="number">13</span>], dtype = np.uint8)))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 比较 13 和 242 的二进制表示，我们发现了位的反转</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;13 的二进制表示：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.binary_repr(<span class="number">13</span>, width = <span class="number">8</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;242 的二进制表示：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.binary_repr(<span class="number">242</span>, width = <span class="number">8</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13 的位反转，其中 ndarray 的 dtype 是 uint8：</span><br><span class="line">[242]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">13 的二进制表示：</span><br><span class="line">00001101</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">242 的二进制表示：</span><br><span class="line">11110010</span><br></pre></td></tr></table></figure>
<h3 id="left-shift">left_shift</h3>
<p>left_shift() 函数将数组元素的二进制形式向左移动到指定位置，右侧附加相等数量的 0。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;将 10 左移两位：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.left_shift(<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;10 的二进制表示：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.binary_repr(<span class="number">10</span>, width = <span class="number">8</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;40 的二进制表示：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.binary_repr(<span class="number">40</span>, width = <span class="number">8</span>))</span><br><span class="line"><span class="comment">#  &#x27;00001010&#x27; 中的两位移动到了左边，并在右边添加了两个 0。</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将 10 左移两位：</span><br><span class="line">40</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">10 的二进制表示：</span><br><span class="line">00001010</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">40 的二进制表示：</span><br><span class="line">00101000</span><br></pre></td></tr></table></figure>
<h3 id="right-shift">right_shift</h3>
<p>right_shift() 函数将数组元素的二进制形式向右移动到指定位置，左侧附加相等数量的 0。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;将 40 右移两位：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.right_shift(<span class="number">40</span>,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;40 的二进制表示：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.binary_repr(<span class="number">40</span>, width = <span class="number">8</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;10 的二进制表示：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.binary_repr(<span class="number">10</span>, width = <span class="number">8</span>))</span><br><span class="line"><span class="comment">#  &#x27;00001010&#x27; 中的两位移动到了右边，并在左边添加了两个 0。</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将 40 右移两位：</span><br><span class="line">10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">40 的二进制表示：</span><br><span class="line">00101000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">10 的二进制表示：</span><br><span class="line">00001010</span><br></pre></td></tr></table></figure>
<h1>六、更多函数</h1>
<h2 id="6-1-字符串函数">6.1 字符串函数</h2>
<p>以下函数用于对 dtype 为 numpy.string_ 或 numpy.unicode_ 的数组执行向量化字符串操作。 它们基于 Python 内置库中的标准字符串函数。</p>
<p>这些函数在字符数组类（numpy.char）中定义。</p>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>add()</code></td>
<td style="text-align:left">对两个数组的逐个字符串元素进行连接</td>
</tr>
<tr>
<td style="text-align:left">multiply()</td>
<td style="text-align:left">返回按元素多重连接后的字符串</td>
</tr>
<tr>
<td style="text-align:left"><code>center()</code></td>
<td style="text-align:left">居中字符串</td>
</tr>
<tr>
<td style="text-align:left"><code>capitalize()</code></td>
<td style="text-align:left">将字符串第一个字母转换为大写</td>
</tr>
<tr>
<td style="text-align:left"><code>title()</code></td>
<td style="text-align:left">将字符串的每个单词的第一个字母转换为大写</td>
</tr>
<tr>
<td style="text-align:left"><code>lower()</code></td>
<td style="text-align:left">数组元素转换为小写</td>
</tr>
<tr>
<td style="text-align:left"><code>upper()</code></td>
<td style="text-align:left">数组元素转换为大写</td>
</tr>
<tr>
<td style="text-align:left"><code>split()</code></td>
<td style="text-align:left">指定分隔符对字符串进行分割，并返回数组列表</td>
</tr>
<tr>
<td style="text-align:left"><code>splitlines()</code></td>
<td style="text-align:left">返回元素中的行列表，以换行符分割</td>
</tr>
<tr>
<td style="text-align:left"><code>strip()</code></td>
<td style="text-align:left">移除元素开头或者结尾处的特定字符</td>
</tr>
<tr>
<td style="text-align:left"><code>join()</code></td>
<td style="text-align:left">通过指定分隔符来连接数组中的元素</td>
</tr>
<tr>
<td style="text-align:left"><code>replace()</code></td>
<td style="text-align:left">使用新字符串替换字符串中的所有子字符串</td>
</tr>
<tr>
<td style="text-align:left"><code>decode()</code></td>
<td style="text-align:left">数组元素依次调用<code>str.decode</code></td>
</tr>
<tr>
<td style="text-align:left"><code>encode()</code></td>
<td style="text-align:left">数组元素依次调用<code>str.encode</code></td>
</tr>
</tbody>
</table>
<h3 id="numpy-char-add">numpy.char.add()</h3>
<p>numpy.char.add() 函数依次对两个数组的元素进行字符串连接。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;连接两个字符串：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.char.add([<span class="string">&#x27;hello&#x27;</span>],[<span class="string">&#x27; xyz&#x27;</span>]))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;连接示例：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.char.add([<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;hi&#x27;</span>],[<span class="string">&#x27; abc&#x27;</span>, <span class="string">&#x27; xyz&#x27;</span>]))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">连接两个字符串：</span><br><span class="line">[&#x27;hello xyz&#x27;]</span><br><span class="line"></span><br><span class="line">连接示例：</span><br><span class="line">[&#x27;hello abc&#x27; &#x27;hi xyz&#x27;]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-multiply">numpy.char.multiply()</h3>
<p>numpy.char.multiply() 函数执行多重连接。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.char.multiply(<span class="string">&#x27;Runoob &#x27;</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Runoob Runoob Runoob </span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-center">numpy.char.center()</h3>
<p>numpy.char.center() 函数用于将字符串居中，并使用指定字符在左侧和右侧进行填充。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># np.char.center(str , width,fillchar) ：</span></span><br><span class="line"><span class="comment"># str: 字符串，width: 长度，fillchar: 填充字符</span></span><br><span class="line"><span class="built_in">print</span> (np.char.center(<span class="string">&#x27;Runoob&#x27;</span>, <span class="number">20</span>,fillchar = <span class="string">&#x27;*&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*******Runoob*******</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-capitalize">numpy.char.capitalize()</h3>
<p>numpy.char.capitalize() 函数将字符串的第一个字母转换为大写：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.char.capitalize(<span class="string">&#x27;runoob&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Runoob</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-title">numpy.char.title()</h3>
<p>numpy.char.title() 函数将字符串的每个单词的第一个字母转换为大写：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.char.title(<span class="string">&#x27;i like runoob&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I Like Runoob</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-lower">numpy.char.lower()</h3>
<p>numpy.char.lower() 函数对数组的每个元素转换为小写。它对每个元素调用 str.lower。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment">#操作数组</span></span><br><span class="line"><span class="built_in">print</span> (np.char.lower([<span class="string">&#x27;RUNOOB&#x27;</span>,<span class="string">&#x27;GOOGLE&#x27;</span>]))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 操作字符串</span></span><br><span class="line"><span class="built_in">print</span> (np.char.lower(<span class="string">&#x27;RUNOOB&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;runoob&#x27; &#x27;google&#x27;]</span><br><span class="line">runoob</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-upper">numpy.char.upper()</h3>
<p>numpy.char.upper() 函数对数组的每个元素转换为大写。它对每个元素调用 str.upper。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment">#操作数组</span></span><br><span class="line"><span class="built_in">print</span> (np.char.upper([<span class="string">&#x27;runoob&#x27;</span>,<span class="string">&#x27;google&#x27;</span>]))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 操作字符串</span></span><br><span class="line"><span class="built_in">print</span> (np.char.upper(<span class="string">&#x27;runoob&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;RUNOOB&#x27; &#x27;GOOGLE&#x27;]</span><br><span class="line">RUNOOB</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-split">numpy.char.split()</h3>
<p>numpy.char.split() 通过指定分隔符对字符串进行分割，并返回数组。默认情况下，分隔符为空格。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 分隔符默认为空格</span></span><br><span class="line"><span class="built_in">print</span> (np.char.split (<span class="string">&#x27;i like runoob?&#x27;</span>))</span><br><span class="line"><span class="comment"># 分隔符为 .</span></span><br><span class="line"><span class="built_in">print</span> (np.char.split (<span class="string">&#x27;www.runoob.com&#x27;</span>, sep = <span class="string">&#x27;.&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;i&#x27;, &#x27;like&#x27;, &#x27;runoob?&#x27;]</span><br><span class="line">[&#x27;www&#x27;, &#x27;runoob&#x27;, &#x27;com&#x27;]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-split-2">numpy.char.split()</h3>
<p>numpy.char.split() 通过指定分隔符对字符串进行分割，并返回数组。默认情况下，分隔符为空格。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 换行符 \n</span></span><br><span class="line"><span class="built_in">print</span> (np.char.splitlines(<span class="string">&#x27;i\nlike runoob?&#x27;</span>)) </span><br><span class="line"><span class="built_in">print</span> (np.char.splitlines(<span class="string">&#x27;i\rlike runoob?&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;i&#x27;, &#x27;like runoob?&#x27;]</span><br><span class="line">[&#x27;i&#x27;, &#x27;like runoob?&#x27;]</span><br></pre></td></tr></table></figure>
<p><strong>\n</strong>，<strong>\r</strong>，<strong>\r\n</strong> 都可用作换行符。</p>
<h3 id="numpy-char-strip">numpy.char.strip()</h3>
<p>numpy.char.strip() 函数用于移除开头或结尾处的特定字符。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 移除字符串头尾的 a 字符</span></span><br><span class="line"><span class="built_in">print</span> (np.char.strip(<span class="string">&#x27;ashok arunooba&#x27;</span>,<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 移除数组元素头尾的 a 字符</span></span><br><span class="line"><span class="built_in">print</span> (np.char.strip([<span class="string">&#x27;arunooba&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;java&#x27;</span>],<span class="string">&#x27;a&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shok arunoob</span><br><span class="line">[&#x27;runoob&#x27; &#x27;dmin&#x27; &#x27;jav&#x27;]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-join">numpy.char.join()</h3>
<p>numpy.char.join() 函数通过指定分隔符来连接数组中的元素或字符串</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 操作字符串</span></span><br><span class="line"><span class="built_in">print</span> (np.char.join(<span class="string">&#x27;:&#x27;</span>,<span class="string">&#x27;runoob&#x27;</span>))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 指定多个分隔符操作数组元素</span></span><br><span class="line"><span class="built_in">print</span> (np.char.join([<span class="string">&#x27;:&#x27;</span>,<span class="string">&#x27;-&#x27;</span>],[<span class="string">&#x27;runoob&#x27;</span>,<span class="string">&#x27;google&#x27;</span>]))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r:u:n:o:o:b</span><br><span class="line">[&#x27;r:u:n:o:o:b&#x27; &#x27;g-o-o-g-l-e&#x27;]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-replace">numpy.char.replace()</h3>
<p>numpy.char.replace() 函数使用新字符串替换字符串中的所有子字符串。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.char.replace (<span class="string">&#x27;i like runoob&#x27;</span>, <span class="string">&#x27;oo&#x27;</span>, <span class="string">&#x27;cc&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">i like runccb</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-encode">numpy.char.encode()</h3>
<p>numpy.char.encode() 函数对数组中的每个元素调用 str.encode 函数。 默认编码是 utf-8，可以使用标准 Python 库中的编解码器。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.char.encode(<span class="string">&#x27;runoob&#x27;</span>, <span class="string">&#x27;cp500&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (a)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&#x27;\x99\xa4\x95\x96\x96\x82&#x27;</span><br></pre></td></tr></table></figure>
<h3 id="numpy-char-decode">numpy.char.decode()</h3>
<p>numpy.char.decode() 函数对编码的元素进行 str.decode() 解码。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.char.encode(<span class="string">&#x27;runoob&#x27;</span>, <span class="string">&#x27;cp500&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (np.char.decode(a,<span class="string">&#x27;cp500&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&#x27;\x99\xa4\x95\x96\x96\x82&#x27;</span><br><span class="line">runoob</span><br></pre></td></tr></table></figure>
<h2 id="6-2-数学函数">6.2 数学函数</h2>
<p>NumPy 包含大量的各种数学运算的函数，包括三角函数，算术运算的函数，复数处理函数等。</p>
<h3 id="三角函数">三角函数</h3>
<h4 id="sin-、cos-、tan">sin()、cos()、tan()</h4>
<p>NumPy 提供了标准的三角函数：sin()、cos()、tan()。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">0</span>,<span class="number">30</span>,<span class="number">45</span>,<span class="number">60</span>,<span class="number">90</span>])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;不同角度的正弦值：&#x27;</span>)</span><br><span class="line"><span class="comment"># 通过乘 pi/180 转化为弧度  </span></span><br><span class="line"><span class="built_in">print</span> (np.sin(a*np.pi/<span class="number">180</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组中角度的余弦值：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.cos(a*np.pi/<span class="number">180</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组中角度的正切值：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.tan(a*np.pi/<span class="number">180</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">不同角度的正弦值：</span><br><span class="line">[0.         0.5        0.70710678 0.8660254  1.        ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数组中角度的余弦值：</span><br><span class="line">[1.00000000e+00 8.66025404e-01 7.07106781e-01 5.00000000e-01</span><br><span class="line"> 6.12323400e-17]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数组中角度的正切值：</span><br><span class="line">[0.00000000e+00 5.77350269e-01 1.00000000e+00 1.73205081e+00</span><br><span class="line"> 1.63312394e+16]</span><br></pre></td></tr></table></figure>
<h4 id="arcsin-、arccos-、arctan">arcsin()、arccos()、arctan()</h4>
<p>arcsin，arccos，和 arctan 函数返回给定角度的 sin，cos 和 tan 的反三角函数。</p>
<p>这些函数的结果可以通过 numpy.degrees() 函数将弧度转换为角度。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">0</span>,<span class="number">30</span>,<span class="number">45</span>,<span class="number">60</span>,<span class="number">90</span>])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;含有正弦值的数组：&#x27;</span>)</span><br><span class="line">sin = np.sin(a*np.pi/<span class="number">180</span>)  </span><br><span class="line"><span class="built_in">print</span> (sin)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;计算角度的反正弦，返回值以弧度为单位：&#x27;</span>)</span><br><span class="line">inv = np.arcsin(sin)  </span><br><span class="line"><span class="built_in">print</span> (inv)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;通过转化为角度制来检查结果：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.degrees(inv))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;arccos 和 arctan 函数行为类似：&#x27;</span>)</span><br><span class="line">cos = np.cos(a*np.pi/<span class="number">180</span>)  </span><br><span class="line"><span class="built_in">print</span> (cos)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;反余弦：&#x27;</span>)</span><br><span class="line">inv = np.arccos(cos)  </span><br><span class="line"><span class="built_in">print</span> (inv)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;角度制单位：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.degrees(inv))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;tan 函数：&#x27;</span>)</span><br><span class="line">tan = np.tan(a*np.pi/<span class="number">180</span>)  </span><br><span class="line"><span class="built_in">print</span> (tan)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;反正切：&#x27;</span>)</span><br><span class="line">inv = np.arctan(tan)  </span><br><span class="line"><span class="built_in">print</span> (inv)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;角度制单位：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.degrees(inv))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">含有正弦值的数组：</span><br><span class="line">[0.         0.5        0.70710678 0.8660254  1.        ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">计算角度的反正弦，返回值以弧度为单位：</span><br><span class="line">[0.         0.52359878 0.78539816 1.04719755 1.57079633]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">通过转化为角度制来检查结果：</span><br><span class="line">[ 0. 30. 45. 60. 90.]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arccos 和 arctan 函数行为类似：</span><br><span class="line">[1.00000000e+00 8.66025404e-01 7.07106781e-01 5.00000000e-01</span><br><span class="line"> 6.12323400e-17]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">反余弦：</span><br><span class="line">[0.         0.52359878 0.78539816 1.04719755 1.57079633]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">角度制单位：</span><br><span class="line">[ 0. 30. 45. 60. 90.]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tan 函数：</span><br><span class="line">[0.00000000e+00 5.77350269e-01 1.00000000e+00 1.73205081e+00</span><br><span class="line"> 1.63312394e+16]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">反正切：</span><br><span class="line">[0.         0.52359878 0.78539816 1.04719755 1.57079633]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">角度制单位：</span><br><span class="line">[ 0. 30. 45. 60. 90.]</span><br></pre></td></tr></table></figure>
<h3 id="舍入函数">舍入函数</h3>
<h4 id="numpy-around">numpy.around()</h4>
<p>numpy.around() 函数返回指定数字的四舍五入值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.around(a,decimals)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>a: 数组</li>
<li>decimals: 舍入的小数位数。 默认值为0。 如果为负，整数将四舍五入到小数点左侧的位置</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">1.0</span>,<span class="number">5.55</span>,  <span class="number">123</span>,  <span class="number">0.567</span>,  <span class="number">25.532</span>])  </span><br><span class="line"><span class="built_in">print</span>  (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;舍入后：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.around(a))</span><br><span class="line"><span class="built_in">print</span> (np.around(a, decimals =  <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span> (np.around(a, decimals =  -<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[  1.      5.55  123.      0.567  25.532]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">舍入后：</span><br><span class="line">[  1.   6. 123.   1.  26.]</span><br><span class="line">[  1.    5.6 123.    0.6  25.5]</span><br><span class="line">[  0.  10. 120.   0.  30.]</span><br></pre></td></tr></table></figure>
<h4 id="numpy-floor">numpy.floor()</h4>
<p>numpy.floor() 返回小于或者等于指定表达式的最大整数，即向下取整。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([-<span class="number">1.7</span>,  <span class="number">1.5</span>,  -<span class="number">0.2</span>,  <span class="number">0.6</span>,  <span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;提供的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.floor(a))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">提供的数组：</span><br><span class="line">[-1.7  1.5 -0.2  0.6 10. ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改后的数组：</span><br><span class="line">[-2.  1. -1.  0. 10.]</span><br></pre></td></tr></table></figure>
<h4 id="numpy-ceil">numpy.ceil()</h4>
<p>numpy.ceil() 返回大于或者等于指定表达式的最小整数，即向上取整。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([-<span class="number">1.7</span>,  <span class="number">1.5</span>,  -<span class="number">0.2</span>,  <span class="number">0.6</span>,  <span class="number">10</span>])  </span><br><span class="line"><span class="built_in">print</span>  (<span class="string">&#x27;提供的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.ceil(a))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">提供的数组：</span><br><span class="line">[-1.7  1.5 -0.2  0.6 10. ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改后的数组：</span><br><span class="line">[-1.  2. -0.  1. 10.]</span><br></pre></td></tr></table></figure>
<h2 id="6-3-算术函数">6.3 算术函数</h2>
<h3 id="add-、subtract-、multiply-、divide">add()、subtract()、multiply()、divide()</h3>
<p>NumPy 算术函数包含简单的加减乘除: <strong>add()</strong>，<strong>subtract()</strong>，<strong>multiply()</strong> 和 <strong>divide()</strong>。</p>
<p>需要注意的是数组必须具有相同的形状或符合数组广播规则。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">9</span>, dtype = np.float_).reshape(<span class="number">3</span>,<span class="number">3</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组：&#x27;</span>)</span><br><span class="line">b = np.array([<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>])  </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;两个数组相加：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.add(a,b))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;两个数组相减：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.subtract(a,b))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;两个数组相乘：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.multiply(a,b))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;两个数组相除：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.divide(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[[0. 1. 2.]</span><br><span class="line"> [3. 4. 5.]</span><br><span class="line"> [6. 7. 8.]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组：</span><br><span class="line">[10 10 10]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">两个数组相加：</span><br><span class="line">[[10. 11. 12.]</span><br><span class="line"> [13. 14. 15.]</span><br><span class="line"> [16. 17. 18.]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">两个数组相减：</span><br><span class="line">[[-10.  -9.  -8.]</span><br><span class="line"> [ -7.  -6.  -5.]</span><br><span class="line"> [ -4.  -3.  -2.]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">两个数组相乘：</span><br><span class="line">[[ 0. 10. 20.]</span><br><span class="line"> [30. 40. 50.]</span><br><span class="line"> [60. 70. 80.]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">两个数组相除：</span><br><span class="line">[[0.  0.1 0.2]</span><br><span class="line"> [0.3 0.4 0.5]</span><br><span class="line"> [0.6 0.7 0.8]]</span><br></pre></td></tr></table></figure>
<p>此外 Numpy 也包含了其他重要的算术函数。</p>
<h3 id="numpy-reciprocal">numpy.reciprocal()</h3>
<p>numpy.reciprocal() 函数返回参数逐元素的倒数。如 <strong>1/4</strong> 倒数为 <strong>4/1</strong>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">0.25</span>,  <span class="number">1.33</span>,  <span class="number">1</span>,  <span class="number">100</span>])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 reciprocal 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.reciprocal(a))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[  0.25   1.33   1.   100.  ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 reciprocal 函数：</span><br><span class="line">[4.        0.7518797 1.        0.01     ]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-power">numpy.power()</h3>
<p>numpy.power() 函数将第一个输入数组中的元素作为底数，计算它与第二个输入数组中相应元素的幂。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">10</span>,<span class="number">100</span>,<span class="number">1000</span>])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是；&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 power 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.power(a,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组：&#x27;</span>)</span><br><span class="line">b = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])  </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;再次调用 power 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.power(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是；</span><br><span class="line">[  10  100 1000]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 power 函数：</span><br><span class="line">[    100   10000 1000000]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组：</span><br><span class="line">[1 2 3]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">再次调用 power 函数：</span><br><span class="line">[        10      10000 1000000000]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-mod">numpy.mod()</h3>
<p>numpy.mod() 计算输入数组中相应元素的相除后的余数。 函数 numpy.remainder() 也产生相同的结果。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]) </span><br><span class="line">b = np.array([<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第一个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;第二个数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 mod() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.mod(a,b))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 remainder() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.remainder(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个数组：</span><br><span class="line">[10 20 30]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二个数组：</span><br><span class="line">[3 5 7]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 mod() 函数：</span><br><span class="line">[1 0 2]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 remainder() 函数：</span><br><span class="line">[1 0 2]</span><br></pre></td></tr></table></figure>
<h2 id="6-3-统计函数">6.3 统计函数</h2>
<p>NumPy 提供了很多统计函数，用于从数组中查找最小元素，最大元素，百分位标准差和方差等。</p>
<h3 id="numpy-amin-和-numpy-amax">numpy.amin() 和 numpy.amax()</h3>
<p>numpy.amin() 用于计算数组中的元素沿指定轴的最小值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.amin(a, axis=<span class="literal">None</span>, out=<span class="literal">None</span>, keepdims=&lt;no value&gt;, initial=&lt;no value&gt;, where=&lt;no value&gt;)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>a</code>: 输入的数组，可以是一个NumPy数组或类似数组的对象。</li>
<li><code>axis</code>: 可选参数，用于指定在哪个轴上计算最小值。如果不提供此参数，则返回整个数组的最小值。可以是一个整数表示轴的索引，也可以是一个元组表示多个轴。</li>
<li><code>out</code>: 可选参数，用于指定结果的存储位置。</li>
<li><code>keepdims</code>: 可选参数，如果为True，将保持结果数组的维度数目与输入数组相同。如果为False（默认值），则会去除计算后维度为1的轴。</li>
<li><code>initial</code>: 可选参数，用于指定一个初始值，然后在数组的元素上计算最小值。</li>
<li><code>where</code>: 可选参数，一个布尔数组，用于指定仅考虑满足条件的元素。</li>
</ul>
<p>numpy.amax() 用于计算数组中的元素沿指定轴的最大值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.amax(a, axis=<span class="literal">None</span>, out=<span class="literal">None</span>, keepdims=&lt;no value&gt;, initial=&lt;no value&gt;, where=&lt;no value&gt;)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>a</code>: 输入的数组，可以是一个NumPy数组或类似数组的对象。</li>
<li><code>axis</code>: 可选参数，用于指定在哪个轴上计算最大值。如果不提供此参数，则返回整个数组的最大值。可以是一个整数表示轴的索引，也可以是一个元组表示多个轴。</li>
<li><code>out</code>: 可选参数，用于指定结果的存储位置。</li>
<li><code>keepdims</code>: 可选参数，如果为True，将保持结果数组的维度数目与输入数组相同。如果为False（默认值），则会去除计算后维度为1的轴。</li>
<li><code>initial</code>: 可选参数，用于指定一个初始值，然后在数组的元素上计算最大值。</li>
<li><code>where</code>: 可选参数，一个布尔数组，用于指定仅考虑满足条件的元素。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>],[<span class="number">8</span>,<span class="number">4</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 amin() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.amin(a,<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;再次调用 amin() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.amin(a,<span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 amax() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.amax(a))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;再次调用 amax() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.amax(a, axis =  <span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[3 7 5]</span><br><span class="line"> [8 4 3]</span><br><span class="line"> [2 4 9]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 amin() 函数：</span><br><span class="line">[3 3 2]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">再次调用 amin() 函数：</span><br><span class="line">[2 4 3]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 amax() 函数：</span><br><span class="line">9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">再次调用 amax() 函数：</span><br><span class="line">[8 7 9]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-ptp">numpy.ptp()</h3>
<p><strong>numpy.ptp()</strong> 函数计算数组中元素最大值与最小值的差（最大值 - 最小值）。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.ptp(a, axis=<span class="literal">None</span>, out=<span class="literal">None</span>, keepdims=&lt;no value&gt;, initial=&lt;no value&gt;, where=&lt;no value&gt;)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>a</code>: 输入的数组，可以是一个 NumPy 数组或类似数组的对象。</li>
<li><code>axis</code>: 可选参数，用于指定在哪个轴上计算峰-峰值。如果不提供此参数，则返回整个数组的峰-峰值。可以是一个整数表示轴的索引，也可以是一个元组表示多个轴。</li>
<li><code>out</code>: 可选参数，用于指定结果的存储位置。</li>
<li><code>keepdims</code>: 可选参数，如果为 True，将保持结果数组的维度数目与输入数组相同。如果为 False（默认值），则会去除计算后维度为1的轴。</li>
<li><code>initial</code>: 可选参数，用于指定一个初始值，然后在数组的元素上计算峰-峰值。</li>
<li><code>where</code>: 可选参数，一个布尔数组，用于指定仅考虑满足条件的元素。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>],[<span class="number">8</span>,<span class="number">4</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 ptp() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.ptp(a))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 调用 ptp() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.ptp(a, axis =  <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 调用 ptp() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.ptp(a, axis =  <span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[3 7 5]</span><br><span class="line"> [8 4 3]</span><br><span class="line"> [2 4 9]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 ptp() 函数：</span><br><span class="line">7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 调用 ptp() 函数：</span><br><span class="line">[4 5 7]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 0 调用 ptp() 函数：</span><br><span class="line">[6 3 6]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-percentile">numpy.percentile()</h3>
<p>百分位数是统计中使用的度量，表示小于这个值的观察值的百分比。 函数numpy.percentile()接受以下参数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.percentile(a, q, axis)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>a: 输入数组</li>
<li>q: 要计算的百分位数，在 0 ~ 100 之间</li>
<li>axis: 沿着它计算百分位数的轴</li>
</ul>
<blockquote>
<p><strong>首先明确百分位数：</strong></p>
<p>第 p 个百分位数是这样一个值，它使得至少有 p% 的数据项小于或等于这个值，且至少有 (100-p)% 的数据项大于或等于这个值。</p>
<p>举个例子：高等院校的入学考试成绩经常以百分位数的形式报告。比如，假设某个考生在入学考试中的语文部分的原始分数为 54 分。相对于参加同一考试的其他学生来说，他的成绩如何并不容易知道。但是如果原始分数54分恰好对应的是第70百分位数，我们就能知道大约70%的学生的考分比他低，而约30%的学生考分比他高。</p>
<p>这里的 p = 70。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">10</span>, <span class="number">7</span>, <span class="number">4</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 percentile() 函数：&#x27;</span>)</span><br><span class="line"><span class="comment"># 50% 的分位数，就是 a 里排序之后的中位数</span></span><br><span class="line"><span class="built_in">print</span> (np.percentile(a, <span class="number">50</span>)) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># axis 为 0，在纵列上求</span></span><br><span class="line"><span class="built_in">print</span> (np.percentile(a, <span class="number">50</span>, axis=<span class="number">0</span>)) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># axis 为 1，在横行上求</span></span><br><span class="line"><span class="built_in">print</span> (np.percentile(a, <span class="number">50</span>, axis=<span class="number">1</span>)) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 保持维度不变</span></span><br><span class="line"><span class="built_in">print</span> (np.percentile(a, <span class="number">50</span>, axis=<span class="number">1</span>, keepdims=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[10  7  4]</span><br><span class="line"> [ 3  2  1]]</span><br><span class="line">调用 percentile() 函数：</span><br><span class="line">3.5</span><br><span class="line">[6.5 4.5 2.5]</span><br><span class="line">[7. 2.]</span><br><span class="line">[[7.]</span><br><span class="line"> [2.]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-median">numpy.median()</h3>
<p>numpy.median() 函数用于计算数组 a 中元素的中位数（中值）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.median(a, axis=<span class="literal">None</span>, out=<span class="literal">None</span>, overwrite_input=<span class="literal">False</span>, keepdims=&lt;no value&gt;)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>a</code>: 输入的数组，可以是一个 NumPy 数组或类似数组的对象。</li>
<li><code>axis</code>: 可选参数，用于指定在哪个轴上计算中位数。如果不提供此参数，则计算整个数组的中位数。可以是一个整数表示轴的索引，也可以是一个元组表示多个轴。</li>
<li><code>out</code>: 可选参数，用于指定结果的存储位置。</li>
<li><code>overwrite_input</code>: 可选参数，如果为True，则允许在计算中使用输入数组的内存。这可能会在某些情况下提高性能，但可能会修改输入数组的内容。</li>
<li><code>keepdims</code>: 可选参数，如果为True，将保持结果数组的维度数目与输入数组相同。如果为False（默认值），则会去除计算后维度为1的轴。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">30</span>,<span class="number">65</span>,<span class="number">70</span>],[<span class="number">80</span>,<span class="number">95</span>,<span class="number">10</span>],[<span class="number">50</span>,<span class="number">90</span>,<span class="number">60</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 median() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.median(a))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 调用 median() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.median(a, axis =  <span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 调用 median() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.median(a, axis =  <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[30 65 70]</span><br><span class="line"> [80 95 10]</span><br><span class="line"> [50 90 60]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 median() 函数：</span><br><span class="line">65.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 0 调用 median() 函数：</span><br><span class="line">[50. 90. 60.]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 调用 median() 函数：</span><br><span class="line">[65. 80. 60.]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-mean">numpy.mean()</h3>
<p>numpy.mean() 函数返回数组中元素的算术平均值，如果提供了轴，则沿其计算。</p>
<p>算术平均值是沿轴的元素的总和除以元素的数量。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">numpy.mean(a, axis=None, dtype=None, out=None, keepdims=&lt;no value&gt;)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>a</code>: 输入的数组，可以是一个 NumPy 数组或类似数组的对象。</li>
<li><code>axis</code>: 可选参数，用于指定在哪个轴上计算平均值。如果不提供此参数，则计算整个数组的平均值。可以是一个整数表示轴的索引，也可以是一个元组表示多个轴。</li>
<li><code>dtype</code>: 可选参数，用于指定输出的数据类型。如果不提供，则根据输入数据的类型选择合适的数据类型。</li>
<li><code>out</code>: 可选参数，用于指定结果的存储位置。</li>
<li><code>keepdims</code>: 可选参数，如果为True，将保持结果数组的维度数目与输入数组相同。如果为False（默认值），则会去除计算后维度为1的轴。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 mean() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.mean(a))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 调用 mean() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.mean(a, axis =  <span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 调用 mean() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.mean(a, axis =  <span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[1 2 3]</span><br><span class="line"> [3 4 5]</span><br><span class="line"> [4 5 6]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 mean() 函数：</span><br><span class="line">3.6666666666666665</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 0 调用 mean() 函数：</span><br><span class="line">[2.66666667 3.66666667 4.66666667]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 调用 mean() 函数：</span><br><span class="line">[2. 4. 5.]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-average">numpy.average()</h3>
<p>numpy.average() 函数根据在另一个数组中给出的各自的权重计算数组中元素的加权平均值。</p>
<p>该函数可以接受一个轴参数。 如果没有指定轴，则数组会被展开。</p>
<p>加权平均值即将各数值乘以相应的权数，然后加总求和得到总体值，再除以总的单位数。</p>
<p>考虑数组[1,2,3,4]和相应的权重[4,3,2,1]，通过将相应元素的乘积相加，并将和除以权重的和，来计算加权平均值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">加权平均值 = (1*4+2*3+3*2+4*1)/(4+3+2+1)</span><br></pre></td></tr></table></figure>
<p>函数语法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.average(a, axis=<span class="literal">None</span>, weights=<span class="literal">None</span>, returned=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><code>a</code>: 输入的数组，可以是一个 NumPy 数组或类似数组的对象。</li>
<li><code>axis</code>: 可选参数，用于指定在哪个轴上计算加权平均值。如果不提供此参数，则计算整个数组的加权平均值。可以是一个整数表示轴的索引，也可以是一个元组表示多个轴。</li>
<li><code>weights</code>: 可选参数，用于指定对应数据点的权重。如果不提供权重数组，则默认为等权重。</li>
<li><code>returned</code>: 可选参数，如果为True，将同时返回加权平均值和权重总和。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 average() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.average(a))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 不指定权重时相当于 mean 函数</span></span><br><span class="line">wts = np.array([<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;再次调用 average() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.average(a,weights = wts))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 如果 returned 参数设为 true，则返回权重的和  </span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;权重的和：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.average([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,  <span class="number">4</span>],weights =  [<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>], returned =  <span class="literal">True</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[1 2 3 4]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 average() 函数：</span><br><span class="line">2.5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">再次调用 average() 函数：</span><br><span class="line">2.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">权重的和：</span><br><span class="line">(2.0, 10.0)</span><br></pre></td></tr></table></figure>
<p>在多维数组中，可以指定用于计算的轴。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">6</span>).reshape(<span class="number">3</span>,<span class="number">2</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组：&#x27;</span>)</span><br><span class="line">wt = np.array([<span class="number">3</span>,<span class="number">5</span>])  </span><br><span class="line"><span class="built_in">print</span> (np.average(a, axis =  <span class="number">1</span>, weights = wt))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.average(a, axis =  <span class="number">1</span>, weights = wt, returned =  <span class="literal">True</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[0 1]</span><br><span class="line"> [2 3]</span><br><span class="line"> [4 5]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改后的数组：</span><br><span class="line">[0.625 2.625 4.625]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改后的数组：</span><br><span class="line">(array([0.625, 2.625, 4.625]), array([8., 8., 8.]))</span><br></pre></td></tr></table></figure>
<h3 id="标准差-std">标准差 std</h3>
<p>标准差是一组数据平均值分散程度的一种度量。</p>
<p>标准差是方差的算术平方根。</p>
<p>标准差公式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">std = sqrt(mean((x - x.mean())**<span class="number">2</span>))</span><br></pre></td></tr></table></figure>
<p>如果数组是 [1，2，3，4]，则其平均值为 2.5。 因此，差的平方是 [2.25,0.25,0.25,2.25]，并且再求其平均值的平方根除以 4，即 sqrt(5/4) ，结果为 1.1180339887498949。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.std([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.1180339887498949</span><br></pre></td></tr></table></figure>
<h3 id="方差-var">方差 var</h3>
<p>统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数，即 mean((x - x.mean())** 2)。</p>
<p>换句话说，标准差是方差的平方根。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.var([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.25</span><br></pre></td></tr></table></figure>
<h2 id="6-4-排序、条件筛选函数">6.4 排序、条件筛选函数</h2>
<p>NumPy 提供了多种排序的方法。 这些排序函数实现不同的排序算法，每个排序算法的特征在于执行速度，最坏情况性能，所需的工作空间和算法的稳定性。 下表显示了三种排序算法的比较。</p>
<table>
<thead>
<tr>
<th style="text-align:left">种类</th>
<th style="text-align:left">速度</th>
<th style="text-align:left">最坏情况</th>
<th style="text-align:left">工作空间</th>
<th style="text-align:left">稳定性</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>'quicksort'</code>（快速排序）</td>
<td style="text-align:left">1</td>
<td style="text-align:left"><code>O(n^2)</code></td>
<td style="text-align:left">0</td>
<td style="text-align:left">否</td>
</tr>
<tr>
<td style="text-align:left"><code>'mergesort'</code>（归并排序）</td>
<td style="text-align:left">2</td>
<td style="text-align:left"><code>O(n*log(n))</code></td>
<td style="text-align:left">~n/2</td>
<td style="text-align:left">是</td>
</tr>
<tr>
<td style="text-align:left"><code>'heapsort'</code>（堆排序）</td>
<td style="text-align:left">3</td>
<td style="text-align:left"><code>O(n*log(n))</code></td>
<td style="text-align:left">0</td>
<td style="text-align:left">否</td>
</tr>
</tbody>
</table>
<h3 id="numpy-sort">numpy.sort()</h3>
<p>numpy.sort() 函数返回输入数组的排序副本。函数格式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.sort(a, axis, kind, order)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li>a: 要排序的数组</li>
<li>axis: 沿着它排序数组的轴，如果没有数组会被展开，沿着最后的轴排序， axis=0 按列排序，axis=1 按行排序</li>
<li>kind: 默认为’quicksort’（快速排序）</li>
<li>order: 如果数组包含字段，则是要排序的字段</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">3</span>,<span class="number">7</span>],[<span class="number">9</span>,<span class="number">1</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 sort() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.sort(a))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;按列排序：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.sort(a, axis =  <span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 在 sort 函数中排序字段 </span></span><br><span class="line">dt = np.dtype([(<span class="string">&#x27;name&#x27;</span>,  <span class="string">&#x27;S10&#x27;</span>),(<span class="string">&#x27;age&#x27;</span>,  <span class="built_in">int</span>)]) </span><br><span class="line">a = np.array([(<span class="string">&quot;raju&quot;</span>,<span class="number">21</span>),(<span class="string">&quot;anil&quot;</span>,<span class="number">25</span>),(<span class="string">&quot;ravi&quot;</span>,  <span class="number">17</span>),  (<span class="string">&quot;amar&quot;</span>,<span class="number">27</span>)], dtype = dt)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;按 name 排序：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.sort(a, order =  <span class="string">&#x27;name&#x27;</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[3 7]</span><br><span class="line"> [9 1]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 sort() 函数：</span><br><span class="line">[[3 7]</span><br><span class="line"> [1 9]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">按列排序：</span><br><span class="line">[[3 1]</span><br><span class="line"> [9 7]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我们的数组是：</span><br><span class="line">[(b&#x27;raju&#x27;, 21) (b&#x27;anil&#x27;, 25) (b&#x27;ravi&#x27;, 17) (b&#x27;amar&#x27;, 27)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">按 name 排序：</span><br><span class="line">[(b&#x27;amar&#x27;, 27) (b&#x27;anil&#x27;, 25) (b&#x27;raju&#x27;, 21) (b&#x27;ravi&#x27;, 17)]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-argsort">numpy.argsort()</h3>
<p>numpy.argsort() 函数返回的是数组值从小到大的索引值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x = np.array([<span class="number">3</span>,  <span class="number">1</span>,  <span class="number">2</span>])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;对 x 调用 argsort() 函数：&#x27;</span>)</span><br><span class="line">y = np.argsort(x)  </span><br><span class="line"><span class="built_in">print</span> (y)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;以排序后的顺序重构原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x[y])</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;使用循环重构原数组：&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> y:  </span><br><span class="line">    <span class="built_in">print</span> (x[i], end=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[3 1 2]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">对 x 调用 argsort() 函数：</span><br><span class="line">[1 2 0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">以排序后的顺序重构原数组：</span><br><span class="line">[1 2 3]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用循环重构原数组</span><br><span class="line"></span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure>
<h3 id="numpy-lexsort">numpy.lexsort()</h3>
<p>numpy.lexsort() 用于对多个序列进行排序。把它想象成对电子表格进行排序，每一列代表一个序列，排序时优先照顾靠后的列。</p>
<blockquote>
<p>这里举一个应用场景：小升初考试，重点班录取学生按照总成绩录取。在总成绩相同时，数学成绩高的优先录取，在总成绩和数学成绩都相同时，按照英语成绩录取…… 这里，总成绩排在电子表格的最后一列，数学成绩在倒数第二列，英语成绩在倒数第三列。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">nm =  (<span class="string">&#x27;raju&#x27;</span>,<span class="string">&#x27;anil&#x27;</span>,<span class="string">&#x27;ravi&#x27;</span>,<span class="string">&#x27;amar&#x27;</span>) </span><br><span class="line">dv =  (<span class="string">&#x27;f.y.&#x27;</span>,  <span class="string">&#x27;s.y.&#x27;</span>,  <span class="string">&#x27;s.y.&#x27;</span>,  <span class="string">&#x27;f.y.&#x27;</span>) </span><br><span class="line">ind = np.lexsort((dv,nm))  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 lexsort() 函数：&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (ind) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;使用这个索引来获取排序后的数据：&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> ([nm[i]  +  <span class="string">&quot;, &quot;</span>  + dv[i]  <span class="keyword">for</span> i <span class="keyword">in</span> ind])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">调用 lexsort() 函数：</span><br><span class="line">[3 1 0 2]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用这个索引来获取排序后的数据：</span><br><span class="line">[&#x27;amar, f.y.&#x27;, &#x27;anil, s.y.&#x27;, &#x27;raju, f.y.&#x27;, &#x27;ravi, s.y.&#x27;]</span><br></pre></td></tr></table></figure>
<p>上面传入 np.lexsort 的是一个tuple，排序时首先排 nm，顺序为：amar、anil、raju、ravi 。综上排序结果为 [3 1 0 2]。</p>
<h3 id="msort、sort-complex、partition、argpartition">msort、sort_complex、partition、argpartition</h3>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">msort(a)</td>
<td style="text-align:left">数组按第一个轴排序，返回排序后的数组副本。np.msort(a) 相等于 np.sort(a, axis=0)。</td>
</tr>
<tr>
<td style="text-align:left">sort_complex(a)</td>
<td style="text-align:left">对复数按照先实部后虚部的顺序进行排序。</td>
</tr>
<tr>
<td style="text-align:left">partition(a, kth[, axis, kind, order])</td>
<td style="text-align:left">指定一个数，对数组进行分区</td>
</tr>
<tr>
<td style="text-align:left">argpartition(a, kth[, axis, kind, order])</td>
<td style="text-align:left">可以通过关键字 kind 指定算法沿着指定轴对数组进行分区</td>
</tr>
</tbody>
</table>
<p>复数排序：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sort_complex([<span class="number">5</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">1</span>])</span><br><span class="line">array([ <span class="number">1.</span>+<span class="number">0.j</span>,  <span class="number">2.</span>+<span class="number">0.j</span>,  <span class="number">3.</span>+<span class="number">0.j</span>,  <span class="number">5.</span>+<span class="number">0.j</span>,  <span class="number">6.</span>+<span class="number">0.j</span>])</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sort_complex([<span class="number">1</span> + <span class="number">2j</span>, <span class="number">2</span> - <span class="number">1j</span>, <span class="number">3</span> - <span class="number">2j</span>, <span class="number">3</span> - <span class="number">3j</span>, <span class="number">3</span> + <span class="number">5j</span>])</span><br><span class="line">array([ <span class="number">1.</span>+<span class="number">2.j</span>,  <span class="number">2.</span>-<span class="number">1.j</span>,  <span class="number">3.</span>-<span class="number">3.j</span>,  <span class="number">3.</span>-<span class="number">2.j</span>,  <span class="number">3.</span>+<span class="number">5.j</span>])</span><br></pre></td></tr></table></figure>
<p>partition() 分区排序：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.array([<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.partition(a, <span class="number">3</span>)  <span class="comment"># 将数组 a 中所有元素（包括重复元素）从小到大排列，3 表示的是排序数组索引为 3 的数字，比该数字小的排在该数字前面，比该数字大的排在该数字的后面</span></span><br><span class="line">array([<span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.partition(a, (<span class="number">1</span>, <span class="number">3</span>)) <span class="comment"># 小于 1 的在前面，大于 3 的在后面，1和3之间的在中间</span></span><br><span class="line">array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br></pre></td></tr></table></figure>
<p>找到数组的第 3 小（index=2）的值和第 2 大（index=-2）的值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr = np.array([<span class="number">46</span>, <span class="number">57</span>, <span class="number">23</span>, <span class="number">39</span>, <span class="number">1</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">120</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr[np.argpartition(arr, <span class="number">2</span>)[<span class="number">2</span>]]</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr[np.argpartition(arr, -<span class="number">2</span>)[-<span class="number">2</span>]]</span><br><span class="line"><span class="number">57</span></span><br></pre></td></tr></table></figure>
<p>同时找到第 3 和第 4 小的值。注意这里，用 [2,3] 同时将第 3 和第 4 小的排序好，然后可以分别通过下标 [2] 和 [3] 取得。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr[np.argpartition(arr, [<span class="number">2</span>,<span class="number">3</span>])[<span class="number">2</span>]]</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr[np.argpartition(arr, [<span class="number">2</span>,<span class="number">3</span>])[<span class="number">3</span>]]</span><br><span class="line"><span class="number">23</span></span><br></pre></td></tr></table></figure>
<h3 id="numpy-argmax-和-numpy-argmin">numpy.argmax() 和 numpy.argmin()</h3>
<p>numpy.argmax() 和 numpy.argmin()函数分别沿给定轴返回最大和最小元素的索引。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">30</span>,<span class="number">40</span>,<span class="number">70</span>],[<span class="number">80</span>,<span class="number">20</span>,<span class="number">10</span>],[<span class="number">50</span>,<span class="number">90</span>,<span class="number">60</span>]])  </span><br><span class="line"><span class="built_in">print</span>  (<span class="string">&#x27;我们的数组是：&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (a) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 argmax() 函数：&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (np.argmax(a)) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;展开数组：&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (a.flatten()) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 的最大值索引：&#x27;</span>) </span><br><span class="line">maxindex = np.argmax(a, axis =  <span class="number">0</span>)  </span><br><span class="line"><span class="built_in">print</span> (maxindex) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 的最大值索引：&#x27;</span>) </span><br><span class="line">maxindex = np.argmax(a, axis =  <span class="number">1</span>)  </span><br><span class="line"><span class="built_in">print</span> (maxindex) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 argmin() 函数：&#x27;</span>) </span><br><span class="line">minindex = np.argmin(a)  </span><br><span class="line"><span class="built_in">print</span> (minindex) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;展开数组中的最小值：&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (a.flatten()[minindex]) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 0 的最小值索引：&#x27;</span>) </span><br><span class="line">minindex = np.argmin(a, axis =  <span class="number">0</span>)  </span><br><span class="line"><span class="built_in">print</span> (minindex) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;沿轴 1 的最小值索引：&#x27;</span>) </span><br><span class="line">minindex = np.argmin(a, axis =  <span class="number">1</span>)  </span><br><span class="line"><span class="built_in">print</span> (minindex)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[30 40 70]</span><br><span class="line"> [80 20 10]</span><br><span class="line"> [50 90 60]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 argmax() 函数：</span><br><span class="line">7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">展开数组：</span><br><span class="line">[30 40 70 80 20 10 50 90 60]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 0 的最大值索引：</span><br><span class="line">[1 2 0]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 的最大值索引：</span><br><span class="line">[2 0 1]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 argmin() 函数：</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">展开数组中的最小值：</span><br><span class="line">10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 0 的最小值索引：</span><br><span class="line">[0 1 1]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">沿轴 1 的最小值索引：</span><br><span class="line">[0 2 0]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-nonzero">numpy.nonzero()</h3>
<p>numpy.nonzero() 函数返回输入数组中非零元素的索引。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">30</span>,<span class="number">40</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">20</span>,<span class="number">10</span>],[<span class="number">50</span>,<span class="number">0</span>,<span class="number">60</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 nonzero() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.nonzero (a))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[30 40  0]</span><br><span class="line"> [ 0 20 10]</span><br><span class="line"> [50  0 60]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调用 nonzero() 函数：</span><br><span class="line">(array([0, 0, 1, 1, 2, 2]), array([0, 1, 1, 2, 0, 2]))</span><br></pre></td></tr></table></figure>
<h3 id="numpy-where">numpy.where()</h3>
<p>numpy.where() 函数返回输入数组中满足给定条件的元素的索引。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x = np.arange(<span class="number">9.</span>).reshape(<span class="number">3</span>,  <span class="number">3</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="built_in">print</span> ( <span class="string">&#x27;大于 3 的元素的索引：&#x27;</span>)</span><br><span class="line">y = np.where(x &gt;  <span class="number">3</span>)  </span><br><span class="line"><span class="built_in">print</span> (y)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;使用这些索引来获取满足条件的元素：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x[y])</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[0. 1. 2.]</span><br><span class="line"> [3. 4. 5.]</span><br><span class="line"> [6. 7. 8.]]</span><br><span class="line">大于 3 的元素的索引：</span><br><span class="line">(array([1, 1, 2, 2, 2]), array([1, 2, 0, 1, 2]))</span><br><span class="line">使用这些索引来获取满足条件的元素：</span><br><span class="line">[4. 5. 6. 7. 8.]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-extract">numpy.extract()</h3>
<p>numpy.extract() 函数根据某个条件从数组中抽取元素，返回满条件的元素。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x = np.arange(<span class="number">9.</span>).reshape(<span class="number">3</span>,  <span class="number">3</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="comment"># 定义条件, 选择偶数元素</span></span><br><span class="line">condition = np.mod(x,<span class="number">2</span>)  ==  <span class="number">0</span>  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;按元素的条件值：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (condition)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;使用条件提取元素：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.extract(condition, x))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[[0. 1. 2.]</span><br><span class="line"> [3. 4. 5.]</span><br><span class="line"> [6. 7. 8.]]</span><br><span class="line">按元素的条件值：</span><br><span class="line">[[ True False  True]</span><br><span class="line"> [False  True False]</span><br><span class="line"> [ True False  True]]</span><br><span class="line">使用条件提取元素：</span><br><span class="line">[0. 2. 4. 6. 8.]</span><br></pre></td></tr></table></figure>
<h1>七、细节问题</h1>
<h2 id="7-1-字节交换">7.1 字节交换</h2>
<p>在几乎所有的机器上，多字节对象都被存储为连续的字节序列。字节顺序，是跨越多字节的程序对象的存储规则。</p>
<ul>
<li>**大端模式：**指数据的高字节保存在内存的低地址中，而数据的低字节保存在内存的高地址中，这样的存储模式有点儿类似于把数据当作字符串顺序处理：地址由小向大增加，而数据从高位往低位放；这和我们的阅读习惯一致。</li>
<li>**小端模式：**指数据的高字节保存在内存的高地址中，而数据的低字节保存在内存的低地址中，这种存储模式将地址的高低和数据位权有效地结合起来，高地址部分权值高，低地址部分权值低。</li>
</ul>
<p>例如在 C 语言中，一个类型为 int 的变量 x 地址为 0x100，那么其对应地址表达式&amp;x的值为 0x100。且x的四个字节将被存储在存储器的 0x100, 0x101, 0x102, 0x103位置。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130022543259.png" alt="image-20240130022543259" style="zoom:67%;" /> 
<h3 id="numpy-ndarray-byteswap">numpy.ndarray.byteswap()</h3>
<p>numpy.ndarray.byteswap() 函数将 ndarray 中每个元素中的字节进行大小端转换。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">1</span>,  <span class="number">256</span>,  <span class="number">8755</span>], dtype = np.int16)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;以十六进制表示内存中的数据：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">map</span>(<span class="built_in">hex</span>,a))</span><br><span class="line"><span class="comment"># byteswap() 函数通过传入 true 来原地交换 </span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 byteswap() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a.byteswap(<span class="literal">True</span>))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;十六进制形式：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">map</span>(<span class="built_in">hex</span>,a))</span><br><span class="line"><span class="comment"># 我们可以看到字节已经交换了</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[   1  256 8755]</span><br><span class="line">以十六进制表示内存中的数据：</span><br><span class="line">&lt;map object at 0x104acb400&gt;</span><br><span class="line">调用 byteswap() 函数：</span><br><span class="line">[  256     1 13090]</span><br><span class="line">十六进制形式：</span><br><span class="line">&lt;map object at 0x104acb3c8&gt;</span><br></pre></td></tr></table></figure>
<h2 id="7-2-副本和视图">7.2 副本和视图</h2>
<p>副本是一个数据的完整的拷贝，如果我们对副本进行修改，它不会影响到原始数据，物理内存不在同一位置。</p>
<p>视图是数据的一个别称或引用，通过该别称或引用亦便可访问、操作原有数据，但原有数据不会产生拷贝。如果我们对视图进行修改，它会影响到原始数据，物理内存在同一位置。</p>
<p><strong>视图一般发生在：</strong></p>
<ul>
<li>1、numpy 的切片操作返回原数据的视图。</li>
<li>2、调用 ndarray 的 view() 函数产生一个视图。</li>
</ul>
<p><strong>副本一般发生在：</strong></p>
<ul>
<li>Python 序列的切片操作，调用deepCopy()函数。</li>
<li>调用 ndarray 的 copy() 函数产生一个副本。</li>
</ul>
<h3 id="无复制">无复制</h3>
<p>简单的赋值不会创建数组对象的副本。 相反，它使用原始数组的相同id()来访问它。 id()返回 Python 对象的通用标识符，类似于 C 中的指针。</p>
<p>此外，一个数组的任何变化都反映在另一个数组上。 例如，一个数组的形状改变也会改变另一个数组的形状。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">6</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组是：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;调用 id() 函数：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">id</span>(a))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;a 赋值给 b：&#x27;</span>)</span><br><span class="line">b = a </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;b 拥有相同 id()：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">id</span>(b))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改 b 的形状：&#x27;</span>)</span><br><span class="line">b.shape =  <span class="number">3</span>,<span class="number">2</span>  </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;a 的形状也修改了：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组是：</span><br><span class="line">[0 1 2 3 4 5]</span><br><span class="line">调用 id() 函数：</span><br><span class="line">4349302224</span><br><span class="line">a 赋值给 b：</span><br><span class="line">[0 1 2 3 4 5]</span><br><span class="line">b 拥有相同 id()：</span><br><span class="line">4349302224</span><br><span class="line">修改 b 的形状：</span><br><span class="line">[[0 1]</span><br><span class="line"> [2 3]</span><br><span class="line"> [4 5]]</span><br><span class="line">a 的形状也修改了：</span><br><span class="line">[[0 1]</span><br><span class="line"> [2 3]</span><br><span class="line"> [4 5]]</span><br></pre></td></tr></table></figure>
<h3 id="视图-浅拷贝">视图(浅拷贝)</h3>
<p>ndarray.view() 方会创建一个新的数组对象，该方法创建的新数组的维数变化不会改变原始数据的维数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 最开始 a 是个 3X2 的数组</span></span><br><span class="line">a = np.arange(<span class="number">6</span>).reshape(<span class="number">3</span>,<span class="number">2</span>)  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 a：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;创建 a 的视图：&#x27;</span>)</span><br><span class="line">b = a.view()  </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;两个数组的 id() 不同：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;a 的 id()：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">id</span>(a))</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;b 的 id()：&#x27;</span> )</span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">id</span>(b))</span><br><span class="line"><span class="comment"># 修改 b 的形状，并不会修改 a</span></span><br><span class="line">b.shape =  <span class="number">2</span>,<span class="number">3</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;b 的形状：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;a 的形状：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数组 a：</span><br><span class="line">[[0 1]</span><br><span class="line"> [2 3]</span><br><span class="line"> [4 5]]</span><br><span class="line">创建 a 的视图：</span><br><span class="line">[[0 1]</span><br><span class="line"> [2 3]</span><br><span class="line"> [4 5]]</span><br><span class="line">两个数组的 id() 不同：</span><br><span class="line">a 的 id()：</span><br><span class="line">4314786992</span><br><span class="line">b 的 id()：</span><br><span class="line">4315171296</span><br><span class="line">b 的形状：</span><br><span class="line">[[0 1 2]</span><br><span class="line"> [3 4 5]]</span><br><span class="line">a 的形状：</span><br><span class="line">[[0 1]</span><br><span class="line"> [2 3]</span><br><span class="line"> [4 5]]</span><br></pre></td></tr></table></figure>
<p>使用切片创建视图修改数据会影响到原始数组：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">arr = np.arange(<span class="number">12</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们的数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (arr)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;创建切片：&#x27;</span>)</span><br><span class="line">a=arr[<span class="number">3</span>:]</span><br><span class="line">b=arr[<span class="number">3</span>:]</span><br><span class="line">a[<span class="number">1</span>]=<span class="number">123</span></span><br><span class="line">b[<span class="number">2</span>]=<span class="number">234</span></span><br><span class="line"><span class="built_in">print</span>(arr)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(a),<span class="built_in">id</span>(b),<span class="built_in">id</span>(arr[<span class="number">3</span>:]))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们的数组：</span><br><span class="line">[ 0  1  2  3  4  5  6  7  8  9 10 11]</span><br><span class="line">创建切片：</span><br><span class="line">[  0   1   2   3 123 234   6   7   8   9  10  11]</span><br><span class="line">4545878416 4545878496 4545878576</span><br></pre></td></tr></table></figure>
<p>变量 a,b 都是 arr 的一部分视图，对视图的修改会直接反映到原数据中。但是我们观察 a,b 的 id，他们是不同的，也就是说，视图虽然指向原数据，但是他们和赋值引用还是有区别的。</p>
<h3 id="副本-深拷贝">副本(深拷贝)</h3>
<p>ndarray.copy() 函数创建一个副本。 对副本数据进行修改，不会影响到原始数据，它们物理内存不在同一位置。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">10</span>,<span class="number">10</span>],  [<span class="number">2</span>,<span class="number">3</span>],  [<span class="number">4</span>,<span class="number">5</span>]])  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 a：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;创建 a 的深层副本：&#x27;</span>)</span><br><span class="line">b = a.copy()  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 b：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="comment"># b 与 a 不共享任何内容  </span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;我们能够写入 b 来写入 a 吗？&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b <span class="keyword">is</span> a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改 b 的内容：&#x27;</span>)</span><br><span class="line">b[<span class="number">0</span>,<span class="number">0</span>]  =  <span class="number">100</span>  </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;修改后的数组 b：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;a 保持不变：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数组 a：</span><br><span class="line">[[10 10]</span><br><span class="line"> [ 2  3]</span><br><span class="line"> [ 4  5]]</span><br><span class="line">创建 a 的深层副本：</span><br><span class="line">数组 b：</span><br><span class="line">[[10 10]</span><br><span class="line"> [ 2  3]</span><br><span class="line"> [ 4  5]]</span><br><span class="line">我们能够写入 b 来写入 a 吗？</span><br><span class="line">False</span><br><span class="line">修改 b 的内容：</span><br><span class="line">修改后的数组 b：</span><br><span class="line">[[100  10]</span><br><span class="line"> [  2   3]</span><br><span class="line"> [  4   5]]</span><br><span class="line">a 保持不变：</span><br><span class="line">[[10 10]</span><br><span class="line"> [ 2  3]</span><br><span class="line"> [ 4  5]]</span><br></pre></td></tr></table></figure>
<h1>八、线性代数</h1>
<h2 id="8-1-矩阵库">8.1 矩阵库</h2>
<p>NumPy 中包含了一个矩阵库 numpy.matlib，该模块中的函数返回的是一个矩阵，而不是 ndarray 对象。</p>
<p>一个 m*n 矩阵是一个由 m行（row）n列（column)元素排列成的矩形阵列。</p>
<p>矩阵里的元素可以是数字、符号或数学式。</p>
<h3 id="转置矩阵-T">转置矩阵 T</h3>
<p>NumPy 中除了可以使用 numpy.transpose 函数来对换数组的维度，还可以使用 <strong>T</strong> 属性。。</p>
<p>例如有个 m 行 n 列的矩阵，使用 t() 函数就能转换为 n 行 m 列的矩阵。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;原数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;转置数组：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a.T)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原数组：</span><br><span class="line">[[ 0  1  2  3]</span><br><span class="line"> [ 4  5  6  7]</span><br><span class="line"> [ 8  9 10 11]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">转置数组：</span><br><span class="line">[[ 0  4  8]</span><br><span class="line"> [ 1  5  9]</span><br><span class="line"> [ 2  6 10]</span><br><span class="line"> [ 3  7 11]]</span><br></pre></td></tr></table></figure>
<h3 id="matlib-empty">matlib.empty()</h3>
<p>matlib.empty() 函数返回一个新的矩阵，语法格式为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.matlib.empty(shape, dtype, order)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><strong>shape</strong>: 定义新矩阵形状的整数或整数元组</li>
<li><strong>Dtype</strong>: 可选，数据类型</li>
<li><strong>order</strong>: C（行序优先） 或者 F（列序优先）</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.matlib.empty((<span class="number">2</span>,<span class="number">2</span>)))</span><br><span class="line"><span class="comment"># 填充为随机数据</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[-1.49166815e-154 -1.49166815e-154]</span><br><span class="line"> [ 2.17371491e-313  2.52720790e-212]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-matlib-zeros">numpy.matlib.zeros()</h3>
<p>numpy.matlib.zeros() 函数创建一个以 0 填充的矩阵。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.matlib.zeros((<span class="number">2</span>,<span class="number">2</span>)))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[0. 0.]</span><br><span class="line"> [0. 0.]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-matlib-ones">numpy.matlib.ones()</h3>
<p>numpy.matlib.ones()函数创建一个以 1 填充的矩阵。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.matlib.ones((<span class="number">2</span>,<span class="number">2</span>)))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[1. 1.]</span><br><span class="line"> [1. 1.]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-matlib-eye">numpy.matlib.eye()</h3>
<p>numpy.matlib.eye() 函数返回一个矩阵，对角线元素为 1，其他位置为零。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.matlib.eye(n, M,k, dtype)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><strong>n</strong>: 返回矩阵的行数</li>
<li><strong>M</strong>: 返回矩阵的列数，默认为 n</li>
<li><strong>k</strong>: 对角线的索引</li>
<li><strong>dtype</strong>: 数据类型</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.matlib.eye(n =  <span class="number">3</span>, M =  <span class="number">4</span>, k =  <span class="number">0</span>, dtype =  <span class="built_in">float</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[1. 0. 0. 0.]</span><br><span class="line"> [0. 1. 0. 0.]</span><br><span class="line"> [0. 0. 1. 0.]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-matlib-identity">numpy.matlib.identity()</h3>
<p>numpy.matlib.identity() 函数返回给定大小的单位矩阵。</p>
<p>单位矩阵是个方阵，从左上角到右下角的对角线（称为主对角线）上的元素均为 1，除此以外全都为 0。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 大小为 5，类型位浮点型</span></span><br><span class="line"><span class="built_in">print</span> (np.matlib.identity(<span class="number">5</span>, dtype =  <span class="built_in">float</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[ 1.  0.  0.  0.  0.] </span><br><span class="line"> [ 0.  1.  0.  0.  0.] </span><br><span class="line"> [ 0.  0.  1.  0.  0.] </span><br><span class="line"> [ 0.  0.  0.  1.  0.] </span><br><span class="line"> [ 0.  0.  0.  0.  1.]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-matlib-rand">numpy.matlib.rand()</h3>
<p>numpy.matlib.rand() 函数创建一个给定大小的矩阵，数据是随机填充的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.matlib.rand(<span class="number">3</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[0.23966718 0.16147628 0.14162   ]</span><br><span class="line"> [0.28379085 0.59934741 0.62985825]</span><br><span class="line"> [0.99527238 0.11137883 0.41105367]]</span><br></pre></td></tr></table></figure>
<p>矩阵总是二维的，而 ndarray 是一个 n 维数组。 两个对象都是可互换的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  </span><br><span class="line"> </span><br><span class="line">i = np.matrix(<span class="string">&#x27;1,2;3,4&#x27;</span>)  </span><br><span class="line"><span class="built_in">print</span> (i)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[1  2] </span><br><span class="line"> [3  4]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  </span><br><span class="line"> </span><br><span class="line">j = np.asarray(i)  </span><br><span class="line"><span class="built_in">print</span> (j)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[1  2] </span><br><span class="line"> [3  4]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  </span><br><span class="line"> </span><br><span class="line">k = np.asmatrix (j)  </span><br><span class="line"><span class="built_in">print</span> (k)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[1  2] </span><br><span class="line"> [3  4]]</span><br></pre></td></tr></table></figure>
<h2 id="8-2-线性代数">8.2 线性代数</h2>
<p>NumPy 提供了线性代数函数库 <strong>linalg</strong>，该库包含了线性代数所需的所有功能，可以看看下面的说明：</p>
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>dot</code></td>
<td style="text-align:left">两个数组的点积，即元素对应相乘。</td>
</tr>
<tr>
<td style="text-align:left"><code>vdot</code></td>
<td style="text-align:left">两个向量的点积</td>
</tr>
<tr>
<td style="text-align:left"><code>inner</code></td>
<td style="text-align:left">两个数组的内积</td>
</tr>
<tr>
<td style="text-align:left"><code>matmul</code></td>
<td style="text-align:left">两个数组的矩阵积</td>
</tr>
<tr>
<td style="text-align:left"><code>determinant</code></td>
<td style="text-align:left">数组的行列式</td>
</tr>
<tr>
<td style="text-align:left"><code>solve</code></td>
<td style="text-align:left">求解线性矩阵方程</td>
</tr>
<tr>
<td style="text-align:left"><code>inv</code></td>
<td style="text-align:left">计算矩阵的乘法逆矩阵</td>
</tr>
</tbody>
</table>
<h3 id="numpy-dot">numpy.dot()</h3>
<p>numpy.dot() 对于两个一维的数组，计算的是这两个数组对应下标元素的乘积和(数学上称之为向量点积)；对于二维数组，计算的是两个数组的矩阵乘积；对于多维数组，它的通用计算公式如下，即结果数组中的每个元素都是：数组a的最后一维上的所有元素与数组b的倒数第二位上的所有元素的乘积和： <strong>dot(a, b)[i,j,k,m] = sum(a[i,j,:] * b[k,:,m])</strong>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.dot(a, b, out=<span class="literal">None</span>) </span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><strong>a</strong> : ndarray 数组</li>
<li><strong>b</strong> : ndarray 数组</li>
<li><strong>out</strong> : ndarray, 可选，用来保存dot()的计算结果</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</span><br><span class="line">b = np.array([[<span class="number">11</span>,<span class="number">12</span>],[<span class="number">13</span>,<span class="number">14</span>]])</span><br><span class="line"><span class="built_in">print</span>(np.dot(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[37  40] </span><br><span class="line"> [85  92]]</span><br></pre></td></tr></table></figure>
<p>计算式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[1*11+2*13, 1*12+2*14],[3*11+4*13, 3*12+4*14]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-vdot">numpy.vdot()</h3>
<p>numpy.vdot() 函数是两个向量的点积。 如果第一个参数是复数，那么它的共轭复数会用于计算。 如果参数是多维数组，它会被展开。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]]) </span><br><span class="line">b = np.array([[<span class="number">11</span>,<span class="number">12</span>],[<span class="number">13</span>,<span class="number">14</span>]]) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># vdot 将数组展开计算内积</span></span><br><span class="line"><span class="built_in">print</span> (np.vdot(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]]) </span><br><span class="line">b = np.array([[<span class="number">11</span>,<span class="number">12</span>],[<span class="number">13</span>,<span class="number">14</span>]]) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># vdot 将数组展开计算内积</span></span><br><span class="line"><span class="built_in">print</span> (np.vdot(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">130</span><br></pre></td></tr></table></figure>
<p>计算式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1*11 + 2*12 + 3*13 + 4*14 = 130</span><br></pre></td></tr></table></figure>
<h3 id="numpy-inner">numpy.inner()</h3>
<p>numpy.inner() 函数返回一维数组的向量内积。对于更高的维度，它返回最后一个轴上的和的乘积。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.inner(np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]),np.array([<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>])))</span><br><span class="line"><span class="comment"># 等价于 1*0+2*1+3*0</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">3</span>,<span class="number">4</span>]]) </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 a：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line">b = np.array([[<span class="number">11</span>, <span class="number">12</span>], [<span class="number">13</span>, <span class="number">14</span>]]) </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 b：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;内积：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (np.inner(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数组 a：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]]</span><br><span class="line">数组 b：</span><br><span class="line">[[11 12]</span><br><span class="line"> [13 14]]</span><br><span class="line">内积：</span><br><span class="line">[[35 41]</span><br><span class="line"> [81 95]]</span><br><span class="line">数组 a：</span><br><span class="line">[[1 2]</span><br><span class="line"> [3 4]]</span><br><span class="line">数组 b：</span><br><span class="line">[[11 12]</span><br><span class="line"> [13 14]]</span><br><span class="line">内积：</span><br><span class="line">[[35 41]</span><br><span class="line"> [81 95]]</span><br></pre></td></tr></table></figure>
<p>内积计算式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1*11+2*12, 1*13+2*14 </span><br><span class="line">3*11+4*12, 3*13+4*14</span><br></pre></td></tr></table></figure>
<h3 id="numpy-matmul">numpy.matmul</h3>
<p>numpy.matmul 函数返回两个数组的矩阵乘积。 虽然它返回二维数组的正常乘积，但如果任一参数的维数大于2，则将其视为存在于最后两个索引的矩阵的栈，并进行相应广播。</p>
<p>另一方面，如果任一参数是一维数组，则通过在其维度上附加 1 来将其提升为矩阵，并在乘法之后被去除。</p>
<p>对于二维数组，它就是矩阵乘法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = [[<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">1</span>]] </span><br><span class="line">b = [[<span class="number">4</span>,<span class="number">1</span>],[<span class="number">2</span>,<span class="number">2</span>]] </span><br><span class="line"><span class="built_in">print</span> (np.matmul(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[4  1] </span><br><span class="line"> [2  2]]</span><br></pre></td></tr></table></figure>
<p>二维和一维运算：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = [[<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">1</span>]] </span><br><span class="line">b = [<span class="number">1</span>,<span class="number">2</span>] </span><br><span class="line"><span class="built_in">print</span> (np.matmul(a,b))</span><br><span class="line"><span class="built_in">print</span> (np.matmul(b,a))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1  2] </span><br><span class="line">[1  2]</span><br></pre></td></tr></table></figure>
<p>维度大于二的数组 ：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy.matlib </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.arange(<span class="number">8</span>).reshape(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>) </span><br><span class="line">b = np.arange(<span class="number">4</span>).reshape(<span class="number">2</span>,<span class="number">2</span>) </span><br><span class="line"><span class="built_in">print</span> (np.matmul(a,b))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[[ 2  3]</span><br><span class="line">  [ 6 11]]</span><br><span class="line"></span><br><span class="line"> [[10 19]</span><br><span class="line">  [14 27]]]</span><br></pre></td></tr></table></figure>
<h3 id="numpy-linalg-det">numpy.linalg.det()</h3>
<p>numpy.linalg.det() 函数计算输入矩阵的行列式。</p>
<p>行列式在线性代数中是非常有用的值。 它从方阵的对角元素计算。 对于 2×2 矩阵，它是左上和右下元素的乘积与其他两个的乘积的差。</p>
<p>换句话说，对于矩阵[[a，b]，[c，d]]，行列式计算为 ad-bc。 较大的方阵被认为是 2×2 矩阵的组合。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">3</span>,<span class="number">4</span>]]) </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (np.linalg.det(a))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-2.0</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"> </span><br><span class="line">b = np.array([[<span class="number">6</span>,<span class="number">1</span>,<span class="number">1</span>], [<span class="number">4</span>, -<span class="number">2</span>, <span class="number">5</span>], [<span class="number">2</span>,<span class="number">8</span>,<span class="number">7</span>]]) </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"><span class="built_in">print</span> (np.linalg.det(b))</span><br><span class="line"><span class="built_in">print</span> (<span class="number">6</span>*(-<span class="number">2</span>*<span class="number">7</span> - <span class="number">5</span>*<span class="number">8</span>) - <span class="number">1</span>*(<span class="number">4</span>*<span class="number">7</span> - <span class="number">5</span>*<span class="number">2</span>) + <span class="number">1</span>*(<span class="number">4</span>*<span class="number">8</span> - -<span class="number">2</span>*<span class="number">2</span>))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[ 6  1  1]</span><br><span class="line"> [ 4 -2  5]</span><br><span class="line"> [ 2  8  7]]</span><br><span class="line">-306.0</span><br><span class="line">-306</span><br></pre></td></tr></table></figure>
<h3 id="numpy-linalg-solve">numpy.linalg.solve()</h3>
<p>numpy.linalg.solve() 函数给出了矩阵形式的线性方程的解。</p>
<p>考虑以下线性方程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x + y + z = 6</span><br><span class="line"></span><br><span class="line">2y + 5z = -4</span><br><span class="line"></span><br><span class="line">2x + 5y - z = 27</span><br></pre></td></tr></table></figure>
<p>可以使用矩阵表示为：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130024534405.png" alt="image-20240130024534405" style="zoom:67%;" /> 
<p>如果矩阵成为A、X和B，方程变为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AX = B</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">X = A^(-1)B</span><br></pre></td></tr></table></figure>
<h3 id="numpy-linalg-inv">numpy.linalg.inv()</h3>
<p>numpy.linalg.inv() 函数计算矩阵的乘法逆矩阵。</p>
<p><strong>逆矩阵（inverse matrix）</strong>：设A是数域上的一个n阶矩阵，若在相同数域上存在另一个n阶矩阵B，使得： AB=BA=E ，则我们称B是A的逆矩阵，而A则被称为可逆矩阵。注：E为单位矩阵。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">x = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]]) </span><br><span class="line">y = np.linalg.inv(x) </span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="built_in">print</span> (y)</span><br><span class="line"><span class="built_in">print</span> (np.dot(x,y))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[1 2]</span><br><span class="line"> [3 4]]</span><br><span class="line">[[-2.   1. ]</span><br><span class="line"> [ 1.5 -0.5]]</span><br><span class="line">[[1.0000000e+00 0.0000000e+00]</span><br><span class="line"> [8.8817842e-16 1.0000000e+00]]</span><br></pre></td></tr></table></figure>
<p>现在创建一个矩阵A的逆矩阵:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>],[<span class="number">2</span>,<span class="number">5</span>,-<span class="number">1</span>]]) </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;数组 a：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (a)</span><br><span class="line">ainv = np.linalg.inv(a) </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;a 的逆：&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (ainv)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;矩阵 b：&#x27;</span>)</span><br><span class="line">b = np.array([[<span class="number">6</span>],[-<span class="number">4</span>],[<span class="number">27</span>]]) </span><br><span class="line"><span class="built_in">print</span> (b)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;计算：A^(-1)B：&#x27;</span>)</span><br><span class="line">x = np.linalg.solve(a,b) </span><br><span class="line"><span class="built_in">print</span> (x)</span><br><span class="line"><span class="comment"># 这就是线性方向 x = 5, y = 3, z = -2 的解</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数组 a：</span><br><span class="line">[[ 1  1  1]</span><br><span class="line"> [ 0  2  5]</span><br><span class="line"> [ 2  5 -1]]</span><br><span class="line">a 的逆：</span><br><span class="line">[[ 1.28571429 -0.28571429 -0.14285714]</span><br><span class="line"> [-0.47619048  0.14285714  0.23809524]</span><br><span class="line"> [ 0.19047619  0.14285714 -0.0952381 ]]</span><br><span class="line">矩阵 b：</span><br><span class="line">[[ 6]</span><br><span class="line"> [-4]</span><br><span class="line"> [27]]</span><br><span class="line">计算：A^(-1)B：</span><br><span class="line">[[ 5.]</span><br><span class="line"> [ 3.]</span><br><span class="line"> [-2.]]</span><br></pre></td></tr></table></figure>
<p>结果也可以使用以下函数获取：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = np.dot(ainv,b)</span><br></pre></td></tr></table></figure>
<h1>九、IO操作</h1>
<p>Numpy 可以读写磁盘上的文本数据或二进制数据。</p>
<p>NumPy 为 ndarray 对象引入了一个简单的文件格式：<strong>npy</strong>。</p>
<p>npy 文件用于存储重建 ndarray 所需的数据、图形、dtype 和其他信息。</p>
<p>常用的 IO 函数有：</p>
<ul>
<li>load() 和 save() 函数是读写文件数组数据的两个主要函数，默认情况下，数组是以未压缩的原始二进制格式保存在扩展名为 .npy 的文件中。</li>
<li>savez() 函数用于将多个数组写入文件，默认情况下，数组是以未压缩的原始二进制格式保存在扩展名为 .npz 的文件中。</li>
<li>loadtxt() 和 savetxt() 函数处理正常的文本文件(.txt 等)</li>
</ul>
<h3 id="numpy-save">numpy.save()</h3>
<p>numpy.save() 函数将数组保存到以 .npy 为扩展名的文件中。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.save(file, arr, allow_pickle=<span class="literal">True</span>, fix_imports=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p><strong>参数说明：</strong></p>
<ul>
<li><strong>file</strong>：要保存的文件，扩展名为 .npy，如果文件路径末尾没有扩展名 .npy，该扩展名会被自动加上。</li>
<li><strong>arr</strong>: 要保存的数组</li>
<li><strong>allow_pickle</strong>: 可选，布尔值，允许使用 Python pickles 保存对象数组，Python 中的 pickle 用于在保存到磁盘文件或从磁盘文件读取之前，对对象进行序列化和反序列化。</li>
<li><strong>fix_imports</strong>: 可选，为了方便 Pyhton2 中读取 Python3 保存的数据。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 保存到 outfile.npy 文件上</span></span><br><span class="line">np.save(<span class="string">&#x27;outfile.npy&#x27;</span>,a) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 保存到 outfile2.npy 文件上，如果文件路径末尾没有扩展名 .npy，该扩展名会被自动加上</span></span><br><span class="line">np.save(<span class="string">&#x27;outfile2&#x27;</span>,a)</span><br></pre></td></tr></table></figure>
<p>我们可以查看文件内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> outfile.npy</span> </span><br><span class="line">?NUMPYv&#123;&#x27;descr&#x27;: &#x27;&lt;i8&#x27;, &#x27;fortran_order&#x27;: False, &#x27;shape&#x27;: (5,), &#125;  </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> outfile2.npy</span> </span><br><span class="line">?NUMPYv&#123;&#x27;descr&#x27;: &#x27;&lt;i8&#x27;, &#x27;fortran_order&#x27;: False, &#x27;shape&#x27;: (5,), &#125; </span><br></pre></td></tr></table></figure>
<p>可以看出文件是乱码的，因为它们是 Numpy 专用的二进制格式后的数据。</p>
<h3 id="numpy-load">numpy.load()</h3>
<p>我们可以使用 load() 函数来读取数据就可以正常显示了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">b = np.load(<span class="string">&#x27;outfile.npy&#x27;</span>)  </span><br><span class="line"><span class="built_in">print</span> (b)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1 2 3 4 5]</span><br></pre></td></tr></table></figure>
<h3 id="np-savez">np.savez()</h3>
<p>numpy.savez() 函数将多个数组保存到以 npz 为扩展名的文件中。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numpy.savez(file, *args, **kwds)</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><strong>file</strong>：要保存的文件，扩展名为 <strong>.npz</strong>，如果文件路径末尾没有扩展名 <strong>.npz</strong>，该扩展名会被自动加上。</li>
<li><strong>args</strong>: 要保存的数组，可以使用关键字参数为数组起一个名字，非关键字参数传递的数组会自动起名为 <strong>arr_0</strong>, <strong>arr_1</strong>, …　。</li>
<li><strong>kwds</strong>: 要保存的数组使用关键字名称。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">b = np.arange(<span class="number">0</span>, <span class="number">1.0</span>, <span class="number">0.1</span>)</span><br><span class="line">c = np.sin(b)</span><br><span class="line"><span class="comment"># c 使用了关键字参数 sin_array</span></span><br><span class="line">np.savez(<span class="string">&quot;runoob.npz&quot;</span>, a, b, sin_array = c)</span><br><span class="line">r = np.load(<span class="string">&quot;runoob.npz&quot;</span>)  </span><br><span class="line"><span class="built_in">print</span>(r.files) <span class="comment"># 查看各个数组名称</span></span><br><span class="line"><span class="built_in">print</span>(r[<span class="string">&quot;arr_0&quot;</span>]) <span class="comment"># 数组 a</span></span><br><span class="line"><span class="built_in">print</span>(r[<span class="string">&quot;arr_1&quot;</span>]) <span class="comment"># 数组 b</span></span><br><span class="line"><span class="built_in">print</span>(r[<span class="string">&quot;sin_array&quot;</span>]) <span class="comment"># 数组 c</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;sin_array&#x27;, &#x27;arr_0&#x27;, &#x27;arr_1&#x27;]</span><br><span class="line">[[1 2 3]</span><br><span class="line"> [4 5 6]]</span><br><span class="line">[0.  0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9]</span><br><span class="line">[0.         0.09983342 0.19866933 0.29552021 0.38941834 0.47942554</span><br><span class="line"> 0.56464247 0.64421769 0.71735609 0.78332691]</span><br></pre></td></tr></table></figure>
<h3 id="savetxt">savetxt()</h3>
<p>savetxt() 函数是以简单的文本文件格式存储数据，对应的使用 loadtxt() 函数来获取数据。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">np.loadtxt(FILENAME, dtype=<span class="built_in">int</span>, delimiter=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">np.savetxt(FILENAME, a, fmt=<span class="string">&quot;%d&quot;</span>, delimiter=<span class="string">&quot;,&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>参数 delimiter 可以指定各种分隔符、针对特定列的转换器函数、需要跳过的行数等。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]) </span><br><span class="line">np.savetxt(<span class="string">&#x27;out.txt&#x27;</span>,a) </span><br><span class="line">b = np.loadtxt(<span class="string">&#x27;out.txt&#x27;</span>)  </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1. 2. 3. 4. 5.]</span><br></pre></td></tr></table></figure>
<p>使用 delimiter 参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a=np.arange(<span class="number">0</span>,<span class="number">10</span>,<span class="number">0.5</span>).reshape(<span class="number">4</span>,-<span class="number">1</span>)</span><br><span class="line">np.savetxt(<span class="string">&quot;out.txt&quot;</span>,a,fmt=<span class="string">&quot;%d&quot;</span>,delimiter=<span class="string">&quot;,&quot;</span>) <span class="comment"># 改为保存为整数，以逗号分隔</span></span><br><span class="line">b = np.loadtxt(<span class="string">&quot;out.txt&quot;</span>,delimiter=<span class="string">&quot;,&quot;</span>) <span class="comment"># load 时也要指定为逗号分隔</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[0. 0. 1. 1. 2.]</span><br><span class="line"> [2. 3. 3. 4. 4.]</span><br><span class="line"> [5. 5. 6. 6. 7.]</span><br><span class="line"> [7. 8. 8. 9. 9.]]</span><br></pre></td></tr></table></figure>
<h1>十、Matplotlib</h1>
<p>Matplotlib 是 Python 的绘图库。 它可与 NumPy 一起使用，提供了一种有效的 MatLab 开源替代方案。 它也可以和图形工具包一起使用，如 PyQt 和 wxPython。</p>
<p>pip3 安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install matplotlib -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<p>Linux 系统也可以使用 Linux 包管理器来安装：</p>
<ul>
<li>
<p>Debian / Ubuntu：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python-matplotlib</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>Fedora / Redhat：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install python-matplotlib</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>安装完后，你可以使用 <strong>python -m pip list</strong> 命令来查看是否安装了 matplotlib 模块。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip3 list | grep matplotlib</span></span><br><span class="line">matplotlib        3.3.0  </span><br></pre></td></tr></table></figure>
<h3 id="实例-4">实例</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"> </span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">11</span>) </span><br><span class="line">y =  <span class="number">2</span>  * x +  <span class="number">5</span> </span><br><span class="line">plt.title(<span class="string">&quot;Matplotlib demo&quot;</span>) </span><br><span class="line">plt.xlabel(<span class="string">&quot;x axis caption&quot;</span>) </span><br><span class="line">plt.ylabel(<span class="string">&quot;y axis caption&quot;</span>) </span><br><span class="line">plt.plot(x,y) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>以上实例中，np.arange() 函数创建 x 轴上的值。y 轴上的对应值存储在另一个数组对象 y 中。 这些值使用 matplotlib 软件包的 pyplot 子模块的 plot() 函数绘制。</p>
<p>图形由 show() 函数显示。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130025431956.png" alt="image-20240130025431956" style="zoom:67%;" /> 
<h3 id="图形中文显示">图形中文显示</h3>
<p>Matplotlib 默认情况不支持中文，我们可以使用以下简单的方法来解决。</p>
<ul>
<li>
<p>这里我们使用思源黑体，思源黑体是 Adobe 与 Google 推出的一款开源字体。</p>
<p>官网：<a href="https://source.typekit.com/source-han-serif/cn/">https://source.typekit.com/source-han-serif/cn/</a></p>
<p>GitHub 地址：<a href="https://github.com/adobe-fonts/source-han-sans/tree/release/OTF/SimplifiedChinese">https://github.com/adobe-fonts/source-han-sans/tree/release/OTF/SimplifiedChinese</a></p>
<p>打开链接后，在里面选一个就好了。</p>
</li>
<li>
<p>你也可以在网盘下载: <a href="https://pan.baidu.com/s/10-w1JbXZSnx3Tm6uGpPGOw%EF%BC%8C%E6%8F%90%E5%8F%96%E7%A0%81%EF%BC%9A**yxqu**%E3%80%82">https://pan.baidu.com/s/10-w1JbXZSnx3Tm6uGpPGOw，提取码：**yxqu**。</a></p>
<p>可以下载个 OTF 字体，比如 SourceHanSansSC-Bold.otf，将该文件文件放在当前执行的代码文件中：</p>
<p>SourceHanSansSC-Bold.otf 文件放在当前执行的代码文件中：</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"> </span><br><span class="line"><span class="comment"># fname 为 你下载的字体库路径，注意 SourceHanSansSC-Bold.otf 字体的路径</span></span><br><span class="line">zhfont1 = matplotlib.font_manager.FontProperties(fname=<span class="string">&quot;SourceHanSansSC-Bold.otf&quot;</span>) </span><br><span class="line"> </span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">11</span>) </span><br><span class="line">y =  <span class="number">2</span>  * x +  <span class="number">5</span> </span><br><span class="line">plt.title(<span class="string">&quot;菜鸟教程 - 测试&quot;</span>, fontproperties=zhfont1) </span><br><span class="line"> </span><br><span class="line"><span class="comment"># fontproperties 设置中文显示，fontsize 设置字体大小</span></span><br><span class="line">plt.xlabel(<span class="string">&quot;x 轴&quot;</span>, fontproperties=zhfont1)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y 轴&quot;</span>, fontproperties=zhfont1)</span><br><span class="line">plt.plot(x,y) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130025610513.png" alt="image-20240130025610513" style="zoom:67%;" /> 
<blockquote>
<p>此外，我们还可以使用系统的字体：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">a = <span class="built_in">sorted</span>([f.name <span class="keyword">for</span> f <span class="keyword">in</span> matplotlib.font_manager.fontManager.ttflist])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>
<p>打印出你的 font_manager 的 ttflist 中所有注册的名字，找一个看中文字体例如：STFangsong(仿宋）,然后添加以下代码即可：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>]=[<span class="string">&#x27;STFangsong&#x27;</span>]</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="样式">样式</h3>
<p>作为线性图的替代，可以通过向 plot() 函数添加格式字符串来显示离散值。 可以使用以下格式化字符。</p>
<table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>'-'</code></td>
<td style="text-align:left">实线样式</td>
</tr>
<tr>
<td style="text-align:left"><code>'--'</code></td>
<td style="text-align:left">短横线样式</td>
</tr>
<tr>
<td style="text-align:left"><code>'-.'</code></td>
<td style="text-align:left">点划线样式</td>
</tr>
<tr>
<td style="text-align:left"><code>':'</code></td>
<td style="text-align:left">虚线样式</td>
</tr>
<tr>
<td style="text-align:left"><code>'.'</code></td>
<td style="text-align:left">点标记</td>
</tr>
<tr>
<td style="text-align:left"><code>','</code></td>
<td style="text-align:left">像素标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'o'</code></td>
<td style="text-align:left">圆标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'v'</code></td>
<td style="text-align:left">倒三角标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'^'</code></td>
<td style="text-align:left">正三角标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'&lt;'</code></td>
<td style="text-align:left">左三角标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'&gt;'</code></td>
<td style="text-align:left">右三角标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'1'</code></td>
<td style="text-align:left">下箭头标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'2'</code></td>
<td style="text-align:left">上箭头标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'3'</code></td>
<td style="text-align:left">左箭头标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'4'</code></td>
<td style="text-align:left">右箭头标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'s'</code></td>
<td style="text-align:left">正方形标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'p'</code></td>
<td style="text-align:left">五边形标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'*'</code></td>
<td style="text-align:left">星形标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'h'</code></td>
<td style="text-align:left">六边形标记 1</td>
</tr>
<tr>
<td style="text-align:left"><code>'H'</code></td>
<td style="text-align:left">六边形标记 2</td>
</tr>
<tr>
<td style="text-align:left"><code>'+'</code></td>
<td style="text-align:left">加号标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'x'</code></td>
<td style="text-align:left">X 标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'D'</code></td>
<td style="text-align:left">菱形标记</td>
</tr>
<tr>
<td style="text-align:left"><code>'d'</code></td>
<td style="text-align:left">窄菱形标记</td>
</tr>
<tr>
<td style="text-align:left">`’</td>
<td style="text-align:left">'`</td>
</tr>
<tr>
<td style="text-align:left"><code>'_'</code></td>
<td style="text-align:left">水平线标记</td>
</tr>
</tbody>
</table>
<h3 id="颜色">颜色</h3>
<p>以下是颜色的缩写：</p>
<table>
<thead>
<tr>
<th style="text-align:left">字符</th>
<th style="text-align:left">颜色</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>'b'</code></td>
<td style="text-align:left">蓝色</td>
</tr>
<tr>
<td style="text-align:left"><code>'g'</code></td>
<td style="text-align:left">绿色</td>
</tr>
<tr>
<td style="text-align:left"><code>'r'</code></td>
<td style="text-align:left">红色</td>
</tr>
<tr>
<td style="text-align:left"><code>'c'</code></td>
<td style="text-align:left">青色</td>
</tr>
<tr>
<td style="text-align:left"><code>'m'</code></td>
<td style="text-align:left">品红色</td>
</tr>
<tr>
<td style="text-align:left"><code>'y'</code></td>
<td style="text-align:left">黄色</td>
</tr>
<tr>
<td style="text-align:left"><code>'k'</code></td>
<td style="text-align:left">黑色</td>
</tr>
<tr>
<td style="text-align:left"><code>'w'</code></td>
<td style="text-align:left">白色</td>
</tr>
</tbody>
</table>
<p>要显示圆来代表点，而不是上面示例中的线，请使用 ob 作为 plot() 函数中的格式字符串。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"> </span><br><span class="line">x = np.arange(<span class="number">1</span>,<span class="number">11</span>) </span><br><span class="line">y =  <span class="number">2</span>  * x +  <span class="number">5</span> </span><br><span class="line">plt.title(<span class="string">&quot;Matplotlib demo&quot;</span>) </span><br><span class="line">plt.xlabel(<span class="string">&quot;x axis caption&quot;</span>) </span><br><span class="line">plt.ylabel(<span class="string">&quot;y axis caption&quot;</span>) </span><br><span class="line">plt.plot(x,y,<span class="string">&quot;ob&quot;</span>) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130025830817.png" alt="image-20240130025830817" style="zoom:67%;" /> 
<h3 id="绘制正弦波">绘制正弦波</h3>
<p>以下实例使用 matplotlib 生成正弦波图。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="comment"># 计算正弦曲线上点的 x 和 y 坐标</span></span><br><span class="line">x = np.arange(<span class="number">0</span>,  <span class="number">3</span>  * np.pi,  <span class="number">0.1</span>) </span><br><span class="line">y = np.sin(x)</span><br><span class="line">plt.title(<span class="string">&quot;sine wave form&quot;</span>)  </span><br><span class="line"><span class="comment"># 使用 matplotlib 来绘制点</span></span><br><span class="line">plt.plot(x, y) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130025904495.png" alt="image-20240130025904495" style="zoom:67%;" /> 
<h3 id="subplot">subplot()</h3>
<p>subplot() 函数允许你在同一图中绘制不同的东西。</p>
<p>以下实例绘制正弦和余弦值:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="comment"># 计算正弦和余弦曲线上的点的 x 和 y 坐标 </span></span><br><span class="line">x = np.arange(<span class="number">0</span>,  <span class="number">3</span>  * np.pi,  <span class="number">0.1</span>) </span><br><span class="line">y_sin = np.sin(x) </span><br><span class="line">y_cos = np.cos(x)  </span><br><span class="line"><span class="comment"># 建立 subplot 网格，高为 2，宽为 1  </span></span><br><span class="line"><span class="comment"># 激活第一个 subplot</span></span><br><span class="line">plt.subplot(<span class="number">2</span>,  <span class="number">1</span>,  <span class="number">1</span>)  </span><br><span class="line"><span class="comment"># 绘制第一个图像 </span></span><br><span class="line">plt.plot(x, y_sin) </span><br><span class="line">plt.title(<span class="string">&#x27;Sine&#x27;</span>)  </span><br><span class="line"><span class="comment"># 将第二个 subplot 激活，并绘制第二个图像</span></span><br><span class="line">plt.subplot(<span class="number">2</span>,  <span class="number">1</span>,  <span class="number">2</span>) </span><br><span class="line">plt.plot(x, y_cos) </span><br><span class="line">plt.title(<span class="string">&#x27;Cosine&#x27;</span>)  </span><br><span class="line"><span class="comment"># 展示图像</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130025940804.png" alt="image-20240130025940804" style="zoom:67%;" /> 
<h3 id="bar">bar()</h3>
<p>pyplot 子模块提供 bar() 函数来生成条形图。</p>
<p>以下实例生成两组 x 和 y 数组的条形图。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line">x =  [<span class="number">5</span>,<span class="number">8</span>,<span class="number">10</span>] </span><br><span class="line">y =  [<span class="number">12</span>,<span class="number">16</span>,<span class="number">6</span>] </span><br><span class="line">x2 =  [<span class="number">6</span>,<span class="number">9</span>,<span class="number">11</span>] </span><br><span class="line">y2 =  [<span class="number">6</span>,<span class="number">15</span>,<span class="number">7</span>] </span><br><span class="line">plt.bar(x, y, align =  <span class="string">&#x27;center&#x27;</span>) </span><br><span class="line">plt.bar(x2, y2, color =  <span class="string">&#x27;g&#x27;</span>, align =  <span class="string">&#x27;center&#x27;</span>) </span><br><span class="line">plt.title(<span class="string">&#x27;Bar graph&#x27;</span>) </span><br><span class="line">plt.ylabel(<span class="string">&#x27;Y axis&#x27;</span>) </span><br><span class="line">plt.xlabel(<span class="string">&#x27;X axis&#x27;</span>) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130030012943.png" alt="image-20240130030012943" style="zoom:67%;" /> 
<h3 id="plt">plt()</h3>
<p>Matplotlib 可以将直方图的数字表示转换为图形。 pyplot 子模块的 plt() 函数将包含数据和 bin 数组的数组作为参数，并转换为直方图。</p>
<blockquote>
<h4 id="numpy-histogram">numpy.histogram()</h4>
<p>numpy.histogram() 函数是数据的频率分布的图形表示。 水平尺寸相等的矩形对应于类间隔，称为 bin，变量 height 对应于频率。</p>
<p>numpy.histogram()函数将输入数组和 bin 作为两个参数。 bin 数组中的连续元素用作每个 bin 的边界。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">22</span>,<span class="number">87</span>,<span class="number">5</span>,<span class="number">43</span>,<span class="number">56</span>,<span class="number">73</span>,<span class="number">55</span>,<span class="number">54</span>,<span class="number">11</span>,<span class="number">20</span>,<span class="number">51</span>,<span class="number">5</span>,<span class="number">79</span>,<span class="number">31</span>,<span class="number">27</span>])</span><br><span class="line">np.histogram(a,bins =  [<span class="number">0</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">100</span>]) </span><br><span class="line">hist,bins = np.histogram(a,bins =  [<span class="number">0</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">100</span>])  </span><br><span class="line"><span class="built_in">print</span> (hist) </span><br><span class="line"><span class="built_in">print</span> (bins)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">1</span>]</span><br><span class="line">[  <span class="number">0</span>  <span class="number">20</span>  <span class="number">40</span>  <span class="number">60</span>  <span class="number">80</span> <span class="number">100</span>]</span><br></pre></td></tr></table></figure>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  </span><br><span class="line"> </span><br><span class="line">a = np.array([<span class="number">22</span>,<span class="number">87</span>,<span class="number">5</span>,<span class="number">43</span>,<span class="number">56</span>,<span class="number">73</span>,<span class="number">55</span>,<span class="number">54</span>,<span class="number">11</span>,<span class="number">20</span>,<span class="number">51</span>,<span class="number">5</span>,<span class="number">79</span>,<span class="number">31</span>,<span class="number">27</span>]) </span><br><span class="line">plt.hist(a, bins =  [<span class="number">0</span>,<span class="number">20</span>,<span class="number">40</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">100</span>]) </span><br><span class="line">plt.title(<span class="string">&quot;histogram&quot;</span>) </span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/NumPy/image-20240130030212576.png" alt="image-20240130030212576" style="zoom:67%;" /> 
<h3 id="更多">更多</h3>
<p>Matplotlib 更多参考内容：</p>
<ul>
<li><a href="https://www.runoob.com/matplotlib/matplotlib-tutorial.html">Matplotlib 教程 1</a></li>
<li><a href="https://www.runoob.com/w3cnote/matplotlib-tutorial.html">Matplotlib 教程 2</a></li>
</ul>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>《计算机组成原理》Notes_持续更新...</title>
    <url>/butterflyblog/2024/03/01/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E3%80%8BNotes_%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h1>《计算机组成原理》Notes_持续更新…</h1>
<blockquote>
<p>来源：同济大学计算机系《计算机组成原理》课程 ComputerOrganization</p>
<p>2024-03-01@isSeymour</p>
</blockquote>
<h2 id="第1章-计算机系统概述">第1章 计算机系统概述</h2>
]]></content>
      <categories>
        <category>大学课程</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>双色素材收集</title>
    <url>/butterflyblog/2023/08/04/%E5%8F%8C%E8%89%B2%E7%B4%A0%E6%9D%90%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<h1>双色素材收集</h1>
<blockquote>
<p>来源：网络收集</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805142624931.png" alt="image-20230805142624931" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805142734561.png" alt="image-20230805142734561" style="zoom:50%;" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#18545A - #F1F2B5</span><br><span class="line">#F902FF - #00DBDE</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805142946263.png" alt="image-20230805142946263" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143004439.png" alt="image-20230805143004439" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143022880.png" alt="image-20230805143022880" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143051753.png" alt="image-20230805143051753" style="zoom:50%;" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#F8DF72 - #057748</span><br><span class="line">#93D5DC - #2E317C</span><br><span class="line">#E9DB39 - #2E317C</span><br><span class="line">#E9F1F6 - #12AA9C</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143240829.png" alt="image-20230805143240829" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143306085.png" alt="image-20230805143306085" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143324079.png" alt="image-20230805143324079" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143341551.png" alt="image-20230805143341551" style="zoom:50%;" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#F0C9CF - #2F2F35</span><br><span class="line">#B01F24 - #003472</span><br><span class="line">#F2DE76 - #AB96C5</span><br><span class="line">#F0C9CF - #AB96C5</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143608325.png" alt="image-20230805143608325" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143622503.png" alt="image-20230805143622503" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143647202.png" alt="image-20230805143647202" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143704117.png" alt="image-20230805143704117" style="zoom:50%;" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#83CBAC - #003472</span><br><span class="line">#475164 - #A4CAB6</span><br><span class="line">#B9DEC9 - #2775B6</span><br><span class="line">#207F4C - #2D2D30</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143859167.png" alt="image-20230805143859167" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805143921542.png" alt="image-20230805143921542" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805144001731.png" alt="image-20230805144001731" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805144017810.png" alt="image-20230805144017810" style="zoom:50%;" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#CCA4E3 - #15559A</span><br><span class="line">#F0F5E5 - #1F2040</span><br><span class="line">#BEC936 - #223E36</span><br><span class="line">#1677B3 - #C6E6E8</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805144159269.png" alt="image-20230805144159269" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805144218945.png" alt="image-20230805144218945" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805144254856.png" alt="image-20230805144254856" style="zoom:50%;" /> <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/color/image-20230805144348704.png" alt="image-20230805144348704" style="zoom:50%;" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#DAD4CB - #8076A3</span><br><span class="line">#2775B6 - #BACCD9</span><br><span class="line">#EF498B - #1F2040</span><br><span class="line">#5E616D - #F7CFBA</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>通用知识</category>
      </categories>
      <tags>
        <tag>颜色素材</tag>
      </tags>
  </entry>
  <entry>
    <title>弹性盒子 flex 布局语法</title>
    <url>/butterflyblog/2023/07/10/%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90flex%E5%B8%83%E5%B1%80%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1>弹性盒子flex布局语法</h1>
<blockquote>
<p>传统为盒子模型布局，但有缺点，如：无法实现垂直居中</p>
<p>Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>
</blockquote>
<h3 id="说明">说明</h3>
<p><strong>任何一个容器都可以指定为Flex布局。</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>行内元素也可以使用Flex布局。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Webkit内核的浏览器，必须加上-webkit前缀。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。</p>
<ul>
<li>
<p>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。</p>
<p>它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230402162410751.png" alt="image-20230402162410751" style="zoom: 80%;" />
<ul>
<li>
<p>容器默认存在两根轴：</p>
<ul>
<li>
<p>水平的主轴（main axis）</p>
<blockquote>
<p>主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end</p>
</blockquote>
</li>
<li>
<p>垂直的交叉轴（cross axis）</p>
<blockquote>
<p>交叉轴的开始位置叫做cross start，结束位置叫做cross end</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p>项目默认沿主轴排列。</p>
</li>
<li>
<p>单个项目占据的主轴空间叫做main size，</p>
<p>占据的交叉轴空间叫做cross size。</p>
</li>
</ul>
</li>
</ul>
<h3 id="容器属性">容器属性</h3>
<h4 id="flex-direction">flex-direction</h4>
<p>决定主轴的方向（即项目的排列方向）</p>
<ul>
<li>row（默认值）：主轴为水平方向，起点在左端。</li>
<li>row-reverse：主轴为水平方向，起点在右端。</li>
<li>column：主轴为垂直方向，起点在上沿。</li>
<li>column-reverse：主轴为垂直方向，起点在下沿。</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230402162751718.png" alt="image-20230402162751718" style="zoom:80%;" />
<h4 id="flex-wrap">flex-wrap</h4>
<p>默认情况下，项目都排在一条线（又称”轴线”）上。</p>
<p>flex-wrap属性定义，如果一条轴线排不下，如何换行。</p>
<ul>
<li>
<p>nowrap（默认）：不换行</p>
</li>
<li>
<p>wrap：换行，第一行在上方</p>
</li>
<li>
<p>wrap-reverse：换行，第一行在下方</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230402162859131.png" alt="image-20230402162859131" style="zoom:80%;" />
<h4 id="flex-flow">flex-flow</h4>
<p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式</p>
<p>默认值为row nowrap</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">flex-flow</span>: &lt;flex-direction&gt; &lt;flex-wrap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="justify-content">justify-content</h4>
<p>定义了项目在主轴上的对齐方式</p>
<p>具体对齐方式与轴的方向有关，下面假设主轴为从左到右。</p>
<ul>
<li>flex-start（默认值）：左对齐</li>
<li>flex-end：右对齐</li>
<li>center： 居中</li>
<li>space-between：两端对齐，项目之间的间隔都相等</li>
<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://www.runoob.com/wp-content/uploads/2015/07/c55dfe8e3422458b50e985552ef13ba5.png" alt="img" style="zoom:80%;" />
<h4 id="align-items">align-items</h4>
<p>定义项目在交叉轴上如何对齐</p>
<p>具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p>
<ul>
<li>flex-start：交叉轴的起点对齐</li>
<li>flex-end：交叉轴的终点对齐</li>
<li>center：交叉轴的中点对齐</li>
<li>baseline: 项目的第一行文字的基线对齐</li>
<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://www.runoob.com/wp-content/uploads/2015/07/2b0c39c7e7a80d5a784c8c2ca63cde17.png" alt="img" style="zoom:80%;" />
<h4 id="align-content">align-content</h4>
<p>定义了多根轴线的对齐方式。</p>
<p>如果项目只有一根轴线，该属性不起作用</p>
<ul>
<li>flex-start：与交叉轴的起点对齐</li>
<li>flex-end：与交叉轴的终点对齐</li>
<li>center：与交叉轴的中点对齐</li>
<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布</li>
<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍</li>
<li>stretch（默认值）：轴线占满整个交叉轴</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://www.runoob.com/wp-content/uploads/2015/07/f10918ccb8a13247c9d47715a2bd2c33.png" alt="img" style="zoom:80%;" />
<h3 id="项目属性">项目属性</h3>
<h4 id="order">order</h4>
<p>定义项目的排列顺序。</p>
<p>数值越小，排列越靠前，默认为0。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: &lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230402163850395.png" alt="image-20230402163850395" style="zoom:80%;" />
<h4 id="flex-grow">flex-grow</h4>
<p>定义项目的放大比例。</p>
<p>默认为0，即如果存在剩余空间，也不放大。</p>
<blockquote>
<p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。</p>
<p>如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: &lt;number&gt;; <span class="comment">/* default 0 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230402163934529.png" alt="image-20230402163934529" style="zoom:80%;" />
<h4 id="flex-shrink">flex-shrink</h4>
<p>定义了项目的缩小比例。</p>
<p>默认为1，即如果空间不足，该项目将缩小。</p>
<blockquote>
<p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。</p>
<p>如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。</p>
<p>负值对该属性无效。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: &lt;number&gt;; <span class="comment">/* default 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/img/image-20230402164028190.png" alt="image-20230402164028190" style="zoom:80%;" />
<h4 id="flex-basis">flex-basis</h4>
<p>定义了在分配多余空间之前，项目占据的主轴空间（main size）。</p>
<p>浏览器根据这个属性，计算主轴是否有多余空间。</p>
<p>它的默认值为auto，即项目的本来大小。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: &lt;length&gt; | auto; <span class="comment">/* default auto */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p>
<h4 id="flex">==flex</h4>
<p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写。</p>
<p>默认值为0 1 auto。后两个属性可选。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: none | [ &lt;<span class="string">&#x27;flex-grow&#x27;</span>&gt; &lt;<span class="string">&#x27;flex-shrink&#x27;</span>&gt;? || &lt;<span class="string">&#x27;flex-basis&#x27;</span>&gt; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该属性有两个快捷值：</p>
<ul>
<li>
<p>auto (1 1 auto)</p>
<p>全都等比例放大或缩小</p>
</li>
<li>
<p>none (0 0 auto)</p>
<p>全都不放大缩小</p>
</li>
</ul>
<p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p>
<h4 id="align-self">align-self</h4>
<p>允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。</p>
<p>默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p>
<p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://www.runoob.com/wp-content/uploads/2015/07/55b19171b8b6b9487d717bf2ecbba6de.png" alt="img" style="zoom:80%;" />
]]></content>
      <categories>
        <category>Web技术</category>
      </categories>
      <tags>
        <tag>flex布局</tag>
      </tags>
  </entry>
  <entry>
    <title>数字逻辑实验Notes</title>
    <url>/butterflyblog/2023/09/21/%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%AE%9E%E9%AA%8CNotes/</url>
    <content><![CDATA[<h1>数字逻辑实验Notes</h1>
<blockquote>
<p>@isSeymour</p>
<p>2023.9.21</p>
</blockquote>
<h2 id="一、软件介绍">一、软件介绍</h2>
<h3 id="1-logisim">1. logisim</h3>
<ul>
<li>
<p>画逻辑门图</p>
<p>这是画图的，与后面的 Vivado 并无关系！</p>
</li>
<li>
<p>你可以不画图，也可以在脑子里画图，</p>
<p>这个软件只是让你的逻辑门电路图变得清晰好看，仅此而已！</p>
</li>
</ul>
<h3 id="2-ModelSim-PE">2. ModelSim PE</h3>
<ul>
<li>
<p>模拟软件</p>
<p>这是在你做好一个vivado工程，进行模拟仿真的。</p>
</li>
<li>
<p>与Vivado 关联，必须使用</p>
</li>
</ul>
<h3 id="3-Vivado">3. Vivado</h3>
<ul>
<li>
<p><code>.xpr</code>文件的开发软件</p>
<p>这是你所有工程文件的创建软件，需要在此新建设计文件，写入verilog 代码</p>
</li>
<li>
<p>核心，必须使用</p>
</li>
</ul>
<h2 id="二、一般流程">二、一般流程</h2>
<h3 id="1-logisim-画图">1. logisim 画图</h3>
<ul>
<li>先用loigim画图，画出你的逻辑门电路图。</li>
</ul>
<h3 id="2-Vivado-工程">2. Vivado 工程</h3>
<ul>
<li>
<p>新建工程</p>
<ul>
<li>
<p>打开 Vivado 2016.2 软件</p>
</li>
<li>
<p>点击新建工程 Create New Project，自行选择 保存路径</p>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>注：若是打开已有工程，则是Open Project，找到工程文件夹下的<code>.xpr</code>文件，打开。</p>
</blockquote>
<ul>
<li>新增源文件
<ul>
<li>点击左上方的 Add Sources</li>
<li>选择 Add or create design sources，点击next</li>
<li>点击 Create New File</li>
<li>输入你的模块名作为文件名 File Name，点击Finish</li>
<li>这里模块名可以不用改，I/O端口自行添加、删除、命名、设置INPUT/OUTPUT模式</li>
<li>点击OK</li>
</ul>
</li>
</ul>
<blockquote>
<p>若要删除源文件，右键选中文件，Remove，记得勾选Alse delete 来删除文件夹中的文件。</p>
</blockquote>
<ul>
<li>
<p>写入verilog 代码</p>
<ul>
<li>在这里的<code>.v</code>文件可以写入你的 module 代码设置</li>
</ul>
</li>
<li>
<p>模拟仿真</p>
<ul>
<li>都写好了<code>.v</code>文件，点击左侧栏的 Run Simulation 进行模拟</li>
<li>进入模拟框，点击 Run all 按钮（中间上方的蓝色的播放按钮）</li>
<li>查看模拟结果，模拟结束</li>
</ul>
</li>
<li>
<p>综合</p>
<ul>
<li>
<p>选中模拟生成多出来的文件（一般在对应的<code>.v</code>文件下，多出来一个<code>.v</code>文件）</p>
</li>
<li>
<p>选中这个<code>.v</code>文件，选择 Set as top，作为顶层文件</p>
</li>
<li>
<p>点击左侧栏中的运行综合 Run Synthesis</p>
</li>
<li>
<p>综合结束后，弹出一个框，选择Open Synthesized Design</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230921212239287.png" alt="image-20230921212239287" style="zoom: 80%;" /> 
</li>
<li>
<p>添加约束</p>
<ul>
<li>上方栏 layout 中改为 I/O planning。</li>
<li>在底线有一栏，找到 I/O ports 点击打开，在这里选择每个端口对应的脚约束，如 J17、H15、M13等等。</li>
</ul>
<blockquote>
<p>这里电平和标准显示有红色的默认值 Default，我们要自行选一下，仍然选那个默认的值即可。</p>
<p>否则，后面会因为端口争用而报错。</p>
</blockquote>
<ul>
<li>点击左上角的保存按钮（快捷键Crtl + S），会让你保存到已有<code>.xdc</code>文件，或新建。这里新建，命名文件。</li>
</ul>
</li>
<li>
<p>生成下板</p>
<ul>
<li>Source栏的文件里，多了<code>.xdc</code>文件，双击查看。</li>
<li>点击左侧栏的 Generate Bitstream</li>
<li>等待一会，正在生成。完成后会弹出下图框。选择Open Implemented Design。</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230921212959247.png" alt="image-20230921212959247" style="zoom: 80%;" /> 
<ul>
<li>点击左侧栏的 Open Hardware Manager。</li>
<li>关闭开关，把你的开发板连接到电脑，打开开关。</li>
<li>正上方有浅绿色的提示连接，点击Open Target 后选择 Auto Connect自动连接。</li>
<li>连接成功后，正上方会有浅绿色提示导入程序 Program device，按提示点下一步即可。</li>
<li>导入结束，可以测试你的程序效果了。</li>
</ul>
</li>
</ul>
<h2 id="三、实验报告问题">三、实验报告问题</h2>
<h3 id="1-logisim逻辑验证图">1. logisim逻辑验证图</h3>
<ul>
<li>
<p>打开Logisim 画一下图即可</p>
<p>说明见下图</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930190857258.png" alt="image-20230930190857258" style="zoom:80%;" /> 
<h3 id="2-modelsim仿真波形图">2. modelsim仿真波形图</h3>
<ul>
<li>打开vivado工程文件（<code>.xpr</code>文件）</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930191344505.png" alt="image-20230930191344505" style="zoom:80%;" /> 
<blockquote>
<p>Run Simulation中，选择Run Behavioral Simulation。</p>
</blockquote>
<ul>
<li>调整波形图位置为合适位置</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930191955770.png" alt="image-20230930191955770" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930192128856.png" alt="image-20230930192128856" style="zoom:80%;" /> 
<h3 id="3-下板实验结果">3. 下板实验结果</h3>
<ul>
<li>打开硬件管理 Open Hardware Manager</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930192546513.png" alt="image-20230930192546513" style="zoom:80%;" /> 
<ul>
<li>连接开发板</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930192818904.png" alt="image-20230930192818904" style="zoom:80%;" /> 
<ul>
<li>程序写入开发板</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930193104097.png" alt="image-20230930193104097" style="zoom:80%;" /> 
<ul>
<li>测试你的开发板吧</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930193453775.png" alt="image-20230930193453775" style="zoom:80%;" /> 
<blockquote>
<p>备注：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930194029079.png" alt="image-20230930194029079" style="zoom:80%;" /> 
<p>改了之后，需要重新Generate Bitstream。</p>
</blockquote>
<h3 id="4-源文件-v-在哪？">4.  源文件 .v 在哪？</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930205352087.png" alt="image-20230930205352087" style="zoom:80%;" /> 
<h3 id="5-文件-bit-在哪？">5. 文件.bit 在哪？</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930211145857.png" alt="image-20230930211145857" style="zoom:80%;" /> 
<blockquote>
<p>备注：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/27d3012fc22e892dc6829314189f52b.jpg" alt="27d3012fc22e892dc6829314189f52b" style="zoom: 33%;" /> 
</blockquote>
<h3 id="6-提交规范">6. 提交规范</h3>
<p><img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DigitLogic/image-20230930212748213.png" alt="image-20230930212748213"></p>
<h2 id="四、注意事项">四、注意事项</h2>
<h3 id="1">1.</h3>
<p><img src="C:%5CUsers%5C86182%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231009222156469.png" alt="image-20231009222156469"></p>
]]></content>
      <categories>
        <category>大学课程</category>
      </categories>
      <tags>
        <tag>数字逻辑实验</tag>
      </tags>
  </entry>
  <entry>
    <title>简明C库Notes</title>
    <url>/butterflyblog/2023/09/27/%E7%AE%80%E6%98%8EC%E5%BA%93Notes/</url>
    <content><![CDATA[<h1>简明C库Notes</h1>
<h2 id="一、输入输出">一、输入输出</h2>
<h3 id="代码解释">代码解释</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> b;</span><br><span class="line">    <span class="type">double</span> f;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">255</span>];</span><br><span class="line">    </span><br><span class="line">	<span class="comment">// 输入</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %c %s&quot;</span>, &amp;a, &amp;ch, str);	<span class="comment">// 整型、字符、字符串</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;b);		<span class="comment">// 长长整型</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;f);</span><br><span class="line">    getchar(ch);	<span class="comment">// 输入字符，只要是ASCII码表上有的，都会读入（不忽略任何字符）。返回值为int类型ASCII码值</span></span><br><span class="line">    gets(str);		<span class="comment">// 输入字符串，遇到换行符才为结束，读入后会吸收掉换行符。返回值为str首地址（文件尾返回值NULL）</span></span><br><span class="line">    </span><br><span class="line">	<span class="comment">// 输出</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %c %s&quot;</span>, a, ch, str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%5.2f&quot;</span>, &amp;f);		<span class="comment">// 右对齐并占用宽度为 5，保留2位小数的浮点数</span></span><br><span class="line">    <span class="built_in">putchar</span>(ch);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="二、内存分配">二、内存分配</h2>
<h3 id="代码解释-2">代码解释</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// malloc</span></span><br><span class="line"><span class="comment">// 用于申请一片新的地址空间</span></span><br><span class="line"><span class="comment">// 例：顺序表新建InitList，直接申请新空间即可</span></span><br><span class="line">L-&gt;elem = (ElemType*)<span class="built_in">malloc</span>(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line"></span><br><span class="line"><span class="comment">// realloc</span></span><br><span class="line"><span class="comment">// 用于在已使用的内存进行分配，会帮你扩大连续的内存空间，连续的！</span></span><br><span class="line"><span class="comment">// 例：顺序表插入，已有空间不足够了，要扩大，同时还要保证扩大后的空间仍然和之前的连续！</span></span><br><span class="line">ElemType* newbase;</span><br><span class="line">newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize + LISTINCREMENT) * <span class="keyword">sizeof</span>(ElemType));</span><br></pre></td></tr></table></figure>
<h2 id="三、字符串处理C版">三、字符串处理C版</h2>
<h3 id="代码解释-3">代码解释</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入的字符串是否为insert</span></span><br><span class="line"><span class="type">char</span> option[<span class="number">255</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, option);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(option, <span class="string">&quot;insert&quot;</span>)==<span class="number">0</span>)		<span class="comment">// 比较结果是0为相等，正数前者大，负数后者大</span></span><br><span class="line">&#123;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 复制字符串</span></span><br><span class="line"><span class="type">char</span> str1[<span class="number">255</span>], str2[<span class="number">255</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str1);</span><br><span class="line"><span class="built_in">strcpy</span>(str2, str1);		<span class="comment">// 把str1复制到str2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串长度</span></span><br><span class="line"><span class="type">char</span> s1[<span class="number">255</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s1);</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(s1);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拼接字符串</span></span><br><span class="line"><span class="type">char</span> Str1[<span class="number">255</span>], Str[<span class="number">255</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, Str1);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, Str2);</span><br><span class="line"><span class="built_in">strcat</span>(Str1, Str2);		<span class="comment">// 把Str2接在Str1末尾</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找字符串中含某字符</span></span><br><span class="line"><span class="type">char</span> STR[<span class="number">255</span>] = <span class="string">&quot;abcdef&quot;</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line"><span class="type">char</span> *ptr;</span><br><span class="line">ptr = <span class="built_in">strchr</span>(STR, ch);</span><br><span class="line"><span class="keyword">if</span>(ptr!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;位置：%ld，输出：%s&quot;</span>, ptr-str+<span class="number">1</span>, ptr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;没有找到&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="四、字符串处理C-版">四、字符串处理C++版</h2>
<ul>
<li>
<p>C++大大增强了对字符串的支持，除了可以使用C风格的字符串，还可以使用内置的 string 类。</p>
<p>string 类处理起字符串来会方便很多，完全可以代替C语言中的字符数组或字符串指针。</p>
</li>
</ul>
<h3 id="初步认识">初步认识</h3>
<ul>
<li>string 变量可以直接通过赋值操作符<code>=</code>进行赋值</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string s1;	<span class="comment">//默认值是&quot;&quot;，也即空字符串。</span></span><br><span class="line">    string s2 = <span class="string">&quot;c plus plus&quot;</span>;	<span class="comment">// 初始化为&quot;c plus plus&quot;。与C风格的字符串不同，string 的结尾没有结束标志&#x27;\0&#x27;。</span></span><br><span class="line">    string s3 = s2;	<span class="comment">// s3 的内容也是&quot;c plus plus&quot;。</span></span><br><span class="line">    <span class="function">string <span class="title">s4</span> <span class="params">(<span class="number">5</span>, <span class="string">&#x27;s&#x27;</span>)</span></span>;	<span class="comment">// 由 5 个&#x27;s&#x27;字符组成的字符串，也就是&quot;sssss&quot;。</span></span><br><span class="line">    <span class="comment">// 输入输出</span></span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;s;  <span class="comment">//输入字符串（cin遇到空格就认为结束！）</span></span><br><span class="line">    cout&lt;&lt;s&lt;&lt;endl;  <span class="comment">//输出字符串</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>运行结果：</p>
<p>abcd  efgh↙<br>
abcd</p>
<p>虽然我们输入了两个由空格隔开的网址，但是只输出了一个，这是因为输入运算符<code>&gt;&gt;</code>默认会忽略空格，遇到空格就认为输入结束，所以最后输入的<code>efgh</code>没有被存储到变量 s。</p>
</blockquote>
<h3 id="代码解释-4">代码解释</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 求长度 length()</span></span><br><span class="line">string s = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line"><span class="type">int</span> len = s.<span class="built_in">length</span>();	<span class="comment">// 4 (由于 string 的末尾没有&#x27;\0&#x27;字符，所以 length() 返回的是字符串的真实长度，而不是长度 +1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问单个字符，从0开始计数</span></span><br><span class="line">s[<span class="number">5</span>] = <span class="string">&#x27;5&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拼接（很简单！怎么拼都行，且只需要写+即可）</span></span><br><span class="line">string s1 = <span class="string">&quot;first &quot;</span>;</span><br><span class="line">string s2 = <span class="string">&quot;second &quot;</span>;</span><br><span class="line"><span class="type">char</span> *s3 = <span class="string">&quot;third &quot;</span>;</span><br><span class="line"><span class="type">char</span> s4[] = <span class="string">&quot;fourth &quot;</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="string">&#x27;@&#x27;</span>;</span><br><span class="line">string s5 = s1 + s2;</span><br><span class="line">string s6 = s1 + s3;</span><br><span class="line">string s7 = s1 + s4;</span><br><span class="line">string s8 = s1 + ch;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增删改查</span></span><br><span class="line"><span class="comment">// [插入]</span></span><br><span class="line">string s1, s2;</span><br><span class="line">s1 = <span class="string">&quot;1234567890&quot;</span>;</span><br><span class="line">s2 = <span class="string">&quot;aaa&quot;</span>;</span><br><span class="line">s1.<span class="built_in">insert</span>(<span class="number">5</span>, s2);	<span class="comment">// 也可以直接插 s1.insert(5, &quot;aaa&quot;);</span></span><br><span class="line"><span class="comment">// 结果：12345aaa67890</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// [删除]</span></span><br><span class="line">string s1, s2, s3;</span><br><span class="line">s1 = s2 = <span class="string">&quot;1234567890&quot;</span>;</span><br><span class="line">s1.<span class="built_in">erase</span>(<span class="number">5</span>);	<span class="comment">//12345</span></span><br><span class="line">s2.<span class="built_in">erase</span>(<span class="number">5</span>, <span class="number">3</span>);	<span class="comment">//1234590</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// [截取]</span></span><br><span class="line">string s1 = <span class="string">&quot;first second third&quot;</span>;</span><br><span class="line">string s2;</span><br><span class="line">s2 = s1.<span class="built_in">substr</span>(<span class="number">6</span>, <span class="number">6</span>);	<span class="comment">//second</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// [查找]</span></span><br><span class="line">string s1 = <span class="string">&quot;first second third&quot;</span>;</span><br><span class="line">string s2 = <span class="string">&quot;second&quot;</span>;</span><br><span class="line"><span class="type">int</span> index = s1.<span class="built_in">find</span>(s2,<span class="number">5</span>);	<span class="comment">// 表示在s1的第5个字符开始查找，默认0</span></span><br><span class="line"><span class="comment">// 结果：6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为C风格的字符串 c_str()</span></span><br><span class="line">string path = <span class="string">&quot;D:\\demo.txt&quot;</span>;	<span class="comment">// 有时候必须要使用C风格的字符串（例如打开文件时的路径）</span></span><br><span class="line">FILE *fp = <span class="built_in">fopen</span>(path.<span class="built_in">c_str</span>(), <span class="string">&quot;rt&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="数字字符">数字字符</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数字转字符串</span></span><br><span class="line">string s = <span class="built_in">to_string</span>(<span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串转数字</span></span><br><span class="line"><span class="type">int</span> a = <span class="built_in">stoi</span>(s);</span><br></pre></td></tr></table></figure>
<h2 id="五、C-标准库-stdarg-h">五、C 标准库 &lt;stdarg.h&gt;</h2>
<blockquote>
<p><strong>stdarg.h</strong> 头文件定义了一个变量类型 <strong>va_list</strong> 和三个宏，这三个宏可用于在参数个数未知（即参数个数可变）时获取函数中的参数。</p>
<p>可变参数的函数通在参数列表的末尾是使用省略号(,…)定义的。</p>
</blockquote>
<h3 id="库变量">库变量</h3>
<table>
<thead>
<tr>
<th style="text-align:left">变量</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>va_list</strong></td>
<td style="text-align:left">这是一个适用于 <strong>va_start()、va_arg()</strong> 和 <strong>va_end()</strong> 这三个宏存储信息的类型。</td>
</tr>
</tbody>
</table>
<h3 id="库宏">库宏</h3>
<table>
<thead>
<tr>
<th style="text-align:left">宏</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>void va_start(va_list ap, last_arg)</strong></td>
<td style="text-align:left">这个宏初始化 <strong>ap</strong> 变量，它与 <strong>va_arg</strong> 和 <strong>va_end</strong> 宏是一起使用的。<strong>last_arg</strong> 是最后一个传递给函数的已知的固定参数，即省略号之前的参数。</td>
</tr>
<tr>
<td style="text-align:left"><strong>type va_arg(va_list ap, type)</strong></td>
<td style="text-align:left">这个宏检索函数参数列表中类型为 <strong>type</strong> 的下一个参数。</td>
</tr>
<tr>
<td style="text-align:left"><strong>void va_end(va_list ap)</strong></td>
<td style="text-align:left">这个宏允许使用了 <strong>va_start</strong> 宏的带有可变参数的函数返回。如果在从函数返回之前没有调用 <strong>va_end</strong>，则结果为未定义。</td>
</tr>
</tbody>
</table>
<h4 id="va-start">va_start</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>描述</span><br><span class="line">C 库宏 <span class="function"><span class="type">void</span> <span class="title">va_start</span><span class="params">(va_list ap, last_arg)</span> 初始化 ap 变量，它与 va_arg 和 va_end 宏是一起使用的。last_arg 是最后一个传递给函数的已知的固定参数，即省略号之前的参数。</span></span><br><span class="line"><span class="function">这个宏必须在使用 va_arg 和 va_end 之前被调用。</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">2.声明</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">va_start</span><span class="params">(va_list ap, last_arg)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>参数</span><br><span class="line">ap -- 这是一个 va_list 类型的对象，它用来存储通过 va_arg 获取额外参数时所必需的信息。</span><br><span class="line">last_arg -- 最后一个传递给函数的已知的固定参数。</span><br></pre></td></tr></table></figure>
<h4 id="var-arg">var_arg</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>描述</span><br><span class="line">C 库宏 <span class="function">type <span class="title">va_arg</span><span class="params">(va_list ap, type)</span> 检索函数参数列表中类型为 type 的下一个参数。它无法判断检索到的参数是否是传给函数的最后一个参数。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2.声明</span></span><br><span class="line"><span class="function">type <span class="title">va_arg</span><span class="params">(va_list ap, type)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">3.参数</span></span><br><span class="line"><span class="function">ap -- 这是一个 va_list 类型的对象，存储了有关额外参数和检索状态的信息。该对象应在第一次调用 va_arg 之前通过调用 va_start 进行初始化。</span></span><br><span class="line"><span class="function">type -- 这是一个类型名称。该类型名称是作为扩展自该宏的表达式的类型来使用的。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">4.返回值</span></span><br><span class="line"><span class="function">该宏返回下一个额外的参数，是一个类型为 type 的表达式。</span></span><br></pre></td></tr></table></figure>
<h4 id="var-end">var_end</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>描述</span><br><span class="line">C 库宏 <span class="function"><span class="type">void</span> <span class="title">va_end</span><span class="params">(va_list ap)</span> 允许使用了 va_start 宏的带有可变参数的函数返回。如果在从函数返回之前没有调用 va_end，则结果为未定义。</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">2.声明</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">va_end</span><span class="params">(va_list ap)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">3.参数</span></span><br><span class="line"><span class="function">ap -- 这是之前由同一函数中的 va_start 初始化的 va_list 对象。</span></span><br></pre></td></tr></table></figure>
<h4 id="实例">实例</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span>, ...)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;10、20 和 30 的和 = %d\n&quot;</span>,  <span class="built_in">sum</span>(<span class="number">3</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>) );</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;4、20、25 和 30 的和 = %d\n&quot;</span>,  <span class="built_in">sum</span>(<span class="number">4</span>, <span class="number">4</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>) );</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> num_args, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="type">int</span> val = <span class="number">0</span>;</span><br><span class="line">   va_list ap;</span><br><span class="line">   <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">va_start</span>(ap, num_args);</span><br><span class="line">   <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; num_args; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      val += <span class="built_in">va_arg</span>(ap, <span class="type">int</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">va_end</span>(ap);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10、20 和 30 的和 = 60</span><br><span class="line">4、20、25 和 30 的和 = 79</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>算法常见报错问题</title>
    <url>/butterflyblog/2023/11/12/%E7%AE%97%E6%B3%95%E5%B8%B8%E8%A7%81%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1>算法常见报错问题</h1>
<h2 id="ACCEPT">ACCEPT</h2>
<ul>
<li>意思：正确</li>
</ul>
<h2 id="WRONG">WRONG</h2>
<ul>
<li>
<p>意思：答案错误</p>
</li>
<li>
<p>错误原因：输出答案不符合题目要求，不是正确答案</p>
</li>
<li>
<p>查错：</p>
<ul>
<li>如果根本算法错误，那肯定是错误</li>
<li>如果确定算法没问题，那应该是你的输出不符合题目要求输出格式</li>
</ul>
</li>
</ul>
<h2 id="Runtime-Error">Runtime Error</h2>
<ul>
<li>
<p>意思：运行时出错</p>
</li>
<li>
<p>错误原因：在运行过程中，出现了内存访问错误，如数组越界访问、指针指向访问越界等</p>
</li>
<li>
<p>查错：</p>
<ul>
<li>
<p>数组访问错误</p>
<ul>
<li>看是不是有对数组 <code>arr[-1]</code>的访问，或者<code>arr[ARRMAX+1]</code>的访问（ARRMAX是数组arr的大小）</li>
<li>下标错误，如使用char类型作为下标，超出范围，出现负数</li>
</ul>
</li>
<li>
<p>指针使用NULL错误</p>
<ul>
<li>
<p>查看是不是有<code>p</code>是<code>NULL</code>时使用了<code>p-&gt;next</code>或<code>p-&gt;data</code>之类的访问</p>
</li>
<li>
<p>没有进行指针初始化</p>
</li>
<li>
<p><code>p-&gt;next</code>跳跃过多</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>悲惨经历</p>
<ul>
<li>
<p>知道边界值不能访问，也确实判断了是不是边界值，可是有点问题——利用<code>&amp;&amp;</code>的截断机制</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 思考为什么？</span></span><br><span class="line"><span class="comment">// 错误</span></span><br><span class="line"><span class="keyword">if</span>(arr[i] &amp;&amp; i&gt;=<span class="number">0</span>)</span><br><span class="line">    ....;</span><br><span class="line">        </span><br><span class="line"><span class="comment">// 正确</span></span><br><span class="line"><span class="keyword">if</span>(i&gt;=<span class="number">0</span> &amp;&amp; arr[i])</span><br><span class="line">    ...;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h2 id="Time-Limit-Exceeded">Time Limit Exceeded</h2>
<ul>
<li>
<p>意思：超时</p>
</li>
<li>
<p>错误原因：算法不够优秀，时间复杂度太高，测试时超出了运行时间的限制</p>
</li>
<li>
<p>查错：</p>
<ul>
<li>改良算法，对时间复杂度进行优化</li>
</ul>
</li>
</ul>
<h2 id="Memory-Limit-Exceeded">Memory Limit Exceeded</h2>
<ul>
<li>
<p>意思：内存超限</p>
</li>
<li>
<p>错误原因：算法不够优秀，使用内存过大，超出了内存大小限制</p>
</li>
<li>
<p>查错：</p>
<ul>
<li>
<p>改良算法，对空间复杂度进行优化</p>
</li>
<li>
<p>我遇到过的错误情况：</p>
<ul>
<li>
<p>使用<code>cin</code>输入出错，导致内存错</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// T[i].lchild是整数类型，但是输入会出现字符‘-’</span></span><br><span class="line"><span class="comment">// 因此，后续cin都是fail，需要自己判断并改回clear正确</span></span><br><span class="line">cin &gt;&gt; T[i].lchild; </span><br><span class="line"><span class="keyword">if</span>(cin.<span class="built_in">fail</span>())</span><br><span class="line">&#123;</span><br><span class="line">    cin.<span class="built_in">clear</span>();</span><br><span class="line">    T[i].lchild = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Output-Size-Limit-Exceeded">Output Size Limit Exceeded</h2>
<ul>
<li>意思：输出大小限制超时</li>
<li>错误原因：也是超时限制，一般是某地方输出陷入了死循环，或者输出没有明确的终止。</li>
<li>查错：
<ul>
<li>应该是没写好输入的停止条件，导致一直在等下一次输入</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title>《统计学习方法》监督学习Notes</title>
    <url>/butterflyblog/2024/02/16/%E3%80%8A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E3%80%8B%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0Notes/</url>
    <content><![CDATA[<h1>《统计学习方法》监督学习Notes</h1>
<blockquote>
<p>来源：</p>
<ul>
<li>[《统计学习方法》书籍-第1篇 监督学习（链接缺失…）]</li>
</ul>
<p>2024-01-16@isSeymour</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/N-%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95-%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E7%AF%87.jpg" alt="N-统计学习方法-监督学习篇" style="zoom: 25%;" /> 
<h1>第1章 统计学习及监督学习概论</h1>
<h2 id="1-1-统计学习">1.1 统计学习</h2>
<ul>
<li>
<p>统计学习 statistical learning</p>
<p>是关于计算机基于数据构建概率统计模型并运用模型对数据进行预测与分析的一门学科。亦称统计机器学习 statistical machine learning。</p>
</li>
</ul>
<blockquote>
<p>“如果一个系统能够通过执行某个过程改进它的性能，这就是学习”</p>
<p>——Herbert A.Simon</p>
</blockquote>
<ul>
<li>
<p>统计学习的基本假设（前提）</p>
<p><strong>同类数据具有一定的统计规律性。</strong></p>
</li>
</ul>
<h2 id="1-2-统计学习的分类">1.2 统计学习的分类</h2>
<h3 id="基本分类">基本分类</h3>
<h4 id="监督学习-supervised-learning">监督学习 supervised learning</h4>
<p>指从标注数据中学习预测模型的机器学习问题。</p>
<ul>
<li>
<p>本质</p>
<p>学习<strong>输入到输出的映射的统计规律</strong>。</p>
</li>
<li>
<p>基本假设</p>
<p>训练数据和测试数据是<strong>依联合概率分布 P(X, Y) 独立同分布</strong>的。</p>
</li>
<li>
<p>模型</p>
<ul>
<li>条件概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></li>
<li>决策函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y = f(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>
<p>预测</p>
<p>输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_{N+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>N</mi></msub><mo>+</mo><mn>1</mn><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_N+1 = \arg \max P(y|x_{N+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_{N+1} = f(x_{N+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.1-%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0.png" alt="P1.1-监督学习" style="zoom:80%;" /> 
<h4 id="无监督学习-unsupervised-learning">无监督学习 unsupervised learning</h4>
<p>指从无标注数据中学习预测模型的机器学习问题。</p>
<ul>
<li>
<p>本质</p>
<p>学习<strong>数据中的统计规律或潜在结构</strong>。</p>
</li>
<li>
<p>模型</p>
<ul>
<li>
<p>函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z = g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>条件概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>z</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(z|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>条件概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(x|z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></p>
</li>
</ul>
</li>
<li>
<p>预测</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>z</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_{N+1} = \arg \max P(z|x_{N+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_{N+1} = g(x_{N+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.044em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.2-%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0.png" alt="P1.2-无监督学习" style="zoom:80%;" /> 
<h4 id="强化学习-reinforcement-learning">强化学习 reinforcement learning</h4>
<p>指智能系统在与环境的连续交互中学习最优行为策略的机器学习问题。</p>
<ul>
<li>
<p>本质</p>
<p>学习<strong>最优的序贯决策</strong>。</p>
</li>
<li>
<p>模型</p>
<p>每一步 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>，智能系统从环境中观测到一个状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">S_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与一个奖励 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">r_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，采取一个动作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">a_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p>环境根据智能系统选择的动作，决定下一步 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6984em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">s_{t+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 与奖励 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">r_{t+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
<p>注：目标不是短期奖励的最大化，而是长期积累奖励的最大化。</p>
</li>
<li>
<p>过程</p>
<p>强化学习过程中，系统不断试错 trial and error ，以达到学习最优策略的目的。</p>
</li>
<li>
<p>决策过程</p>
<p>强化学习的马尔可夫决策过程是状态、奖励、动作序列上的随机过程，由四元组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>S</mi><mo separator="true">,</mo><mi>A</mi><mo separator="true">,</mo><mi>P</mi><mo separator="true">,</mo><mi>r</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;S, A, P, r&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span>组成。</p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 是有限状态的集合</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 是有限动作的集合</p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span> 是状态转移概率函数</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn><mtext> </mtext></mrow></msub><mo>=</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>t</mi></msub><mo>=</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(s&#x27;|s,a) = P(s_{t+1~}= s&#x27;|s_t = s, a_t = a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mspace nobreak mtight"><span class="mtight"> </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 是奖励函数</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>t</mi></msub><mo>=</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(s, a) = E(r_{t+1}|s_t = s, a_t = a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></p>
</li>
</ul>
<p>马尔可夫决策过程具有马尔可夫性：下一个状态只依赖于前一个状态与动作，由状态转移函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(s&#x27;|s, a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span> 表示。下一个奖励依赖于前一个状态与动作，由奖励函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(s, a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span> 表示。</p>
</li>
<li>
<p>策略 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span></p>
<p>给定状态下动作的函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a = f(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span> 或者条件概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(a|s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p>价值函数（状态价值函数）</p>
<p>策略 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span> 从某一个状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span> 开始的长期积累奖励的数学期望</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mi>π</mi></msub><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">[</mo><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>γ</mi><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>+</mo><msup><mi>γ</mi><mn>2</mn></msup><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>3</mn></mrow></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">]</mo></mrow><annotation encoding="application/x-tex">v_\pi (s) = E_\pi \Big[r_{t+1} + \gamma r_{t+2} + \gamma^2 r_{t+3} + ... |s_t = s \Big]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0224em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">...∣</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord mathnormal">s</span><span class="mord"><span class="delimsizing size2">]</span></span></span></span></span></p>
</li>
<li>
<p>动作价值函数</p>
<p>策略 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span> 从某一个状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span> 和动作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 开始的长期积累奖励的数学期望</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mi>π</mi></msub><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mi>π</mi></msub><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">[</mo><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>γ</mi><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>+</mo><msup><mi>γ</mi><mn>2</mn></msup><msub><mi>r</mi><mrow><mi>t</mi><mo>+</mo><mn>3</mn></mrow></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>s</mi><mi>t</mi></msub><mo>=</mo><mi>s</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>t</mi></msub><mo>=</mo><mi>a</mi><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">]</mo></mrow><annotation encoding="application/x-tex">q_\pi (s, a) = E_\pi \Big[r_{t+1} + \gamma r_{t+2} + \gamma^2 r_{t+3} + ... |s_t = s, a_t = a \Big]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0224em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">...∣</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="delimsizing size2">]</span></span></span></span></span></p>
</li>
<li>
<p>目标</p>
<p>在所有可能的决策中选出价值函数最大的策略<code>Π*</code></p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.3-%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0.png" alt="P1.3-强化学习" style="zoom:80%;" /> 
<h4 id="半监督学习-semi-supervised-learning">半监督学习 semi-supervised learning</h4>
<p>指利用标注数据和未标注数据学习预测模型的机器学习问题。</p>
<ul>
<li>
<p>目的</p>
<p>旨在<strong>利用未标注数据中的信息，辅助标注数据</strong>，进行监督学习，以较低的成本达到较好的学习效果。</p>
</li>
</ul>
<h4 id="主动学习-active-learning">主动学习 active learning</h4>
<p>指机器不断主动给出实例让教师进行标注，然后利用标注数据学习预测模型的机器学习问题。</p>
<ul>
<li>
<p>目的</p>
<p><strong>找出对学习最有帮助的实例让教师标注</strong>，以较小的标注代价，达到较好的学习效果。</p>
</li>
</ul>
<h3 id="其他分类">其他分类</h3>
<ul>
<li>
<p>概率论</p>
<ul>
<li>概率模型（存在联合概率分布）</li>
<li>非概率模型</li>
</ul>
</li>
<li>
<p>线性</p>
<ul>
<li>线性模型（函数是线性函数）</li>
<li>非线性模型</li>
</ul>
</li>
<li>
<p>参数</p>
<ul>
<li>参数化模型（参数维度固定）</li>
<li>非参数化模型</li>
</ul>
</li>
<li>
<p>算法</p>
<ul>
<li>
<p>在线学习 online learning</p>
<p>每次接受一个样本，进行预测，之后学习模型，并不断重复该操作的机器学习。</p>
</li>
<li>
<p>批量学习 batch learning</p>
<p>一次接受所有数据，学习模型，之后进行预测。</p>
</li>
</ul>
</li>
</ul>
<h3 id="按技巧分类">按技巧分类</h3>
<ul>
<li>
<p><strong>贝叶斯学习 Bayesian learning</strong></p>
<p>在概率模型的学习和推理中，利用贝叶斯定理，计算在给定数据条件下模型的条件概率，即后验概率，并应用这个原理进行模型的估计，以及对数据的预测。</p>
<p>特点：使用模型的先验分布。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.6-%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%BC%B0%E8%AE%A1%E4%B8%8E%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1.png" alt="P1.6-贝叶斯估计与极大似然估计" style="zoom:80%;" /> 
</li>
<li>
<p><strong>核方法 kernel method</strong></p>
<p>使用核函数表示和学习非线性模型的一种机器学习方法，可以用于监督学习和无监督学习。</p>
<p>特点：不显式地定义这个映射，而是直接定义核函数，简化计算。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.7-%E8%BE%93%E5%85%A5%E5%88%B0%E7%89%B9%E5%BE%81%E7%A9%BA%E9%97%B4%E6%98%A0%E5%B0%84.png" alt="P1.7-输入到特征空间映射" style="zoom:80%;" /> 
</li>
</ul>
<h2 id="1-3-统计学习方法的三要素">1.3 统计学习方法的三要素</h2>
<blockquote>
<p>方法 = 模型 + 策略 + 算法</p>
</blockquote>
<h3 id="模型">模型</h3>
<ul>
<li>
<p>就是所要学习的条件概率分布或决策函数。</p>
<ul>
<li>
<p>模型的假设空间 hypothesis space</p>
<p>包含所有可能的条件概率分布或决策函数</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>=</mo><mo stretchy="false">{</mo><mi>f</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">F = \{ f | Y = f(X)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)}</span></span></span></span></p>
</li>
</ul>
</li>
</ul>
<h3 id="策略">策略</h3>
<ul>
<li>
<p>从假设空间中选取最优模型。</p>
</li>
<li>
<p>损失函数 loss function</p>
<p>度量模型一次预测的好坏，记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>Y</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L( Y, f(X) )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">))</span></span></span></span></p>
<ul>
<li>0-1损失函数</li>
<li>平方损失函数</li>
<li>绝对损失函数</li>
<li>对数损失函数</li>
</ul>
<p>损失函数值越小，模型越好。</p>
</li>
<li>
<p>风险函数 risk function （期望损失 expected loss）</p>
<p>模型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span> 关于联合分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X, Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span> 的平均意义下的损失。</p>
</li>
<li>
<p>经验风险 empirical risk （经验损失 empirical loss）</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>m</mi><mi>p</mi></mrow></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo>∑</mo><mi>L</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{emp} (f) = \frac{1}{N}  \sum L(y_i , f(x_i ) )
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></p>
<ul>
<li>
<p>期望风险<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>x</mi><mi>p</mi></mrow></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{exp} (f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span> 是模型关于联合分布的期望损失；</p>
<p>经验风险<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>m</mi><mi>p</mi></mrow></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{emp} (f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span> 是模型关于训练样本集的平均损失。</p>
<p>根据大数定律，当样本容量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 趋于无穷时，经验风险 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>m</mi><mi>p</mi></mrow></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{emp} (f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span> 趋于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>x</mi><mi>p</mi></mrow></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{exp} (f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span> 。</p>
<p>所以，一个很自然的想法是用经验风险估计期望风险。</p>
</li>
<li>
<p>但是，现实中训练样本数目有限，如此估计，常常不理想，</p>
<p>因此，需要对经验风险进行一定的矫正。</p>
<p>监督学习的两个基本策略：</p>
<ul>
<li>经验风险最小化</li>
<li>结构风险最小化</li>
</ul>
</li>
</ul>
</li>
<li>
<p>经验风险最小化 empirical risk minimization, ERM</p>
<p>认为，经验风险最小的模型是最优的模型。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>r</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mi>min</mi><mo>⁡</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo>∑</mo><mi>L</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{erm} (f) = \min \frac{1}{N} \sum L(y_i,f(x_i))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></p>
</li>
<li>
<p>结构风险最小化 structural risk minimization, SRM</p>
<p>为了防止过拟合，结构风险最小化等价于正则化 reghularization 。</p>
<p>在经验风险上加上表示模型复杂度的正则化项 regularizer 或 罚项 penalty term。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>s</mi><mi>r</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mi>min</mi><mo>⁡</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo>∑</mo><mi>L</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi><mi>J</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{srm} (f) = \min \frac{1}{N} \sum L(y_i,f(x_i)) + \lambda J(f)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">sr</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>
<p>例如，贝叶斯估计中的最大后验估计 maximun posterior probability estimation , MAP</p>
<p>就是结构风险最小化的一个例子。</p>
</li>
<li>
<p>当模型是条件概率分布、损失函数是对数损失函数、模型复杂度由模型的先验概率表示时，结构风险最小化就等价于最大后验概率估计。</p>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>监督学习问题就变成了经验风险或结构风险函数的最优化问题。</p>
<p>这时，经验或结构风险函数就是最优化的目标函数。</p>
</blockquote>
<h3 id="算法">算法</h3>
<ul>
<li>指学习模型的具体计算方法。</li>
</ul>
<h2 id="1-4-模型评估与模型选择">1.4 模型评估与模型选择</h2>
<h3 id="训练误差与测试误差">训练误差与测试误差</h3>
<ul>
<li>训练误差 training error</li>
<li>测试误差 test error</li>
</ul>
<h3 id="过拟合与模型选择">过拟合与模型选择</h3>
<ul>
<li>
<p>过拟合</p>
<p>如果一味追求提高对训练数据的预测能力，所选模型的复杂度则往往会比真模型更高。</p>
<p>学习时选择的模型所包含的参数过多，导致这一模型对已知数据预测很好，但对未知数据预测得很差。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.8-%E8%BF%87%E6%8B%9F%E5%90%88.png" alt="P1.8-过拟合" style="zoom:80%;" /> 
<ul>
<li>
<p>当模型的复杂度增大时，</p>
<ul>
<li>
<p>训练误差会逐渐减小并趋向于0；</p>
</li>
<li>
<p>测试误差会先减小，达到最小值后又增大。（欠拟合 -&gt; 完全拟合 -&gt; 过拟合）</p>
</li>
</ul>
<p>选择复杂度适当的模型！</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.9-%E8%AF%AF%E5%B7%AE.png" alt="P1.9-误差" style="zoom:80%;" /> 
<h2 id="1-5-正则化与交叉验证">1.5 正则化与交叉验证</h2>
<h3 id="正则化-regularization">正则化 regularization</h3>
<ul>
<li>
<p>是结构风险最小化策略的实现。</p>
<p>在经验风险上加一个正则化项 或 罚项。</p>
<p>一般是模型复杂度的单调递增函数，模型越复杂，正则化值越大。</p>
</li>
<li>
<p>作用</p>
<p>选择经验风险与模型复杂度同时最小的模型。</p>
</li>
<li>
<p>正则化符合奥卡姆剃刀 Occam’s razor 原理</p>
<p>能够很好解释已知数据且十分简单才是最好的模型。</p>
</li>
<li>
<p>正则化项对应于模型的先验概率。</p>
</li>
</ul>
<h3 id="交叉验证-cross-validation">交叉验证 cross validation</h3>
<ul>
<li>重复使用数据，把给定数据切分，组合成为训练集与测试集，在此基础上反复进行训练、测试以及模型的选择。
<ul>
<li>简单交叉验证</li>
<li>S折交叉验证</li>
<li>留一交叉验证</li>
</ul>
</li>
</ul>
<h2 id="1-6-泛化能力">1.6 泛化能力</h2>
<h3 id="泛化误差-generalization-error">泛化误差 generalization error</h3>
<ul>
<li>
<p>泛化能力</p>
<p>指由该方法学习到的模型对未知数据的预测能力。</p>
</li>
<li>
<p>泛化误差</p>
<p>所学到的模型的期望风险。</p>
</li>
<li>
<p>泛化误差上界 generalization error bound</p>
<p>概率上界。</p>
</li>
<li>
<p>定理1.1 （泛化误差上界）</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>≤</mo><mover accent="true"><mi>R</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>+</mo><mi>ε</mi><mo stretchy="false">(</mo><mi>d</mi><mo separator="true">,</mo><mi>N</mi><mo separator="true">,</mo><mi>δ</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>其中</mtext><mi>ε</mi><mo stretchy="false">(</mo><mi>d</mi><mo separator="true">,</mo><mi>N</mi><mo separator="true">,</mo><mi>δ</mi><mo stretchy="false">)</mo><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mrow><mn>2</mn><mi>N</mi></mrow></mfrac><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><mi>log</mi><mo>⁡</mo><mi>d</mi><mo>+</mo><mi>log</mi><mo>⁡</mo><mfrac><mn>1</mn><mi>δ</mi></mfrac><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo></mrow></msqrt></mrow><annotation encoding="application/x-tex">R(f) \leq \hat{R}(f) + \varepsilon(d,N,\delta) \\
其中 \varepsilon (d,N,\delta) = \sqrt{\frac{1}{2N}\Big( \log d + \log \frac{1}{\delta} \Big)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1968em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ε</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中</span><span class="mord mathnormal">ε</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.7884em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6516em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size2">)</span></span></span></span><span style="top:-3.6116em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478
c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514
c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20
s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121
s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081
l0 -0c4,-6.7,10,-10,18,-10 H400000
v40H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185
c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M1001 80
h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7884em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
</ul>
<h2 id="1-7-生成模型与判别模型">1.7 生成模型与判别模型</h2>
<h3 id="生成方法">生成方法</h3>
<ul>
<li>
<p>特点</p>
<ul>
<li>
<p>生成方法可以还原出联合概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X, Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>收敛速度更快</p>
</li>
</ul>
</li>
</ul>
<h3 id="判别方法">判别方法</h3>
<ul>
<li>特点
<ul>
<li>直接学习的是条件概率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>  或决策函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span> ，直接面对预测，准确率更高</li>
<li>可以对数据进行各种程度的抽象、定义特征并使用特征，可以简化学习问题</li>
</ul>
</li>
</ul>
<h2 id="1-8-监督学习应用">1.8 监督学习应用</h2>
<h3 id="分类问题">分类问题</h3>
<ul>
<li>
<p>分门别类</p>
</li>
<li>
<p>X 连续，Y 离散</p>
</li>
<li>
<p>从数据中学习一个分类模型或分类决策函数，称为分类器 classifier。</p>
<ul>
<li>二分类问题</li>
<li>多分类问题</li>
</ul>
</li>
<li>
<p>性能指标</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mi>P</mi><mtext>——将正类预测为正类数</mtext><mspace linebreak="newline"></mspace><mi>F</mi><mi>N</mi><mtext>——将正类预测为负类数</mtext><mspace linebreak="newline"></mspace><mi>F</mi><mi>P</mi><mtext>——将负类预测为正类数</mtext><mspace linebreak="newline"></mspace><mi>T</mi><mi>N</mi><mtext>——将负类预测为负类数</mtext></mrow><annotation encoding="application/x-tex">TP——将正类预测为正类数 \\
FN——将正类预测为负类数 \\
FP——将负类预测为正类数 \\
TN——将负类预测为负类数
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mord">——</span><span class="mord cjk_fallback">将正类预测为正类数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">FN</span><span class="mord">——</span><span class="mord cjk_fallback">将正类预测为负类数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span><span class="mord">——</span><span class="mord cjk_fallback">将负类预测为正类数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">TN</span><span class="mord">——</span><span class="mord cjk_fallback">将负类预测为负类数</span></span></span></span></span></p>
<ul>
<li>
<p>精确率 precision</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P = \frac{TP}{TP+FP}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p>召回率 recall</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">R = \frac{TP}{TP+FN}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">FN</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p>F1值 是P和R的调和均值</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>2</mn><msub><mi>F</mi><mn>1</mn></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>P</mi></mfrac><mo>+</mo><mfrac><mn>1</mn><mi>R</mi></mfrac><mspace linebreak="newline"></mspace><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mn>2</mn><mi>T</mi><mi>P</mi></mrow><mrow><mn>2</mn><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{2}{F_1} = \frac{1}{P} + \frac{1}{R} \\
F_1 = \frac{2TP}{2TP+FP+FN}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.1574em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">FP</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">FN</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">TP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.10-%E5%88%86%E7%B1%BB%E9%97%AE%E9%A2%98.png" alt="P1.10-分类问题" style="zoom:80%;" /> 
<h3 id="标注问题">标注问题</h3>
<ul>
<li>X 离散，Y 离散</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.11-%E6%A0%87%E6%B3%A8%E9%97%AE%E9%A2%98.png" alt="P1.11-标注问题" style="zoom: 80%;" /> 
<h3 id="回归问题">回归问题</h3>
<ul>
<li>
<p>X 连续，Y 连续</p>
</li>
<li>
<p>回归模型是表示从输入变量到输出变量之间映射的函数。</p>
<p>回归问题等价于函数拟合：选择一条函数使其很好地拟合已知数据且很好地预测未知数据。</p>
<ul>
<li>一元回归</li>
<li>多元回归</li>
<li>线性回归</li>
<li>非线性回归</li>
</ul>
</li>
<li>
<p>回归问题最常用的损失函数是平方损失函数，</p>
<p>在此情况下，回归问题可以用 最小二乘法 求解。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P1.12-%E5%9B%9E%E5%BD%92%E9%97%AE%E9%A2%98.png" alt="P1.12-回归问题" style="zoom:80%;" /> 
<h1>第2章 感知机</h1>
<blockquote>
<ul>
<li>
<p>感知机 perceptron</p>
<p>是二类分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别，取+1和-1二值。</p>
<ul>
<li>
<p>旨在求出将训练数据进行线性划分的分离超平面。</p>
</li>
<li>
<p>导入基于误分类的损失函数，利用梯度下降法对损失函数进行极小化，求得感知机模型。</p>
</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="2-1-感知机模型">2.1 感知机模型</h2>
<ul>
<li>
<p>输入空间</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>⊆</mo><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">X \subseteq{R^n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>输出空间</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>⊆</mo><mrow><mo stretchy="false">{</mo><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow></mrow><annotation encoding="application/x-tex">Y \subseteq{ \{+1,-1\} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">{</span><span class="mord">+</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mclose">}</span></span></span></span></span></p>
</li>
<li>
<p>函数</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = sign(w \cdot{x} + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></p>
<ul>
<li>权值向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>∈</mo><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">w\in{R^n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>偏置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">b\in{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>⋅</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">w\cdot{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span></span> 表示内积，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">sign</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span></span></span></span> 是符号函数</li>
</ul>
</li>
<li>
<p>假设空间</p>
<p>函数集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>f</mi><mi mathvariant="normal">∣</mi><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{f | f(x) = w\cdot{x} + b \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">}</span></span></span></span></p>
</li>
<li>
<p>几何解释</p>
<p>线性方程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w \cdot{x} + b = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 对应于特征空间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">R^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span> 的一个超平面 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 是超平面的法向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 是超平面的截距。</p>
<p>这个超平面将特征空间划分为两个部分，两部分的点分别为正、负两类，因此称为分离超平面。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P2.1-%E6%84%9F%E7%9F%A5%E6%9C%BA%E6%A8%A1%E5%9E%8B.png" alt="P2.1-感知机模型" style="zoom: 80%;" /> 
</li>
</ul>
<h2 id="2-2-感知机学习策略">2.2 感知机学习策略</h2>
<ul>
<li>
<p>线性可分数据集 linearly separable data set</p>
<p>存在超平面 S 能够将数据集的所有实例点完全划分到超平面的两侧。</p>
</li>
<li>
<p>损失函数</p>
<p>误分类点到超平面的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 的总距离</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>M</mi></mrow></munder><mrow><mi mathvariant="normal">∣</mi><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>b</mi><mi mathvariant="normal">∣</mi></mrow></mrow><annotation encoding="application/x-tex">-\frac{1}{||w||} \sum\limits_{x_i \in M}{ |w \cdot x_0 + b| }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.7159em;vertical-align:-1.3944em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord">∣</span></span></span></span></span></span></p>
<p>不考虑<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{||w||}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3651em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣∣</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mtight">∣∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，就得到感知机学习的损失函数</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>M</mi></mrow></munder><mrow><mi mathvariant="normal">∣</mi><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mn>0</mn></msub><mo>+</mo><mi>b</mi><mi mathvariant="normal">∣</mi></mrow></mrow><annotation encoding="application/x-tex">L(w, b) = - \sum\limits_{x_i \in M}{ |w \cdot x_0 + b| }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4444em;vertical-align:-1.3944em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord">∣</span></span></span></span></span></span></p>
<p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 为误分类点的集合。</p>
</li>
<li>
<p>可知</p>
<ul>
<li>损失函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(w,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> 是非负的。</li>
<li>没有误分类点，损失函数值为0；</li>
<li>误分类点越少，误分类点离超平面越近，损失函数值越小。</li>
<li>给定数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> ，损失函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(w,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> 是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">w,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span></span></span> 的连续可导函数。</li>
</ul>
</li>
<li>
<p>学习策略</p>
<p>在假设空间中选取使损失函数式最小的模型参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">w,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span></span></span> ，即感知机模型。</p>
</li>
</ul>
<h2 id="2-3-感知机学习算法">2.3 感知机学习算法</h2>
<blockquote>
<p>感知机学习问题转化为求解损失函数式的最优化问题。</p>
<p>最优化的方法是随机梯度下降法。</p>
</blockquote>
<h3 id="原始形式">原始形式</h3>
<ul>
<li>
<p>输入</p>
<p>训练数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T = \{ (x_1,y_1), (x_2,y_2), ..., (x_N,y_N) \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span></span></span></span> ，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>X</mi><mo>=</mo><msup><mi>R</mi><mi>n</mi></msup><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>∈</mo><mi>Y</mi><mo>=</mo><mo stretchy="false">{</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>+</mo><mn>1</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">x_i \in X = R^n, y_i \in Y = \{-1,+1\}, i=1,2,...,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">+</span><span class="mord">1</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> ，学习率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi><mo stretchy="false">(</mo><mn>0</mn><mo>&lt;</mo><mi>η</mi><mo>≤</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\eta (0 &lt; \eta \leq 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>输出</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mtext>感知机模型</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w,b,感知机模型f(x) = sign(w \cdot x + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">感知机模型</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>​</p>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p>选取初值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">w_0,b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>在训练集中选取数据 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i,y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>≤</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y_i(w \cdot x_i + b) \leq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ，</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>←</mo><mi>w</mi><mo>+</mo><mi>η</mi><msub><mi>y</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>b</mi><mo>←</mo><mi>b</mi><mo>+</mo><mi>η</mi><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w \leftarrow w + \eta y_i x_i \\
b \leftarrow b + \eta y_i
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>转至（2），直至训练集中没有误分类点。</p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>解释：</p>
<p>当一个实例点被误分类，即位于分离超平面的错误一侧时，即调整 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">w,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span></span></span> 的值，使分离超平面向该误分类点的一侧移动，以减少该误分类点与超平面的距离，直至超平面越过该分类点使其被正确分类。</p>
</blockquote>
<h3 id="对偶形式">对偶形式</h3>
<ul>
<li>
<p>输入</p>
<p>训练数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T = \{ (x_1,y_1), (x_2,y_2), ..., (x_N,y_N) \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span></span></span></span> ，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi>X</mi><mo>=</mo><msup><mi>R</mi><mi>n</mi></msup><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>∈</mo><mi>Y</mi><mo>=</mo><mo stretchy="false">{</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>+</mo><mn>1</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">x_i \in X = R^n, y_i \in Y = \{-1,+1\}, i=1,2,...,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">+</span><span class="mord">1</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> ，学习率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi><mo stretchy="false">(</mo><mn>0</mn><mo>&lt;</mo><mi>η</mi><mo>≤</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\eta (0 &lt; \eta \leq 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>输出</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mtext>感知机模型</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msub><mi>α</mi><mi>j</mi></msub><msub><mi>y</mi><mi>j</mi></msub><msub><mi>x</mi><mi>j</mi></msub><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a,b,感知机模型f(x) = sign(\sum\limits_{j=1}^{N}\alpha_j y_j x_j \cdot x + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">感知机模型</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6421em;vertical-align:-1.1138em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> ，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>α</mi><mi>N</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\alpha = (\alpha_1,\alpha_2,...,\alpha_N)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>←</mo><mn>0</mn><mo separator="true">,</mo><mi>b</mi><mo>←</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\alpha \leftarrow 0, b \leftarrow 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></p>
</li>
<li>
<p>在训练集中选取数据 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mrow><msub><mi>α</mi><mi>j</mi></msub><msub><mi>y</mi><mi>j</mi></msub><msub><mi>x</mi><mi>j</mi></msub><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi></mrow><mo stretchy="false">)</mo><mo>≤</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y_i(\sum\limits_{j=1}^{N}{\alpha_j y_j x_j \cdot x_i + b}) \leq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.6421em;vertical-align:-1.1138em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub><mo>←</mo><msub><mi>α</mi><mi>i</mi></msub><mo>+</mo><mi>η</mi><mspace linebreak="newline"></mspace><mi>b</mi><mo>←</mo><mi>b</mi><mo>+</mo><mi>η</mi><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\alpha_i \leftarrow \alpha_i + \eta \\
b \leftarrow b + \eta y_i 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>转至（2）直到没有误分类数据。</p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>对偶形式中的训练实例仅以内积的形式出现，可以预先计算出来以矩阵形式存储——Gram矩阵。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mo>=</mo><mrow><mo stretchy="false">[</mo><msub><mi>x</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>x</mi><mi>j</mi></msub><msub><mo stretchy="false">]</mo><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow></msub></mrow></mrow><annotation encoding="application/x-tex">G = {[ x_i \cdot x_j ]_{N \times N} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</blockquote>
<h3 id="收敛性">收敛性</h3>
<ul>
<li>
<p>可以证明，误分类的次数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>​ 是有上界的，经过有限次搜索可以找到将训练数据完全正确分开的分离超平面。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mo>≤</mo><mo stretchy="false">(</mo><mfrac><mi>R</mi><mi>γ</mi></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">k \leq (\frac{R}{\gamma})^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2408em;vertical-align:-0.8804em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>可以证明：</p>
<p>样本集线性可分的充要条件是正实例点集所构成的凸壳与负实例点集所构成的凸壳互不相交。</p>
</li>
<li>
<p>当训练集线性可分时，</p>
<p>感知机学习算法存在无穷多个解，其解由于不同的初值或不同的迭代顺序可能有所不同。</p>
</li>
</ul>
<h2 id="2-4-示例">*2.4 示例</h2>
<h3 id="感知机1：原始形式">感知机1：原始形式</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E2.1-1-%E6%84%9F%E7%9F%A5%E6%9C%BA-%E5%8E%9F%E5%A7%8B%E5%BD%A2%E5%BC%8F.png" alt="E2.1-1-感知机-原始形式" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E2.1-2-%E6%84%9F%E7%9F%A5%E6%9C%BA-%E5%8E%9F%E5%A7%8B%E5%BD%A2%E5%BC%8F.png" alt="E2.1-2-感知机-原始形式" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E2.1-3-%E6%84%9F%E7%9F%A5%E6%9C%BA-%E5%8E%9F%E5%A7%8B%E5%BD%A2%E5%BC%8F.png" alt="E2.1-3-感知机-原始形式" style="zoom:80%;" /> 
<h3 id="感知机2：对偶形式">感知机2：对偶形式</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E2.2-%E6%84%9F%E7%9F%A5%E6%9C%BA-%E5%8E%9F%E5%A7%8B%E5%BD%A2%E5%BC%8F.png" alt="E2.2-感知机-原始形式" style="zoom:80%;" /> 
<h1>第3章 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 近邻法</h1>
<blockquote>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 近邻法 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> - nearest neighbor, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> - NN</p>
<p>是一种基本的分类与回归方法。</p>
<ul>
<li>
<p>假设给定一个训练数据集，其中的实例类别已确定。分类时，对新的实例，根据其 k 个最近邻的训练实例的类别，通过多数表决等方式进行预测。</p>
</li>
<li>
<p>k 近邻法不具有显式的学习过程。</p>
<p>k 近邻法实际上利用训练数据集对特征空间进行划分，并作为其分类的“模型”。</p>
</li>
<li>
<p>k近邻法是三要素：</p>
<ul>
<li>k 值的选择</li>
<li>距离度量</li>
<li>分类决策规则</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="3-1-k-近邻算法">3.1 k 近邻算法</h2>
<ol>
<li>
<p>根据给定的距离度量，在训练集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 中找出与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 最近邻的 k 个点，涵盖这 k 个点的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的邻域 记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N_k(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N_k(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 中根据分类决策规则（如多数表决）决定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的类别 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>arg</mi><mo>⁡</mo><mo><mi>max</mi><mo>⁡</mo></mo><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>N</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></munder><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi><mspace linebreak="newline"></mspace><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mspace linebreak="newline"></mspace><mi>I</mi><mtext>为指示函数（当</mtext><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>i</mi></msub><mtext>时</mtext><mi>I</mi><mtext>为</mtext><mn>1</mn><mtext>，否则</mtext><mi>I</mi><mtext>为</mtext><mn>0</mn><mtext>）</mtext></mrow><annotation encoding="application/x-tex">y = \arg \mathop{\max} \sum \limits_{x_i \in N_k(x)} I(y_i = c_i) \\
i=1,2,...,N\\
j=1,2,...,K \\
I为指示函数（当 y_i = c_i 时I为1，否则I为0）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">max</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord cjk_fallback">为指示函数（当</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">时</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord cjk_fallback">为</span><span class="mord">1</span><span class="mord cjk_fallback">，否则</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord cjk_fallback">为</span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
</li>
</ol>
<blockquote>
<ul>
<li>特殊情况
<ul>
<li>当 k=1 时：最近邻算法</li>
</ul>
</li>
</ul>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P3.1-k%E8%BF%91%E9%82%BB%E7%89%B9%E5%BE%81%E7%A9%BA%E9%97%B4%E5%88%92%E5%88%86.png" alt="P3.1-k近邻特征空间划分" style="zoom:80%;" /> 
<h2 id="3-2-k-近邻模型">3.2 k 近邻模型</h2>
<h3 id="距离度量">距离度量</h3>
<ul>
<li>
<p>相似程度</p>
<p>特征空间中两个实例点的距离是两个实例点相似程度的反映。</p>
</li>
<li>
<p>特征空间</p>
<p>n维实数向量空间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">R^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>距离度量</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">L_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 距离</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mi>p</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant="normal">∣</mi><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup><msup><mi mathvariant="normal">∣</mi><mi>p</mi></msup><msup><mo stretchy="false">)</mo><mfrac><mn>1</mn><mi>p</mi></mfrac></msup></mrow><annotation encoding="application/x-tex">L_p(x_i,y_j) = (\sum \limits_{l=1}^{n} | x_i^{(l)} -x_j^{(l)} |^p )^{\frac{1}{p} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9535em;vertical-align:-1.3021em;"></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4578em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0368em;"><span style="top:-3.4458em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4829em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p \geq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">p=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 为 欧式距离 Euclidean distance</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant="normal">∣</mi><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><msup><mo stretchy="false">)</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></msup></mrow><annotation encoding="application/x-tex">L_2(x_i,y_j) = (\sum \limits_{l=1}^{n} | x_i^{(l)} -x_j^{(l)} |^2 )^{\frac{1}{2} }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9535em;vertical-align:-1.3021em;"></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4578em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.004em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 为 曼哈顿距离 Manhattan distance</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant="normal">∣</mi><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">L_1(x_i,y_j) = \sum \limits_{l=1}^{n} | x_i^{(l)} -x_j^{(l)} |
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9535em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4578em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">p=\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span> ，它是各个坐标距离的最大值，即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mi mathvariant="normal">∞</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>m</mi><mi>a</mi><mi>x</mi></mo><mi>l</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>−</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">L_\infty(x_i,y_j) = \mathop{max}_l | x_i^{(l)} -x_j^{(l)} |
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mop"><span class="mop"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4578em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p>
</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P3.2-Lp%E8%B7%9D%E7%A6%BB.png" alt="P3.2-Lp距离" style="zoom:80%;" /> 
<h3 id="k-值的选择">k 值的选择</h3>
<ul>
<li>
<p>k 值的选择会对 k 近邻法的结果产生重大影响。</p>
<ul>
<li>
<p>较小的 k</p>
<p>较小的领域，近似误差 approximation error 减小，估计误差 estimation error 增大。</p>
<p>整体模型变得复杂，容易发生过拟合。</p>
</li>
<li>
<p>较大的 k</p>
<p>较大的领域，近似误差增大，估计误差减小。</p>
<p>整体模型变得简单，可能欠拟合。</p>
</li>
</ul>
<blockquote>
<p>估计误差：当 k 较小，测试结果会对近邻的实例点非常敏感，若近邻的实例点恰好是噪声，预测结果就错了。</p>
<p>近似误差：当 k 较大，领域较大，更多点被认为是近邻点，作为噪声的近邻点更多了。</p>
</blockquote>
</li>
<li>
<p>k 值一般会取一个比较小的数值。</p>
<p>通常采用 <strong>交叉验证法</strong> 来选取最优的 k 值。</p>
</li>
</ul>
<h3 id="分类决策规则">分类决策规则</h3>
<ul>
<li>
<p>分类决策规则</p>
<p>往往采用 <strong>多数表决</strong>。</p>
<p>即 由输入实例的 k 个邻近的训练实例中的多数类决定输入实例的类。</p>
</li>
<li>
<p>多数表决规则 majority voting rule</p>
<p>如果分类的损失函数为 0-1损失函数，分类函数为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo>:</mo><msup><mi>R</mi><mi>n</mi></msup><mo>→</mo><mo stretchy="false">{</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">f: R^n \rightarrow \{ c_1,c_2,...,c_k \}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7144em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p>
<p>那么误分类率是</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mi>k</mi></mfrac><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>N</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></munder><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>c</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mi>k</mi></mfrac><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>N</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></munder><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\frac{1}{k} \sum \limits_{x_i \in N_k(x)} I(y_i \neq c_j) = 1 - \frac{1}{k} \sum \limits_{x_i \in N_k(x) } I(y_i = c_j)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.8374em;vertical-align:-1.516em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.8374em;vertical-align:-1.516em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>因此，要使 误分类率最小 即 经验风险最小，</p>
<p>就要使$ \sum \limits_{x_i \in N_k(x) } I(y_i = c_j)$ 最大，所以，多数表决规则等价于经验风险最小化。</p>
</li>
</ul>
<h2 id="3-3-k-近邻法的实现：kd-树">3.3 k 近邻法的实现：kd 树</h2>
<ul>
<li>
<p>问题</p>
<p>如何对训练数据进行快速 k 近邻搜索？</p>
<blockquote>
<p>这一点在特征空间的维数过大及训练数据容量大时尤其必要。</p>
</blockquote>
</li>
<li>
<p>方法</p>
<ul>
<li>
<p>线性扫描 linear scan</p>
<p>简单，但是非常耗时，在数据过大时不可行！</p>
</li>
<li>
<p>kd 树</p>
<p>一种对 k 维空间中的实例点进行存储以便对其快速检索的树形数据结构。</p>
<p>kd 树是二叉树，表示对 k 维空间的一个划分 partition。</p>
</li>
</ul>
</li>
</ul>
<h3 id="构造平衡-kd-树">构造平衡 kd 树</h3>
<ul>
<li>
<p>输入</p>
<p>k 维空间数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>N</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T = \{ x_1,x_2,...,x_N \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">x_i = (x_i^{(1)},x_i^{(2)},...,x_i^{(k)})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">i=1,2,...,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p>
</li>
<li>
<p>输出</p>
<p>kd 树</p>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p>开始：构造根结点（根结点对应于包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 的 k 维空间的超矩形区域。</p>
<ul>
<li>
<p>选坐标轴，中位数切分</p>
<p>选择 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 为坐标轴，以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 中所有实例的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 坐标的中位数为切分点，将根结点对应的超矩形区域切分为两个子区域。</p>
<p>（切分由通过切分点并与坐标轴 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 垂直的超平面实现）</p>
</li>
<li>
<p>划分左右子结点，中位数留在根</p>
<p>由根结点生成深度为 1 的左、右子节点</p>
<ul>
<li>左子节点对应坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>​ 小于切分点的子区域</li>
<li>右子节点对应坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 大于切分点的子区域</li>
<li>根结点对应落在切分超平面上的实例点</li>
</ul>
</li>
</ul>
</li>
<li>
<p>重复：</p>
<ul>
<li>
<p>依次选取坐标轴，中位数切分</p>
<p>对深度为 j 的结点，选择 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(l)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 作为切分坐标轴，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>=</mo><mi>j</mi><mspace></mspace><mspace width="0.6667em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">l = j\mod k + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6667em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 。</p>
</li>
<li>
<p>划分存值</p>
</li>
</ul>
</li>
<li>
<p>直至两个子区域没有实例存在时停止。从而形成 kd 树的区域划分。</p>
</li>
</ol>
</li>
</ul>
<h3 id="搜索-kd-树">搜索 kd 树</h3>
<ul>
<li>
<p>输入</p>
<p>已构造的 kd 树，目标点 x</p>
</li>
<li>
<p>输出</p>
<p>x 的最近邻</p>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p>在 kd 树中找出包含目标点 x 的叶结点</p>
<blockquote>
<p>就是从根结点出发，向下搜索到正确的叶结点即可。</p>
</blockquote>
</li>
<li>
<p>以此叶结点为“当前最近点”</p>
</li>
<li>
<p>递归地向上回退，在每个结点进行如下操作：</p>
<ul>
<li>
<p>若该结点保存的实例点比当前最近点距离目标更近，</p>
<p>则以该实例点为“当前最近点”。</p>
<blockquote>
<p>而这个最近点一定位于该结点的一个子节点的区域中。</p>
<p>其实，是检测另一子结点对应的区域是否与以目标点为球心、以目标点与“当前最近点”间的距离为半径的超球体相交。</p>
<ul>
<li>若相交，可能在另一子区域存在更近的点，移动到另一个子结点，递归进行最近邻搜索。</li>
<li>若不相交，向上回退。</li>
</ul>
</blockquote>
</li>
</ul>
</li>
<li>
<p>当回退到根结点时，搜索结束。</p>
<p>最后的“当前最近点”即为 x 的最近邻点。</p>
</li>
</ol>
</li>
<li>
<p>时间复杂度</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p>
<p>这里N 是训练实例数。</p>
<ul>
<li>kd 树适合训练实例数远大于空间维数</li>
<li>kd 树可以省去对大部分数据点的搜索，从而减少搜索的计算量。</li>
</ul>
</li>
</ul>
<h2 id="3-4-示例">*3.4 示例</h2>
<h3 id="构建平衡-kd-树">构建平衡 kd 树</h3>
  <img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E3.2-k%E8%BF%91%E9%82%BB.png" alt="E3.2-k近邻" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P3.3-3.4-%E7%89%B9%E5%BE%81%E7%A9%BA%E9%97%B4%E5%88%92%E5%88%86%E4%B8%8Ekd%E6%A0%91.png" alt="P3.3-3.4-特征空间划分与kd树" style="zoom:80%;" /> 
<h3 id="搜索最近邻">搜索最近邻</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E3.3-%E6%90%9C%E7%B4%A2k%E8%BF%91%E9%82%BB.png" alt="E3.3-搜索k近邻" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P3.5-kd%E6%A0%91%E6%9C%80%E8%BF%91%E9%82%BB%E6%90%9C%E7%B4%A2.png" alt="P3.5-kd树最近邻搜索" style="zoom:80%;" /> 
<h1>第4章 朴素贝叶斯法</h1>
<blockquote>
<ul>
<li>
<p>朴素贝叶斯 naive Bayes</p>
<p>基于贝叶斯定理与特征条件独立假设的分类方法。</p>
<ul>
<li>对于给定的训练数据集，
<ul>
<li>基于特征条件独立假设学习输入输出的联合概率分布</li>
<li>基于此模型，对给定的输入 x ，利用贝叶斯定理求出后验概率最大的输出 y。</li>
</ul>
</li>
</ul>
</li>
<li>
<p>实现简单，学习与预测效率都很高，很常用。</p>
</li>
</ul>
</blockquote>
<h2 id="4-1-朴素贝叶斯法的学习与分类">4.1 朴素贝叶斯法的学习与分类</h2>
<h3 id="条件独立性假设">条件独立性假设</h3>
<ul>
<li>
<p>见下方</p>
<p>学习 - 条件概率分布 - 条件独立性假设。</p>
</li>
</ul>
<h3 id="学习">学习</h3>
<ul>
<li>
<p>假设</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X,Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 的联合概率分布，训练数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X,Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span> 独立同分布产生。</p>
<ul>
<li>
<p>先验概率分布</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">P(Y = c_k) , k=1,2,...,K
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></span></p>
</li>
<li>
<p>条件概率分布</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">P(X=x | Y=c_k) = P(X^{(1)}=x^{(1)},...,X^{(n)}=x^{(n)}|Y=c_k), k=1,2,...,K
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1324em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></span></p>
<ul>
<li>
<p>但是上述的条件概率分布有指数级数量的参数，其估计实际不可行。</p>
<p>假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 可能取值有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">S_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 个，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 可能取值有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 个，</p>
<p>那么参数个数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><msubsup><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>S</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">K \prod_{j=1}^{n} S_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2401em;vertical-align:-0.4358em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><strong>条件独立性假设</strong></p>
<p>这是一个较强的假设，朴素贝叶斯法也由此得名。假设如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>=</mo><munderover><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X=x|Y=c_k) = P(X^{(1)} = x^{(1)},...,X^{(n)}=x^{(n)}|Y=c_k)\\
= \prod \limits_{j=1}^{n} P(X^{(j)}=x^{(j)}|Y=c_k)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1324em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0652em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<blockquote>
<p>条件独立假设等于是说，用于分类的特征在类确定的条件下都是条件独立。</p>
<p>这一假设使得朴素贝叶斯法变得简单，但有时会牺牲一定的分类准确率。</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p>因此，可以得到联合概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X,Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>​</p>
</li>
</ul>
</li>
<li>
<p>朴素贝叶斯法实际上学习到生成数据的机制，</p>
<p>所以属于生成模型。</p>
</li>
</ul>
<h3 id="分类">分类</h3>
<ul>
<li>
<p>朴素贝叶斯的分类</p>
<p>对给定的输入 x ，通过学习到的模型计算后验概率分布</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><mi>X</mi><mo>=</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(Y=c_k|X=x) = \frac{P(X=x|Y=c_k)P(Y=c_k)}{\sum \limits_{k} P(X=x|Y=c_k)P(Y=c_k) }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1151em;vertical-align:-1.6881em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-2.0979em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6881em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>代入独立性假设，得到</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><mi>X</mi><mo>=</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><munder><mo>∏</mo><mi>j</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><munder><mo>∏</mo><mi>j</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(Y=c_k|X=x) = \frac{P(Y=c_k) \prod \limits_{j} P(X^{(j)}=x^{(j)}|Y=c_k)}{\sum \limits_{k} P(Y=c_k) \prod \limits_{j} P(X^{(j)}=x^{(j)}|Y=c_k) }
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.2096em;vertical-align:-1.8178em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3918em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-2.0979em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.5038em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8178em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>这就是<strong>朴素贝叶斯法分类的基本公式</strong>。</p>
</li>
<li>
<p>朴素贝叶斯分类器</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><msub><mi>c</mi><mi>k</mi></msub></msub><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><munder><mo>∏</mo><mi>j</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><munder><mo>∏</mo><mi>j</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">y = f(x) = \arg \mathop{\max}_{c_k} \frac{P(Y=c_k) \prod \limits_{j} P(X^{(j)}=x^{(j)}|Y=c_k)}{\sum \limits_{k} P(Y=c_k) \prod \limits_{j} P(X^{(j)}=x^{(j)}|Y=c_k)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.2096em;vertical-align:-1.8178em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop"><span class="mop">max</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2559em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3918em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-2.0979em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.5038em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8178em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>由于式子中对于所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">c_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的分母都是相同的，由此</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><msub><mi>c</mi><mi>k</mi></msub></msub><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><munder><mo>∏</mo><mi>j</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = f(x) = \arg \mathop{\max}_{c_k} P(Y=c_k) \prod \limits_{j} P(X^{(j)}=x^{(j)}|Y=c_k)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0059em;vertical-align:-0.2559em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop"><span class="mop">max</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2559em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4638em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>后验概率最大化的含义</p>
<ul>
<li>
<p>朴素贝叶斯法将实例分到后验概率最大的类中，</p>
<p>这等价于<strong>期望风险最小</strong>。</p>
</li>
<li>
<p>可以取损失函数为 0-1损失函数，取条件期望，</p>
<p>要求取期望风险极小化，只需对 X = x 逐个极小化。</p>
<p>最终，由此推出了后验概率最大化。</p>
<p>这就是朴素贝叶斯采用的原理。</p>
</li>
</ul>
</li>
</ul>
<h2 id="4-2-朴素贝叶斯法的参数估计">4.2 朴素贝叶斯法的参数估计</h2>
<h3 id="极大似然估计">极大似然估计</h3>
<ul>
<li>
<p>在朴素贝叶斯法中，学习意味着估计 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y=c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X^{(j)}=x^{(j)} |Y=c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p>
</li>
<li>
<p>可以应用极大似然估计法估计相应的概率。</p>
<ul>
<li>
<p>先验概率</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mi>N</mi></mfrac><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">P(Y=c_k) = \frac{\sum \limits_{i=1}^{N} I(y_i = c_k)}{N}, k=1,2,...,K
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.582em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.896em;"><span style="top:-2.8423em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.7583em;"><span class="pstrut" style="height:3.5283em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.896em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></span></p>
</li>
<li>
<p>条件概率</p>
<p>设第 j 个特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 可能取值的集合为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>S</mi><mi>j</mi></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ a_{j1},a_{j2},...,a_{jSj}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">;</mo><mtext> </mtext><mi>l</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>j</mi></msub><mo separator="true">;</mo><mtext> </mtext><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>K</mi></mrow><annotation encoding="application/x-tex">P(X^{(j)}=a_{jl}|Y=c_k) = \frac{\sum \limits_{i=1}^{N} I(x_i^{(j)}=a_{jl},y_i=c_k) }{\sum \limits_{i=1}^{N} I(y_i = c_k) } \\
j=1,2,...,n; \, l=1,2,...,S_j; \, k=1,2,...K
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.292em;vertical-align:-2.396em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.896em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.7583em;"><span class="pstrut" style="height:3.5283em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.896em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.396em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></span></p>
</li>
</ul>
</li>
</ul>
<h3 id="贝叶斯估计">贝叶斯估计</h3>
<ul>
<li>
<p>使用极大似然估计可能出现所要估计的概率为0的情况。</p>
<p>会影响后验概率的计算结果，使分类产生偏差。</p>
</li>
<li>
<p>解决方法：</p>
<p>采用贝叶斯估计，在随机变量各个取值的频数上赋予一个正数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\lambda &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>​ 。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mi>λ</mi></msub><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>S</mi><mi>j</mi></msub><mi>λ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P_{\lambda} (X^{(j)} = a_{jl} | Y=c_k) = \frac{\sum \limits_{i=1}^{N} I(x_i^{(j)}=a_{jl}, y_i=c_k)+ \lambda }{\sum \limits_{i=1}^{N} I(y_i=c_k)+S_j \lambda}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.292em;vertical-align:-2.396em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.896em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal">λ</span></span></span><span style="top:-3.7583em;"><span class="pstrut" style="height:3.5283em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.896em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.396em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li>
<p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\lambda = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 时，就是极大似然估计。</p>
</li>
<li>
<p>常取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lambda = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> ，称为拉普拉斯平滑 Laplacian smoothing</p>
</li>
<li>
<p>显然对于任何 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>j</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">l=1,2,...,S_j, \, k=1,2,...,K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 有</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mi>λ</mi></msub><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn><mspace linebreak="newline"></mspace><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>S</mi><mi>j</mi></msub></munderover><msub><mi>P</mi><mi>λ</mi></msub><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P_{\lambda} (X^{(j)} = a_{jl} | Y=c_k) &gt; 0 \\
\sum \limits_{l=1}^{S_j} P_{\lambda} (X^{(j)} = a_{jl}|Y=c_k) = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.2388em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9367em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.4083em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>可见，的确是一种概率分布。</p>
</li>
</ul>
</li>
<li>
<p>先验概率的贝叶斯估计是</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mi>λ</mi></msub><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi></mrow><mrow><mi>N</mi><mo>+</mo><mi>K</mi><mi>λ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P_\lambda (Y=c_k) = \frac{\sum \limits_{i=1}^{N} I(y_i=c_k)+\lambda }{N+K\lambda}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.6653em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.896em;"><span style="top:-2.8423em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">λ</span></span></span><span style="top:-3.7583em;"><span class="pstrut" style="height:3.5283em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.896em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
<h3 id="算法-2">算法</h3>
<ul>
<li>
<p>输入</p>
<ul>
<li>
<p>训练数据 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T=\{ (x_1,y_1), (x_2,y_2),...,(x_N,y_N) \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span></span></span></span> ，</p>
<p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msubsup><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">x_i = (x_i^{(1)}, x_i^{(2)},...,x_i^{(n)})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">x_i^{(j)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个样本的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个特征， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>∈</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><msub><mi>S</mi><mi>j</mi></msub></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">x_i^{(j)} \in \{ a_{j1}, a_{j2},...,a_{jS_j} \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0973em;vertical-align:-0.3473em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3473em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{jl}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 是第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 个特征可能取的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 个值， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">;</mo><mtext> </mtext><mi>l</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>j</mi></msub><mo separator="true">;</mo><mtext> </mtext><msub><mi>y</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>c</mi><mi>K</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">j=1,2,...,n; \, l=1,2,...,S_j; \, y_i \in \{c_1,c_2,...,c_K \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> 。</p>
</li>
<li>
<p>实例 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>。</p>
</li>
</ul>
</li>
<li>
<p>输出</p>
<p>实例 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的分类。</p>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p>计算先验概率及条件概率</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mi>N</mi></mfrac><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">P(Y=c_k) = \frac{\sum \limits_{i=1}^{N} I(y_i = c_k)}{N}, k=1,2,...,K
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.582em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.896em;"><span style="top:-2.8423em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.7583em;"><span class="pstrut" style="height:3.5283em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.896em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msubsup><mi>x</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>l</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">;</mo><mtext> </mtext><mi>l</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>j</mi></msub><mo separator="true">;</mo><mtext> </mtext><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>K</mi></mrow><annotation encoding="application/x-tex">P(X^{(j)}=a_{jl}|Y=c_k) = \frac{\sum \limits_{i=1}^{N} I(x_i^{(j)}=a_{jl},y_i=c_k) }{\sum \limits_{i=1}^{N} I(y_i = c_k) } \\
j=1,2,...,n; \, l=1,2,...,S_j; \, k=1,2,...K
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.292em;vertical-align:-2.396em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.896em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.7583em;"><span class="pstrut" style="height:3.5283em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.896em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.396em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></span></p>
</li>
<li>
<p>对于给定的实例 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">x=(x^{(1)},x^{(2)},...,x^{(n)})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> ，计算</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><munder><mo>∏</mo><mi>j</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y=c_k) \prod \limits_{j} P(X^{(j)}=x^{(j)}|Y=c_k)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4638em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>确定实例 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的类</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>arg</mi><mo>⁡</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><msub><mi>c</mi><mi>k</mi></msub></msub><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo><munder><mo>∏</mo><mi>j</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> y = \arg \mathop{\max}_{c_k} P(Y=c_k) \prod \limits_{j} P(X^{(j)}=x^{(j)}|Y=c_k)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0059em;vertical-align:-0.2559em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop"><span class="mop">max</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2559em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4638em;vertical-align:-1.4138em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>这里算法采用的是极大似然估计，</p>
<p>若采用贝叶斯估计，则把（1）中的先验概率和条件概率替换成贝叶斯估计即可。</p>
</blockquote>
<h2 id="4-3-示例">*4.3 示例</h2>
<h3 id="朴素贝叶斯1：极大似然估计">朴素贝叶斯1：极大似然估计</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E4.1-%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF1%EF%BC%88%E6%9E%81%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1%EF%BC%89.png" alt="E4.1-朴素贝叶斯1（极大似然估计）" style="zoom:80%;" /> 
<h3 id="朴素贝叶斯2：贝叶斯估计">朴素贝叶斯2：贝叶斯估计</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E4.2-%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF2%EF%BC%88%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%BC%B0%E8%AE%A1%EF%BC%89.png" alt="E4.2-朴素贝叶斯2（贝叶斯估计）" style="zoom:80%;" /> 
<h1>第5章 决策树</h1>
<blockquote>
<ul>
<li>
<p>决策树 decision tree</p>
<p>一种基本的分类与回归方法。</p>
<ul>
<li>
<p>树形结构，if-then 规则的集合。</p>
<p>定义在条件特征空间与类空间上的条件概率分布。</p>
</li>
<li>
<p>优点：可读性，分类速度快</p>
</li>
<li>
<p>学习时，利用训练数据，根据损失函数最小化的原则建立决策树模型。</p>
<p>预测时，对新的数据，利用决策树模型进行分类。</p>
</li>
<li>
<p>决策树学习的3个步骤</p>
<ul>
<li>特征选择</li>
<li>决策树的生成</li>
<li>决策树的修剪</li>
</ul>
</li>
<li>
<p>算法</p>
<ul>
<li>ID3</li>
<li>C4.5</li>
<li>CART</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="5-1-决策树模型与学习">5.1 决策树模型与学习</h2>
<h3 id="模型-2">模型</h3>
<p>分类决策树模型是一种描述对实例进行分类的树形结构。决策树由结点 node 和有向边 directed edge 组成。</p>
<p>结点有两种类型：</p>
<ol>
<li>内部结点 internal node</li>
<li>叶结点 leaf node</li>
</ol>
<p>内部结点表示一个特征或属性，叶结点表示一个类。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P5.1-%E5%86%B3%E7%AD%96%E6%A0%91%E6%A8%A1%E5%9E%8B.png" alt="P5.1-决策树模型" style="zoom:67%;" /> 
<h3 id="if-then-规则">if-then 规则</h3>
<ul>
<li>
<p>由决策树的根结点到叶结点的每一条路径构建一条规则。</p>
</li>
<li>
<p>路径上内部结点的特征对应着规则的条件；</p>
<p>而叶结点的类对应着规则的结论。</p>
</li>
<li>
<p>if-then规则集合 互斥且完备。</p>
</li>
</ul>
<h3 id="条件概率分布">条件概率分布</h3>
<ul>
<li>决策树表示给定特征条件下类的条件概率分布。</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P5.2-%E5%86%B3%E7%AD%96%E6%A0%91%E5%AF%B9%E5%BA%94%E4%BA%8E%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83.png" alt="P5.2-决策树对应于条件概率分布" style="zoom: 80%;" /> 
<h2 id="5-2-特征选择">5.2 特征选择</h2>
<ul>
<li>
<p>特征选择</p>
<p>决定用哪个特征来划分特征空间。</p>
<ul>
<li>
<p>在于对训练数据具有分类能力的特征。这样可以提高决策树学习的效率。</p>
</li>
<li>
<p>通常特征选择的准则是 信息增益 或 信息增益比。</p>
</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P5.3-%E4%B8%8D%E5%90%8C%E7%89%B9%E5%BE%81.png" alt="P5.3-不同特征" style="zoom: 80%;" /> 
<h3 id="熵-entropy">熵 entropy</h3>
<ul>
<li>
<p>表示随机变量不确定性的度量。</p>
</li>
<li>
<p>设 X 是一个取有限个值的离散随机变量，其概率分布为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>p</mi><mi>i</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">P(X=x_i) = p_i , \, i=1,2,...,n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></span></p>
<p>则随机变量 X 的熵定义为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">H(X) = - \sum \limits_{i=1}^{n} p_i \log p_i
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li>
<p>注：若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">p_i = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ，则定义 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mi>log</mi><mo>⁡</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">0 \log 0 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 。</p>
</li>
<li>
<p>通常，以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 为底，或以自然对数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">e</span></span></span></span> 为底。</p>
<p>此时，熵的单位分别称作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>比特</mtext><mi>b</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">比特 bit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord cjk_fallback">比特</span><span class="mord mathnormal">bi</span><span class="mord mathnormal">t</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>纳特</mtext><mi>n</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">纳特 nat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">纳特</span><span class="mord mathnormal">na</span><span class="mord mathnormal">t</span></span></span></span> 。</p>
</li>
<li>
<p>由定义可知，熵只依赖于 X 的分布，而与 X 的取值无关。</p>
<p>因此，也可以将 X 的熵记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span> 。</p>
</li>
<li>
<p>熵越大，随机变量的不确定性就越大。</p>
</li>
<li>
<p>可知 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>H</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>log</mi><mo>⁡</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">0 \leq H(p) \leq \log n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span> 。</p>
</li>
</ul>
</li>
</ul>
<h3 id="条件熵-conditional-entropy">条件熵 conditional entropy</h3>
<ul>
<li>
<p>表示已知随机变量 X 的条件下随机变量 Y 的不确定性。</p>
</li>
<li>
<p>设有随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X,Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span> ，其联合概率分布为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>Y</mi><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">;</mo><mtext> </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">P(X=x_i,Y=y_i) = p_{ij} , \, i=1,2,...,n; \, j=1,2,...,m
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9456em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span></span></span></p>
<p>则条件熵定义为 X 给定条件下 Y 的条件概率分布的熵对 X 的数学期望</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mi>i</mi></msub><mi>H</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>其中</mtext><msub><mi>p</mi><mi>i</mi></msub><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">H(Y|X) = \sum \limits_{i=1}^{n} p_i H(Y|X=x_i) \\
其中p_i = P(X=x_i), \, i=1,2,...,n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">其中</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></span></p>
</li>
</ul>
<h3 id="信息增益-information-gain">信息增益 information gain</h3>
<ul>
<li>
<p>表示得知特征 X 的信息而使得类 Y 的信息的不确定性减少的程度。</p>
</li>
<li>
<p>特征 A 对训练数据集 D 的信息增益 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(D, A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> ，定义为集合 D 的经验熵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span> 与特征 A 给定条件下 D 的经验条件熵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D|A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> 之差，即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(D,A) = H(D) - H(D|A)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>
<p>一般地，熵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span> 与条件熵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span> 之差称为互信息 mutual information。</p>
</li>
<li>
<p>决策树学习中的信息增益等价于训练数据集中类与特征的互信息。</p>
</li>
<li>
<p>经验熵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span></p>
<p>表示对数据集 D 进行分类的不确定性。</p>
</li>
<li>
<p>经验条件熵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(D|A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></p>
<p>表示在特征 A 给定的条件下对数据集 D 进行分类的不确定性。</p>
</li>
</ul>
<blockquote>
<ul>
<li>经验熵、经验条件熵</li>
</ul>
<p>当熵和条件熵中的概率由数据估计（特别是极大似然估计）得到时，所对应的熵与条件熵分别为 经验熵 empirical entropy 和 经验条件熵 empirical conditional entropy。</p>
</blockquote>
</li>
<li>
<p>根据信息增益准则的特征选择方法</p>
<p>对训练数据集（或子集）D，计算其每个特征的信息增益，并比较它们的大小，选择信息增益<strong>最大</strong>的特征。</p>
</li>
</ul>
<h3 id="算法-3">算法</h3>
<ul>
<li>输入
<ul>
<li>训练数据集 D</li>
<li>特征 A</li>
</ul>
</li>
<li>输出
<ul>
<li>特征 A 对训练数据集 D 的信息增益 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(D,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
</ul>
<blockquote>
<p>注：下方的对数据集取绝对值符号，表示数据集的样本个数。</p>
</blockquote>
<ul>
<li>
<p>算法</p>
<ol>
<li>
<p>计算数据集 D 的经验熵 H(D)</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">H(D) = - \sum \limits_{k=1}^{K} \frac{|C_k|}{|D|} \log_2 \frac{|C_k|}{|D|}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p>计算特征 A 对数据集 D 的经验条件熵 H(D|A)</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>H</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">H(D|A) = \sum \limits_{i=1}^{n} \frac{|D_i|}{|D|} H(D_i) = - \sum \limits_{i=1}^{n} \frac{|D_i|}{|D|} \sum \limits_{k=1}^{K} \frac{|D_{ik}|}{|D_i|} \log_2 \frac{|D_{ik}|}{|D_i|}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ik</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p>计算信息增益</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(D,A) = H(D) - H(D|A)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ol>
</li>
</ul>
<h3 id="信息增益比-information-gain-ratio">信息增益比 information gain ratio</h3>
<ul>
<li>
<p>校正问题</p>
<p>以信息增益作为划分训练数据集的特征，存在偏向于选择取值较多的特征的问题。</p>
<p>使用信息增益比可以对这一问题进行校正。</p>
</li>
<li>
<p>特征 A 对训练数据集 D 的信息增益比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>R</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_R(D,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> 定义为其信息增益 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(D,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> 与训练数据集 D 关于特征 A 的值的熵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H_A(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span> 之比，即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>g</mi><mi>R</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>其中，</mtext><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mtext>，</mtext><mi>n</mi><mtext>是特征</mtext><mi>A</mi><mtext>取值的个数</mtext></mrow><annotation encoding="application/x-tex">g_R(D,A) = \frac{g(D,A)}{H_A(D)} \\
其中，H_A(D) = - \sum \limits_{i=1}^{n} \frac{|D_i|}{|D|} \log_2 \frac{|D_i|}{|D|}，n是特征 A 取值的个数
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">是特征</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">取值的个数</span></span></span></span></span></p>
</li>
<li>
<p>可以把 信息增益 改为 信息增益比 ，</p>
<p>同样算法即可。</p>
</li>
</ul>
<h2 id="5-3-决策树的生成">5.3 决策树的生成</h2>
<h3 id="ID3算法">ID3算法</h3>
<ul>
<li>输入
<ul>
<li>训练数据集 D</li>
<li>特征集 A 阈值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span></li>
</ul>
</li>
<li>输出
<ul>
<li>决策树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></li>
</ul>
</li>
<li>算法
<ol>
<li>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 中所有实例属于同一类 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 为单结点树，并将类 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为该结点的类标记，返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> ；</li>
<li>若 $A= \emptyset $ ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 为单结点树，并将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 中实例数最大的类 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为该结点的类标记，返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> ；</li>
<li>否则，按 “信息增益”算法，计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 中各特征对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 的信息增益，选择信息增益最大的特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>g</mi></msub></mrow><annotation encoding="application/x-tex">A_g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> ；</li>
<li>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>g</mi></msub></mrow><annotation encoding="application/x-tex">A_g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的信息增益小于阈值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span> ，则置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 为单结点树，并将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 中实例数最大的类 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为该结点的类标记，返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> ；</li>
<li>否则，对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>g</mi></msub></mrow><annotation encoding="application/x-tex">A_g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的每一种可能值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，依 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>g</mi></msub><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_g = a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 分割为若干非空子集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中实例数最大的类作为标记，构建子结点，由结点及其子节点构成构成树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> ，返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> ；</li>
<li>对第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个子结点，以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为训练集，以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>−</mo><mo stretchy="false">{</mo><msub><mi>A</mi><mi>g</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A-\{A_g\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> 为特征集，递归地调用步骤（1）–（5），得到子树<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</li>
</ol>
</li>
</ul>
<h3 id="C4-5算法">C4.5算法</h3>
<ul>
<li>与 ID3算法一样，只是改进为使用<strong>信息增益比</strong>来选择特征。</li>
</ul>
<h2 id="5-4-决策树的剪枝">5.4 决策树的剪枝</h2>
<h3 id="过于复杂的决策树">过于复杂的决策树</h3>
<p>决策树生成算法递归地产生决策树，直到不能继续下去为止。</p>
<p>这样产生的树往往对训练数据的分类很准确，但对未知的测试数据的分类却没有那么准确——过拟合！</p>
<ul>
<li>
<p>原因</p>
<p>学习时，过多地考虑如何提高对训练数据的正确分类，从而构建出过于复杂的决策树。</p>
</li>
<li>
<p>解决方法</p>
<p>对已生成的决策树进行简化——剪枝。</p>
<p>裁掉一些子树或叶结点，并将其根结点或父结点作为新的叶结点。</p>
</li>
<li>
<p>方法</p>
<p>通过极小化决策树整体的损失函数或代价函数来实现。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P5.6-%E5%86%B3%E7%AD%96%E6%A0%91%E5%89%AA%E6%9E%9D.png" alt="P5.6-决策树剪枝" style="zoom: 80%;" /> 
<h3 id="损失函数">损失函数</h3>
<ul>
<li>
<p>损失函数</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mi>α</mi></msub><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>T</mi><mi mathvariant="normal">∣</mi></mrow></munderover><msub><mi>N</mi><mi>t</mi></msub><msub><mi>H</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><mi mathvariant="normal">∣</mi><mi>T</mi><mi mathvariant="normal">∣</mi><mspace linebreak="newline"></mspace><mtext>其中，经验熵</mtext><msub><mi>H</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mi>k</mi></munder><mfrac><msub><mi>N</mi><mrow><mi>t</mi><mi>k</mi></mrow></msub><msub><mi>N</mi><mi>t</mi></msub></mfrac><mi>log</mi><mo>⁡</mo><mfrac><msub><mi>N</mi><mrow><mi>t</mi><mi>k</mi></mrow></msub><msub><mi>N</mi><mi>t</mi></msub></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">C_\alpha (T) = \sum \limits_{t=1}^{|T|} N_t H_t (T) + \alpha |T| \\
其中，经验熵 H_t(T) = - \sum \limits_{k} \frac{N_{tk} } {N_t} \log \frac{N_{tk} }  {N_t} \\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2281em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">∣</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中，经验熵</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6624em;vertical-align:-1.3021em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></span></p>
<p>把右边第一项记作</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>T</mi><mi mathvariant="normal">∣</mi></mrow></munderover><msub><mi>N</mi><mi>t</mi></msub><msub><mi>H</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>T</mi><mi mathvariant="normal">∣</mi></mrow></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msub><mi>N</mi><mrow><mi>t</mi><mi>k</mi></mrow></msub><mi>log</mi><mo>⁡</mo><mfrac><msub><mi>N</mi><mrow><mi>t</mi><mi>k</mi></mrow></msub><msub><mi>N</mi><mi>t</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">C(T) = \sum \limits_{t=1}^{|T|} N_t H_t(T) = - \sum \limits_{t=1}^{|T|} \sum \limits_{k=1}^{K} N_{tk} \log \frac{N_{tk} } {N_t} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2281em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2631em;vertical-align:-1.3021em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.961em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>因此，简写为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mi>α</mi></msub><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>+</mo><mi>α</mi><mi mathvariant="normal">∣</mi><mi>T</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">C_\alpha (T) = C(T) + \alpha |T|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">∣</span></span></span></span></span></p>
<ul>
<li>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span> 表示模型对训练数据的预测误差，即模型与训练数据的拟合程度</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>T</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|T|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">∣</span></span></span></span> 表示模型复杂度</li>
<li>参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\alpha \geq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 控制两者之间的影响
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 较大：选择更简单的模型</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 较小：选择更复杂的模型</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\alpha = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ：只考虑训练数据的拟合程度，而不考虑模型的复杂度，此时模型很复杂。</li>
</ul>
</li>
<li>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 确定时，选择损失函数最小的模型（损失函数最小的子树）
<ul>
<li>子树越大，往往与训练数据的拟合越好，但是模型复杂度越高；</li>
<li>子树越小，模型复杂度越低，但往往与训练数据的拟合不好。</li>
</ul>
</li>
</ul>
</li>
<li>
<p>决策树的生成</p>
<p>只考虑通过提高信息增益（或信息增益比）对训练数据进行更好的拟合。</p>
<p>学习局部的模型。</p>
</li>
<li>
<p>决策树的剪枝</p>
<p>通过优化损失函数并考虑减小模型复杂度。</p>
<p>学习整体的模型。</p>
</li>
</ul>
<h3 id="算法-4">算法</h3>
<ul>
<li>
<p>输入</p>
<ul>
<li>生成算法产生的整个树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></li>
<li>参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></li>
</ul>
</li>
<li>
<p>输出</p>
<ul>
<li>修剪后的子树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">T_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p>计算每个结点的经验熵。</p>
</li>
<li>
<p>递归地从树的叶结点向上回缩。</p>
<p>设一组叶结点回缩到其父结点之前与之后的整体树分别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">T_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">T_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，其对应的损失函数值分别是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>α</mi></msub><mo stretchy="false">(</mo><msub><mi>T</mi><mi>B</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_\alpha(T_B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>α</mi></msub><mo stretchy="false">(</mo><msub><mi>T</mi><mi>A</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_\alpha(T_A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，如果</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mi>α</mi></msub><mo stretchy="false">(</mo><msub><mi>T</mi><mi>A</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><msub><mi>C</mi><mi>α</mi></msub><mo stretchy="false">(</mo><msub><mi>T</mi><mi>B</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_\alpha(T_A) \leq C_\alpha (T_B)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>则进行剪枝，即将父结点变为新的叶结点。</p>
</li>
<li>
<p>返回（2），直到不能继续为止，得到损失函数最小的子树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">T_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>注意：</p>
<p>上式只需考虑两个树的损失函数的差，其计算可以在局部进行。</p>
<p>因此，本算法可以由一种动态规划的算法实现。</p>
<p>具体可参见 [文献10：Li H, Abe N. Generalizing case frames using a thesaurus and the MDL principle. Computatuional Linguistics, 1998, 24(2): 217-224.（无链接，请自查）]</p>
</blockquote>
<h2 id="5-5-CART-算法">5.5 CART 算法</h2>
<ul>
<li>
<p>分类与回归树 classification and regression tree, CART</p>
<p>是应用广泛的决策树学习方法。</p>
<ul>
<li>同样由 特征选择、树的生成、树的剪枝组成。</li>
<li>既可以用于分类，也可以用于回归，统称决策树。</li>
</ul>
</li>
<li>
<p>CART 简介</p>
<p>CART是在给定输入随机变量 X 条件下输出随机变量 Y 的条件概率分布的学习方法。</p>
<ul>
<li>
<p>CART假设决策树是二叉树，</p>
<p>内部结点特征的取值为“是”（左分支）和“否”（右分支）。</p>
</li>
<li>
<p>决策树等价于递归地二分每个特征，将输入空间（即特征空间）划分为有限个单元，并在这些单元上确定预测的概率分布，也就是在输入给定的条件下输出的条件概率分布。</p>
</li>
<li>
<p>CART算法由下面两步组成：</p>
<ol>
<li>决策树生成：基于训练数据集生成决策树，生成的决策树要尽量大。</li>
<li>决策树剪枝：用验证数据集对已生成的树进行剪枝并选择最优子树，这时用损失函数最小作为剪枝的标准。</li>
</ol>
</li>
</ul>
</li>
</ul>
<h3 id="CART-生成">CART 生成</h3>
<ul>
<li>构建二叉决策树
<ul>
<li>回归树：平方误差最小化准则</li>
<li>分类树：基尼指数 Gini index 最小化准则</li>
</ul>
</li>
</ul>
<h3 id="回归树生成">回归树生成</h3>
<p>最小二乘回归树生成算法</p>
<ul>
<li>
<p>输入</p>
<ul>
<li>训练数据集 D</li>
</ul>
</li>
<li>
<p>输出</p>
<ul>
<li>回归树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>
<p>算法</p>
<p>在训练数据集所在的输入空间中，递归地将每个区域划分为两个子区域并决定每个子区域上的输出值，构建二叉决策树：</p>
<ol>
<li>
<p>选择最优切分变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 和切分点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span> ，求解</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mo><mi>m</mi><mi>i</mi><mi>n</mi></mo><mrow><mi>j</mi><mo separator="true">,</mo><mi>s</mi></mrow></msub><mo fence="false" stretchy="true" minsize="3em" maxsize="3em">[</mo><msub><mo><mi>m</mi><mi>i</mi><mi>n</mi></mo><msub><mi>c</mi><mn>1</mn></msub></msub><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></munder><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><msub><mo><mi>m</mi><mi>i</mi><mi>n</mi></mo><msub><mi>c</mi><mn>2</mn></msub></msub><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>R</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>c</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></munder><mo fence="false" stretchy="true" minsize="3em" maxsize="3em">]</mo></mrow><annotation encoding="application/x-tex">\mathop{min}_{j,s} \Bigg[\mathop{min}_{c_1} \sum \limits_{x_i \in R_1(j,s)} (y_i-c_1)^2 + \mathop{min}_{c_2} \sum \limits_{x_i \in R_2(j,s) (y_i-c_2)^2} \Bigg]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.266em;vertical-align:-1.516em;"></span><span class="mop"><span class="mop mathnormal" style="position:relative;top:0.0798em;">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size4">[</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop mathnormal" style="position:relative;top:0.0798em;">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0077em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.266em;vertical-align:-1.516em;"></span><span class="mop"><span class="mop mathnormal" style="position:relative;top:0.0798em;">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0077em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size4">]</span></span></span></span></span></span></p>
<p>遍历变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> ，对固定的切分变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 扫描切分点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span> ，选择使上式达到最小值的对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(j,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span> 。</p>
</li>
<li>
<p>用选定的对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(j,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span> 划分区域并决定相应的输出值：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>≤</mo><mi>s</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>R</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>&gt;</mo><mi>s</mi><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mover accent="true"><msub><mi>c</mi><mi>m</mi></msub><mo>^</mo></mover><mo>=</mo><mfrac><mn>1</mn><msub><mi>N</mi><mi>m</mi></msub></mfrac><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>R</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>j</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></munder><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>∈</mo><msub><mi>R</mi><mi>m</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>m</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">R_1(j,s) = \{ x|x^{(j)} \leq s \}, \, R_2(j,s) = \{ x|x^{(j)} &gt; s \} \\
\hat{c_m} = \frac{1}{N_m} \sum \limits_{x_i \in R_m (j,s)} y_i, \, x \in R_m, \, m=1,2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">x</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mclose">}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.8374em;vertical-align:-1.516em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0077em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span></span></span></span></span></p>
</li>
<li>
<p>继续对两个子区域调用步骤（1）（2）直至满足停止条件。</p>
</li>
<li>
<p>将输入空间划分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 个区域 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>R</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>R</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">R_1, R_2,...,R_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，生成决策树：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mover accent="true"><msub><mi>c</mi><mi>m</mi></msub><mo>^</mo></mover><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>∈</mo><msub><mi>R</mi><mi>m</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = \sum \limits_{m=1}^{M} \hat{c_m} I(x \in R_m)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0954em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ol>
</li>
</ul>
<h3 id="基尼指数-Gini-index">基尼指数 Gini index</h3>
<ul>
<li>
<p>基尼指数 Gini index</p>
<p>分类问题中，假设有 K 个类，样本点属于第 k 类的概率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">p_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，则概率分布的基尼指数定义为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msub><mi>p</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mi>p</mi><mi>k</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Gini(p) = \sum \limits_{k=1}^{K} p_k(1-p_k) = 1- \sum \limits_{k=1}^{K} p_k^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>对于给定的样本集合 D，其基尼指数为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><msup><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">Gini(D) = 1- \sum \limits_{k=1}^{K} \Big( \frac{|C_k|}{|D|} \Big)^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord"><span class="delimsizing size2">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.354em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>这里，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是 D 中属于第 k 类的样本子集， K 是类的个数。</p>
<ul>
<li>
<p>如果样本集合 D 根据特征 A 是否取某一值 a 被分割成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 两部分，即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>D</mi><mn>2</mn></msub><mo>=</mo><mi>D</mi><mo>−</mo><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1 = \{ (x,y)\in D|A(x) = a \}, \, D_2 = D -D_1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>则在特征 A 的条件下，集合 D 的基尼指数定义为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gini(D,A) = \frac{|D_1|}{|D|} Gini(D_1) + \frac{|D_2|}{|D|} Gini(D_2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>基尼指数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span> 表示集合 D 的不确定性。</p>
<p>基尼指数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(D,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> 表示经 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">A=a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 分割后集合 D 的不确定性。</p>
</li>
<li>
<p>基尼指数值越大，样本集合的不确定性越大，这一点与 熵 相似。</p>
</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P5.7-%E4%BA%8C%E7%B1%BB%E5%88%86%E7%B1%BB.png" alt="P5.7-二类分类" style="zoom: 80%;" /> 
<h3 id="分类树生成">分类树生成</h3>
<ul>
<li>
<p>CART 生成算法</p>
</li>
<li>
<p>输入</p>
<ul>
<li>训练数据集 D</li>
<li>停止计算的条件</li>
</ul>
</li>
<li>
<p>输出</p>
<ul>
<li>CART 决策树</li>
</ul>
</li>
<li>
<p>算法</p>
<p>根据训练数据集，从根结点开始，递归地对每个结点进行以下操作，构建二叉决策树：</p>
<ol>
<li>
<p>设结点的训练数据集为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> ，计算现有特征对该数据集的基尼指数。</p>
<p>此时，对每一个特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> ，对其可能取的每个值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> ，根据样本点对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">A =a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 的测试为“是”或“否”将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 分割成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 两部分，利用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>i</mi><mi>n</mi><mi>i</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Gini(D,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal">ini</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> 式子计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">A =a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 时的基尼指数。</p>
</li>
<li>
<p>在所有可能的特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 以及它们所有可能的切分点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 中，选择基尼指数最小的特征以及对应的切分点作为最优特征与最优切分点。依最优特征与最优切分点，从现结点生成两个子结点，将训练数据集依特征分配到两个子结点中去。</p>
</li>
<li>
<p>对两个子结点递归地调用（1）（2）直至满足停止条件。</p>
</li>
<li>
<p>生成 CART 决策树。</p>
</li>
</ol>
</li>
<li>
<p>算法停止计算的条件（以下一种即可）</p>
<ul>
<li>结点中的样本个数小于预定阈值</li>
<li>样本集的基尼指数小于预定阈值（即样本基本属于同一类）</li>
<li>没有更多特征</li>
</ul>
</li>
</ul>
<h3 id="CART-剪枝">CART 剪枝</h3>
<ul>
<li>
<p>输入</p>
<p>CART 算法生成的决策树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">T_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>输出</p>
<p>最优决策树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">T_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>T</mi><mo>=</mo><msub><mi>T</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">k=0,T=T_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\alpha = + \infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">+</span><span class="mord">∞</span></span></span></span></p>
</li>
<li>
<p>自上而下地对各内部结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><msub><mi>T</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(T_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>T</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|T_t|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span> 以及</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><mi>C</mi><mo stretchy="false">(</mo><msub><mi>T</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>T</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><mo>−</mo><mn>1</mn></mrow></mfrac><mspace linebreak="newline"></mspace><mi>α</mi><mo>=</mo><mo><mi>m</mi><mi>i</mi><mi>n</mi></mo><mo stretchy="false">(</mo><mi>α</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(t) = \frac{C(t)-C(T_t)}{|T_t|-1} \\
\alpha = \mathop{min} (\alpha , g(t))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop mathnormal" style="position:relative;top:0.0798em;">min</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">))</span></span></span></span></span></p>
<p>这里，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">T_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 为根结点的子树，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><msub><mi>T</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(T_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 是对训练数据的预测误差，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>T</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|T_t|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">T_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的叶结点个数。</p>
</li>
<li>
<p>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">g(t) = \alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span> 的内部结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 进行剪枝，并对叶结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 以多数表决法决定其类，得到树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 。</p>
</li>
<li>
<p>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>α</mi><mi>k</mi></msub><mo>=</mo><mi>α</mi><mo separator="true">,</mo><msub><mi>T</mi><mi>k</mi></msub><mo>=</mo><mi>T</mi></mrow><annotation encoding="application/x-tex">k=k+1,\alpha_k=\alpha, T_k=T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>。</p>
</li>
<li>
<p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">T_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 不是由根结点及两个叶结点构成的树，则回到步骤（2）；否则令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>k</mi></msub><mo>=</mo><msub><mi>T</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">T_k=T_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
</li>
<li>
<p>采用交叉验证法在子树序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>T</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>T</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">T_0,T_1,...,T_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中选取最优子树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>α</mi></msub></mrow><annotation encoding="application/x-tex">T_\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
</li>
</ol>
</li>
</ul>
<h2 id="5-6-示例">*5.6 示例</h2>
<h3 id="题目">题目</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E5.1-%E5%86%B3%E7%AD%96%E6%A0%91.png" alt="E5.1-决策树" style="zoom:80%;" /> 
<h3 id="寻找最优特征">寻找最优特征</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E5.1-1-%E4%BF%A1%E6%81%AF%E5%A2%9E%E7%9B%8A%E5%AF%BB%E6%89%BE%E6%9C%80%E4%BC%98%E7%89%B9%E5%BE%81.png" alt="E5.1-1-信息增益寻找最优特征" style="zoom:80%;" /> 
<h3 id="ID3-算法">ID3 算法</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E5.1-2-ID3%E7%AE%97%E6%B3%95.png" alt="E5.1-2-ID3算法" style="zoom:80%;" /> 
<h3 id="CART-算法">CART 算法</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E5.1-3-CART%E7%AE%97%E6%B3%95.png" alt="E5.1-3-CART算法" style="zoom:80%;" /> 
<h1>第6章 逻辑斯谛回归与最大熵模型</h1>
<blockquote>
<ul>
<li>
<p>逻辑斯谛回归 logistic regression</p>
<p>是统计学习的经典分类方法。</p>
</li>
<li>
<p>最大熵模型 maximum entropy</p>
<p>最大熵原理推广到分类问题得到。</p>
</li>
</ul>
</blockquote>
<h2 id="6-1-逻辑斯谛回归模型">6.1 逻辑斯谛回归模型</h2>
<h3 id="逻辑斯谛分布">逻辑斯谛分布</h3>
<ul>
<li>
<p>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 是连续随机变量， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 服从逻辑斯谛分布是指 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 具有下列分布函数和密度函数：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>≤</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>γ</mi></mrow></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>F</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>γ</mi></mrow></msup><mrow><mi>γ</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>γ</mi></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>其中，</mtext><mi>μ</mi><mtext>为位置参数，</mtext><mi>γ</mi><mo>&gt;</mo><mn>0</mn><mtext>为形状参数。</mtext></mrow><annotation encoding="application/x-tex">F(x) = P(X \leq x) = \frac{1}{1+e^{-(x-\mu)/\gamma} }  \\
f(x) = F&#x27;(x) = \frac{e^{-(x-\mu)/\gamma} } {\gamma (1+e^{-(x-\mu)/\gamma})^2} \\
其中，\mu为位置参数，\gamma &gt; 0 为形状参数。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1088em;vertical-align:-0.7873em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">μ</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7873em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.519em;vertical-align:-0.954em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">μ</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">μ</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord mathnormal">μ</span><span class="mord cjk_fallback">为位置参数，</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">0</span><span class="mord cjk_fallback">为形状参数。</span></span></span></span></span></p>
<ul>
<li>
<p>函数图像见下。</p>
</li>
<li>
<p>分布函数属于逻辑斯谛函数，其图形是一条 S 形曲线 sigmoid curve。</p>
<p>该曲线以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>μ</mi><mo separator="true">,</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mu,\frac{1}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span> 为中心对称，即满足</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mo>−</mo><mi>x</mi><mo>+</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>=</mo><mo>−</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">F(-x+\mu) - \frac{1}{2} =  - F(x+\mu) + \frac{1}{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p>曲线在中心附近i增长速度较快，在两端增长速度较慢。</p>
</li>
<li>
<p>形状参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span> 的值越小，曲线在中心附近增长得越快。</p>
</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P6.1-%E9%80%BB%E8%BE%91%E6%96%AF%E8%B0%9B%E5%88%86%E5%B8%83.png" alt="P6.1-逻辑斯谛分布" style="zoom:80%;" /> 
<h3 id="二项逻辑斯谛回归模型">二项逻辑斯谛回归模型</h3>
<ul>
<li>
<p>二项逻辑斯谛回归模型 binomial logistic regression model</p>
<p>二项逻辑斯谛回归模型是如下的条件概率分布：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>0</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>这里，</mtext><mi>x</mi><mo>∈</mo><msup><mi>R</mi><mi>n</mi></msup><mtext>是输入，</mtext><mi>Y</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo><mtext>是输出，</mtext><mspace linebreak="newline"></mspace><mi>w</mi><mo>∈</mo><msup><mi>R</mi><mi>n</mi></msup><mtext>和</mtext><mi>b</mi><mo>∈</mo><mi>R</mi><mtext>是参数</mtext><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mi>w</mi><mtext>称为权值向量，</mtext><mi>b</mi><mtext>称为偏置，</mtext><mi>w</mi><mo>⋅</mo><mi>x</mi><mtext>为</mtext><mi>w</mi><mtext>和</mtext><mi>x</mi><mtext>的内积。</mtext></mrow><annotation encoding="application/x-tex">P(Y=1|x) = \frac{\exp(w \cdot x + b)}{1+\exp(w \cdot x + b)} \\
P(Y=0|x) = \frac{1}{1+\exp(w \cdot x +b)} \\
这里，x \in R^n 是输入， Y\in \{ 0,1 \}是输出，\\
w \in R^n 和 b \in R是参数,\\
w 称为权值向量， b 称为偏置， w \cdot x 为 w 和 x 的内积。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">这里，</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7535em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">是输入，</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mord cjk_fallback">是输出，</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7535em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord cjk_fallback">是参数</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">称为权值向量，</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">称为偏置，</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">的内积。</span></span></span></span></span></p>
</li>
<li>
<p>为了方便，可以改写如下：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi>b</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mspace linebreak="newline"></mspace><mi>x</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">w = (w^{(1)}, w^{(2)}, ..., w^{(n)}, b)^T \\
x = (x^{(1)},x^{(2)},...,x^{(n)}, 1)^T
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>此时，可以记为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>0</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P(Y=1|x) = \frac{\exp(w \cdot x )}{1+\exp(w \cdot x )} \\
P(Y=0|x) = \frac{1}{1+\exp(w \cdot x )} \\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></span></p>
</li>
</ul>
<blockquote>
<ul>
<li>
<p>几率 odds</p>
<p>指该事件发生的概率与该事件不发生的概率的比值。</p>
<p>假设事件发生的概率是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>，那么该事件的几率是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>p</mi><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{p}{1-p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2286em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 。</p>
</li>
<li>
<p>对数几率 log odds</p>
<p>也称 logit 函数，即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>t</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><mfrac><mi>p</mi><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">logit(p) = \log \frac{p}{1-p}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.988em;vertical-align:-0.8804em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">p</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ul>
</blockquote>
<ul>
<li>
<p>对于逻辑斯谛回归而言，对数几率</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mn>1</mn><mo>−</mo><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mi>w</mi><mo>⋅</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\log \frac{P(Y=1|x)}{1-P(Y=1|x)} = w \cdot x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p>
<p>因此，在逻辑斯谛回归模型中，输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Y=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的对数几率是输入 x 的线性函数。</p>
</li>
<li>
<p>同样，反过来，</p>
<p>通过逻辑斯谛回归模型定义式可以将线性函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>⋅</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">w \cdot x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 转换为概率：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(Y=1|x) = \frac{\exp(w\cdot x)}{1+\exp (w \cdot x)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li>
<p>线性函数的值越接近正无穷，概率值越接近1；</p>
<p>线性函数的值越接近负无穷，概率值越接近0。</p>
</li>
</ul>
</li>
</ul>
<h3 id="模型参数估计">模型参数估计</h3>
<ul>
<li>
<p>可以应用极大似然估计，求出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 的估计值。</p>
</li>
<li>
<p>设</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>π</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>0</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>π</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y=1|x) = \pi (x) , \, P(Y=0|x) = 1-\pi(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>似然函数</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">[</mo><mi>π</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><msub><mi>y</mi><mi>i</mi></msub></msup><mo stretchy="false">[</mo><mn>1</mn><mo>−</mo><mi>π</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mrow><mn>1</mn><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\prod \limits_{i=1}^{N} [\pi(x_i)]^{y_i}[1-\pi(x_i)]^{1-y_i}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>对数似然函数</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">[</mo><msub><mi>y</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mi>π</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>π</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">[</mo><msub><mi>y</mi><mi>i</mi></msub><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>π</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mn>1</mn><mo>−</mo><mi>π</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mfrac><mo>+</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>π</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">[</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
L(w) &amp;= \sum \limits_{i=1}^{N} [y_i \log \pi(x_i) + (1-y_i)\log (1-\pi(x_i))] \\
&amp;= \sum \limits_{i=1}^{N} \Big[y_i \log \frac{\pi(x_i)}{1-\pi(x_i)} + \log (1-\pi(x_i))\Big] \\
&amp;= \sum \limits_{i=1}^{N} [y_i (w \cdot x_i) - \log (1+ \exp (w \cdot x_i)] \\
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.218em;vertical-align:-4.859em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.359em;"><span style="top:-7.359em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span><span style="top:-3.953em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span><span style="top:-0.547em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.859em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.359em;"><span style="top:-7.359em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))]</span></span></span><span style="top:-3.953em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span><span class="mord"><span class="delimsizing size2">]</span></span></span></span><span style="top:-0.547em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.859em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 求极大值，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 的估计值。</p>
</li>
<li>
<p>假设求出，则逻辑斯谛回归模型为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>^</mo></mover><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>^</mo></mover><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mn>0</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mover accent="true"><mi>w</mi><mo>^</mo></mover><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">P(Y=1|x) = \frac{\exp(\hat{w} \cdot x )}{1+\exp(\hat{w} \cdot x )} \\
P(Y=0|x) = \frac{1}{1+\exp(\hat{w} \cdot x )} \\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2574em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></span></p>
</li>
</ul>
<h3 id="多项逻辑斯谛回归">多项逻辑斯谛回归</h3>
<ul>
<li>
<p>上述是二项分类模型。</p>
<p>可以推广为多项逻辑斯谛回归模型 multi-nominal logistic regression model，用于多项分类。</p>
</li>
<li>
<p>设离散型随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 的取值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ 1,2,...,K \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span> ，那么多项逻辑斯谛回归模型是</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mi>k</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mi>k</mi></msub><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mn>1</mn><mo>+</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>K</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mi>k</mi></msub><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo><mtext> </mtext><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mo>−</mo><mn>1</mn><mspace linebreak="newline"></mspace><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><mi>K</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>K</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mi>k</mi></msub><mo>⋅</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>这里，</mtext><mi>x</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msub><mi>w</mi><mi>k</mi></msub><mo>∈</mo><msup><mi>R</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msup><mtext>。</mtext></mrow><annotation encoding="application/x-tex">P(Y=k|x) = \frac{\exp(w_k \cdot x )}{1+ \sum \limits_{k=1}^{K-1} \exp(w_k \cdot x )} , \, k=1,2,...,K-1\\
P(Y=K|x) = \frac{1}{1+ \sum \limits_{k=1}^{K-1} \exp(w_k \cdot x )} \\
这里，x \in R^{n+1} ,w_k \in R^{n+1}。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.8474em;vertical-align:-2.4204em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.0979em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.7583em;"><span class="pstrut" style="height:3.5283em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.2053em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4204em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.7419em;vertical-align:-2.4204em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.0979em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.7583em;"><span class="pstrut" style="height:3.5283em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.2053em;"><span class="pstrut" style="height:3.5283em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4204em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">这里，</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
</li>
<li>
<p>而参数估计方法，仍然从二项逻辑斯谛的方法推广即可。</p>
</li>
</ul>
<h2 id="6-2-最大熵模型">6.2 最大熵模型</h2>
<h3 id="最大熵原理">最大熵原理</h3>
<ul>
<li>
<p>最大熵原理</p>
<p>学习概率模型时，在所有可能的概率模型（分布）中，熵最大的模型是最好的模型。</p>
<p>即，在满足约束条件的模型集合中选取熵最大的模型。</p>
</li>
<li>
<p>假设离散随机变量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的概率分布是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span> ，则其熵是</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mi>x</mi></munder><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(P) = -\sum \limits_{x} P(x) \log P(x) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3em;vertical-align:-1.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
<p>熵满足不等式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>log</mi><mo>⁡</mo><mi mathvariant="normal">∣</mi><mi>X</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">0 \leq H(P) \leq \log |X|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span></span></span></span> ，其中绝对值表示取值个数。</p>
<ul>
<li>
<p>当且仅当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的分布是均匀分布时，右边等号成立。</p>
<p>因此，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 服从均匀分布时，熵最大。</p>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>直观来看，最大熵原理认为，要选择的概率模型首先必须满足已有的事实，即约束条件。</p>
<p>在没有更多信息的情况下，那些不确定的部分都是“等可能的”。</p>
<blockquote>
<p>要知道，等可能不容易操作，而最大熵原理通过熵的最大化来表示等可能性，从而成为一个可优化的数值指标。</p>
</blockquote>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P6.2-%E6%A6%82%E7%8E%87%E6%A8%A1%E5%9E%8B%E9%9B%86%E5%90%88.png" alt="P6.2-概率模型集合" style="zoom: 80%;" /> 
<h3 id="最大熵模型">最大熵模型</h3>
<ul>
<li>
<p>假设满足所有约束条件的模型集合为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">C</mi><mo>≡</mo><mo stretchy="false">{</mo><mi>P</mi><mo>∈</mo><mi mathvariant="script">P</mi><mi mathvariant="normal">∣</mi><msub><mi>E</mi><mi>P</mi></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\mathcal{C} \equiv \{ P \in \mathcal{P} | E_P (f_i) = E_{\tilde{P} } (f_i), \, i=1,2,...,n \} \\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.05834em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0493em;vertical-align:-0.2993em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span><span class="mspace newline"></span></span></span></span></p>
<p>定义在条件概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span> 上的条件熵为</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(P) = -\sum \limits_{x,y} \tilde{P} (x) P(y|x) \log P (y|x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4361em;vertical-align:-1.3861em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
<p>则模型集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">C</mi></mrow><annotation encoding="application/x-tex">\mathcal{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.05834em;">C</span></span></span></span> 中条件熵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span> 最大的模型称为 最大熵模型。</p>
<ul>
<li>式子中对数为自然对数。</li>
</ul>
</li>
<li>
<p>最大熵模型的学习</p>
<p>求解最大熵模型的学习过程，可以转为约束最优化问题。</p>
<p>就是求解：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi></mo><mrow><mi>P</mi><mo>∈</mo><mi mathvariant="script">C</mi></mrow></munder><mtext> </mtext><mtext> </mtext><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mrow><mi mathvariant="bold">s</mi><mi mathvariant="bold">.</mi><mi mathvariant="bold">t</mi><mi mathvariant="bold">.</mi></mrow><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><msub><mi>E</mi><mi>P</mi></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>E</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mspace linebreak="newline"></mspace><munder><mo>∑</mo><mi>y</mi></munder><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\mathop{min} \limits_{P \in \mathcal{C} } \, \, -H(P) = \sum \limits_{x,y} \tilde{P} (x) P(y|x) \log P (y|x) \\
\mathbf{s.t.}  \,\,\,\,   E_P(f_i) -E_{\tilde{P} } (f_i)=0 , \, i=1,2,...,n \\
\sum \limits_{y} P(y|x) = 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.6015em;vertical-align:-0.8515em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5798em;"><span style="top:-2.2759em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mrel mtight">∈</span><span class="mord mathcal mtight" style="margin-right:0.05834em;">C</span></span></span></span><span style="top:-2.9202em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8515em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4361em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">s.t.</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0493em;vertical-align:-0.2993em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.4361em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p>
</li>
<li>
<p>具体解法可以引进拉格朗日乘子，定义拉格朗日函数，并转换为对偶问题（先证明原始问题与对偶问题的解等价），求偏导等于0，即可解出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> 。</p>
</li>
</ul>
<blockquote>
<p>极大似然估计？</p>
<p>可以证明，对偶函数的极大似然估计等价于最大熵模型的极大似然估计。</p>
</blockquote>
<h2 id="6-3-模型学习的最优化算法">6.3 模型学习的最优化算法</h2>
<ul>
<li>
<p>总结</p>
<p>前面的 逻辑斯谛回归模型、最大熵模型学习归结为以似然函数为目标函数的最优化问题，通常通过迭代算法求解。</p>
</li>
<li>
<p>方法</p>
<p>这时的目标函数具有很好的性质，是光滑的凸函数。</p>
<p>因此多种最优化的方法都适用，保证能找到全局最优解。</p>
<ul>
<li>改进的迭代尺度法</li>
<li>梯度下降法</li>
<li>牛顿法</li>
<li>拟牛顿法</li>
</ul>
<p>其中，牛顿法、拟牛顿法收敛速度更快。</p>
</li>
</ul>
<h3 id="改进的迭代尺度法-IIS">改进的迭代尺度法 IIS</h3>
<ul>
<li>
<p>最大熵模型</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mi>exp</mi><mo>⁡</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo><mspace linebreak="newline"></mspace><mtext>其中，</mtext><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo></mrow><annotation encoding="application/x-tex">P_w(y|x) = \frac{1}{Z_w(x)} \exp \Big( \sum \limits_{i=1}^{n}w_if_i(x,y)  \Big) \\
 其中，Z_w(x) =  \sum \limits_{y} \exp \Big( \sum \limits_{i=1}^{n}w_if_i(x,y) \Big)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size2">)</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0375em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size2">)</span></span></span></span></span></span></p>
</li>
<li>
<p>对数似然函数</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><munder><mo>∑</mo><mi>x</mi></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(w) = \sum\limits_{x,y} \tilde{P}(x,y) \sum \limits_{i=1}^{n} w_if_i(x,y) - \sum \limits_x \tilde{P}(x)\log Z_w(x) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0375em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.3em;vertical-align:-1.25em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>目标</p>
<p>通过极大似然估计，求出对数似然函数的极大值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>w</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> 。</p>
</li>
<li>
<p>改进的迭代尺度法 improved iterative scaling, IIS</p>
<p>一种最大熵模型学习的最优化算法。</p>
<ul>
<li>IIS的想法是：假设当前参数向量是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">w=(w_1,w_2,...,w_n)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> ，我们希望找到一个新的参数向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>+</mo><mi>δ</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo>+</mo><msub><mi>δ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo>+</mo><msub><mi>δ</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo>+</mo><msub><mi>δ</mi><mi>n</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">w+\delta = (w_1+\delta_1,w_2+\delta_2,...,w_n+\delta_n)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 使得对数似然函数值增大，然后更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>→</mo><mi>w</mi><mo>+</mo><mi>δ</mi></mrow><annotation encoding="application/x-tex">w \rightarrow w +\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span> 即可。</li>
</ul>
</li>
<li>
<p>输入</p>
<ul>
<li>特征函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>f</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">f_1, f_2,...,f_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>​</li>
<li>经验分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{P} (X,Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1702em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></li>
<li>模型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_w(y|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>
<p>输出</p>
<ul>
<li>最优参数值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>w</mi><mi>i</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">w_i^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4413em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span>​</li>
<li>最优模型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><msup><mi>w</mi><mo>∗</mo></msup></msub></mrow><annotation encoding="application/x-tex">P_{w^*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2828em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6183em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p>对所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{ 1,2,...,n \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span></span></span>，取初值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w_i = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 。</p>
</li>
<li>
<p>对每一 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{ 1,2,...,n \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span></span></span></p>
<p>（a）令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>δ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\delta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是方程</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>δ</mi><mi>i</mi></msub><msup><mi>f</mi><mi mathvariant="normal">#</mi></msup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>其中，</mtext><msup><mi>f</mi><mi mathvariant="normal">#</mi></msup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum \limits_{x,y} \tilde{P} (x) P(y|x) f_i(x,y) \exp (\delta_i f^{ \# }(x,y)) = E_{\tilde{P} } (f_i) \\
其中， f^\# (x,y) = \sum \limits_{i=1}^{n} f_i(x,y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4361em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">#</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0493em;vertical-align:-0.2993em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">#</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p>的解。</p>
<p>（b）更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的值： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>←</mo><msub><mi>w</mi><mi>i</mi></msub><mo>+</mo><msub><mi>δ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i \leftarrow w_i + \delta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
</li>
<li>
<p>如果不是所有的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都收敛，重复步骤（2）。</p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>关键在于步骤（a），即求解 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>δ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\delta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
</blockquote>
<h3 id="拟牛顿法">拟牛顿法</h3>
<ul>
<li>
<p>最大熵模型</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo></mrow><mrow><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P_w(y|x) = \frac{\exp \Big( \sum \limits_{i=1}^{n} w_i f_i(x,y) \Big)}{\sum \limits_y \exp \Big( \sum \limits_{i=1}^{n} w_if_i(x,y) \Big)} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.0466em;vertical-align:-2.3275em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7191em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.3514em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-2.15em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size2">)</span></span></span></span><span style="top:-3.5814em;"><span class="pstrut" style="height:3.3514em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.7191em;"><span class="pstrut" style="height:3.3514em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size2">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3275em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p>目标函数</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>w</mi><mo>∈</mo><msup><mi>R</mi><mi>n</mi></msup></mrow></munder><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>x</mi></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\min_{w \in R^n} f(w) = \sum_x \tilde{P}(x) \log \sum_y \exp \Big( \sum \limits_{i=1}^{n} w_if_i(x,y)\Big) - \sum_{x,y} \tilde{P}(x,y) \sum \limits_{i=1}^{n} w_if_i(x,y) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5217em;vertical-align:-0.7717em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7717em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0375em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="delimsizing size2">)</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.0375em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>梯度</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>n</mi></msub></mrow></mfrac><msup><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo><mi>T</mi></msup><mspace linebreak="newline"></mspace><mtext>其中，</mtext><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>E</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">g(w) = \Big( \frac{\partial f(w)}{\partial w_1}, \frac{\partial f(w)}{\partial w_2},...,\frac{\partial f(w)}{\partial w_n} \Big)^T \\
其中，\frac{\partial f(w)}{\partial w} = \sum_{x,y} \tilde{P} (x)P_w(y|x)f_i(x,y) - E_{\tilde{P} } (f_i), \, i=1,2,...,n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.836em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord"><span class="delimsizing size2">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3812em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4361em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0493em;vertical-align:-0.2993em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></span></p>
</li>
<li>
<p>输入</p>
<ul>
<li>特征函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>f</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">f_1, f_2,...,f_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>​</li>
<li>经验分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{P} (X,Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1702em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></li>
<li>目标函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></li>
<li>梯度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(w) = \nabla f(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></li>
<li>精度要求 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span></li>
</ul>
</li>
<li>
<p>输出</p>
<ul>
<li>最优参数值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>w</mi><mi>i</mi><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">w_i^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-2.4413em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span>​</li>
<li>最优模型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><msup><mi>w</mi><mo>∗</mo></msup></msub></mrow><annotation encoding="application/x-tex">P_{w^*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2828em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6183em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li>
<p>算法</p>
<ol>
<li>
<p>选定初始点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">w^{(0)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> ，取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">B_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为正定对称矩阵，置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ；</p>
</li>
<li>
<p>计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>k</mi></msub><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_k = g(w^{(k)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>g</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi>ε</mi></mrow><annotation encoding="application/x-tex">||g_k|| &lt; \varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span> ，则停止计算，得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo>=</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">w^* = w^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> ；否则转（3）；</p>
</li>
<li>
<p>由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>k</mi></msub><msub><mi>p</mi><mi>k</mi></msub><mo>=</mo><mo>−</mo><msub><mi>g</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">B_kp_k = -g_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 求出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">p_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ；</p>
</li>
<li>
<p>一维搜索：求 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\lambda_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 使得</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msub><mi>λ</mi><mi>k</mi></msub><msub><mi>p</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>λ</mi><mo>≥</mo><mn>0</mn></mrow></munder><mi>f</mi><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi><msub><mi>p</mi><mi>k</mi></msub></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(w^{(k)}+\lambda_kp_k) = \min_{\lambda \geq 0} f(w^{(k)+\lambda p_k})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7853em;vertical-align:-0.8473em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="mrel mtight">≥</span><span class="mord mtight">0</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8473em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">λ</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><msub><mi>λ</mi><mi>k</mi></msub><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">w^{(k+1)}=w^{(k)}+\lambda_kp_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ；</p>
</li>
<li>
<p>计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_{k+1} = g(w^{(k+1)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>g</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi>ε</mi></mrow><annotation encoding="application/x-tex">||g_{k+1}|| &lt; \varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span> ，则停止计算，得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo>=</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">w^* = w^{(k+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> ；否则，按下面式子求出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">B_{k+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> ：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>B</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>B</mi><mi>k</mi></msub><mo>+</mo><mfrac><mrow><msub><mi>y</mi><mi>k</mi></msub><msubsup><mi>y</mi><mi>k</mi><mi>T</mi></msubsup></mrow><mrow><msubsup><mi>y</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi>δ</mi><mi>k</mi></msub></mrow></mfrac><mo>−</mo><mfrac><mrow><msub><mi>B</mi><mi>k</mi></msub><msub><mi>δ</mi><mi>k</mi></msub><msubsup><mi>δ</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi>B</mi><mi>k</mi></msub></mrow><mrow><msubsup><mi>δ</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi>B</mi><mi>k</mi></msub><msub><mi>δ</mi><mi>k</mi></msub></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>其中，</mtext><msub><mi>y</mi><mi>k</mi></msub><mo>=</mo><msub><mi>g</mi><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>g</mi><mi>k</mi></msub><mo separator="true">,</mo><mspace linebreak="newline"></mspace><msub><mi>δ</mi><mi>k</mi></msub><mo>=</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><msup><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow></msup><mtext>。</mtext></mrow><annotation encoding="application/x-tex">B_{k+1} = B_k + \frac{y_ky_k^T}{y_k^T\delta_k}-\frac{B_k\delta_k\delta_k^TB_k}{\delta_k^TB_k\delta_k}\\
其中，y_k=g_{k+1}-g_k, \\
\delta_k = w^{(k+1)-w^{(k)} }。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.5328em;vertical-align:-1.0144em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231em;"><span style="top:-2.3987em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4169em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0144em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.5328em;vertical-align:-1.0144em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231em;"><span style="top:-2.3987em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4169em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0144em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0897em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0897em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
</li>
<li>
<p>置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k=k+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> ，转（3）。</p>
</li>
</ol>
</li>
</ul>
<h2 id="6-4-示例">*6.4 示例</h2>
<h3 id="最大熵原理说明">最大熵原理说明</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E6.1-%E6%9C%80%E5%A4%A7%E7%86%B5%E5%8E%9F%E7%90%86%E8%AF%B4%E6%98%8E.png" alt="E6.1-最大熵原理说明" style="zoom:80%;" /> 
<h3 id="最大熵模型-2">最大熵模型</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E6.2-1-%E6%9C%80%E5%A4%A7%E7%86%B5%E6%A8%A1%E5%9E%8B.png" alt="E6.2-1-最大熵模型" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E6.2-2-%E6%9C%80%E5%A4%A7%E7%86%B5%E6%A8%A1%E5%9E%8B.png" alt="E6.2-2-最大熵模型" style="zoom:80%;" /> 
<h1>*第7章 支持向量机</h1>
<blockquote>
<p><strong>注：支持向量机SVM 被认为可能已经淘汰的算法。</strong></p>
<p>因此，仅阅览书籍，并没有写 Notes。</p>
<p>但是本章的内容是较长的，具体参见书籍[《统计学习方法》第二版 P111 - P154（无链接）]</p>
<p>以下只简单解释一下支持向量机，列出本章的目录，其余参见书籍。</p>
</blockquote>
<blockquote>
<ul>
<li>
<p>支持向量机 support vector machines, SVM</p>
<p>是一种二类分类模型。</p>
<ul>
<li>定义在特征空间上的间隔最大的线性分类器。</li>
<li>间隔最大使它有别于感知机。</li>
<li>还包括核技巧，使它成为实质上的非线性分类器。</li>
</ul>
</li>
<li>
<p>支持向量机的学习策略</p>
<p>间隔最大化</p>
<ul>
<li>
<p>可形式化为一个求解凸二次规划 convex quadratic programming 的问题。</p>
<p>也等价于正则化的合页损失函数的最小化问题。</p>
</li>
<li>
<p>支持向量机的学习算法是求解凸二次规划的最优化算法。</p>
</li>
</ul>
</li>
<li>
<p>模型</p>
<ul>
<li>线性可分支持向量机 linear support vector machine in linearly separable case</li>
<li>线性支持向量机 linear support vector machine</li>
<li>非线性支持向量机 non-linear support vector machine</li>
</ul>
</li>
<li>
<p>快速学习算法——序列最小最优化算法 SMO</p>
</li>
</ul>
</blockquote>
<h2 id="7-1-线性可分支持向量机与硬间隔最大化">7.1 线性可分支持向量机与硬间隔最大化</h2>
<h2 id="7-2-线性支持向量机与软间隔最大化">7.2 线性支持向量机与软间隔最大化</h2>
<h2 id="7-3-非线性支持向量机与核函数">7.3 非线性支持向量机与核函数</h2>
<h2 id="7-4-序列最小最优化算法">7.4 序列最小最优化算法</h2>
<h1>第8章 Boosting</h1>
<blockquote>
<ul>
<li>
<p>Boosting</p>
<p>是一种常用的统计学习方法，应用广泛且有效。</p>
<ul>
<li>在分类问题中，它通过改变训练样本的权重，学习多个分类器，并将这些分类器进行线性组合，提高分类的性能。</li>
<li>代表性的 AdaBoost 算法</li>
<li>具体的实例 提升树 boosting tree</li>
</ul>
</li>
<li>
<p>基本思想</p>
<p>“三个臭皮匠顶个诸葛亮”</p>
<p>对于复杂任务来说，将多个专家的判断进行适当的综合所得出的判断，要比其中任何一个专家单独的判断好。</p>
</li>
<li>
<p>可行性探究</p>
<ul>
<li>
<p>性能问题</p>
<ul>
<li>强可学习：一个概念（类），如果存在一个多项式的学习算法能够学习它，并且<strong>正确率很高</strong>，那么就称这个概念是强可学习的。</li>
<li>弱可学习：一个概念，如果存在一个多项式的学习算法能够学习它，学习的<strong>正确率仅比随机猜测略好</strong>，那么就称这个概念是弱可学习的。</li>
</ul>
</li>
<li>
<p>奇妙等价</p>
<p>后来证明 <strong>强可学习与弱可学习是等价的</strong>。</p>
<p>一个概念是强可学习的充分必要条件就是这个概念是弱可学习的。</p>
</li>
<li>
<p>因此，在学习中，如果已经发现了“弱学习算法”，</p>
<p>那么就能将它 提升 boost 为“强学习算法”。</p>
<ul>
<li>发现“弱学习算法”就相对容易多了。</li>
<li>具体实施提升，就是开发 Boosting 问题，最具有代表性的是 AdaBoost 算法。</li>
</ul>
</li>
</ul>
</li>
<li>
<p>基本步骤</p>
<p>从弱学习算法出发，反复学习，得到一系列弱分类器（基本分类器），然后组合这些弱分类器，构成一个强分类器。</p>
<ul>
<li>大多数的 Boosting 都是改变训练数据的概率分布（训练数据的权值分布），针对不同的训练数据分布调用弱学习算法学习一系列弱分类器。</li>
</ul>
<ol>
<li>
<p>每一轮如何改变训练数据的权值或概率分布？</p>
<p>提高前一轮错误分类样本的权值，降低正确分类样本的权值。</p>
</li>
<li>
<p>如何将弱分类器组合成一个强分类器？</p>
<p>AdaBoost 采用加权多数表决的方法。</p>
<p>加大分类误差率小的弱分类器的权值，使其在表决中起到较大的作用；反之，减小。</p>
</li>
</ol>
</li>
</ul>
</blockquote>
<h2 id="8-1-AdaBoost-算法">8.1 AdaBoost 算法</h2>
<ul>
<li>
<p>输入</p>
<ul>
<li>
<p>训练数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T=\{ (x_1,y_1),(x_2,y_2),...,(x_N,y_N) \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span></span></span></span> ，其中 $x_i\in \mathcal{X} \subseteq R^n, , y_i \in \mathcal{Y} = { -1,+1} $</p>
</li>
<li>
<p>弱学习算法</p>
</li>
</ul>
</li>
<li>
<p>输出</p>
<p>最终分类器 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>算法流程</p>
<ol>
<li>
<p>初始化训练数据的权值分布</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mn>11</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mn>1</mn><mi>N</mi></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>w</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">D_1 = (w_{11},...,w_{1i},...,w_{1N}), \, w_{1i} = \frac{1}{N}, \, i=1,2,...,N
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></span></p>
</li>
<li>
<p>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">m=1,2,...,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></p>
<p>（a）使用具有权值分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">D_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的训练数据集学习，得到基本分类器</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mi mathvariant="script">X</mi><mo>→</mo><mo stretchy="false">{</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mo>+</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">G_m(x) : \mathcal{X} \rightarrow \{ -1,+1 \}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">+</span><span class="mord">1</span><span class="mclose">}</span></span></span></span></span></p>
<p>（b）计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G_m(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 在训练数据集上的分类误差率</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>e</mi><mi>m</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>w</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub><mi>I</mi><mo stretchy="false">(</mo><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e_m = \sum \limits_{i=1}^{N} P(G_m(x_i)\neq y_i) = \sum \limits_{i=1}^{N} w_{mi}I(G_m(x_i)\neq y_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>（c）计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G_m(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 的系数</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>α</mi><mi>m</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>log</mi><mo>⁡</mo><mfrac><mrow><mn>1</mn><mo>−</mo><msub><mi>e</mi><mi>m</mi></msub></mrow><msub><mi>e</mi><mi>m</mi></msub></mfrac><mspace linebreak="newline"></mspace><mtext>其中，对数为自然对数。</mtext></mrow><annotation encoding="application/x-tex">\alpha_m = \frac{1}{2} \log \frac{1-e_m}{e_m} \\
其中，对数为自然对数。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1574em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">其中，对数为自然对数。</span></span></span></span></span></p>
<p>（d）更新训练数据集的权值分布</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>m</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mtext> </mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mtext> </mtext><msub><mi>w</mi><mrow><mi>m</mi><mo>+</mo><mi>i</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mtext> </mtext><msub><mi>w</mi><mrow><mi>m</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>N</mi></mrow></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>w</mi><mrow><mi>m</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo>=</mo><mfrac><msub><mi>w</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub><msub><mi>Z</mi><mi>m</mi></msub></mfrac><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><msub><mi>α</mi><mi>m</mi></msub><msub><mi>y</mi><mi>i</mi></msub><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi><mspace linebreak="newline"></mspace><mtext>其中，</mtext><msub><mi>Z</mi><mi>m</mi></msub><mtext>是规范化因子</mtext><mspace linebreak="newline"></mspace><msub><mi>Z</mi><mi>m</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>w</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><msub><mi>α</mi><mi>m</mi></msub><msub><mi>y</mi><mi>i</mi></msub><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>它使</mtext><msub><mi>D</mi><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow></msub><mtext>成为一个概率分布。</mtext></mrow><annotation encoding="application/x-tex">D_{m+1} = (w_{m+1,1}, \, ...,\, w_{m+i,i}, \, ...,\, w_{m+1,N}) \\
w_{m+1,i} = \frac{w_{mi} } {Z_m} \exp (-\alpha_my_iG_m(x_i)), \, i=1,2,...,N \\
其中，Z_m 是规范化因子\\
Z_m = \sum \limits_{i=1}^{N} w_{mi} \exp (-\alpha_my_iG_m(x_i)) \\
它使 D_{m+1} 成为一个概率分布。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9436em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">是规范化因子</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord cjk_fallback">它使</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">成为一个概率分布。</span></span></span></span></span></p>
</li>
<li>
<p>构建基本分类器的线性组合</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>α</mi><mi>m</mi></msub><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = \sum \limits_{m=1}^{M} \alpha_m G_m(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0954em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
<p>得到最终分类器</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>α</mi><mi>m</mi></msub><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
G(x) &amp;= sign(f(x)) \\
&amp;= sign(\sum \limits_{m=1}^{M} \alpha_m G_m(x))
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.8954em;vertical-align:-2.1977em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6977em;"><span style="top:-5.6861em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.1977em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1977em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6977em;"><span style="top:-5.6861em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span><span style="top:-3.1977em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1977em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>说明</p>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G_m(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 的系数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\alpha_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G_m(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 在最终分类器中的重要性。</p>
<p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>m</mi></msub><mo>≤</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">w_m \leq \frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>m</mi></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\alpha_m \geq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ，并且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">\alpha_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 随着 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">e_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的减小而增大，</p>
<p>所以分类误差率越小的基本分类器在最终分类器中的作用越大。</p>
</li>
<li>
<p>更新后，误分类样本在下一轮学习中起更大的作用。</p>
</li>
<li>
<p>不改变所给的训练数据，而不断改变训练数据权值的分布，使得训练数据在基本分类器的学习中起到不同的作用，这是 AdaBoost 算法的一个特点。</p>
</li>
<li>
<p>线性组合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 实现 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 个基本分类器的加权表决。</p>
</li>
</ul>
</blockquote>
<h2 id="8-2-AdaBoost-算法的训练误差分析">8.2 AdaBoost 算法的训练误差分析</h2>
<ul>
<li>
<p>AdaBoost 最基本的性质是它能在学习过程中不断减少训练误差，即在训练数据集上的分类误差率。</p>
</li>
<li>
<p>AdaBoost 的训练误差界</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>B</mi><mi>o</mi><mi>o</mi><mi>s</mi><mi>t</mi><mtext>算法最终分类器的训练误差界为</mtext><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mi>m</mi></munder><msub><mi>Z</mi><mi>m</mi></msub><mspace linebreak="newline"></mspace><mtext>其中，</mtext><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>和</mtext><msub><mi>Z</mi><mi>m</mi></msub><mtext>分别由</mtext><mi>A</mi><mi>d</mi><mi>a</mi><mi>B</mi><mi>o</mi><mi>o</mi><mi>s</mi><mi>t</mi><mtext>算法中式子给出。</mtext></mrow><annotation encoding="application/x-tex">AdaBoost 算法最终分类器的训练误差界为\\
\frac{1}{N} \sum \limits_{i=1}^{N} I(G(x_i)\neq y_i) \leq \frac{1}{N} \sum \limits_{i} \exp (-y_if(x_i)) = \prod \limits_{m} Z_m \\
其中，G(x) ,f(x)和Z_m 分别由AdaBoost算法中式子给出。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">oos</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">算法最终分类器的训练误差界为</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5991em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3em;vertical-align:-1.25em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">分别由</span><span class="mord mathnormal">A</span><span class="mord mathnormal">d</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">oos</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">算法中式子给出。</span></span></span></span></span></p>
<ul>
<li>
<p>这一定理说明</p>
<p>在每一轮选取适当的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">G_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Z</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">Z_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 最小，从而使训练误差下降得最快。</p>
</li>
</ul>
</li>
<li>
<p>特殊地，二类分类问题 AdaBoost 的训练误差界</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><munderover><mo>∏</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>Z</mi><mi>m</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∏</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">[</mo><mn>2</mn><msqrt><mrow><msub><mi>e</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>e</mi><mi>m</mi></msub><mo stretchy="false">)</mo></mrow></msqrt><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∏</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msqrt><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>4</mn><msubsup><mi>γ</mi><mi>m</mi><mn>2</mn></msubsup><mo stretchy="false">)</mo></mrow></msqrt></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><mi>exp</mi><mo>⁡</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">(</mo><mo>−</mo><mn>2</mn><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msubsup><mi>γ</mi><mi>m</mi><mn>2</mn></msubsup><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>其中，</mtext><msub><mi>γ</mi><mi>m</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>−</mo><msub><mi>e</mi><mi>m</mi></msub><mtext>。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\prod \limits_{m=1}^{M} Z_m &amp;= \prod \limits_{m=1}^{M} \bigg[2 \sqrt{e_m(1-e_m)} \bigg] \\
&amp;= \prod \limits_{m=1}^{M} \sqrt{(1-4\gamma_m^2)} \\
&amp;\leq \exp \Big( -2\sum \limits_{m=1}^{M} \gamma_m^2 \Big) \\
其中，\gamma_m = \frac{1}{2} -e_m。
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12.4938em;vertical-align:-5.9969em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.4969em;"><span style="top:-8.4969em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-5.1014em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span><span style="top:-1.706em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span><span style="top:1.1826em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord cjk_fallback">其中，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">。</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.9969em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.4969em;"><span style="top:-8.4969em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size3">[</span></span><span class="mord">2</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span><span class="mord"><span class="delimsizing size3">]</span></span></span></span><span style="top:-5.1014em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.453em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span></span></span><span style="top:-1.706em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="delimsizing size2">(</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size2">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.6895em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>推论</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>如果存在</mtext><mi>γ</mi><mo>&gt;</mo><mn>0</mn><mtext>，对所有</mtext><mi>m</mi><mtext>有</mtext><msub><mi>γ</mi><mi>m</mi></msub><mo>≥</mo><mi>γ</mi><mtext>，则</mtext><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>I</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><mi>M</mi><msup><mi>γ</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">如果存在 \gamma &gt;0 ，对所有 m 有 \gamma_m \geq \gamma ，则 \\
\frac{1}{N} \sum \limits_{i=1}^{N} I(G(x_i)\neq y_i) \leq \exp (-2M\gamma^2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">如果存在</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mord cjk_fallback">，对所有</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">有</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord cjk_fallback">，则</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>
<p>这表明</p>
<p>在此条件下，AdaBoost 的训练误差是以指数速率下降的。</p>
</li>
</ul>
</li>
<li>
<p>注意</p>
<p>AdaBoost 算法不需要知道下界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span> 。</p>
<p>与早期的 Boosting 不同， AdaBoost 具有适应性，即它能适应弱分类器各自的训练误差率。</p>
<p>这就是它名字的由来 适应的提升，Adaptive Boosting。</p>
</li>
</ul>
<h2 id="8-3-AdaBoost-算法的解释">8.3 AdaBoost 算法的解释</h2>
<h3 id="前向分步算法">前向分步算法</h3>
<ul>
<li>
<p>输入</p>
<ul>
<li>训练数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T=\{ (x_1,y_1),(x_2,y_2),...,(x_N,y_N) \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span></span></span></span> ；</li>
<li>损失函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(y,f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span> ；</li>
<li>基函数集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>b</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>γ</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ b(x;\gamma) \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mclose">)}</span></span></span></span></li>
</ul>
</li>
<li>
<p>输出</p>
<p>加法模型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>算法流程</p>
<ol>
<li>
<p>最初化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f_0(x)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ；</p>
</li>
<li>
<p>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">m=1,2,...,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></p>
<p>（a）极小化损失函数</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>β</mi><mi>m</mi></msub><mo separator="true">,</mo><msub><mi>γ</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>β</mi><mo separator="true">,</mo><mi>γ</mi></mrow></munder><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>L</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi>β</mi><mi>b</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">;</mo><mi>γ</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\beta_m,\gamma_m) = \arg \min \limits_{\beta,\gamma} \sum \limits_{i=1}^{N} L(y_i,f_{m-1}(x_i)+\beta b(x_i;\gamma))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mclose">))</span></span></span></span></span></p>
<p>得到参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mi>m</mi></msub><mo separator="true">,</mo><msub><mi>γ</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">\beta_m,\gamma_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p>
<p>（b）更新</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>β</mi><mi>m</mi></msub><mi>b</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi>γ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_m(x) = f_{m-1}(x) + \beta_mb(x;\gamma)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>得到加法模型</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mi>M</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>β</mi><mi>m</mi></msub><mi>b</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi>γ</mi><mi>m</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x) = f_M(x) = \sum \limits_{m=1}^{M} \beta_mb(x;\gamma_m)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0954em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>这样，前向分步算法将同时求解从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 所有参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mi>m</mi></msub><mo separator="true">,</mo><msub><mi>γ</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">\beta_m,\gamma_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的优化问题简化为</p>
<p>逐次求解各个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mi>m</mi></msub><mo separator="true">,</mo><msub><mi>γ</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">\beta_m,\gamma_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的优化问题。</p>
</blockquote>
<h3 id="联系-AdaBoost">联系 AdaBoost</h3>
<ul>
<li>
<p>AdaBoost 算法是前向分步加法算法 的特例。</p>
<p>这时：</p>
<ul>
<li>模型：由基本分类器组成的加法模型</li>
<li>损失函数：指数函数</li>
</ul>
</li>
</ul>
<h2 id="8-4-提升树">8.4 提升树</h2>
<ul>
<li>
<p>提升树是以分类树或回归树为基本分类器的 Boosting。</p>
<p>提升树被认为是统计学习中性能最好的方法之一。</p>
</li>
</ul>
<h3 id="提升树模型">提升树模型</h3>
<ul>
<li>
<p>Boosting 实际采用加法模型（即基函数的线性组合）与前向分步算法。</p>
</li>
<li>
<p>以决策树为基函数的 Boosting 称为提升树 boosting tree。</p>
<ul>
<li>二叉分类树</li>
<li>二叉回归树</li>
</ul>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>M</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi mathvariant="normal">Θ</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>其中，</mtext><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi mathvariant="normal">Θ</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mtext>表示决策树，</mtext><msub><mi mathvariant="normal">Θ</mi><mi>m</mi></msub><mtext>为决策树的参数，</mtext><mi>M</mi><mtext>为树的个数。</mtext></mrow><annotation encoding="application/x-tex">f_M(x)= \sum \limits_{m=1}^{M} T(x;\Theta_m) \\
其中，T(x;\Theta_m)表示决策树，\Theta_m为决策树的参数，M为树的个数。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0954em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中，</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">表示决策树，</span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为决策树的参数，</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">为树的个数。</span></span></span></span></span></p>
</li>
</ul>
<h3 id="分类问题的提升树算法">分类问题的提升树算法</h3>
<ul>
<li>
<p>二类分类问题，提升树只需要将 前面AdaBoost 算法中的基本分类器限制为二类分类树即可。</p>
<p>这时，可以说 提升树算法 是 AdaBoost 算法的特殊情况。</p>
</li>
</ul>
<h3 id="回归问题的提升树算法">回归问题的提升树算法</h3>
<ul>
<li>
<p>输入</p>
<p>训练数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi mathvariant="script">X</mi><mo>⊆</mo><msup><mi>R</mi><mi>n</mi></msup><mo separator="true">,</mo><mtext> </mtext><msub><mi>y</mi><mi>i</mi></msub><mo>∈</mo><mi mathvariant="script">Y</mi><mo>⊆</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">T=\{ (x_1,y_1),(x_2,y_2),...,(x_N,y_N) \}, \, x_i \in \mathcal{X} \subseteq R^n, \, y_i \in \mathcal{Y} \subseteq R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></p>
</li>
<li>
<p>输出</p>
<p>提升树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>M</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_M(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>算法流程</p>
<ol>
<li>
<p>初始化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f_0(x) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 。</p>
</li>
<li>
<p>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">m=1,2,...,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></p>
<p>（a）按下式计算残差</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><mi mathvariant="normal">Θ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>J</mi></munderover><msub><mi>c</mi><mi>j</mi></msub><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>∈</mo><msub><mi>R</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>其中参数</mtext><mi mathvariant="normal">Θ</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mi>J</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>J</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mtext>表示树的区域划分和各区域上的常数。</mtext><mspace linebreak="newline"></mspace><mi>J</mi><mtext>是回归树的复杂度，即叶结点个数。</mtext><mspace linebreak="newline"></mspace><msub><mi>r</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">T(x;\Theta) = \sum \limits_{j=1}^{J} c_j I(x\in R_j) \\
其中参数 \Theta = \{ (R_1,c_1),(R_2,c_2),...,(R_J,c_J) \} 表示树的区域划分和各区域上的常数。\\
J是回归树的复杂度，即叶结点个数。\\
r_{mi} = y_i-f_{m-1}(x_i), \, i=1,2,...,N
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">其中参数</span><span class="mord">Θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span><span class="mord cjk_fallback">表示树的区域划分和各区域上的常数。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord cjk_fallback">是回归树的复杂度，即叶结点个数。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></span></p>
<p>（b）拟合残差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">r_{mi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 学习一个回归树，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi mathvariant="normal">Θ</mi><mi>m</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(x;\Theta_m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。</p>
<p>（c）更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi mathvariant="normal">Θ</mi><mi>m</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_m(x) = f_{m-1}(x)+T(x;\Theta_m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。</p>
</li>
<li>
<p>得到回归问题提升树</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>M</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">;</mo><msub><mi mathvariant="normal">Θ</mi><mi>m</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_M(x) = \sum \limits_{m=1}^{M} T(x;\Theta_m)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0954em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ol>
</li>
</ul>
<h3 id="梯度提升">梯度提升</h3>
<ul>
<li>
<p>提升树当损失函数是平方损失和指数损失函数时，每一步的优化是很简单的。</p>
</li>
<li>
<p>但是对于一般损失函数而言，往往每一步优化并不那么容易。</p>
<p>针对这个问题，Freidman 提出了梯度提升 gradient boosting 算法。</p>
</li>
<li>
<p>梯度提升</p>
<p>利用最速下降法的近似方法，关键是利用<strong>损失函数的负梯度在当前模型的值</strong>作为回归问题提升树算法中的<strong>残差的近似值</strong>，拟合一个回归树。</p>
</li>
<li>
<p>输入</p>
<ul>
<li>训练数据集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mi mathvariant="script">X</mi><mo>⊆</mo><msup><mi>R</mi><mi>n</mi></msup><mo separator="true">,</mo><mtext> </mtext><msub><mi>y</mi><mi>i</mi></msub><mo>∈</mo><mi mathvariant="script">Y</mi><mo>⊆</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">T=\{ (x_1,y_1),(x_2,y_2),...,(x_N,y_N) \}, \, x_i\in \mathcal{X} \subseteq R^n, \, y_i \in \mathcal{Y} \subseteq R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></li>
<li>损失函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(y,f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span></li>
</ul>
</li>
<li>
<p>输出</p>
<p>回归树 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>算法流程</p>
<ol>
<li>
<p>初始化</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>c</mi></munder><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>L</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_0(x) = \arg \min \limits_{c} \sum \limits_{i=1}^{N} L(y_i,c)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">m=1,2,..,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></p>
<p>（a）对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">i=1,2,...,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 计算</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub><mo>=</mo><mo>−</mo><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">[</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mrow><mi>L</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mrow><mrow><mi mathvariant="normal">∂</mi><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mrow></mfrac><msub><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">]</mo><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">r_{mi} = - \Big[ \frac{\partial{L(y_i,f(x_i))} } {\partial{f(x_i)} } \Big]_{f(x)=f_{m-1}(x)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord">−</span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord"><span class="delimsizing size2">]</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.1747em;"><span style="top:-2.0003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1076em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8747em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>（b）对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">r_{mi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 拟合一个回归树，得到第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 棵树的叶结点区域 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>J</mi></mrow><annotation encoding="application/x-tex">R_{mi}, \, j=1,2,...,J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span></span> 。</p>
<p>（c）对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>J</mi></mrow><annotation encoding="application/x-tex">j=1,2,...,J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span></span> 计算</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>m</mi><mi>i</mi></mrow></msub><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>c</mi></munder><munder><mo>∑</mo><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>R</mi><mrow><mi>m</mi><mi>j</mi></mrow></msub></mrow></munder><mi>L</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{mi} = \arg \min \limits_{c} \sum \limits_{x_i \in R_{mj} } L(y_i, f_{m-1}(x_i)+c)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">mi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5417em;vertical-align:-1.4917em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0077em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">mj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4917em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p>
<p>（d）更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>J</mi></msubsup><msub><mi>c</mi><mrow><mi>m</mi><mi>j</mi></mrow></msub><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>∈</mo><msub><mi>R</mi><mrow><mi>m</mi><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_m(x) = f_{m-1}(x)+\sum \limits_{j=1}^{J} c_{mj} I(x \in R_{mj})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.6421em;vertical-align:-1.1138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5283em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">mj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">mj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>得到回归树</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mi>M</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>J</mi></munderover><msub><mi>c</mi><mrow><mi>m</mi><mi>j</mi></mrow></msub><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo>∈</mo><msub><mi>R</mi><mrow><mi>m</mi><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x) = f_M(x) = \sum \limits_{m=1}^{M} \sum \limits_{j=1}^{J} c_{mj} I(x \in R_{mj})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.0833em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2421em;vertical-align:-1.4138em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">mj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">mj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ol>
</li>
</ul>
<blockquote>
<p>第2（a）步，计算损失函数的负梯度在当前模型的值，将它作为残差的估计。</p>
<ul>
<li>对于平方损失函数，它就是通常所说的残差；</li>
<li>对于一般损失函数，它就是残差的近似值。</li>
</ul>
</blockquote>
<h2 id="8-5-示例">*8.5 示例</h2>
<h3 id="AdaBoost-算法">AdaBoost 算法</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E8.1-AdaBoost%E7%AE%97%E6%B3%95.png" alt="E8.1-AdaBoost算法" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E8.1-2-AdaBoost%E7%AE%97%E6%B3%95.png" alt="E8.1-2-AdaBoost算法" style="zoom:80%;" /> 
<h3 id="提升树">提升树</h3>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E8.2-1-%E6%8F%90%E5%8D%87%E6%A0%91.png" alt="E8.2-1-提升树" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E8.2-2-%E6%8F%90%E5%8D%87%E6%A0%91.png" alt="E8.2-2-提升树" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/E8.2-3-%E6%8F%90%E5%8D%87%E6%A0%91.png" alt="E8.2-3-提升树" style="zoom:80%;" /> 
<h1>*第9章 EM算法及其推广</h1>
<h1>*第10章 隐马尔可夫模型</h1>
<h1>*第11章 条件随机场</h1>
<blockquote>
<p>本3章可以在需要使用时，再特定阅览，此处不再写 Notes。</p>
<p>可能另开 Notes 专门记录，关注其他 Notes。</p>
</blockquote>
<h1>第12章 监督学习方法总结</h1>
<blockquote>
<p>至此，监督学习篇章的所有内容已经结束！</p>
</blockquote>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/StatisticalLearningMethod/SupervisedLearning/P12.1-%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93.png" alt="P12.1-监督学习方法总结" style="zoom:80%;" /> 
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>监督学习理论</tag>
      </tags>
  </entry>
  <entry>
    <title>颜色素材——原神</title>
    <url>/butterflyblog/2023/08/03/%E9%A2%9C%E8%89%B2%E7%B4%A0%E6%9D%90%E2%80%94%E2%80%94%E5%8E%9F%E7%A5%9E/</url>
    <content><![CDATA[<h1>开发颜色素材——原神</h1>
<blockquote>
<p>一个常用的占位无用背景色：<code>#f8f8f8 </code> 淡浅灰</p>
</blockquote>
<h4 id="来源1：璃月港"><a href="https://www.bilibili.com/video/BV1i84y1h75N/?spm_id_from=333.999.0.0&amp;vd_source=c8fd2e0497e85b922bd7937e4829dc8f">来源1：璃月港</a></h4>
<h4 id="1-1-香菱">1.1 香菱</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119174702280.png" alt="image-20230119174702280" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#000000</span><br><span class="line">#384871</span><br><span class="line">#E7BD39</span><br><span class="line">#AB4F3F</span><br><span class="line">#47855A</span><br></pre></td></tr></table></figure>
<h4 id="1-2-申鹤">1.2 申鹤</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119174817927.png" alt="image-20230119174817927" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#232B36</span><br><span class="line">#5E7C89</span><br><span class="line">#B4BFD0</span><br><span class="line">#8694AD</span><br><span class="line">#9C3129</span><br></pre></td></tr></table></figure>
<h4 id="1-3-魈">1.3 魈</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119174923461.png" alt="image-20230119174923461" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#333C42</span><br><span class="line">#316658</span><br><span class="line">#5EA69C</span><br><span class="line">#C2CFA2</span><br><span class="line">#A4795E</span><br><span class="line">#706690</span><br></pre></td></tr></table></figure>
<h4 id="1-4-胡桃">1.4 胡桃</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175000000.png" alt="image-20230119175000000" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#3A1B19</span><br><span class="line">#7B595E</span><br><span class="line">#C7A085</span><br><span class="line">#FCF0E1</span><br><span class="line">#C94737</span><br></pre></td></tr></table></figure>
<h4 id="1-5-云堇">1.5 云堇</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175045668.png" alt="image-20230119175045668" style="zoom: 50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#1E1A22</span><br><span class="line">#67A4BA</span><br><span class="line">#4E4C72</span><br><span class="line">#B94E5E</span><br><span class="line">#D389A1</span><br></pre></td></tr></table></figure>
<h4 id="1-6-钟离">1.6 钟离</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175127600.png" alt="image-20230119175127600" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#2F2321</span><br><span class="line">#AA4F23</span><br><span class="line">#F8EBDC</span><br><span class="line">#FED875</span><br><span class="line">#CF627A</span><br></pre></td></tr></table></figure>
<h4 id="1-6-甘雨">1.6 甘雨</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175157962.png" alt="image-20230119175157962" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#33395B</span><br><span class="line">#5D74A2</span><br><span class="line">#C4D8F2</span><br><span class="line">#F2E8E3</span><br><span class="line">#7C282B</span><br></pre></td></tr></table></figure>
<h4 id="1-7-刻晴">1.7 刻晴</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175226756.png" alt="image-20230119175226756" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#211A3E</span><br><span class="line">#453370</span><br><span class="line">#A597B6</span><br><span class="line">#FEF3E8</span><br><span class="line">#D06C9D</span><br></pre></td></tr></table></figure>
<h4 id="来源2：稻妻城"><a href="https://www.bilibili.com/video/BV1W24y1e75S/?spm_id_from=333.337.search-card.all.click&amp;vd_source=c8fd2e0497e85b922bd7937e4829dc8f">来源2：稻妻城</a></h4>
<h4 id="2-1-八重神子">2.1 八重神子</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175544863.png" alt="image-20230119175544863" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<h4 id="2-2-早柚">2.2 早柚</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175615925.png" alt="image-20230119175615925" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<h4 id="2-3-雷电将军">2.3 雷电将军</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175645940.png" alt="image-20230119175645940" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<h4 id="2-4-宵宫">2.4 宵宫</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175717878.png" alt="image-20230119175717878" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#CD4432</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<h4 id="2-5-枫原万叶">2.5 枫原万叶</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175802792.png" alt="image-20230119175802792" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#</span><br><span class="line">#C33828</span><br><span class="line">#</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<h4 id="2-6-神里绫华">2.6 神里绫华</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175841853.png" alt="image-20230119175841853" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#414C87</span><br><span class="line">#9CB3D4</span><br><span class="line">#ECEDEB</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<h4 id="2-7-荒泷一斗">2.7 荒泷一斗</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175910185.png" alt="image-20230119175910185" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line">#F7DB78</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
<h4 id="2-8-珊瑚宫心海">2.8 珊瑚宫心海</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/genshincolor/image-20230119175944139.png" alt="image-20230119175944139" style="zoom:50%;" />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line">#</span><br><span class="line">#8E8DC8</span><br><span class="line">#F7E2DB</span><br><span class="line">#</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>通用知识</category>
      </categories>
      <tags>
        <tag>原神</tag>
      </tags>
  </entry>
  <entry>
    <title>《Python Tutorial》Notes</title>
    <url>/butterflyblog/2024/01/27/%E3%80%8APython%20Tutorial%E3%80%8BNotes/</url>
    <content><![CDATA[<h1>《Python Tutorial》Notes</h1>
<blockquote>
<p>Source From: <a href="https://docs.python.org/zh-cn/3/tutorial/">Python Tutorial</a></p>
<p>2024-01-27@isSeymour</p>
</blockquote>
<h1>1. 课前甜点</h1>
<p>Python 程序简洁、易读，通常比实现同种功能的 C、C++、Java 代码短很多，原因如下：</p>
<ul>
<li>高级数据类型允许在单一语句中表述复杂操作；</li>
<li>使用缩进，而不是括号实现代码块分组；</li>
<li>无需预声明变量或参数。</li>
</ul>
<p>Python “可以扩展”：会开发 C 语言程序，就能快速上手为解释器增加新的内置函数或模块，不论是让核心程序以最高速度运行，还是把 Python 程序链接到只提供预编译程序的库（比如，硬件图形库）。只要下点功夫，就能把 Python 解释器和用 C 开发的应用链接在一起，用它来扩展和控制该应用。</p>
<h1>2. Python 解释器</h1>
<h2 id="2-1-调用解释器">2.1. 调用解释器</h2>
<h4 id="启动">启动</h4>
<p>Python 解释器在可用的机器上通常被安装为 <code>/usr/local/bin/python3.11</code>；</p>
<p>将 <code>/usr/local/bin</code> 加入你的 Unix shell 的搜索路径就可以通过输入以下命令来启动它:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3.11</span><br><span class="line">python</span><br><span class="line">py</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Unix 系统中，为了不与同时安装的 Python 2.x 冲突，Python 3.x 解释器默认安装的执行文件名不是 <code>python</code>。</p>
<p><code>py</code>需要安装了<code>py.exe</code>。</p>
<p>这样，就可以在 shell 中运行 Python 了 。因为可以选择安装目录，解释器也有可能安装在别的位置；如果还不明白，就去问问身边的 Python 大神或系统管理员。（例如，常见备选路径还有 <code>/usr/local/python</code>。）</p>
</blockquote>
<h4 id="退出">退出</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文件结束符（Unix 里是 Control-D，Windows 里是 Control-Z）</span><br><span class="line">quit()</span><br></pre></td></tr></table></figure>
<h4 id="使用">使用</h4>
<p>解释器的操作方式类似 Unix Shell：用与 tty 设备关联的标准输入调用时，可以交互式地读取和执行命令；以文件名参数，或标准输入文件调用时，则读取并执行文件中的 <em>脚本</em>。</p>
<p>另一种启动解释器的方式是 <code>python -c command [arg] ...</code>，这将执行 <em>command</em> 中的语句，相当于 shell 的 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#cmdoption-c"><code>-c</code></a> 选项。 由于 Python 语句经常包含空格或其他会被 shell 特殊对待的字符，通常建议用引号将整个 <em>command</em> 括起来。</p>
<p>Python 模块也可以当作脚本使用。输入：<code>python -m module [arg] ...</code>，会执行 <em>module</em> 的源文件，这跟在命令行把路径写全了一样。</p>
<p>在交互模式下运行脚本文件，只要在脚本名称参数前，加上选项 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#cmdoption-i"><code>-i</code></a> 就可以了。</p>
<p>命令行的所有选项详见 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#using-on-general">命令行与环境</a>。</p>
<h3 id="2-1-1-传入参数">2.1.1. 传入参数</h3>
<p>解释器读取命令行参数，把脚本名与其他参数转化为字符串列表存到 <code>sys</code> 模块的 <code>argv</code> 变量里。执行 <code>import sys</code>，可以导入这个模块，并访问该列表。该列表最少有一个元素；未给定输入参数时，<code>sys.argv[0]</code> 是空字符串。给定脚本名是 <code>'-'</code> （标准输入）时，<code>sys.argv[0]</code> 是 <code>'-'</code>。使用 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#cmdoption-c"><code>-c</code></a> <em>command</em> 时，<code>sys.argv[0]</code> 是 <code>'-c'</code>。如果使用选项 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#cmdoption-m"><code>-m</code></a> <em>module</em>，<code>sys.argv[0]</code> 就是包含目录的模块全名。解释器不处理 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#cmdoption-c"><code>-c</code></a> <em>command</em> 或 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#cmdoption-m"><code>-m</code></a> <em>module</em> 之后的选项，而是直接留在 <code>sys.argv</code> 中由命令或模块来处理。</p>
<h3 id="2-1-2-交互模式">2.1.2. 交互模式</h3>
<p>在终端（tty）输入并执行指令时，解释器在 <em>交互模式（interactive mode）</em> 中运行。在这种模式中，会显示 <em>主提示符</em>，提示输入下一条指令，主提示符通常用三个大于号（<code>&gt;&gt;&gt;</code>）表示；输入连续行时，显示 <em>次要提示符</em>，默认是三个点（<code>...</code>）。进入解释器时，首先显示欢迎信息、版本信息、版权声明，然后才是提示符：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ python3<span class="number">.11</span></span><br><span class="line">Python <span class="number">3.11</span> (default, April <span class="number">4</span> <span class="number">2021</span>, 09:<span class="number">25</span>:04)</span><br><span class="line">[GCC <span class="number">10.2</span><span class="number">.0</span>] on linux</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>输入多行架构的语句时，要用连续行。以 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#if"><code>if</code></a> 为例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>the_world_is_flat = <span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> the_world_is_flat:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;Be careful not to fall off!&quot;</span>)</span><br><span class="line">...</span><br><span class="line">Be careful <span class="keyword">not</span> to fall off!</span><br></pre></td></tr></table></figure>
<p>交互模式的内容详见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/appendix.html#tut-interac">交互模式</a>。</p>
<h2 id="2-2-解释器的运行环境">2.2. 解释器的运行环境</h2>
<h3 id="2-2-1-源文件的字符编码">2.2.1. 源文件的字符编码</h3>
<p>默认情况下，Python 源码文件的编码是 UTF-8。这种编码支持世界上大多数语言的字符，可以用于字符串字面值、变量、函数名及注释 —— 尽管标准库只用常规的 ASCII 字符作为变量名或函数名，可移植代码都应遵守此约定。要正确显示这些字符，编辑器必须能识别 UTF-8 编码，而且必须使用支持文件中所有字符的字体。</p>
<p>如果不使用默认编码，则要声明文件的编码，文件的 <em>第一</em> 行要写成特殊注释。句法如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: encoding -*-</span></span><br></pre></td></tr></table></figure>
<p>其中，<em>encoding</em> 可以是 Python 支持的任意一种 <a href="https://docs.python.org/zh-cn/3.11/library/codecs.html#module-codecs"><code>codecs</code></a>。</p>
<p>比如，声明使用 Windows-1252 编码，源码文件要写成：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: cp1252 -*-</span></span><br></pre></td></tr></table></figure>
<p><em>第一行</em> 的规则也有一种例外情况，源码以 <a href="https://docs.python.org/zh-cn/3.11/tutorial/appendix.html#tut-scripts">UNIX “shebang” 行</a> 开头。此时，编码声明要写在文件的第二行。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: cp1252 -*-</span></span><br></pre></td></tr></table></figure>
<h1>3. Python 速览</h1>
<p>本手册中的许多例子，甚至交互式命令都包含注释。Python 注释以 <code>#</code> 开头，直到该物理行结束。注释可以在行开头，或空白符与代码之后，但不能在字符串里面。字符串中的 # 号就是 # 号。注释用于阐明代码，Python 不解释注释，键入例子时，可以不输入注释。</p>
<h2 id="3-1-Python-用作计算器">3.1. Python 用作计算器</h2>
<h3 id="3-1-1-数字">3.1.1. 数字</h3>
<p>解释器像一个简单的计算器：你可以输入一个表达式，它将给出结果值。 表达式语法很直观：运算符 <code>+</code>, <code>-</code>, <code>*</code> 和 <code>/</code> 可被用来执行算术运算；圆括号 (<code>()</code>) 可被用来进行分组。 例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> + <span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">50</span> - <span class="number">5</span>*<span class="number">6</span></span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">50</span> - <span class="number">5</span>*<span class="number">6</span>) / <span class="number">4</span></span><br><span class="line"><span class="number">5.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">8</span> / <span class="number">5</span>  <span class="comment"># division always returns a floating point number</span></span><br><span class="line"><span class="number">1.6</span></span><br></pre></td></tr></table></figure>
<p>整数（如，<code>2</code>、<code>4</code>、<code>20</code> ）的类型是 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#int"><code>int</code></a>，带小数（如，<code>5.0</code>、<code>1.6</code> ）的类型是 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#float"><code>float</code></a>。本教程后半部分将介绍更多数字类型。</p>
<p>除法运算 (<code>/</code>) 总是返回浮点数。 如果要做 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-floor-division">floor division</a> 得到一个整数结果你可以使用 <code>//</code> 运算符；要计算余数你可以使用 <code>%</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">17</span> / <span class="number">3</span>  <span class="comment"># classic division returns a float</span></span><br><span class="line"><span class="number">5.666666666666667</span></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">17</span> // <span class="number">3</span>  <span class="comment"># floor division discards the fractional part</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">17</span> % <span class="number">3</span>  <span class="comment"># the % operator returns the remainder of the division</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span> * <span class="number">3</span> + <span class="number">2</span>  <span class="comment"># floored quotient * divisor + remainder</span></span><br><span class="line"><span class="number">17</span></span><br></pre></td></tr></table></figure>
<p>Python 用 <code>**</code> 运算符计算乘方：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span> ** <span class="number">2</span>  <span class="comment"># 5 squared</span></span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span> ** <span class="number">7</span>  <span class="comment"># 2 to the power of 7</span></span><br><span class="line"><span class="number">128</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>**</code> 比 <code>-</code> 的优先级更高, 所以 <code>-3**2</code> 会被解释成 <code>-(3**2)</code> ，因此，结果是 <code>-9</code>。要避免这个问题，并且得到 <code>9</code>, 可以用 <code>(-3)**2</code>。</p>
</blockquote>
<p>等号（<code>=</code>）用于给变量赋值。赋值后，下一个交互提示符的位置不显示任何结果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>width = <span class="number">20</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>height = <span class="number">5</span> * <span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>width * height</span><br><span class="line"><span class="number">900</span></span><br></pre></td></tr></table></figure>
<p>如果变量未定义（即，未赋值），使用该变量会提示错误：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>n  <span class="comment"># try to access an undefined variable</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;n&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure>
<p>Python 全面支持浮点数；混合类型运算数的运算会把整数转换为浮点数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4</span> * <span class="number">3.75</span> - <span class="number">1</span></span><br><span class="line"><span class="number">14.0</span></span><br></pre></td></tr></table></figure>
<p>交互模式下，上次输出的表达式会赋给变量 <code>_</code>。</p>
<p>把 Python 当作计算器时，用该变量实现下一步计算更简单，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tax = <span class="number">12.5</span> / <span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price = <span class="number">100.50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price * tax</span><br><span class="line"><span class="number">12.5625</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>price + _</span><br><span class="line"><span class="number">113.0625</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">round</span>(_, <span class="number">2</span>)</span><br><span class="line"><span class="number">113.06</span></span><br></pre></td></tr></table></figure>
<p>最好把该变量当作只读类型。不要为它显式赋值，否则会创建一个同名独立局部变量，该变量会用它的魔法行为屏蔽内置变量。</p>
<p>除了 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#int"><code>int</code></a> 和 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#float"><code>float</code></a>，Python 还支持其他数字类型，例如 <a href="https://docs.python.org/zh-cn/3.11/library/decimal.html#decimal.Decimal"><code>Decimal</code></a> 或 <a href="https://docs.python.org/zh-cn/3.11/library/fractions.html#fractions.Fraction"><code>Fraction</code></a>。Python 还内置支持 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#typesnumeric">复数</a>，后缀 <code>j</code> 或 <code>J</code> 用于表示虚数（例如 <code>3+5j</code> ）。</p>
<h3 id="3-1-2-文本">3.1.2. 文本</h3>
<p>除了数字 Python 还可以操作文本（由 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#str"><code>str</code></a> 类型表示，称为“字符串”）。 这包括字符 “<code>!</code>”, 单词 “<code>rabbit</code>”, 名称 “<code>Paris</code>”, 句子 “<code>Got your back.</code>” 等等. “<code>Yay! :)</code>”。 它们可以用成对的单引号 (<code>'...'</code>) 或双引号 (<code>&quot;...&quot;</code>) 来标示，结果完全相同 。</p>
<blockquote>
<p>与其他语言不同，特殊字符如 <code>\n</code> 在单引号（<code>'...'</code> ）和双引号（<code>&quot;...&quot;</code> ）里的意义一样。这两种引号唯一的区别是，不需要在单引号里转义双引号 <code>&quot;</code> （但此时必须把单引号转义成 <code>\'</code> ），反之亦然。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;spam eggs&#x27;</span>  <span class="comment"># single quotes</span></span><br><span class="line"><span class="string">&#x27;spam eggs&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;Paris rabbit got your back :)! Yay!&quot;</span>  <span class="comment"># double quotes</span></span><br><span class="line"><span class="string">&#x27;Paris rabbit got your back :)! Yay!&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;1975&#x27;</span>  <span class="comment"># digits and numerals enclosed in quotes are also strings</span></span><br><span class="line"><span class="string">&#x27;1975&#x27;</span></span><br></pre></td></tr></table></figure>
<p>要标示引号本身，我们需要对它进行“转义”，即在前面加一个 <code>\</code>。 或者，我们也可以使用不同类型的引号:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;doesn\&#x27;t&#x27;</span>  <span class="comment"># use \&#x27; to escape the single quote...</span></span><br><span class="line"><span class="string">&quot;doesn&#x27;t&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;doesn&#x27;t&quot;</span>  <span class="comment"># ...or use double quotes instead</span></span><br><span class="line"><span class="string">&quot;doesn&#x27;t&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&quot;Yes,&quot; they said.&#x27;</span></span><br><span class="line"><span class="string">&#x27;&quot;Yes,&quot; they said.&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;\&quot;Yes,\&quot; they said.&quot;</span></span><br><span class="line"><span class="string">&#x27;&quot;Yes,&quot; they said.&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&quot;Isn\&#x27;t,&quot; they said.&#x27;</span></span><br><span class="line"><span class="string">&#x27;&quot;Isn\&#x27;t,&quot; they said.&#x27;</span></span><br></pre></td></tr></table></figure>
<p>在 Python shell 中，字符串定义和输出字符串看起来可能不同。 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#print"><code>print()</code></a> 函数会略去标示用的引号，并打印经过转义的特殊字符，产生更为易读的输出:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;First line.\nSecond line.&#x27;</span>  <span class="comment"># \n means newline</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s  <span class="comment"># without print(), special characters are included in the string</span></span><br><span class="line"><span class="string">&#x27;First line.\nSecond line.&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(s)  <span class="comment"># with print(), special characters are interpreted, so \n produces new line</span></span><br><span class="line">First line.</span><br><span class="line">Second line.</span><br></pre></td></tr></table></figure>
<p>如果不希望前置 <code>\</code> 的字符转义成特殊字符，可以使用 <em>原始字符串</em>，在引号前添加 <code>r</code> 即可：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;C:\some\name&#x27;</span>)  <span class="comment"># here \n means newline!</span></span><br><span class="line">C:\some</span><br><span class="line">ame</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">r&#x27;C:\some\name&#x27;</span>)  <span class="comment"># note the r before the quote</span></span><br><span class="line">C:\some\name</span><br></pre></td></tr></table></figure>
<p>原始字符串还有一个微妙的限制：一个原始字符串不能以奇数个 <code>\</code> 字符结束；请参阅 <a href="https://docs.python.org/zh-cn/3.11/faq/programming.html#faq-programming-raw-string-backslash">此 FAQ 条目</a> 了解更多信息及绕过的办法。</p>
<p>字符串字面值可以包含多行。 一种实现方式是使用三重引号：<code>&quot;&quot;&quot;...&quot;&quot;&quot;</code> 或 <code>'''...'''</code>。 字符串中将自动包括行结束符，但也可以在换行的地方添加一个 <code>\</code> 来避免此情况。 参见以下示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;&quot;\</span></span><br><span class="line"><span class="string">Usage: thingy [OPTIONS]</span></span><br><span class="line"><span class="string">     -h                        Display this usage message</span></span><br><span class="line"><span class="string">     -H hostname               Hostname to connect to</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>输出如下（请注意开始的换行符没有被包括在内）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Usage: thingy [OPTIONS]</span><br><span class="line">     -h                        Display this usage message</span><br><span class="line">     -H hostname               Hostname to connect to</span><br></pre></td></tr></table></figure>
<p>字符串可以用 <code>+</code> 合并（粘到一起），也可以用 <code>*</code> 重复：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># 3 times &#x27;un&#x27;, followed by &#x27;ium&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> * <span class="string">&#x27;un&#x27;</span> + <span class="string">&#x27;ium&#x27;</span></span><br><span class="line"><span class="string">&#x27;unununium&#x27;</span></span><br></pre></td></tr></table></figure>
<p>相邻的两个或多个 <em>字符串字面值</em> （引号标注的字符）会自动合并：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;Py&#x27;</span> <span class="string">&#x27;thon&#x27;</span></span><br><span class="line"><span class="string">&#x27;Python&#x27;</span></span><br></pre></td></tr></table></figure>
<p>拼接分隔开的长字符串时，这个功能特别实用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>text = (<span class="string">&#x27;Put several strings within parentheses &#x27;</span></span><br><span class="line"><span class="meta">... </span>        <span class="string">&#x27;to have them joined together.&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>text</span><br><span class="line"><span class="string">&#x27;Put several strings within parentheses to have them joined together.&#x27;</span></span><br></pre></td></tr></table></figure>
<p>这项功能只能用于两个字面值，不能用于变量或表达式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>prefix = <span class="string">&#x27;Py&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>prefix <span class="string">&#x27;thon&#x27;</span>  <span class="comment"># can&#x27;t concatenate a variable and a string literal</span></span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span></span><br><span class="line">    prefix <span class="string">&#x27;thon&#x27;</span></span><br><span class="line">           ^^^^^^</span><br><span class="line">SyntaxError: invalid syntax</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="string">&#x27;un&#x27;</span> * <span class="number">3</span>) <span class="string">&#x27;ium&#x27;</span></span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span></span><br><span class="line">    (<span class="string">&#x27;un&#x27;</span> * <span class="number">3</span>) <span class="string">&#x27;ium&#x27;</span></span><br><span class="line">               ^^^^^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure>
<p>合并多个变量，或合并变量与字面值，要用 <code>+</code>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>prefix + <span class="string">&#x27;thon&#x27;</span></span><br><span class="line"><span class="string">&#x27;Python&#x27;</span></span><br></pre></td></tr></table></figure>
<p>字符串支持 <em>索引</em> （下标访问），第一个字符的索引是 0。单字符没有专用的类型，就是长度为一的字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word = <span class="string">&#x27;Python&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">0</span>]  <span class="comment"># character in position 0</span></span><br><span class="line"><span class="string">&#x27;P&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">5</span>]  <span class="comment"># character in position 5</span></span><br><span class="line"><span class="string">&#x27;n&#x27;</span></span><br></pre></td></tr></table></figure>
<p>索引还支持负数，用负数索引时，从右边开始计数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[-<span class="number">1</span>]  <span class="comment"># last character</span></span><br><span class="line"><span class="string">&#x27;n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[-<span class="number">2</span>]  <span class="comment"># second-last character</span></span><br><span class="line"><span class="string">&#x27;o&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[-<span class="number">6</span>]</span><br><span class="line"><span class="string">&#x27;P&#x27;</span></span><br></pre></td></tr></table></figure>
<p>注意，-0 和 0 一样，因此，负数索引从 -1 开始。</p>
<p>除了索引之外，还支持切片。索引用于获取单个字符，切片允许您获取子字符串:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">0</span>:<span class="number">2</span>]  <span class="comment"># characters from position 0 (included) to 2 (excluded)</span></span><br><span class="line"><span class="string">&#x27;Py&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">2</span>:<span class="number">5</span>]  <span class="comment"># characters from position 2 (included) to 5 (excluded)</span></span><br><span class="line"><span class="string">&#x27;tho&#x27;</span></span><br></pre></td></tr></table></figure>
<p>切片索引的默认值很有用；省略开始索引时，默认值为 0，省略结束索引时，默认为到字符串的结尾：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[:<span class="number">2</span>]   <span class="comment"># character from the beginning to position 2 (excluded)</span></span><br><span class="line"><span class="string">&#x27;Py&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">4</span>:]   <span class="comment"># characters from position 4 (included) to the end</span></span><br><span class="line"><span class="string">&#x27;on&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[-<span class="number">2</span>:]  <span class="comment"># characters from the second-last (included) to the end</span></span><br><span class="line"><span class="string">&#x27;on&#x27;</span></span><br></pre></td></tr></table></figure>
<p>注意，输出结果包含切片开始，但不包含切片结束。因此，<code>s[:i] + s[i:]</code> 总是等于 <code>s</code>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[:<span class="number">2</span>] + word[<span class="number">2</span>:]</span><br><span class="line"><span class="string">&#x27;Python&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[:<span class="number">4</span>] + word[<span class="number">4</span>:]</span><br><span class="line"><span class="string">&#x27;Python&#x27;</span></span><br></pre></td></tr></table></figure>
<p>还可以这样理解切片，索引指向的是字符 <em>之间</em> ，第一个字符的左侧标为 0，最后一个字符的右侧标为 <em>n</em> ，<em>n</em> 是字符串长度。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> +---+---+---+---+---+---+</span><br><span class="line"> | P | y | t | h | o | n |</span><br><span class="line"> +---+---+---+---+---+---+</span><br><span class="line"> <span class="number">0</span>   <span class="number">1</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">4</span>   <span class="number">5</span>   <span class="number">6</span></span><br><span class="line">-<span class="number">6</span>  -<span class="number">5</span>  -<span class="number">4</span>  -<span class="number">3</span>  -<span class="number">2</span>  -<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>第一行数字是字符串中索引 0…6 的位置，第二行数字是对应的负数索引位置。<em>i</em> 到 <em>j</em> 的切片由 <em>i</em> 和 <em>j</em> 之间所有对应的字符组成。</p>
<p>对于使用非负索引的切片，如果两个索引都不越界，切片长度就是起止索引之差。例如， <code>word[1:3]</code> 的长度是 2。</p>
<p>索引越界会报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">42</span>]  <span class="comment"># the word only has 6 characters</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: string index out of <span class="built_in">range</span></span><br></pre></td></tr></table></figure>
<p>但是，切片会自动处理越界索引：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">4</span>:<span class="number">42</span>]</span><br><span class="line"><span class="string">&#x27;on&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">42</span>:]</span><br><span class="line"><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>Python 字符串不能修改，是 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-immutable">immutable</a> 的。因此，为字符串中某个索引位置赋值会报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">0</span>] = <span class="string">&#x27;J&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;str&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[<span class="number">2</span>:] = <span class="string">&#x27;py&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;str&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br></pre></td></tr></table></figure>
<p>要生成不同的字符串，应新建一个字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;J&#x27;</span> + word[<span class="number">1</span>:]</span><br><span class="line"><span class="string">&#x27;Jython&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>word[:<span class="number">2</span>] + <span class="string">&#x27;py&#x27;</span></span><br><span class="line"><span class="string">&#x27;Pypy&#x27;</span></span><br></pre></td></tr></table></figure>
<p>内置函数 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#len"><code>len()</code></a> 返回字符串的长度：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;supercalifragilisticexpialidocious&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(s)</span><br><span class="line"><span class="number">34</span></span><br></pre></td></tr></table></figure>
<p>参见</p>
<ul>
<li>
<p><a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#textseq">文本序列类型 — str</a></p>
<p>字符串是 <em>序列类型</em> ，支持序列类型的各种操作。</p>
</li>
<li>
<p><a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#string-methods">字符串的方法</a></p>
<p>字符串支持很多变形与查找方法。</p>
</li>
<li>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/lexical_analysis.html#f-strings">f 字符串</a></p>
<p>内嵌表达式的字符串字面值。</p>
</li>
<li>
<p><a href="https://docs.python.org/zh-cn/3.11/library/string.html#formatstrings">格式字符串语法</a></p>
<p>使用 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#str.format"><code>str.format()</code></a> 格式化字符串。</p>
</li>
<li>
<p><a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#old-string-formatting">printf 风格的字符串格式化</a></p>
<p>这里详述了用 <code>%</code> 运算符格式化字符串的操作。</p>
</li>
</ul>
<h3 id="3-1-3-列表">3.1.3. 列表</h3>
<p>Python 支持多种 <em>复合</em> 数据类型，可将不同值组合在一起。最常用的 <em>列表</em> ，是用方括号标注，逗号分隔的一组值。</p>
<p><em>列表</em> 可以包含不同类型的元素，但一般情况下，各个元素的类型相同：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br></pre></td></tr></table></figure>
<p>和字符串（及其他内置 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-sequence">sequence</a> 类型）一样，列表也支持索引和切片：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares[<span class="number">0</span>]  <span class="comment"># indexing returns the item</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares[-<span class="number">1</span>]</span><br><span class="line"><span class="number">25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares[-<span class="number">3</span>:]  <span class="comment"># slicing returns a new list</span></span><br><span class="line">[<span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br></pre></td></tr></table></figure>
<p>切片操作返回包含请求元素的新列表。以下切片操作会返回列表的 <a href="https://docs.python.org/zh-cn/3.11/library/copy.html#shallow-vs-deep-copy">浅拷贝</a>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares[:]</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br></pre></td></tr></table></figure>
<p>列表还支持合并操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares + [<span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br></pre></td></tr></table></figure>
<p>与 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-immutable">immutable</a> 字符串不同, 列表是 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-mutable">mutable</a> 类型，其内容可以改变：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>cubes = [<span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">65</span>, <span class="number">125</span>]  <span class="comment"># something&#x27;s wrong here</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4</span> ** <span class="number">3</span>  <span class="comment"># the cube of 4 is 64, not 65!</span></span><br><span class="line"><span class="number">64</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cubes[<span class="number">3</span>] = <span class="number">64</span>  <span class="comment"># replace the wrong value</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cubes</span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">64</span>, <span class="number">125</span>]</span><br></pre></td></tr></table></figure>
<p>你也可以在通过使用 <code>list.append()</code> <em>方法</em>，在列表末尾添加新条目（我们将在后面介绍更多相关的方法）:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>cubes.append(<span class="number">216</span>)  <span class="comment"># add the cube of 6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cubes.append(<span class="number">7</span> ** <span class="number">3</span>)  <span class="comment"># and the cube of 7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cubes</span><br><span class="line">[<span class="number">1</span>, <span class="number">8</span>, <span class="number">27</span>, <span class="number">64</span>, <span class="number">125</span>, <span class="number">216</span>, <span class="number">343</span>]</span><br></pre></td></tr></table></figure>
<p>为切片赋值可以改变列表大小，甚至清空整个列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># replace some values</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters[<span class="number">2</span>:<span class="number">5</span>] = [<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># now remove them</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters[<span class="number">2</span>:<span class="number">5</span>] = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># clear the list by replacing all the elements with an empty list</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters[:] = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters</span><br><span class="line">[]</span><br></pre></td></tr></table></figure>
<p>内置函数 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#len"><code>len()</code></a> 也支持列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>letters = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(letters)</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>
<p>还可以嵌套列表（创建包含其他列表的列表），例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = [a, n]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">[[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x[<span class="number">0</span>]</span><br><span class="line">[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;b&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="3-2-走向编程的第一步">3.2. 走向编程的第一步</h2>
<p>当然，我们还能用 Python 完成比二加二更复杂的任务。 例如，我们可以像下面这样写出 <a href="https://en.wikipedia.org/wiki/Fibonacci_sequence">斐波那契数列</a> 初始部分的子序列:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Fibonacci series:</span></span><br><span class="line"><span class="meta">... </span><span class="comment"># the sum of two elements defines the next</span></span><br><span class="line"><span class="meta">... </span>a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> a &lt; <span class="number">10</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(a)</span><br><span class="line"><span class="meta">... </span>    a, b = b, a+b</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br></pre></td></tr></table></figure>
<p>本例引入了几个新功能。</p>
<ul>
<li>
<p>第一行中的 <em>多重赋值</em> ：变量 <code>a</code> 和 <code>b</code> 同时获得新值 0 和 1 。最后一行又用了一次多重赋值，体现了，等号右边的所有表达式的值，都是在这一语句对任何变量赋新值之前求出来的——求值顺序为从左到右。</p>
</li>
<li>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#while"><code>while</code></a> 循环只要条件（这里是 <code>a &lt; 10</code>）为真就会一直执行。Python 和 C 一样，任何非零整数都为真，零为假。这个条件也可以是字符串或列表类型的值，事实上，任何序列都可以：长度非零就为真，空序列则为假。示例中的判断只是最简单的比较。比较操作符的写法和 C 语言一样： <code>&lt;</code> （小于）、 <code>&gt;</code> （大于）、 <code>==</code> （等于）、 <code>&lt;=</code> （小于等于)、 <code>&gt;=</code> （大于等于）及 <code>!=</code> （不等于）。</p>
</li>
<li>
<p><em>循环体</em> 是 <em>缩进的</em> ：缩进是 Python 组织语句的方式。在交互式命令行里，得为每个缩进的行输入空格（或制表符）。使用文本编辑器可以实现更复杂的输入方式；所有像样的文本编辑器都支持自动缩进。交互式输入复合语句时，要在最后输入空白行表示完成（因为解析器不知道哪一行代码是代码块的最后一行）。注意，同一块语句的每一行的缩进相同。</p>
</li>
<li>
<p><a href="https://docs.python.org/zh-cn/3.11/library/functions.html#print"><code>print()</code></a> 函数输出给定参数的值。除了可以以单一的表达式作为参数（比如，前面的计算器的例子），它还能处理多个参数，包括浮点数与字符串。它输出的字符串不带引号，且各参数项之间会插入一个空格，这样可以实现更好的格式化操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>i = <span class="number">256</span>*<span class="number">256</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;The value of i is&#x27;</span>, i)</span><br><span class="line">The value of i <span class="keyword">is</span> <span class="number">65536</span></span><br></pre></td></tr></table></figure>
<p>关键字参数 <em>end</em> 可以取消输出后面的换行, 或用另一个字符串结尾：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> a &lt; <span class="number">1000</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(a, end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    a, b = b, a+b</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">21</span>,<span class="number">34</span>,<span class="number">55</span>,<span class="number">89</span>,<span class="number">144</span>,<span class="number">233</span>,<span class="number">377</span>,<span class="number">610</span>,<span class="number">987</span>,</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1>4. 更多控制流工具</h1>
<p>除了刚介绍的 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#while"><code>while</code></a> 语句，Python 还用了一些别的。我们将在本章中遇到它们。</p>
<h2 id="4-1-if-语句">4.1. <code>if</code> 语句</h2>
<p>最让人耳熟能详的语句应当是 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#if"><code>if</code></a> 语句：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;Please enter an integer: &quot;</span>))</span><br><span class="line">Please enter an integer: <span class="number">42</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line"><span class="meta">... </span>    x = <span class="number">0</span></span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;Negative changed to zero&#x27;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">elif</span> x == <span class="number">0</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;Zero&#x27;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">elif</span> x == <span class="number">1</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;Single&#x27;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;More&#x27;</span>)</span><br><span class="line">...</span><br><span class="line">More</span><br></pre></td></tr></table></figure>
<p>可有零个或多个 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#elif"><code>elif</code></a> 部分，<a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#else"><code>else</code></a> 部分也是可选的。关键字 ‘<code>elif</code>’ 是 ‘else if’ 的缩写，用于避免过多的缩进。<code>if</code> … <code>elif</code> … <code>elif</code> … 序列可以当作其它语言中 <code>switch</code> 或 <code>case</code> 语句的替代品。</p>
<p>如果是把一个值与多个常量进行比较，或者检查特定类型或属性，<code>match</code> 语句更有用。详见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/controlflow.html#tut-match">match 语句</a>。</p>
<h2 id="4-2-for-语句">4.2. <code>for</code> 语句</h2>
<p>Python 的 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#for"><code>for</code></a> 语句与 C 或 Pascal 中的不同。Python 的 <code>for</code> 语句不迭代算术递增数值（如 Pascal），或是给予用户定义迭代步骤和结束条件的能力（如 C），而是在列表或字符串等任意序列的元素上迭代，按它们在序列中出现的顺序。 例如（这不是有意要暗指什么）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Measure some strings:</span></span><br><span class="line"><span class="meta">... </span>words = [<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;window&#x27;</span>, <span class="string">&#x27;defenestrate&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> w <span class="keyword">in</span> words:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(w, <span class="built_in">len</span>(w))</span><br><span class="line">...</span><br><span class="line">cat <span class="number">3</span></span><br><span class="line">window <span class="number">6</span></span><br><span class="line">defenestrate <span class="number">12</span></span><br></pre></td></tr></table></figure>
<p>很难正确地在迭代多项集的同时修改多项集的内容。更简单的方法是迭代多项集的副本或者创建新的多项集：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create a sample collection</span></span><br><span class="line">users = &#123;<span class="string">&#x27;Hans&#x27;</span>: <span class="string">&#x27;active&#x27;</span>, <span class="string">&#x27;Éléonore&#x27;</span>: <span class="string">&#x27;inactive&#x27;</span>, <span class="string">&#x27;景太郎&#x27;</span>: <span class="string">&#x27;active&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Strategy:  Iterate over a copy</span></span><br><span class="line"><span class="keyword">for</span> user, status <span class="keyword">in</span> users.copy().items():</span><br><span class="line">    <span class="keyword">if</span> status == <span class="string">&#x27;inactive&#x27;</span>:</span><br><span class="line">        <span class="keyword">del</span> users[user]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Strategy:  Create a new collection</span></span><br><span class="line">active_users = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> user, status <span class="keyword">in</span> users.items():</span><br><span class="line">    <span class="keyword">if</span> status == <span class="string">&#x27;active&#x27;</span>:</span><br><span class="line">        active_users[user] = status</span><br></pre></td></tr></table></figure>
<h2 id="4-3-range-函数">4.3. <code>range()</code> 函数</h2>
<p>内置函数 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#range"><code>range()</code></a> 用于生成等差数列：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i)</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>
<p>生成的序列绝不会包括给定的终止值；<code>range(10)</code> 生成 10 个值——长度为 10 的序列的所有合法索引。range 可以不从 0 开始，且可以按给定的步长递增（即使是负数步长）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">5</span>, <span class="number">10</span>))</span><br><span class="line">[<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>, <span class="number">3</span>))</span><br><span class="line">[<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">range</span>(-<span class="number">10</span>, -<span class="number">100</span>, -<span class="number">30</span>))</span><br><span class="line">[-<span class="number">10</span>, -<span class="number">40</span>, -<span class="number">70</span>]</span><br></pre></td></tr></table></figure>
<p>要按索引迭代序列，可以组合使用 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#range"><code>range()</code></a> 和 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#len"><code>len()</code></a>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="string">&#x27;Mary&#x27;</span>, <span class="string">&#x27;had&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;little&#x27;</span>, <span class="string">&#x27;lamb&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i, a[i])</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span> Mary</span><br><span class="line"><span class="number">1</span> had</span><br><span class="line"><span class="number">2</span> a</span><br><span class="line"><span class="number">3</span> little</span><br><span class="line"><span class="number">4</span> lamb</span><br></pre></td></tr></table></figure>
<p>不过大多数情况下 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#enumerate"><code>enumerate()</code></a> 函数很方便，详见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/datastructures.html#tut-loopidioms">循环的技巧</a>。</p>
<p>如果直接打印一个 range 会发生意想不到的事情：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">range</span>(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#range"><code>range()</code></a> 返回的对象在很多方面和列表的行为一样，但其实它和列表不一样。该对象只有在被迭代时才一个一个地返回所期望的列表项，并没有真正生成过一个含有全部项的列表，从而节省了空间。</p>
<p>这种对象称为可迭代对象 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-iterable">iterable</a>，适合作为需要获取一系列值的函数或程序构件的参数。<a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#for"><code>for</code></a> 语句就是这样的程序构件；以可迭代对象作为参数的函数例如 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#sum"><code>sum()</code></a>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sum</span>(<span class="built_in">range</span>(<span class="number">4</span>))  <span class="comment"># 0 + 1 + 2 + 3</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>之后我们会看到更多返回可迭代对象，或以可迭代对象作为参数的函数。在 <a href="https://docs.python.org/zh-cn/3.11/tutorial/datastructures.html#tut-structures">数据结构</a> 这一章中，我们将讨论 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#list"><code>list()</code></a> 的更多细节。</p>
<h2 id="4-4-循环中的-break、continue-语句及-else-子句">4.4. 循环中的 <code>break</code>、<code>continue</code> 语句及 <code>else</code> 子句</h2>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#break"><code>break</code></a> 语句将跳出最近的一层 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#for"><code>for</code></a> 或 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#while"><code>while</code></a> 循环。</p>
<p><code>for</code> 或 <code>while</code> 循环可以包括 <code>else</code> 子句。</p>
<p>在 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#for"><code>for</code></a> 循环中，<code>else</code> 子句会在循环成功结束最后一次迭代之后执行。</p>
<p>在 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#while"><code>while</code></a> 循环中，它会在循环条件变为假值后执行。</p>
<p>无论哪种循环，如果因为 <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#break"><code>break</code></a> 而结束，那么 <code>else</code> 子句就 <strong>不会</strong> 执行。</p>
<p>下面的搜索质数的 <code>for</code> 循环就是一个例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">10</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, n):</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">if</span> n % x == <span class="number">0</span>:</span><br><span class="line"><span class="meta">... </span>            <span class="built_in">print</span>(n, <span class="string">&#x27;equals&#x27;</span>, x, <span class="string">&#x27;*&#x27;</span>, n//x)</span><br><span class="line"><span class="meta">... </span>            <span class="keyword">break</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="comment"># loop fell through without finding a factor</span></span><br><span class="line"><span class="meta">... </span>        <span class="built_in">print</span>(n, <span class="string">&#x27;is a prime number&#x27;</span>)</span><br><span class="line">...</span><br><span class="line"><span class="number">2</span> <span class="keyword">is</span> a prime number</span><br><span class="line"><span class="number">3</span> <span class="keyword">is</span> a prime number</span><br><span class="line"><span class="number">4</span> equals <span class="number">2</span> * <span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">is</span> a prime number</span><br><span class="line"><span class="number">6</span> equals <span class="number">2</span> * <span class="number">3</span></span><br><span class="line"><span class="number">7</span> <span class="keyword">is</span> a prime number</span><br><span class="line"><span class="number">8</span> equals <span class="number">2</span> * <span class="number">4</span></span><br><span class="line"><span class="number">9</span> equals <span class="number">3</span> * <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>（没错，这段代码就是这么写。仔细看：<code>else</code> 子句属于 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#for"><code>for</code></a> 循环，<strong>不属于</strong> <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#if"><code>if</code></a> 语句。）</p>
<p><code>else</code> 子句用于循环时比起 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#if"><code>if</code></a> 语句的 <code>else</code> 子句，更像 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#try"><code>try</code></a> 语句的。<a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#try"><code>try</code></a> 语句的 <code>else</code> 子句在未发生异常时执行，循环的 <code>else</code> 子句则在未发生 <code>break</code> 时执行。 <code>try</code> 语句和异常详见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/errors.html#tut-handling">异常的处理</a>。</p>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#continue"><code>continue</code></a> 语句，同样借鉴自 C 语言，以执行循环的下一次迭代来继续：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">10</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> num % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="built_in">print</span>(<span class="string">&quot;Found an even number&quot;</span>, num)</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">continue</span></span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;Found an odd number&quot;</span>, num)</span><br><span class="line">...</span><br><span class="line">Found an even number <span class="number">2</span></span><br><span class="line">Found an odd number <span class="number">3</span></span><br><span class="line">Found an even number <span class="number">4</span></span><br><span class="line">Found an odd number <span class="number">5</span></span><br><span class="line">Found an even number <span class="number">6</span></span><br><span class="line">Found an odd number <span class="number">7</span></span><br><span class="line">Found an even number <span class="number">8</span></span><br><span class="line">Found an odd number <span class="number">9</span></span><br></pre></td></tr></table></figure>
<h2 id="4-5-pass-语句">4.5. <code>pass</code> 语句</h2>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#pass"><code>pass</code></a> 语句不执行任何动作。语法上需要一个语句，但程序毋需执行任何动作时，可以使用该语句。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span>  <span class="comment"># Busy-wait for keyboard interrupt (Ctrl+C)</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>这常用于创建一个最小的类：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">class</span> <span class="title class_">MyEmptyClass</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#pass"><code>pass</code></a> 还可用作函数或条件语句体的占位符，让你保持在更抽象的层次进行思考。<code>pass</code> 会被默默地忽略：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">initlog</span>(<span class="params">*args</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span>   <span class="comment"># Remember to implement this!</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="4-6-match-语句">4.6. <code>match</code> 语句</h2>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#match"><code>match</code></a> 语句接受一个表达式并把它的值与一个或多个 case 块给出的一系列模式进行比较。这表面上像 C、Java 或 JavaScript（以及许多其他程序设计语言）中的 switch 语句，但其实它更像 Rust 或 Haskell 中的模式匹配。只有第一个匹配的模式会被执行，并且它还可以提取值的组成部分（序列的元素或对象的属性）赋给变量。</p>
<p>最简单的形式是将一个主语值与一个或多个字面值进行比较：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">http_error</span>(<span class="params">status</span>):</span><br><span class="line">    <span class="keyword">match</span> status:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">400</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Bad request&quot;</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">404</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Not found&quot;</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">418</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;I&#x27;m a teapot&quot;</span></span><br><span class="line">        <span class="keyword">case</span> _:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Something&#x27;s wrong with the internet&quot;</span></span><br></pre></td></tr></table></figure>
<p>注意最后一个代码块：“变量名” <code>_</code> 被作为 <em>通配符</em> 并必定会匹配成功。</p>
<p>如果没有 case 匹配成功，则不会执行任何分支。</p>
<p>你可以使用 <code>|</code> （“ or ”）在一个模式中组合几个字面值:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">401</span> | <span class="number">403</span> | <span class="number">404</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Not allowed&quot;</span></span><br></pre></td></tr></table></figure>
<p>形如解包赋值的模式可被用于绑定变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># point is an (x, y) tuple</span></span><br><span class="line"><span class="keyword">match</span> point:</span><br><span class="line">    <span class="keyword">case</span> (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Origin&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> (<span class="number">0</span>, y):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Y=<span class="subst">&#123;y&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> (x, <span class="number">0</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;X=<span class="subst">&#123;x&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> (x, y):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;X=<span class="subst">&#123;x&#125;</span>, Y=<span class="subst">&#123;y&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> _:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;Not a point&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>请仔细学习此代码！第一个模式有两个字面值，可视为前述字面值模式的扩展。</p>
<p>接下来的两个模式结合了一个字面值和一个变量，变量 <em>绑定</em> 了来自主语（<code>point</code>）的一个值。</p>
<p>第四个模式捕获了两个值，使其在概念上与解包赋值 <code>(x, y) = point</code> 类似。</p>
<p>如果用类组织数据，可以用“类名后接一个参数列表”这种很像构造器的形式，把属性捕获到变量里：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">where_is</span>(<span class="params">point</span>):</span><br><span class="line">    <span class="keyword">match</span> point:</span><br><span class="line">        <span class="keyword">case</span> Point(x=<span class="number">0</span>, y=<span class="number">0</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Origin&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> Point(x=<span class="number">0</span>, y=y):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Y=<span class="subst">&#123;y&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> Point(x=x, y=<span class="number">0</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;X=<span class="subst">&#123;x&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> Point():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Somewhere else&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> _:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Not a point&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>你可以在某些为其属性提供了排序的内置类（例如 dataclass）中使用位置参数。</p>
<p>你也可以通过在你的类中设置 <code>__match_args__</code> 特殊属性来为模式中的属性定义一个专门的位置。 如果它被设为 (“x”, “y”)，则以下模式均为等价的（并且都是将 <code>y</code> 属性绑定到 <code>var</code> 变量）:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Point(<span class="number">1</span>, var)</span><br><span class="line">Point(<span class="number">1</span>, y=var)</span><br><span class="line">Point(x=<span class="number">1</span>, y=var)</span><br><span class="line">Point(y=var, x=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p>建议这样来阅读一个模式——通过将其视为赋值语句等号左边的一种扩展形式，来理解各个变量被设为何值。match 语句只会为单一的名称（如上面的 <code>var</code>）赋值，而不会赋值给带点号的名称（如 <code>foo.bar</code>）、属性名（如上面的 <code>x=</code> 和 <code>y=</code>）和类名（是通过其后的 “(…)” 来识别的，如上面的 <code>Point</code>）。</p>
<p>模式可以任意嵌套。</p>
<p>举例来说，如果我们有一个由 Point 组成的列表，且 Point 添加了 <code>__match_args__</code> 时，我们可以这样来匹配它：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>:</span><br><span class="line">    __match_args__ = (<span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, x, y</span>):</span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line"></span><br><span class="line"><span class="keyword">match</span> points:</span><br><span class="line">    <span class="keyword">case</span> []:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;No points&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> [Point(<span class="number">0</span>, <span class="number">0</span>)]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;The origin&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> [Point(x, y)]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Single point <span class="subst">&#123;x&#125;</span>, <span class="subst">&#123;y&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> [Point(<span class="number">0</span>, y1), Point(<span class="number">0</span>, y2)]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Two on the Y axis at <span class="subst">&#123;y1&#125;</span>, <span class="subst">&#123;y2&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> _:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Something else&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>我们可以向一个模式添加 <code>if</code> 子句，称为“约束项”。 如果约束项为假值，则 <code>match</code> 将继续尝试下一个 case 语句块。 请注意值的捕获发生在约束项被求值之前。:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">match</span> point:</span><br><span class="line">    <span class="keyword">case</span> Point(x, y) <span class="keyword">if</span> x == y:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Y=X at <span class="subst">&#123;x&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> Point(x, y):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Not on the diagonal&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>该语句的一些其它关键特性：</p>
<ul>
<li>
<p>与解包赋值类似，元组和列表模式具有完全相同的含义并且实际上都能匹配任意序列，区别是它们不能匹配迭代器或字符串。</p>
</li>
<li>
<p>序列模式支持扩展解包：<code>[x, y, *rest]</code> 和 <code>(x, y, *rest)</code> 和相应的解包赋值做的事是一样的。接在 <code>*</code> 后的名称也可以为 <code>_</code>，所以 <code>(x, y, *_)</code> 匹配含至少两项的序列，而不必绑定剩余的项。</p>
</li>
<li>
<p>映射模式：<code>&#123;&quot;bandwidth&quot;: b, &quot;latency&quot;: l&#125;</code> 从字典中捕获 <code>&quot;bandwidth&quot;</code> 和 <code>&quot;latency&quot;</code> 的值。额外的键会被忽略，这一点与序列模式不同。<code>**rest</code> 这样的解包也支持。（但 <code>**_</code> 将会是冗余的，故不允许使用。）</p>
</li>
<li>
<p>子模式可使用 <code>as</code> 关键字来捕获:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> (Point(x1, y1), Point(x2, y2) <span class="keyword">as</span> p2): ...</span><br></pre></td></tr></table></figure>
<p>将把输入中的第二个元素捕获为 <code>p2</code> （只要输入是包含两个点的序列）</p>
</li>
<li>
<p>大多数字面值是按相等性比较的，但是单例对象 <code>True</code>、<code>False</code> 和 <code>None</code> 则是按 id 比较的。</p>
</li>
<li>
<p>模式可以使用具名常量。它们必须作为带点号的名称出现，以防止它们被解释为用于捕获的变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Color</span>(<span class="title class_ inherited__">Enum</span>):</span><br><span class="line">    RED = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">    GREEN = <span class="string">&#x27;green&#x27;</span></span><br><span class="line">    BLUE = <span class="string">&#x27;blue&#x27;</span></span><br><span class="line"></span><br><span class="line">color = Color(<span class="built_in">input</span>(<span class="string">&quot;Enter your choice of &#x27;red&#x27;, &#x27;blue&#x27; or &#x27;green&#x27;: &quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">match</span> color:</span><br><span class="line">    <span class="keyword">case</span> Color.RED:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;I see red!&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> Color.GREEN:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Grass is green&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> Color.BLUE:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;I&#x27;m feeling the blues :(&quot;</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>更详细的说明和更多示例，可参阅以教程格式撰写的 <a href="https://peps.python.org/pep-0636/"><strong>PEP 636</strong></a>。</p>
<h2 id="4-7-定义函数">4.7. 定义函数</h2>
<p>下列代码创建一个可以输出限定数值内的斐波那契数列函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):    <span class="comment"># write Fibonacci series up to n</span></span><br><span class="line"><span class="meta">... </span>    <span class="string">&quot;&quot;&quot;Print a Fibonacci series up to n.&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">... </span>    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">while</span> a &lt; n:</span><br><span class="line"><span class="meta">... </span>        <span class="built_in">print</span>(a, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="meta">... </span>        a, b = b, a+b</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>()</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Now call the function we just defined:</span></span><br><span class="line"><span class="meta">... </span>fib(<span class="number">2000</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span> <span class="number">89</span> <span class="number">144</span> <span class="number">233</span> <span class="number">377</span> <span class="number">610</span> <span class="number">987</span> <span class="number">1597</span></span><br></pre></td></tr></table></figure>
<p><em>定义</em> 函数使用关键字 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#def"><code>def</code></a>，后跟函数名与括号内的形参列表。函数语句从下一行开始，并且必须缩进。</p>
<p>函数内的第一条语句是字符串时 ，该字符串就是文档字符串，也称为 <em>docstring</em>，详见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/controlflow.html#tut-docstrings">文档字符串</a>。利用文档字符串可以自动生成在线文档或打印版文档，还可以让开发者在浏览代码时直接查阅文档；Python 开发者最好养成在代码中加入文档字符串的好习惯。</p>
<p>函数在 <em>执行</em> 时使用函数局部变量符号表，所有函数变量赋值都存在局部符号表中；引用变量时，首先，在局部符号表里查找变量，然后，是外层函数局部符号表，再是全局符号表，最后是内置名称符号表。因此，尽管可以引用全局变量和外层函数的变量，但最好不要在函数内直接赋值（除非是 <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#global"><code>global</code></a> 语句定义的全局变量，或 <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#nonlocal"><code>nonlocal</code></a> 语句定义的外层函数变量）。</p>
<p>在调用函数时会将实际参数（实参）引入到被调用函数的局部符号表中；因此，实参是使用 <em>按值调用</em> 来传递的（其中的 <em>值</em> 始终是对象的 <em>引用</em> 而不是对象的值）。 当一个函数调用另外一个函数时，会为该调用创建一个新的局部符号表。</p>
<blockquote>
<p>实际上，<em>对象引用调用</em> 这种说法更好，因为，传递的是可变对象时，调用者能发现被调者做出的任何更改（插入列表的元素）。</p>
</blockquote>
<p>函数定义在当前符号表中把函数名与函数对象关联在一起。解释器把函数名指向的对象作为用户自定义函数。还可以使用其他名称指向同一个函数对象，并访问访该函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib</span><br><span class="line">&lt;function fib at 10042ed0&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = fib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">100</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span> <span class="number">89</span></span><br></pre></td></tr></table></figure>
<p><code>fib</code> 不返回值，因此，其他语言不把它当作函数，而是当作过程。事实上，没有 <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#return"><code>return</code></a> 语句的函数也返回值，只不过这个值比较是 <code>None</code> （是一个内置名称）。一般来说，解释器不会输出单独的返回值 <code>None</code> ，如需查看该值，可以使用 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#print"><code>print()</code></a>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib(<span class="number">0</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(fib(<span class="number">0</span>))</span><br><span class="line"><span class="literal">None</span></span><br></pre></td></tr></table></figure>
<p>编写不直接输出斐波那契数列运算结果，而是返回运算结果列表的函数也非常简单：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">fib2</span>(<span class="params">n</span>):  <span class="comment"># return Fibonacci series up to n</span></span><br><span class="line"><span class="meta">... </span>    <span class="string">&quot;&quot;&quot;Return a list containing the Fibonacci series up to n.&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">... </span>    result = []</span><br><span class="line"><span class="meta">... </span>    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">while</span> a &lt; n:</span><br><span class="line"><span class="meta">... </span>        result.append(a)    <span class="comment"># see below</span></span><br><span class="line"><span class="meta">... </span>        a, b = b, a+b</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> result</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f100 = fib2(<span class="number">100</span>)    <span class="comment"># call it</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f100                <span class="comment"># write the result</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">34</span>, <span class="number">55</span>, <span class="number">89</span>]</span><br></pre></td></tr></table></figure>
<p>本例也新引入了一些 Python 功能：</p>
<ul>
<li><a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#return"><code>return</code></a> 语句返回函数的值。<code>return</code> 语句不带表达式参数时，返回 <code>None</code>。函数执行完毕退出也返回 <code>None</code>。</li>
<li>语句 <code>result.append(a)</code> 调用了列表对象 <code>result</code> 的 <em>方法</em>。 方法是‘从属于’对象的函数，其名称为 <code>obj.methodname</code>，其中 <code>obj</code> 是某个对象（可以是一个表达式），<code>methodname</code> 是由对象的类型定义的方法名称。 不同的类型定义了不同的方法。 不同的类型的方法可以使用相同的名称而不会产生歧义。 （使用 <em>类</em> 可以定义自己的对象类型和方法，参见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/classes.html#tut-classes">类</a>。） 在示例中显示的方法 <code>append()</code> 是由列表对象定义的；它会在列表的末尾添加一个新元素。 在本例中它等同于 <code>result = result + [a]</code>，但效率更高。</li>
</ul>
<h2 id="4-8-函数定义详解">4.8. 函数定义详解</h2>
<p>函数定义支持可变数量的参数。这里列出三种可以组合使用的形式。</p>
<h3 id="4-8-1-默认值参数">4.8.1. 默认值参数</h3>
<p>为参数指定默认值是非常有用的方式。调用函数时，可以使用比定义时更少的参数，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">ask_ok</span>(<span class="params">prompt, retries=<span class="number">4</span>, reminder=<span class="string">&#x27;Please try again!&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ok = <span class="built_in">input</span>(prompt)</span><br><span class="line">        <span class="keyword">if</span> ok <span class="keyword">in</span> (<span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;ye&#x27;</span>, <span class="string">&#x27;yes&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> ok <span class="keyword">in</span> (<span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;no&#x27;</span>, <span class="string">&#x27;nop&#x27;</span>, <span class="string">&#x27;nope&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        retries = retries - <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> retries &lt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;invalid user response&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(reminder)</span><br></pre></td></tr></table></figure>
<p>该函数可以用以下方式调用：</p>
<ul>
<li>只给出必选实参：<code>ask_ok('Do you really want to quit?')</code></li>
<li>给出一个可选实参：<code>ask_ok('OK to overwrite the file?', 2)</code></li>
<li>给出所有实参：<code>ask_ok('OK to overwrite the file?', 2, 'Come on, only yes or no!')</code></li>
</ul>
<p>本例还使用了关键字 <a href="https://docs.python.org/zh-cn/3.11/reference/expressions.html#in"><code>in</code></a> ，用于确认序列中是否包含某个值。</p>
<p>默认值在 <em>定义</em> 作用域里的函数定义中求值，所以：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">arg=i</span>):</span><br><span class="line">    <span class="built_in">print</span>(arg)</span><br><span class="line"></span><br><span class="line">i = <span class="number">6</span></span><br><span class="line">f()</span><br></pre></td></tr></table></figure>
<p>上例输出的是 <code>5</code>。</p>
<p><strong>重要警告：</strong> 默认值只计算一次。默认值为列表、字典或类实例等可变对象时，会产生与该规则不同的结果。例如，下面的函数会累积后续调用时传递的参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">a, L=[]</span>):</span><br><span class="line">    L.append(a)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(f(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(f(<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(f(<span class="number">3</span>))</span><br></pre></td></tr></table></figure>
<p>输出结果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="number">1</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<p>不想在后续调用之间共享默认值时，应以如下方式编写函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">a, L=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> L <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        L = []</span><br><span class="line">    L.append(a)</span><br><span class="line">    <span class="keyword">return</span> L</span><br></pre></td></tr></table></figure>
<h3 id="4-8-2-关键字参数">4.8.2. 关键字参数</h3>
<p><code>kwarg=value</code> 形式的 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-keyword-argument">关键字参数</a> 也可以用于调用函数。函数示例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">parrot</span>(<span class="params">voltage, state=<span class="string">&#x27;a stiff&#x27;</span>, action=<span class="string">&#x27;voom&#x27;</span>, <span class="built_in">type</span>=<span class="string">&#x27;Norwegian Blue&#x27;</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-- This parrot wouldn&#x27;t&quot;</span>, action, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;if you put&quot;</span>, voltage, <span class="string">&quot;volts through it.&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-- Lovely plumage, the&quot;</span>, <span class="built_in">type</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-- It&#x27;s&quot;</span>, state, <span class="string">&quot;!&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>该函数接受一个必选参数（<code>voltage</code>）和三个可选参数（<code>state</code>, <code>action</code> 和 <code>type</code>）。该函数可用下列方式调用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parrot(<span class="number">1000</span>)                                          <span class="comment"># 1 positional argument</span></span><br><span class="line">parrot(voltage=<span class="number">1000</span>)                                  <span class="comment"># 1 keyword argument</span></span><br><span class="line">parrot(voltage=<span class="number">1000000</span>, action=<span class="string">&#x27;VOOOOOM&#x27;</span>)             <span class="comment"># 2 keyword arguments</span></span><br><span class="line">parrot(action=<span class="string">&#x27;VOOOOOM&#x27;</span>, voltage=<span class="number">1000000</span>)             <span class="comment"># 2 keyword arguments</span></span><br><span class="line">parrot(<span class="string">&#x27;a million&#x27;</span>, <span class="string">&#x27;bereft of life&#x27;</span>, <span class="string">&#x27;jump&#x27;</span>)         <span class="comment"># 3 positional arguments</span></span><br><span class="line">parrot(<span class="string">&#x27;a thousand&#x27;</span>, state=<span class="string">&#x27;pushing up the daisies&#x27;</span>)  <span class="comment"># 1 positional, 1 keyword</span></span><br></pre></td></tr></table></figure>
<p>以下调用函数的方式都无效：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parrot()                     <span class="comment"># required argument missing</span></span><br><span class="line">parrot(voltage=<span class="number">5.0</span>, <span class="string">&#x27;dead&#x27;</span>)  <span class="comment"># non-keyword argument after a keyword argument</span></span><br><span class="line">parrot(<span class="number">110</span>, voltage=<span class="number">220</span>)     <span class="comment"># duplicate value for the same argument</span></span><br><span class="line">parrot(actor=<span class="string">&#x27;John Cleese&#x27;</span>)  <span class="comment"># unknown keyword argument</span></span><br></pre></td></tr></table></figure>
<p>函数调用时，关键字参数必须跟在位置参数后面。所有传递的关键字参数都必须匹配一个函数接受的参数（比如，<code>actor</code> 不是函数 <code>parrot</code> 的有效参数），关键字参数的顺序并不重要。这也包括必选参数，（比如，<code>parrot(voltage=1000)</code> 也有效）。不能对同一个参数多次赋值，下面就是一个因此限制而失败的例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">function</span>(<span class="params">a</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>function(<span class="number">0</span>, a=<span class="number">0</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: function() got multiple values <span class="keyword">for</span> argument <span class="string">&#x27;a&#x27;</span></span><br></pre></td></tr></table></figure>
<p>最后一个形参为 <code>**name</code> 形式时，接收一个字典（详见 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#typesmapping">映射类型 — dict</a>），该字典包含与函数中已定义形参对应之外的所有关键字参数。<code>**name</code> 形参可以与 <code>*name</code> 形参（下一小节介绍）组合使用（<code>*name</code> 必须在 <code>**name</code> 前面）， <code>*name</code> 形参接收一个 <a href="https://docs.python.org/zh-cn/3.11/tutorial/datastructures.html#tut-tuples">元组</a>，该元组包含形参列表之外的位置参数。例如，可以定义下面这样的函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">cheeseshop</span>(<span class="params">kind, *arguments, **keywords</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-- Do you have any&quot;</span>, kind, <span class="string">&quot;?&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-- I&#x27;m sorry, we&#x27;re all out of&quot;</span>, kind)</span><br><span class="line">    <span class="keyword">for</span> arg <span class="keyword">in</span> arguments:</span><br><span class="line">        <span class="built_in">print</span>(arg)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-&quot;</span> * <span class="number">40</span>)</span><br><span class="line">    <span class="keyword">for</span> kw <span class="keyword">in</span> keywords:</span><br><span class="line">        <span class="built_in">print</span>(kw, <span class="string">&quot;:&quot;</span>, keywords[kw])</span><br></pre></td></tr></table></figure>
<p>该函数可以用如下方式调用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cheeseshop(<span class="string">&quot;Limburger&quot;</span>, <span class="string">&quot;It&#x27;s very runny, sir.&quot;</span>,</span><br><span class="line">           <span class="string">&quot;It&#x27;s really very, VERY runny, sir.&quot;</span>,</span><br><span class="line">           shopkeeper=<span class="string">&quot;Michael Palin&quot;</span>,</span><br><span class="line">           client=<span class="string">&quot;John Cleese&quot;</span>,</span><br><span class="line">           sketch=<span class="string">&quot;Cheese Shop Sketch&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">-- Do you have <span class="built_in">any</span> Limburger ?</span><br><span class="line">-- I<span class="string">&#x27;m sorry, we&#x27;</span>re <span class="built_in">all</span> out of Limburger</span><br><span class="line">It<span class="string">&#x27;s very runny, sir.</span></span><br><span class="line"><span class="string">It&#x27;</span>s really very, VERY runny, sir.</span><br><span class="line">----------------------------------------</span><br><span class="line">shopkeeper : Michael Palin</span><br><span class="line">client : John Cleese</span><br><span class="line">sketch : Cheese Shop Sketch</span><br></pre></td></tr></table></figure>
<p>注意，关键字参数在输出结果中的顺序与调用函数时的顺序一致。</p>
<h3 id="4-8-3-特殊参数">4.8.3. 特殊参数</h3>
<p>默认情况下，参数可以按位置或显式关键字传递给 Python 函数。为了让代码易读、高效，最好限制参数的传递方式，这样，开发者只需查看函数定义，即可确定参数项是仅按位置、按位置或关键字，还是仅按关键字传递。</p>
<p>函数定义如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2</span>):</span><br><span class="line">      -----------    ----------     ----------</span><br><span class="line">        |             |                  |</span><br><span class="line">        |        Positional <span class="keyword">or</span> keyword   |</span><br><span class="line">        |                                - Keyword only</span><br><span class="line">         -- Positional only</span><br></pre></td></tr></table></figure>
<p><code>/</code> 和 <code>*</code> 是可选的。这些符号表明形参如何把参数值传递给函数：位置、位置或关键字、关键字。关键字形参也叫作命名形参。</p>
<h4 id="4-8-3-1-位置或关键字参数">4.8.3.1. 位置或关键字参数</h4>
<p>函数定义中未使用 <code>/</code> 和 <code>*</code> 时，参数可以按位置或关键字传递给函数。</p>
<h4 id="4-8-3-2-仅位置参数">4.8.3.2. 仅位置参数</h4>
<p>此处再介绍一些细节，特定形参可以标记为 <em>仅限位置</em>。<em>仅限位置</em> 时，形参的顺序很重要，且这些形参不能用关键字传递。仅限位置形参应放在 <code>/</code> （正斜杠）前。<code>/</code> 用于在逻辑上分割仅限位置形参与其它形参。如果函数定义中没有 <code>/</code>，则表示没有仅限位置形参。</p>
<p><code>/</code> 后可以是 <em>位置或关键字</em> 或 <em>仅限关键字</em> 形参。</p>
<h4 id="4-8-3-3-仅限关键字参数">4.8.3.3. 仅限关键字参数</h4>
<p>把形参标记为 <em>仅限关键字</em>，表明必须以关键字参数形式传递该形参，应在参数列表中第一个 <em>仅限关键字</em> 形参前添加 <code>*</code>。</p>
<h4 id="4-8-3-4-函数示例">4.8.3.4. 函数示例</h4>
<p>请看下面的函数定义示例，注意 <code>/</code> 和 <code>*</code> 标记：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">standard_arg</span>(<span class="params">arg</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(arg)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">pos_only_arg</span>(<span class="params">arg, /</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(arg)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">kwd_only_arg</span>(<span class="params">*, arg</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(arg)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">combined_example</span>(<span class="params">pos_only, /, standard, *, kwd_only</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(pos_only, standard, kwd_only)</span><br></pre></td></tr></table></figure>
<p>第一个函数定义 <code>standard_arg</code> 是最常见的形式，对调用方式没有任何限制，可以按位置也可以按关键字传递参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>standard_arg(<span class="number">2</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>standard_arg(arg=<span class="number">2</span>)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>第二个函数 <code>pos_only_arg</code> 的函数定义中有 <code>/</code>，仅限使用位置形参：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>pos_only_arg(<span class="number">1</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pos_only_arg(arg=<span class="number">1</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: pos_only_arg() got some positional-only arguments passed <span class="keyword">as</span> keyword arguments: <span class="string">&#x27;arg&#x27;</span></span><br></pre></td></tr></table></figure>
<p>第三个函数 <code>kwd_only_args</code> 的函数定义通过 <code>*</code> 表明仅限关键字参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>kwd_only_arg(<span class="number">3</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: kwd_only_arg() takes <span class="number">0</span> positional arguments but <span class="number">1</span> was given</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>kwd_only_arg(arg=<span class="number">3</span>)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>最后一个函数在同一个函数定义中，使用了全部三种调用惯例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>combined_example(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: combined_example() takes <span class="number">2</span> positional arguments but <span class="number">3</span> were given</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>combined_example(<span class="number">1</span>, <span class="number">2</span>, kwd_only=<span class="number">3</span>)</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>combined_example(<span class="number">1</span>, standard=<span class="number">2</span>, kwd_only=<span class="number">3</span>)</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>combined_example(pos_only=<span class="number">1</span>, standard=<span class="number">2</span>, kwd_only=<span class="number">3</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: combined_example() got some positional-only arguments passed <span class="keyword">as</span> keyword arguments: <span class="string">&#x27;pos_only&#x27;</span></span><br></pre></td></tr></table></figure>
<p>下面的函数定义中，<code>kwds</code> 把 <code>name</code> 当作键，因此，可能与位置参数 <code>name</code> 产生潜在冲突：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>(<span class="params">name, **kwds</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwds</span><br></pre></td></tr></table></figure>
<p>调用该函数不可能返回 <code>True</code>，因为关键字 <code>'name'</code> 总与第一个形参绑定。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>foo(<span class="number">1</span>, **&#123;<span class="string">&#x27;name&#x27;</span>: <span class="number">2</span>&#125;)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: foo() got multiple values <span class="keyword">for</span> argument <span class="string">&#x27;name&#x27;</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>加上 <code>/</code> （仅限位置参数）后，就可以了。此时，函数定义把 <code>name</code> 当作位置参数，<code>'name'</code> 也可以作为关键字参数的键：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">foo</span>(<span class="params">name, /, **kwds</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwds</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>foo(<span class="number">1</span>, **&#123;<span class="string">&#x27;name&#x27;</span>: <span class="number">2</span>&#125;)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p>换句话说，仅限位置形参的名称可以在 <code>**kwds</code> 中使用，而不产生歧义。</p>
<h4 id="4-8-3-5-小结">4.8.3.5. 小结</h4>
<p>以下用例决定哪些形参可以用于函数定义：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2</span>):</span><br></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li>使用仅限位置形参，可以让用户无法使用形参名。形参名没有实际意义时，强制调用函数的实参顺序时，或同时接收位置形参和关键字时，这种方式很有用。</li>
<li>当形参名有实际意义，且显式名称可以让函数定义更易理解时，阻止用户依赖传递实参的位置时，才使用关键字。</li>
<li>对于 API，使用仅限位置形参，可以防止未来修改形参名时造成破坏性的 API 变动。</li>
</ul>
<h3 id="4-8-4-任意实参列表">4.8.4. 任意实参列表</h3>
<p>调用函数时，使用任意数量的实参是最少见的选项。这些实参包含在元组中（详见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/datastructures.html#tut-tuples">元组和序列</a> ）。在可变数量的实参之前，可能有若干个普通参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">write_multiple_items</span>(<span class="params">file, separator, *args</span>):</span><br><span class="line">    file.write(separator.join(args))</span><br></pre></td></tr></table></figure>
<p><em>variadic</em> 参数用于采集传递给函数的所有剩余参数，因此，它们通常在形参列表的末尾。<code>*args</code> 形参后的任何形式参数只能是仅限关键字参数，即只能用作关键字参数，不能用作位置参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">concat</span>(<span class="params">*args, sep=<span class="string">&quot;/&quot;</span></span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> sep.join(args)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>concat(<span class="string">&quot;earth&quot;</span>, <span class="string">&quot;mars&quot;</span>, <span class="string">&quot;venus&quot;</span>)</span><br><span class="line"><span class="string">&#x27;earth/mars/venus&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>concat(<span class="string">&quot;earth&quot;</span>, <span class="string">&quot;mars&quot;</span>, <span class="string">&quot;venus&quot;</span>, sep=<span class="string">&quot;.&quot;</span>)</span><br><span class="line"><span class="string">&#x27;earth.mars.venus&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="4-8-5-解包实参列表">4.8.5. 解包实参列表</h3>
<p>函数调用要求独立的位置参数，但实参在列表或元组里时，要执行相反的操作。例如，内置的 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#range"><code>range()</code></a> 函数要求独立的 <em>start</em> 和 <em>stop</em> 实参。如果这些参数不是独立的，则要在调用函数时，用 <code>*</code> 操作符把实参从列表或元组解包出来：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">3</span>, <span class="number">6</span>))            <span class="comment"># normal call with separate arguments</span></span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>args = [<span class="number">3</span>, <span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">range</span>(*args))            <span class="comment"># call with arguments unpacked from a list</span></span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<p>同样，字典可以用 <code>**</code> 操作符传递关键字参数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">parrot</span>(<span class="params">voltage, state=<span class="string">&#x27;a stiff&#x27;</span>, action=<span class="string">&#x27;voom&#x27;</span></span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;-- This parrot wouldn&#x27;t&quot;</span>, action, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;if you put&quot;</span>, voltage, <span class="string">&quot;volts through it.&quot;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;E&#x27;s&quot;</span>, state, <span class="string">&quot;!&quot;</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&quot;voltage&quot;</span>: <span class="string">&quot;four million&quot;</span>, <span class="string">&quot;state&quot;</span>: <span class="string">&quot;bleedin&#x27; demised&quot;</span>, <span class="string">&quot;action&quot;</span>: <span class="string">&quot;VOOM&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>parrot(**d)</span><br><span class="line">-- This parrot wouldn<span class="string">&#x27;t VOOM if you put four million volts through it. E&#x27;</span>s bleedin<span class="string">&#x27; demised !</span></span><br></pre></td></tr></table></figure>
<h3 id="4-8-6-Lambda-表达式">4.8.6. Lambda 表达式</h3>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/expressions.html#lambda"><code>lambda</code></a> 关键字用于创建小巧的匿名函数。<code>lambda a, b: a+b</code> 函数返回两个参数的和。Lambda 函数可用于任何需要函数对象的地方。在语法上，匿名函数只能是单个表达式。在语义上，它只是常规函数定义的语法糖。与嵌套函数定义一样，lambda 函数可以引用包含作用域中的变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">make_incrementor</span>(<span class="params">n</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> <span class="keyword">lambda</span> x: x + n</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = make_incrementor(<span class="number">42</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">0</span>)</span><br><span class="line"><span class="number">42</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="number">1</span>)</span><br><span class="line"><span class="number">43</span></span><br></pre></td></tr></table></figure>
<p>上例用 lambda 表达式返回函数。还可以把匿名函数用作传递的实参：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>pairs = [(<span class="number">1</span>, <span class="string">&#x27;one&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;two&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;three&#x27;</span>), (<span class="number">4</span>, <span class="string">&#x27;four&#x27;</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pairs.sort(key=<span class="keyword">lambda</span> pair: pair[<span class="number">1</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pairs</span><br><span class="line">[(<span class="number">4</span>, <span class="string">&#x27;four&#x27;</span>), (<span class="number">1</span>, <span class="string">&#x27;one&#x27;</span>), (<span class="number">3</span>, <span class="string">&#x27;three&#x27;</span>), (<span class="number">2</span>, <span class="string">&#x27;two&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<h3 id="4-8-7-文档字符串">4.8.7. 文档字符串</h3>
<p>以下是文档字符串内容和格式的约定。</p>
<p>第一行应为对象用途的简短摘要。为保持简洁，不要在这里显式说明对象名或类型，因为可通过其他方式获取这些信息（除非该名称碰巧是描述函数操作的动词）。这一行应以大写字母开头，以句点结尾。</p>
<p>文档字符串为多行时，第二行应为空白行，在视觉上将摘要与其余描述分开。后面的行可包含若干段落，描述对象的调用约定、副作用等。</p>
<p>Python 解析器不会删除 Python 中多行字符串字面值的缩进，因此，文档处理工具应在必要时删除缩进。这项操作遵循以下约定：文档字符串第一行 <em>之后</em> 的第一个非空行决定了整个文档字符串的缩进量（第一行通常与字符串开头的引号相邻，其缩进在字符串中并不明显，因此，不能用第一行的缩进），然后，删除字符串中所有行开头处与此缩进“等价”的空白符。不能有比此缩进更少的行，但如果出现了缩进更少的行，应删除这些行的所有前导空白符。转化制表符后（通常为 8 个空格），应测试空白符的等效性。</p>
<p>下面是多行文档字符串的一个例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">my_function</span>():</span><br><span class="line"><span class="meta">... </span>    <span class="string">&quot;&quot;&quot;Do nothing, but document it.</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string"><span class="meta">... </span>    No, really, it doesn&#x27;t do anything.</span></span><br><span class="line"><span class="string"><span class="meta">... </span>    &quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(my_function.__doc__)</span><br><span class="line">Do nothing, but document it.</span><br><span class="line"></span><br><span class="line">    No, really, it doesn<span class="string">&#x27;t do anything.</span></span><br></pre></td></tr></table></figure>
<h3 id="4-8-8-函数注解">4.8.8. 函数注解</h3>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#function">函数注解</a> 是可选的用户自定义函数类型的元数据完整信息（详见 <a href="https://peps.python.org/pep-3107/"><strong>PEP 3107</strong></a> 和 <a href="https://peps.python.org/pep-0484/"><strong>PEP 484</strong></a> ）。</p>
<p><a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-function-annotation">标注</a> 以字典的形式存放在函数的 <code>__annotations__</code> 属性中而对函数的其他部分没有影响。 形参标注的定义方式是在形参名后加冒号，后面跟一个会被求值为标注的值的表达式。 返回值标注的定义方式是加组合符号 <code>-&gt;</code>，后面跟一个表达式，这样的校注位于形参列表和表示 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#def"><code>def</code></a> 语句结束的冒号。 下面的示例有一个必须的参数、一个可选的关键字参数以及返回值都带有相应的标注:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">ham: <span class="built_in">str</span>, eggs: <span class="built_in">str</span> = <span class="string">&#x27;eggs&#x27;</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;Annotations:&quot;</span>, f.__annotations__)</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;Arguments:&quot;</span>, ham, eggs)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> ham + <span class="string">&#x27; and &#x27;</span> + eggs</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f(<span class="string">&#x27;spam&#x27;</span>)</span><br><span class="line">Annotations: &#123;<span class="string">&#x27;ham&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;, <span class="string">&#x27;return&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;, <span class="string">&#x27;eggs&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;&#125;</span><br><span class="line">Arguments: spam eggs</span><br><span class="line"><span class="string">&#x27;spam and eggs&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="4-9-小插曲：编码风格">4.9. 小插曲：编码风格</h2>
<p>现在你将要写更长，更复杂的 Python 代码，是时候讨论一下 <em>代码风格</em> 了。 大多数语言都能以不同的风格被编写（或更准确地说，被格式化）；有些比其他的更具有可读性。 能让其他人轻松阅读你的代码总是一个好主意，采用一种好的编码风格对此有很大帮助。</p>
<p>Python 项目大多都遵循 <a href="https://peps.python.org/pep-0008/"><strong>PEP 8</strong></a> 的风格指南；它推行的编码风格易于阅读、赏心悦目。Python 开发者均应抽时间悉心研读；以下是该提案中的核心要点：</p>
<ul>
<li>
<p>缩进，用 4 个空格，不要用制表符。</p>
<p>4 个空格是小缩进（更深嵌套）和大缩进（更易阅读）之间的折中方案。制表符会引起混乱，最好别用。</p>
</li>
<li>
<p>换行，一行不超过 79 个字符。</p>
<p>这样换行的小屏阅读体验更好，还便于在大屏显示器上并排阅读多个代码文件。</p>
</li>
<li>
<p>用空行分隔函数和类，及函数内较大的代码块。</p>
</li>
<li>
<p>最好把注释放到单独一行。</p>
</li>
<li>
<p>使用文档字符串。</p>
</li>
<li>
<p>运算符前后、逗号后要用空格，但不要直接在括号内使用： <code>a = f(1, 2) + g(3, 4)</code>。</p>
</li>
<li>
<p>类和函数的命名要一致；按惯例，命名类用 <code>UpperCamelCase</code>，命名函数与方法用 <code>lowercase_with_underscores</code>。命名方法中第一个参数总是用 <code>self</code> (类和方法详见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/classes.html#tut-firstclasses">初探类</a>)。</p>
</li>
<li>
<p>编写用于国际多语环境的代码时，不要用生僻的编码。Python 默认的 UTF-8 或纯 ASCII 可以胜任各种情况。</p>
</li>
<li>
<p>同理，就算多语阅读、维护代码的可能再小，也不要在标识符中使用非 ASCII 字符。</p>
</li>
</ul>
<h1>5. 数据结构</h1>
<p>本章深入讲解之前学过的一些内容，同时，还增加了新的知识点。</p>
<h2 id="5-1-列表详解">5.1. 列表详解</h2>
<p>列表数据类型支持很多方法，列表对象的所有方法所示如下：</p>
<ul>
<li>
<p>list.<strong>append</strong>(<em>x</em>)</p>
<p>在列表末尾添加一个元素，相当于 <code>a[len(a):] = [x]</code> 。</p>
</li>
<li>
<p>list.<strong>extend</strong>(<em>iterable</em>)</p>
<p>用可迭代对象的元素扩展列表。相当于 <code>a[len(a):] = iterable</code> 。</p>
</li>
<li>
<p>list.<strong>insert</strong>(<em>i</em>, <em>x</em>)</p>
<p>在指定位置插入元素。第一个参数是插入元素的索引，因此，<code>a.insert(0, x)</code> 在列表开头插入元素， <code>a.insert(len(a), x)</code> 等同于 <code>a.append(x)</code> 。</p>
</li>
<li>
<p>list.<strong>remove</strong>(<em>x</em>)</p>
<p>从列表中删除第一个值为 <em>x</em> 的元素。未找到指定元素时，触发 <a href="https://docs.python.org/zh-cn/3.11/library/exceptions.html#ValueError"><code>ValueError</code></a> 异常。</p>
</li>
<li>
<p>list.<strong>pop</strong>([<em>i</em>])</p>
<p>删除列表中指定位置的元素，并返回被删除的元素。未指定位置时，<code>a.pop()</code> 删除并返回列表的最后一个元素。（方法签名中 <em>i</em> 两边的方括号表示该参数是可选的，不是要求输入方括号。这种表示法常见于 Python 参考库）。</p>
</li>
<li>
<p>list.<strong>clear</strong>()</p>
<p>删除列表里的所有元素，相当于 <code>del a[:]</code> 。</p>
</li>
<li>
<p>list.<strong>index</strong>(<em>x</em>[, <em>start</em>[, <em>end</em>]])</p>
<p>返回列表中第一个值为 <em>x</em> 的元素的零基索引。未找到指定元素时，触发 <a href="https://docs.python.org/zh-cn/3.11/library/exceptions.html#ValueError"><code>ValueError</code></a> 异常。可选参数 <em>start</em> 和 <em>end</em> 是切片符号，用于将搜索限制为列表的特定子序列。返回的索引是相对于整个序列的开始计算的，而不是 <em>start</em> 参数。</p>
</li>
<li>
<p>list.<strong>count</strong>(<em>x</em>)</p>
<p>返回列表中元素 <em>x</em> 出现的次数。</p>
</li>
<li>
<p>list.<strong>sort</strong>(***, <em>key=None</em>, <em>reverse=False</em>)</p>
<p>就地排序列表中的元素（要了解自定义排序参数，详见 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#sorted"><code>sorted()</code></a>）。</p>
</li>
<li>
<p>list.<strong>reverse</strong>()</p>
<p>翻转列表中的元素。</p>
</li>
<li>
<p>list.<strong>copy</strong>()</p>
<p>返回列表的浅拷贝。相当于 <code>a[:]</code> 。</p>
</li>
</ul>
<p>多数列表方法示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits = [<span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;kiwi&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.count(<span class="string">&#x27;apple&#x27;</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.count(<span class="string">&#x27;tangerine&#x27;</span>)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.index(<span class="string">&#x27;banana&#x27;</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.index(<span class="string">&#x27;banana&#x27;</span>, <span class="number">4</span>)  <span class="comment"># Find next banana starting at position 4</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits</span><br><span class="line">[<span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;kiwi&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.append(<span class="string">&#x27;grape&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits</span><br><span class="line">[<span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;kiwi&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;grape&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits</span><br><span class="line">[<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;grape&#x27;</span>, <span class="string">&#x27;kiwi&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fruits.pop()</span><br><span class="line"><span class="string">&#x27;pear&#x27;</span></span><br></pre></td></tr></table></figure>
<p>你可能已经注意到 <code>insert</code>, <code>remove</code> 或 <code>sort</code> 等仅修改列表的方法都不会打印返回值 – 它们返回默认值 <code>None</code>。这是适用于 Python 中所有可变数据结构的设计原则。</p>
<blockquote>
<p>别的语言可能会将可变对象返回，允许方法连续执行，例如 <code>d-&gt;insert(&quot;a&quot;)-&gt;remove(&quot;b&quot;)-&gt;sort();</code>。</p>
</blockquote>
<p>还有，不是所有数据都可以排序或比较。例如，<code>[None, 'hello', 10]</code> 就不可排序，因为整数不能与字符串对比，而 <em>None</em> 不能与其他类型对比。有些类型根本就没有定义顺序关系，例如，<code>3+4j &lt; 5+7j</code> 这种对比操作就是无效的。</p>
<h3 id="5-1-1-用列表实现堆栈">5.1.1. 用列表实现堆栈</h3>
<p>通过列表方法可以非常容易地将列表作为栈来使用，最后添加的元素将最先被提取（“后进先出”）。 要向栈顶添加一个条目，请使用 <code>append()</code>。 要从栈顶提取一个条目，请使用 <code>pop()</code>，无需显式指定索引。 例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack.append(<span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack.append(<span class="number">7</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack.pop()</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack.pop()</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack.pop()</span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>stack</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>]</span><br></pre></td></tr></table></figure>
<h3 id="5-1-2-用列表实现队列">5.1.2. 用列表实现队列</h3>
<p>列表也可以用作队列，最先加入的元素，最先取出（“先进先出”）；然而，列表作为队列的效率很低。因为，在列表末尾添加和删除元素非常快，但在列表开头插入或移除元素却很慢（因为所有其他元素都必须移动一位）。</p>
<p>实现队列最好用 <a href="https://docs.python.org/zh-cn/3.11/library/collections.html#collections.deque"><code>collections.deque</code></a>，可以快速从两端添加或删除元素。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>queue = deque([<span class="string">&quot;Eric&quot;</span>, <span class="string">&quot;John&quot;</span>, <span class="string">&quot;Michael&quot;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>queue.append(<span class="string">&quot;Terry&quot;</span>)           <span class="comment"># Terry arrives</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>queue.append(<span class="string">&quot;Graham&quot;</span>)          <span class="comment"># Graham arrives</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>queue.popleft()                 <span class="comment"># The first to arrive now leaves</span></span><br><span class="line"><span class="string">&#x27;Eric&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>queue.popleft()                 <span class="comment"># The second to arrive now leaves</span></span><br><span class="line"><span class="string">&#x27;John&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>queue                           <span class="comment"># Remaining queue in order of arrival</span></span><br><span class="line">deque([<span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Terry&#x27;</span>, <span class="string">&#x27;Graham&#x27;</span>])</span><br></pre></td></tr></table></figure>
<h3 id="5-1-3-列表推导式">5.1.3. 列表推导式</h3>
<p>列表推导式创建列表的方式更简洁。常见的用法为，对序列或可迭代对象中的每个元素应用某种操作，用生成的结果创建新的列表；或用满足特定条件的元素创建子序列。</p>
<p>例如，创建平方值的列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line"><span class="meta">... </span>    squares.append(x**<span class="number">2</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</span><br></pre></td></tr></table></figure>
<p>注意，这段代码创建（或覆盖）变量 <code>x</code>，该变量在循环结束后仍然存在。下述方法可以无副作用地计算平方列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">squares = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x**<span class="number">2</span>, <span class="built_in">range</span>(<span class="number">10</span>)))</span><br></pre></td></tr></table></figure>
<p>或等价于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">squares = [x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br></pre></td></tr></table></figure>
<p>上面这种写法更简洁、易读。</p>
<p>列表推导式的方括号内包含以下内容：一个表达式，后面为一个 <code>for</code> 子句，然后，是零个或多个 <code>for</code> 或 <code>if</code> 子句。结果是由表达式依据 <code>for</code> 和 <code>if</code> 子句求值计算而得出一个新列表。 举例来说，以下列表推导式将两个列表中不相等的元素组合起来：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>] <span class="keyword">if</span> x != y]</span><br><span class="line">[(<span class="number">1</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">3</span>), (<span class="number">2</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">1</span>), (<span class="number">3</span>, <span class="number">4</span>)]</span><br></pre></td></tr></table></figure>
<p>等价于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>combs = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>]:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">if</span> x != y:</span><br><span class="line"><span class="meta">... </span>            combs.append((x, y))</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>combs</span><br><span class="line">[(<span class="number">1</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">3</span>), (<span class="number">2</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">1</span>), (<span class="number">3</span>, <span class="number">4</span>)]</span><br></pre></td></tr></table></figure>
<p>注意，上面两段代码中，<a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#for"><code>for</code></a> 和 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#if"><code>if</code></a> 的顺序相同。</p>
<p>表达式是元组（例如上例的 <code>(x, y)</code>）时，必须加上括号：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>vec = [-<span class="number">4</span>, -<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># create a new list with the values doubled</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x*<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> vec]</span><br><span class="line">[-<span class="number">8</span>, -<span class="number">4</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># filter the list to exclude negative numbers</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x <span class="keyword">for</span> x <span class="keyword">in</span> vec <span class="keyword">if</span> x &gt;= <span class="number">0</span>]</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># apply a function to all the elements</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="built_in">abs</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> vec]</span><br><span class="line">[<span class="number">4</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># call a method on each element</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>freshfruit = [<span class="string">&#x27;  banana&#x27;</span>, <span class="string">&#x27;  loganberry &#x27;</span>, <span class="string">&#x27;passion fruit  &#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[weapon.strip() <span class="keyword">for</span> weapon <span class="keyword">in</span> freshfruit]</span><br><span class="line">[<span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;loganberry&#x27;</span>, <span class="string">&#x27;passion fruit&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># create a list of 2-tuples like (number, square)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[(x, x**<span class="number">2</span>) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)]</span><br><span class="line">[(<span class="number">0</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">9</span>), (<span class="number">4</span>, <span class="number">16</span>), (<span class="number">5</span>, <span class="number">25</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># the tuple must be parenthesized, otherwise an error is raised</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[x, x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)]</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span></span><br><span class="line">    [x, x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)]</span><br><span class="line">     ^^^^^^^</span><br><span class="line">SyntaxError: did you forget parentheses around the comprehension target?</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># flatten a list using a listcomp with two &#x27;for&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>vec = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>], [<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[num <span class="keyword">for</span> elem <span class="keyword">in</span> vec <span class="keyword">for</span> num <span class="keyword">in</span> elem]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure>
<p>列表推导式可以使用复杂的表达式和嵌套函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> math <span class="keyword">import</span> pi</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="built_in">str</span>(<span class="built_in">round</span>(pi, i)) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>)]</span><br><span class="line">[<span class="string">&#x27;3.1&#x27;</span>, <span class="string">&#x27;3.14&#x27;</span>, <span class="string">&#x27;3.142&#x27;</span>, <span class="string">&#x27;3.1416&#x27;</span>, <span class="string">&#x27;3.14159&#x27;</span>]</span><br></pre></td></tr></table></figure>
<h3 id="5-1-4-嵌套的列表推导式">5.1.4. 嵌套的列表推导式</h3>
<p>列表推导式中的初始表达式可以是任何表达式，甚至可以是另一个列表推导式。</p>
<p>下面这个 3x4 矩阵，由 3 个长度为 4 的列表组成：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>matrix = [</span><br><span class="line"><span class="meta">... </span>    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line"><span class="meta">... </span>    [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line"><span class="meta">... </span>    [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>],</span><br><span class="line"><span class="meta">... </span>]</span><br></pre></td></tr></table></figure>
<p>下面的列表推导式可以转置行列：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[[row[i] <span class="keyword">for</span> row <span class="keyword">in</span> matrix] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line">[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>], [<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>], [<span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>]]</span><br></pre></td></tr></table></figure>
<p>如我们在之前小节中看到的，内部的列表推导式是在它之后的 <a href="https://docs.python.org/zh-cn/3.11/reference/compound_stmts.html#for"><code>for</code></a> 的上下文中被求值的，所以这个例子等价于:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>transposed = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line"><span class="meta">... </span>    transposed.append([row[i] <span class="keyword">for</span> row <span class="keyword">in</span> matrix])</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>transposed</span><br><span class="line">[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>], [<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>], [<span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>]]</span><br></pre></td></tr></table></figure>
<p>反过来说，也等价于：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>transposed = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="comment"># the following 3 lines implement the nested listcomp</span></span><br><span class="line"><span class="meta">... </span>    transposed_row = []</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> row <span class="keyword">in</span> matrix:</span><br><span class="line"><span class="meta">... </span>        transposed_row.append(row[i])</span><br><span class="line"><span class="meta">... </span>    transposed.append(transposed_row)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>transposed</span><br><span class="line">[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>], [<span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>], [<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>], [<span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>]]</span><br></pre></td></tr></table></figure>
<p>实际应用中，最好用内置函数替代复杂的流程语句。此时，<a href="https://docs.python.org/zh-cn/3.11/library/functions.html#zip"><code>zip()</code></a> 函数更好用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="built_in">zip</span>(*matrix))</span><br><span class="line">[(<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>), (<span class="number">2</span>, <span class="number">6</span>, <span class="number">10</span>), (<span class="number">3</span>, <span class="number">7</span>, <span class="number">11</span>), (<span class="number">4</span>, <span class="number">8</span>, <span class="number">12</span>)]</span><br></pre></td></tr></table></figure>
<p>关于本行中星号的详细说明，参见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/controlflow.html#tut-unpacking-arguments">解包实参列表</a>。</p>
<h2 id="5-2-del-语句">5.2. <code>del</code> 语句</h2>
<p>有一种方式可以按索引而不是值从列表中移除条目: <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#del"><code>del</code></a> 语句。 这与返回一个值的 <code>pop()</code> 方法不同。 <code>del</code> 语句也可用于从列表中移除切片或清空整个列表（我们之前通过将切片赋值为一个空列表实现过此操作）。 例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [-<span class="number">1</span>, <span class="number">1</span>, <span class="number">66.25</span>, <span class="number">333</span>, <span class="number">333</span>, <span class="number">1234.5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> a[<span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">66.25</span>, <span class="number">333</span>, <span class="number">333</span>, <span class="number">1234.5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> a[<span class="number">2</span>:<span class="number">4</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">66.25</span>, <span class="number">1234.5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> a[:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[]</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#del"><code>del</code></a> 也可以用来删除整个变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> a</span><br></pre></td></tr></table></figure>
<p>此后，再引用 <code>a</code> 就会报错（直到为它赋与另一个值）。后文会介绍 <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#del"><code>del</code></a> 的其他用法。</p>
<h2 id="5-3-元组和序列">5.3. 元组和序列</h2>
<p>列表和字符串有很多共性，例如，索引和切片操作。这两种数据类型是 <em>序列</em> （参见 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#typesseq">序列类型 — list, tuple, range</a>）。随着 Python 语言的发展，其他的序列类型也被加入其中。本节介绍另一种标准序列类型：<em>元组</em>。</p>
<p>元组由多个用逗号隔开的值组成，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = <span class="number">12345</span>, <span class="number">54321</span>, <span class="string">&#x27;hello!&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">0</span>]</span><br><span class="line"><span class="number">12345</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">12345</span>, <span class="number">54321</span>, <span class="string">&#x27;hello!&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Tuples may be nested:</span></span><br><span class="line"><span class="meta">... </span>u = t, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>u</span><br><span class="line">((<span class="number">12345</span>, <span class="number">54321</span>, <span class="string">&#x27;hello!&#x27;</span>), (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Tuples are immutable:</span></span><br><span class="line"><span class="meta">... </span>t[<span class="number">0</span>] = <span class="number">88888</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">&#x27;tuple&#x27;</span> <span class="built_in">object</span> does <span class="keyword">not</span> support item assignment</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># but they can contain mutable objects:</span></span><br><span class="line"><span class="meta">... </span>v = ([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>v</span><br><span class="line">([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<p>输出时，元组都要由圆括号标注，这样才能正确地解释嵌套元组。输入时，圆括号可有可无，不过经常是必须的（如果元组是更大的表达式的一部分）。不允许为元组中的单个元素赋值，当然，可以创建含列表等可变对象的元组。</p>
<p>虽然，元组与列表很像，但使用场景不同，用途也不同。元组是 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-immutable">immutable</a> （不可变的），一般可包含异质元素序列，通过解包（见本节下文）或索引访问（如果是 <a href="https://docs.python.org/zh-cn/3.11/library/collections.html#collections.namedtuple"><code>namedtuples</code></a>，可以属性访问）。列表是 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-mutable">mutable</a> （可变的），列表元素一般为同质类型，可迭代访问。</p>
<p>构造 0 个或 1 个元素的元组比较特殊：为了适应这种情况，对句法有一些额外的改变。用一对空圆括号就可以创建空元组；只有一个元素的元组可以通过在这个元素后添加逗号来构建（圆括号里只有一个值的话不够明确）。丑陋，但是有效。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>empty = ()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>singleton = <span class="string">&#x27;hello&#x27;</span>,    <span class="comment"># &lt;-- note trailing comma</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(empty)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(singleton)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>singleton</span><br><span class="line">(<span class="string">&#x27;hello&#x27;</span>,)</span><br></pre></td></tr></table></figure>
<p>语句 <code>t = 12345, 54321, 'hello!'</code> 是 <em>元组打包</em> 的例子：值 <code>12345</code>, <code>54321</code> 和 <code>'hello!'</code> 一起被打包进元组。逆操作也可以：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x, y, z = t</span><br></pre></td></tr></table></figure>
<p>称之为 <em>序列解包</em> 也是妥妥的，适用于右侧的任何序列。序列解包时，左侧变量与右侧序列元素的数量应相等。注意，多重赋值其实只是元组打包和序列解包的组合。</p>
<h2 id="5-4-集合">5.4. 集合</h2>
<p>Python 还支持 <em>集合</em> 这种数据类型。集合是由不重复元素组成的无序容器。基本用法包括成员检测、消除重复元素。集合对象支持合集、交集、差集、对称差分等数学运算。</p>
<p>创建集合用花括号或 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#set"><code>set()</code></a> 函数。注意，创建空集合只能用 <code>set()</code>，不能用 <code>&#123;&#125;</code>，<code>&#123;&#125;</code> 创建的是空字典，下一小节介绍数据结构：字典。</p>
<p>以下是一些简单的示例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>basket = &#123;<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(basket)                      <span class="comment"># show that duplicates have been removed</span></span><br><span class="line">&#123;<span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;orange&#x27;</span> <span class="keyword">in</span> basket                 <span class="comment"># fast membership testing</span></span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;crabgrass&#x27;</span> <span class="keyword">in</span> basket</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Demonstrate set operations on unique letters from two words</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="built_in">set</span>(<span class="string">&#x27;abracadabra&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">set</span>(<span class="string">&#x27;alacazam&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a                                  <span class="comment"># unique letters in a</span></span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a - b                              <span class="comment"># letters in a but not in b</span></span><br><span class="line">&#123;<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a | b                              <span class="comment"># letters in a or b or both</span></span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;l&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a &amp; b                              <span class="comment"># letters in both a and b</span></span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a ^ b                              <span class="comment"># letters in a or b but not both</span></span><br><span class="line">&#123;<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;l&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>
<p>与 <a href="https://docs.python.org/zh-cn/3.11/tutorial/datastructures.html#tut-listcomps">列表推导式</a> 类似，集合也支持推导式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">&#x27;abracadabra&#x27;</span> <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&#x27;abc&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">&#123;<span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-5-字典">5.5. 字典</h2>
<p>另一个非常有用的 Python 内置数据类型是 <em>字典</em> (参见 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#typesmapping">映射类型 — dict</a>)。 字典在其他语言中可能会被称为“关联存储”或“关联数组”。 不同于以固定范围的数字进行索引的序列，字典是以 <em>键</em> 进行索引的，键可以是任何不可变类型；字符串和数字总是可以作为键。 如果一个元组只包含字符串、数字或元组则也可以作为键；如果一个元组直接或间接地包含了任何可变对象，则不能作为键。 列表不能作为键，因为列表可以使用索引赋值、切片赋值或者 <code>append()</code> 和 <code>extend()</code> 等方法进行原地修改列表。</p>
<p>可以把字典理解为 <em>键值对</em> 的集合，但字典的键必须是唯一的。花括号 <code>&#123;&#125;</code> 用于创建空字典。另一种初始化字典的方式是，在花括号里输入逗号分隔的键值对，这也是字典的输出方式。</p>
<p>字典的主要用途是通过关键字存储、提取值。用 <code>del</code> 可以删除键值对。用已存在的关键字存储值，与该关键字关联的旧值会被取代。通过不存在的键提取值，则会报错。</p>
<p>对字典执行 <code>list(d)</code> 操作，返回该字典中所有键的列表，按插入次序排列（如需排序，请使用 <code>sorted(d)</code>）。检查字典里是否存在某个键，使用关键字 <a href="https://docs.python.org/zh-cn/3.11/reference/expressions.html#in"><code>in</code></a>。</p>
<p>以下是一些字典的简单示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel = &#123;<span class="string">&#x27;jack&#x27;</span>: <span class="number">4098</span>, <span class="string">&#x27;sape&#x27;</span>: <span class="number">4139</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel[<span class="string">&#x27;guido&#x27;</span>] = <span class="number">4127</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel</span><br><span class="line">&#123;<span class="string">&#x27;jack&#x27;</span>: <span class="number">4098</span>, <span class="string">&#x27;sape&#x27;</span>: <span class="number">4139</span>, <span class="string">&#x27;guido&#x27;</span>: <span class="number">4127</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel[<span class="string">&#x27;jack&#x27;</span>]</span><br><span class="line"><span class="number">4098</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> tel[<span class="string">&#x27;sape&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel[<span class="string">&#x27;irv&#x27;</span>] = <span class="number">4127</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel</span><br><span class="line">&#123;<span class="string">&#x27;jack&#x27;</span>: <span class="number">4098</span>, <span class="string">&#x27;guido&#x27;</span>: <span class="number">4127</span>, <span class="string">&#x27;irv&#x27;</span>: <span class="number">4127</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(tel)</span><br><span class="line">[<span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;guido&#x27;</span>, <span class="string">&#x27;irv&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sorted</span>(tel)</span><br><span class="line">[<span class="string">&#x27;guido&#x27;</span>, <span class="string">&#x27;irv&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;guido&#x27;</span> <span class="keyword">in</span> tel</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;jack&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> tel</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#dict"><code>dict()</code></a> 构造函数可以直接用键值对序列创建字典：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dict</span>([(<span class="string">&#x27;sape&#x27;</span>, <span class="number">4139</span>), (<span class="string">&#x27;guido&#x27;</span>, <span class="number">4127</span>), (<span class="string">&#x27;jack&#x27;</span>, <span class="number">4098</span>)])</span><br><span class="line">&#123;<span class="string">&#x27;sape&#x27;</span>: <span class="number">4139</span>, <span class="string">&#x27;guido&#x27;</span>: <span class="number">4127</span>, <span class="string">&#x27;jack&#x27;</span>: <span class="number">4098</span>&#125;</span><br></pre></td></tr></table></figure>
<p>字典推导式可以用任意键值表达式创建字典：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>)&#125;</span><br><span class="line">&#123;<span class="number">2</span>: <span class="number">4</span>, <span class="number">4</span>: <span class="number">16</span>, <span class="number">6</span>: <span class="number">36</span>&#125;</span><br></pre></td></tr></table></figure>
<p>关键字是比较简单的字符串时，直接用关键字参数指定键值对更便捷：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dict</span>(sape=<span class="number">4139</span>, guido=<span class="number">4127</span>, jack=<span class="number">4098</span>)</span><br><span class="line">&#123;<span class="string">&#x27;sape&#x27;</span>: <span class="number">4139</span>, <span class="string">&#x27;guido&#x27;</span>: <span class="number">4127</span>, <span class="string">&#x27;jack&#x27;</span>: <span class="number">4098</span>&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-6-循环的技巧">5.6. 循环的技巧</h2>
<p>当对字典执行循环时，可以使用 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#dict.items"><code>items()</code></a> 方法同时提取键及其对应的值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>knights = &#123;<span class="string">&#x27;gallahad&#x27;</span>: <span class="string">&#x27;the pure&#x27;</span>, <span class="string">&#x27;robin&#x27;</span>: <span class="string">&#x27;the brave&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> k, v <span class="keyword">in</span> knights.items():</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(k, v)</span><br><span class="line">...</span><br><span class="line">gallahad the pure</span><br><span class="line">robin the brave</span><br></pre></td></tr></table></figure>
<p>在序列中循环时，用 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#enumerate"><code>enumerate()</code></a> 函数可以同时取出位置索引和对应的值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>([<span class="string">&#x27;tic&#x27;</span>, <span class="string">&#x27;tac&#x27;</span>, <span class="string">&#x27;toe&#x27;</span>]):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i, v)</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span> tic</span><br><span class="line"><span class="number">1</span> tac</span><br><span class="line"><span class="number">2</span> toe</span><br></pre></td></tr></table></figure>
<p>同时循环两个或多个序列时，用 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#zip"><code>zip()</code></a> 函数可以将其内的元素一一匹配：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>questions = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;quest&#x27;</span>, <span class="string">&#x27;favorite color&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>answers = [<span class="string">&#x27;lancelot&#x27;</span>, <span class="string">&#x27;the holy grail&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> q, a <span class="keyword">in</span> <span class="built_in">zip</span>(questions, answers):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;What is your &#123;0&#125;?  It is &#123;1&#125;.&#x27;</span>.<span class="built_in">format</span>(q, a))</span><br><span class="line">...</span><br><span class="line">What <span class="keyword">is</span> your name?  It <span class="keyword">is</span> lancelot.</span><br><span class="line">What <span class="keyword">is</span> your quest?  It <span class="keyword">is</span> the holy grail.</span><br><span class="line">What <span class="keyword">is</span> your favorite color?  It <span class="keyword">is</span> blue.</span><br></pre></td></tr></table></figure>
<p>为了逆向对序列进行循环，可以求出欲循环的正向序列，然后调用 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#reversed"><code>reversed()</code></a> 函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">reversed</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>)):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i)</span><br><span class="line">...</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>按指定顺序循环序列，可以用 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#sorted"><code>sorted()</code></a> 函数，在不改动原序列的基础上，返回一个重新的序列：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>basket = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">sorted</span>(basket):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i)</span><br><span class="line">...</span><br><span class="line">apple</span><br><span class="line">apple</span><br><span class="line">banana</span><br><span class="line">orange</span><br><span class="line">orange</span><br><span class="line">pear</span><br></pre></td></tr></table></figure>
<p>使用 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#set"><code>set()</code></a> 去除序列中的重复元素。使用 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#sorted"><code>sorted()</code></a> 加 <a href="https://docs.python.org/zh-cn/3.11/library/stdtypes.html#set"><code>set()</code></a> 则按排序后的顺序，循环遍历序列中的唯一元素：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>basket = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> f <span class="keyword">in</span> <span class="built_in">sorted</span>(<span class="built_in">set</span>(basket)):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(f)</span><br><span class="line">...</span><br><span class="line">apple</span><br><span class="line">banana</span><br><span class="line">orange</span><br><span class="line">pear</span><br></pre></td></tr></table></figure>
<p>一般来说，在循环中修改列表的内容时，创建新列表比较简单，且安全：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>raw_data = [<span class="number">56.2</span>, <span class="built_in">float</span>(<span class="string">&#x27;NaN&#x27;</span>), <span class="number">51.7</span>, <span class="number">55.3</span>, <span class="number">52.5</span>, <span class="built_in">float</span>(<span class="string">&#x27;NaN&#x27;</span>), <span class="number">47.8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>filtered_data = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> value <span class="keyword">in</span> raw_data:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> <span class="keyword">not</span> math.isnan(value):</span><br><span class="line"><span class="meta">... </span>        filtered_data.append(value)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>filtered_data</span><br><span class="line">[<span class="number">56.2</span>, <span class="number">51.7</span>, <span class="number">55.3</span>, <span class="number">52.5</span>, <span class="number">47.8</span>]</span><br></pre></td></tr></table></figure>
<h2 id="5-7-深入条件控制">5.7. 深入条件控制</h2>
<p><code>while</code> 和 <code>if</code> 条件句不只可以进行比较，还可以使用任意运算符。</p>
<p>比较运算符 <code>in</code> 和 <code>not in</code> 用于执行确定一个值是否存在（或不存在）于某个容器中的成员检测。 运算符 <code>is</code> 和 <code>is not</code> 用于比较两个对象是否是同一个对象。 所有比较运算符的优先级都一样，且低于任何数值运算符。</p>
<p>比较操作支持链式操作。例如，<code>a &lt; b == c</code> 校验 <code>a</code> 是否小于 <code>b</code>，且 <code>b</code> 是否等于 <code>c</code>。</p>
<p>比较操作可以用布尔运算符 <code>and</code> 和 <code>or</code> 组合，并且，比较操作（或其他布尔运算）的结果都可以用 <code>not</code> 取反。这些操作符的优先级低于比较操作符；<code>not</code> 的优先级最高， <code>or</code> 的优先级最低，因此，<code>A and not B or C</code> 等价于 <code>(A and (not B)) or C</code>。与其他运算符操作一样，此处也可以用圆括号表示想要的组合。</p>
<p>布尔运算符 <code>and</code> 和 <code>or</code> 是所谓的 <em>短路</em> 运算符：其参数从左至右求值，一旦可以确定结果，求值就会停止。例如，如果 <code>A</code> 和 <code>C</code> 为真，<code>B</code> 为假，那么 <code>A and B and C</code> 不会对 <code>C</code> 求值。用作普通值而不是布尔值时，短路运算符的返回值通常是最后一个求了值的参数。</p>
<p>还可以把比较运算或其它布尔表达式的结果赋值给变量，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>string1, string2, string3 = <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;Trondheim&#x27;</span>, <span class="string">&#x27;Hammer Dance&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>non_null = string1 <span class="keyword">or</span> string2 <span class="keyword">or</span> string3</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>non_null</span><br><span class="line"><span class="string">&#x27;Trondheim&#x27;</span></span><br></pre></td></tr></table></figure>
<p>注意，Python 与 C 不同，在表达式内部赋值必须显式使用 <a href="https://docs.python.org/zh-cn/3.11/faq/design.html#why-can-t-i-use-an-assignment-in-an-expression">海象运算符</a> <code>:=</code>。 这避免了 C 程序中常见的问题：要在表达式中写 <code>==</code> 时，却写成了 <code>=</code>。</p>
<h2 id="5-8-序列和其他类型的比较">5.8. 序列和其他类型的比较</h2>
<p>序列对象可以与相同序列类型的其他对象比较。这种比较使用 <em>字典式</em> 顺序：首先，比较前两个对应元素，如果不相等，则可确定比较结果；如果相等，则比较之后的两个元素，以此类推，直到其中一个序列结束。如果要比较的两个元素本身是相同类型的序列，则递归地执行字典式顺序比较。如果两个序列中所有的对应元素都相等，则两个序列相等。如果一个序列是另一个的初始子序列，则较短的序列可被视为较小（较少）的序列。 对于字符串来说，字典式顺序使用 Unicode 码位序号排序单个字符。下面列出了一些比较相同类型序列的例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)              &lt; (<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]              &lt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line"><span class="string">&#x27;ABC&#x27;</span> &lt; <span class="string">&#x27;C&#x27;</span> &lt; <span class="string">&#x27;Pascal&#x27;</span> &lt; <span class="string">&#x27;Python&#x27;</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)           &lt; (<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>)                 &lt; (<span class="number">1</span>, <span class="number">2</span>, -<span class="number">1</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)             == (<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, (<span class="string">&#x27;aa&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>))   &lt; (<span class="number">1</span>, <span class="number">2</span>, (<span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;a&#x27;</span>), <span class="number">4</span>)</span><br></pre></td></tr></table></figure>
<p>注意，当比较不同类型的对象时，只要待比较的对象提供了合适的比较方法，就可以使用 <code>&lt;</code> 和 <code>&gt;</code> 进行比较。例如，混合的数字类型通过数字值进行比较，所以，0 等于 0.0，等等。如果没有提供合适的比较方法，解释器不会随便给出一个比较结果，而是引发 <a href="https://docs.python.org/zh-cn/3.11/library/exceptions.html#TypeError"><code>TypeError</code></a> 异常。</p>
<h1>6. 模块</h1>
<p>退出 Python 解释器后，再次进入时，之前在 Python 解释器中定义的函数和变量就丢失了。因此，编写较长程序时，最好用文本编辑器代替解释器，执行文件中的输入内容，这就是编写 <em>脚本</em> 。随着程序越来越长，为了方便维护，最好把脚本拆分成多个文件。编写脚本还一个好处，不同程序调用同一个函数时，不用把函数定义复制到各个程序。</p>
<p>为实现这些需求，Python 把各种定义存入一个文件，在脚本或解释器的交互式实例中使用。这个文件就是 <em>模块</em> ；模块中的定义可以 <em>导入</em> 到其他模块或 <em>主</em> 模块（在顶层和计算器模式下，执行脚本中可访问的变量集）。</p>
<p>模块是包含 Python 定义和语句的文件。其文件名是模块名加后缀名 <code>.py</code> 。在模块内部，通过全局变量 <code>__name__</code> 可以获取模块名（即字符串）。例如，用文本编辑器在当前目录下创建 <code>fibo.py</code> 文件，输入以下内容：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Fibonacci numbers module</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):    <span class="comment"># write Fibonacci series up to n</span></span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; n:</span><br><span class="line">        <span class="built_in">print</span>(a, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        a, b = b, a+b</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fib2</span>(<span class="params">n</span>):   <span class="comment"># return Fibonacci series up to n</span></span><br><span class="line">    result = []</span><br><span class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; n:</span><br><span class="line">        result.append(a)</span><br><span class="line">        a, b = b, a+b</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>
<p>现在，进入 Python 解释器，用以下命令导入该模块：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> fibo</span><br></pre></td></tr></table></figure>
<p>此操作不会直接把 <code>fibo</code> 中定义的函数名称添加到当前 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-namespace">namespace</a> 中（请参阅 <a href="https://docs.python.org/zh-cn/3.11/tutorial/classes.html#tut-scopes">Python 作用域和命名空间</a> 了解详情）；它只是将模块名称 <code>fibo</code> 添加到那里。 使用该模块名称你可以访问其中的函数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fibo.fib(<span class="number">1000</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span> <span class="number">89</span> <span class="number">144</span> <span class="number">233</span> <span class="number">377</span> <span class="number">610</span> <span class="number">987</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fibo.fib2(<span class="number">100</span>)</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">34</span>, <span class="number">55</span>, <span class="number">89</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fibo.__name__</span><br><span class="line"><span class="string">&#x27;fibo&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如果经常使用某个函数，可以把它赋值给局部变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib = fibo.fib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib(<span class="number">500</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span> <span class="number">89</span> <span class="number">144</span> <span class="number">233</span> <span class="number">377</span></span><br></pre></td></tr></table></figure>
<h2 id="6-1-模块详解">6.1. 模块详解</h2>
<p>模块包含可执行语句及函数定义。这些语句用于初始化模块，且仅在 import 语句 <em>第一次</em> 遇到模块名时执行。(文件作为脚本运行时，也会执行这些语句。)</p>
<blockquote>
<p>实际上函数定义也是被执行的语句；模块级函数定义的执行会将函数名称添加到模块的全局命名空间。</p>
</blockquote>
<p>每个模块都有自己的私有命名空间，它会被用作模块中定义的所有函数的全局命名空间。 因此，模块作者可以在模块内使用全局变量而不必担心与用户的全局变量发生意外冲突。 另一方面，如果你知道要怎么做就可以通过与引用模块函数一样的标记法 <code>modname.itemname</code> 来访问一个模块的全局变量。</p>
<p>模块可以导入其他模块。 根据惯例可以将所有 <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#import"><code>import</code></a> 语句都放在模块（或者也可以说是脚本）的开头但这并非强制要求。 如果被放置于一个模块的最高层级，则被导入的模块名称会被添加到该模块的全局命名空间。</p>
<p>还有一种 <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#import"><code>import</code></a> 语句的变化形式可以将来自某个模块的名称直接导入到导入方模块的命名空间中。 例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> fibo <span class="keyword">import</span> fib, fib2</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib(<span class="number">500</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span> <span class="number">89</span> <span class="number">144</span> <span class="number">233</span> <span class="number">377</span></span><br></pre></td></tr></table></figure>
<p>这条语句不会将所导入的模块的名称引入到局部命名空间中（因此在本示例中，<code>fibo</code> 将是未定义的名称）。</p>
<p>还有一种变体可以导入模块内定义的所有名称：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> fibo <span class="keyword">import</span> *</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib(<span class="number">500</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span> <span class="number">89</span> <span class="number">144</span> <span class="number">233</span> <span class="number">377</span></span><br></pre></td></tr></table></figure>
<p>这种方式会导入所有不以下划线（<code>_</code>）开头的名称。大多数情况下，不要用这个功能，这种方式向解释器导入了一批未知的名称，可能会覆盖已经定义的名称。</p>
<p>注意，一般情况下，不建议从模块或包内导入 <code>*</code>，因为，这项操作经常让代码变得难以理解。不过，为了在交互式编译器中少打几个字，这么用也没问题。</p>
<p>模块名后使用 <code>as</code> 时，直接把 <code>as</code> 后的名称与导入模块绑定。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> fibo <span class="keyword">as</span> fib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib.fib(<span class="number">500</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span> <span class="number">89</span> <span class="number">144</span> <span class="number">233</span> <span class="number">377</span></span><br></pre></td></tr></table></figure>
<p>与 <code>import fibo</code> 一样，这种方式也可以有效地导入模块，唯一的区别是，导入的名称是 <code>fib</code>。</p>
<p><a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#from"><code>from</code></a> 中也可以使用这种方式，效果类似：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> fibo <span class="keyword">import</span> fib <span class="keyword">as</span> fibonacci</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fibonacci(<span class="number">500</span>)</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span> <span class="number">55</span> <span class="number">89</span> <span class="number">144</span> <span class="number">233</span> <span class="number">377</span></span><br></pre></td></tr></table></figure>
<p>为了保证运行效率，每次解释器会话只导入一次模块。如果更改了模块内容，必须重启解释器；仅交互测试一个模块时，也可以使用 <a href="https://docs.python.org/zh-cn/3.11/library/importlib.html#importlib.reload"><code>importlib.reload()</code></a>，例如 <code>import importlib; importlib.reload(modulename)</code>。</p>
<h3 id="6-1-1-以脚本方式执行模块">6.1.1. 以脚本方式执行模块</h3>
<p>可以用以下方式运行 Python 模块：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python fibo.py &lt;arguments&gt;</span><br></pre></td></tr></table></figure>
<p>这项操作将执行模块里的代码，和导入模块一样，但会把 <code>__name__</code> 赋值为 <code>&quot;__main__&quot;</code>。 也就是把下列代码添加到模块末尾：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">import</span> sys</span><br><span class="line">    fib(<span class="built_in">int</span>(sys.argv[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure>
<p>这个文件既能被用作脚本，又能被用作一个可供导入的模块，因为解析命令行参数的那两行代码只有在模块作为“main”文件执行时才会运行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ python fibo.py <span class="number">50</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span> <span class="number">8</span> <span class="number">13</span> <span class="number">21</span> <span class="number">34</span></span><br></pre></td></tr></table></figure>
<p>当这个模块被导入到其它模块时，那两行代码不运行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> fibo</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>这常用于为模块提供一个便捷的用户接口，或用于测试（把模块作为执行测试套件的脚本运行）。</p>
<h3 id="6-1-2-模块搜索路径">6.1.2. 模块搜索路径</h3>
<p>当导入一个名为 <code>spam</code> 的模块时，解释器首先会搜索具有该名称的内置模块。 这些模块的名称在 <a href="https://docs.python.org/zh-cn/3.11/library/sys.html#sys.builtin_module_names"><code>sys.builtin_module_names</code></a> 中列出。 如果未找到，它将在变量 <a href="https://docs.python.org/zh-cn/3.11/library/sys.html#sys.path"><code>sys.path</code></a> 所给出的目录列表中搜索名为 <code>spam.py</code> 的文件。 <a href="https://docs.python.org/zh-cn/3.11/library/sys.html#sys.path"><code>sys.path</code></a> 是从这些位置初始化的:</p>
<ul>
<li>被命令行直接运行的脚本所在的目录（或未指定文件时的当前目录）。</li>
<li><a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#envvar-PYTHONPATH"><code>PYTHONPATH</code></a> （目录列表，与 shell 变量 <code>PATH</code> 的语法一样）。</li>
<li>依赖于安装的默认值（按照惯例包括一个 <code>site-packages</code> 目录，由 <a href="https://docs.python.org/zh-cn/3.11/library/site.html#module-site"><code>site</code></a> 模块处理）。</li>
</ul>
<p>更多细节请参阅 <a href="https://docs.python.org/zh-cn/3.11/library/sys_path_init.html#sys-path-init">sys.path 模块搜索路径的初始化</a>。</p>
<p>在支持符号链接的文件系统中，“被命令行直接运行的脚本所在的目录”是符号链接最终指向的目录。换句话说，符号链接所在的目录并 <strong>没有</strong> 被添加至模块搜索路径。</p>
<p>初始化后，Python 程序可以更改 <a href="https://docs.python.org/zh-cn/3.11/library/sys.html#sys.path"><code>sys.path</code></a>。脚本所在的目录先于标准库所在的路径被搜索。这意味着，脚本所在的目录如果有和标准库同名的文件，那么加载的是该目录里的，而不是标准库的。这一般是一个错误，除非这样的替换是你有意为之。详见 <a href="https://docs.python.org/zh-cn/3.11/tutorial/modules.html#tut-standardmodules">标准模块</a>。</p>
<h3 id="6-1-3-“已编译的”-Python-文件">6.1.3. “已编译的” Python 文件</h3>
<p>为了快速加载模块，Python 把模块的编译版本缓存在 <code>__pycache__</code> 目录中，文件名为 <code>module.*version*.pyc</code>，version 对编译文件格式进行编码，一般是 Python 的版本号。例如，CPython 的 3.3 发行版中，<a href="http://spam.py">spam.py</a> 的编译版本缓存为 <code>__pycache__/spam.cpython-33.pyc</code>。这种命名惯例让不同 Python 版本编译的模块可以共存。</p>
<p>Python 对比编译版与源码的修改日期，查看编译版是否已过期，是否要重新编译。此进程完全是自动的。此外，编译模块与平台无关，因此，可在不同架构的系统之间共享相同的库。</p>
<p>Python 在两种情况下不检查缓存。一，从命令行直接载入的模块，每次都会重新编译，且不储存编译结果；二，没有源模块，就不会检查缓存。为了让一个库能以隐藏源代码的形式分发（通过将所有源代码变为编译后的版本），编译后的模块必须放在源目录而非缓存目录中，并且源目录绝不能包含同名的未编译的源模块。</p>
<p>给专业人士的一些小建议：</p>
<ul>
<li>在 Python 命令中使用 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#cmdoption-O"><code>-O</code></a> 或 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#cmdoption-OO"><code>-OO</code></a> 开关，可以减小编译模块的大小。<code>-O</code> 去除断言语句，<code>-OO</code> 去除断言语句和 <strong>doc</strong> 字符串。有些程序可能依赖于这些内容，因此，没有十足的把握，不要使用这两个选项。“优化过的”模块带有 <code>opt-</code> 标签，并且文件通常会一小些。将来的发行版或许会改进优化的效果。</li>
<li>从 <code>.pyc</code> 文件读取的程序不比从 <code>.py</code> 读取的执行速度快，<code>.pyc</code> 文件只是加载速度更快。</li>
<li><a href="https://docs.python.org/zh-cn/3.11/library/compileall.html#module-compileall"><code>compileall</code></a> 模块可以为一个目录下的所有模块创建 .pyc 文件。</li>
<li>本过程的细节及决策流程图，详见 <a href="https://peps.python.org/pep-3147/"><strong>PEP 3147</strong></a>。</li>
</ul>
<h2 id="6-2-标准模块">6.2. 标准模块</h2>
<p>Python 自带一个标准模块的库，它在 Python 库参考（此处以下称为&quot;库参考&quot; ）里另外描述。 一些模块是内嵌到编译器里面的， 它们给一些虽并非语言核心但却内嵌的操作提供接口，要么是为了效率，要么是给操作系统基础操作例如系统调入提供接口。 这些模块集是一个配置选项， 并且还依赖于底层的操作系统。 例如，<a href="https://docs.python.org/zh-cn/3.11/library/winreg.html#module-winreg"><code>winreg</code></a> 模块只在 Windows 系统上提供。一个特别值得注意的模块 <a href="https://docs.python.org/zh-cn/3.11/library/sys.html#module-sys"><code>sys</code></a>，它被内嵌到每一个 Python 编译器中。<code>sys.ps1</code> 和 <code>sys.ps2</code> 变量定义了一些字符，它们可以用作主提示符和辅助提示符:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.ps1</span><br><span class="line"><span class="string">&#x27;&gt;&gt;&gt; &#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.ps2</span><br><span class="line"><span class="string">&#x27;... &#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.ps1 = <span class="string">&#x27;C&gt; &#x27;</span></span><br><span class="line">C&gt; <span class="built_in">print</span>(<span class="string">&#x27;Yuck!&#x27;</span>)</span><br><span class="line">Yuck!</span><br><span class="line">C&gt;</span><br></pre></td></tr></table></figure>
<p>只有解释器用于交互模式时，才定义这两个变量。</p>
<p>变量 <code>sys.path</code> 是字符串列表，用于确定解释器的模块搜索路径。该变量以环境变量 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#envvar-PYTHONPATH"><code>PYTHONPATH</code></a> 提取的默认路径进行初始化，如未设置 <a href="https://docs.python.org/zh-cn/3.11/using/cmdline.html#envvar-PYTHONPATH"><code>PYTHONPATH</code></a>，则使用内置的默认路径。可以用标准列表操作修改该变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path.append(<span class="string">&#x27;/ufs/guido/lib/python&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="6-3-dir-函数">6.3. <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#dir"><code>dir()</code></a> 函数</h2>
<p>内置函数 <a href="https://docs.python.org/zh-cn/3.11/library/functions.html#dir"><code>dir()</code></a> 用于查找模块定义的名称。返回结果是经过排序的字符串列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> fibo, sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dir</span>(fibo)</span><br><span class="line">[<span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;fib&#x27;</span>, <span class="string">&#x27;fib2&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dir</span>(sys)  </span><br><span class="line">[<span class="string">&#x27;__breakpointhook__&#x27;</span>, <span class="string">&#x27;__displayhook__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__excepthook__&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;__interactivehook__&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>, <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__package__&#x27;</span>, <span class="string">&#x27;__spec__&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;__stderr__&#x27;</span>, <span class="string">&#x27;__stdin__&#x27;</span>, <span class="string">&#x27;__stdout__&#x27;</span>, <span class="string">&#x27;__unraisablehook__&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;_clear_type_cache&#x27;</span>, <span class="string">&#x27;_current_frames&#x27;</span>, <span class="string">&#x27;_debugmallocstats&#x27;</span>, <span class="string">&#x27;_framework&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;_getframe&#x27;</span>, <span class="string">&#x27;_git&#x27;</span>, <span class="string">&#x27;_home&#x27;</span>, <span class="string">&#x27;_xoptions&#x27;</span>, <span class="string">&#x27;abiflags&#x27;</span>, <span class="string">&#x27;addaudithook&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;api_version&#x27;</span>, <span class="string">&#x27;argv&#x27;</span>, <span class="string">&#x27;audit&#x27;</span>, <span class="string">&#x27;base_exec_prefix&#x27;</span>, <span class="string">&#x27;base_prefix&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;breakpointhook&#x27;</span>, <span class="string">&#x27;builtin_module_names&#x27;</span>, <span class="string">&#x27;byteorder&#x27;</span>, <span class="string">&#x27;call_tracing&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;callstats&#x27;</span>, <span class="string">&#x27;copyright&#x27;</span>, <span class="string">&#x27;displayhook&#x27;</span>, <span class="string">&#x27;dont_write_bytecode&#x27;</span>, <span class="string">&#x27;exc_info&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;excepthook&#x27;</span>, <span class="string">&#x27;exec_prefix&#x27;</span>, <span class="string">&#x27;executable&#x27;</span>, <span class="string">&#x27;exit&#x27;</span>, <span class="string">&#x27;flags&#x27;</span>, <span class="string">&#x27;float_info&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;float_repr_style&#x27;</span>, <span class="string">&#x27;get_asyncgen_hooks&#x27;</span>, <span class="string">&#x27;get_coroutine_origin_tracking_depth&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;getallocatedblocks&#x27;</span>, <span class="string">&#x27;getdefaultencoding&#x27;</span>, <span class="string">&#x27;getdlopenflags&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;getfilesystemencodeerrors&#x27;</span>, <span class="string">&#x27;getfilesystemencoding&#x27;</span>, <span class="string">&#x27;getprofile&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;getrecursionlimit&#x27;</span>, <span class="string">&#x27;getrefcount&#x27;</span>, <span class="string">&#x27;getsizeof&#x27;</span>, <span class="string">&#x27;getswitchinterval&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;gettrace&#x27;</span>, <span class="string">&#x27;hash_info&#x27;</span>, <span class="string">&#x27;hexversion&#x27;</span>, <span class="string">&#x27;implementation&#x27;</span>, <span class="string">&#x27;int_info&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;intern&#x27;</span>, <span class="string">&#x27;is_finalizing&#x27;</span>, <span class="string">&#x27;last_traceback&#x27;</span>, <span class="string">&#x27;last_type&#x27;</span>, <span class="string">&#x27;last_value&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;maxsize&#x27;</span>, <span class="string">&#x27;maxunicode&#x27;</span>, <span class="string">&#x27;meta_path&#x27;</span>, <span class="string">&#x27;modules&#x27;</span>, <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;path_hooks&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;path_importer_cache&#x27;</span>, <span class="string">&#x27;platform&#x27;</span>, <span class="string">&#x27;prefix&#x27;</span>, <span class="string">&#x27;ps1&#x27;</span>, <span class="string">&#x27;ps2&#x27;</span>, <span class="string">&#x27;pycache_prefix&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;set_asyncgen_hooks&#x27;</span>, <span class="string">&#x27;set_coroutine_origin_tracking_depth&#x27;</span>, <span class="string">&#x27;setdlopenflags&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;setprofile&#x27;</span>, <span class="string">&#x27;setrecursionlimit&#x27;</span>, <span class="string">&#x27;setswitchinterval&#x27;</span>, <span class="string">&#x27;settrace&#x27;</span>, <span class="string">&#x27;stderr&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;stdin&#x27;</span>, <span class="string">&#x27;stdout&#x27;</span>, <span class="string">&#x27;thread_info&#x27;</span>, <span class="string">&#x27;unraisablehook&#x27;</span>, <span class="string">&#x27;version&#x27;</span>, <span class="string">&#x27;version_info&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;warnoptions&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>没有参数时，<a href="https://docs.python.org/zh-cn/3.11/library/functions.html#dir"><code>dir()</code></a> 列出当前已定义的名称：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> fibo</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fib = fibo.fib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dir</span>()</span><br><span class="line">[<span class="string">&#x27;__builtins__&#x27;</span>, <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;fib&#x27;</span>, <span class="string">&#x27;fibo&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>注意它列出所有类型的名称：变量，模块，函数，……。</p>
<p><a href="https://docs.python.org/zh-cn/3.11/library/functions.html#dir"><code>dir()</code></a> 不会列出内置函数和变量的名称。这些内容的定义在标准模块 <a href="https://docs.python.org/zh-cn/3.11/library/builtins.html#module-builtins"><code>builtins</code></a> 中：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> builtins</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dir</span>(builtins)  </span><br><span class="line">[<span class="string">&#x27;ArithmeticError&#x27;</span>, <span class="string">&#x27;AssertionError&#x27;</span>, <span class="string">&#x27;AttributeError&#x27;</span>, <span class="string">&#x27;BaseException&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;BlockingIOError&#x27;</span>, <span class="string">&#x27;BrokenPipeError&#x27;</span>, <span class="string">&#x27;BufferError&#x27;</span>, <span class="string">&#x27;BytesWarning&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;ChildProcessError&#x27;</span>, <span class="string">&#x27;ConnectionAbortedError&#x27;</span>, <span class="string">&#x27;ConnectionError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;ConnectionRefusedError&#x27;</span>, <span class="string">&#x27;ConnectionResetError&#x27;</span>, <span class="string">&#x27;DeprecationWarning&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;EOFError&#x27;</span>, <span class="string">&#x27;Ellipsis&#x27;</span>, <span class="string">&#x27;EnvironmentError&#x27;</span>, <span class="string">&#x27;Exception&#x27;</span>, <span class="string">&#x27;False&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;FileExistsError&#x27;</span>, <span class="string">&#x27;FileNotFoundError&#x27;</span>, <span class="string">&#x27;FloatingPointError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;FutureWarning&#x27;</span>, <span class="string">&#x27;GeneratorExit&#x27;</span>, <span class="string">&#x27;IOError&#x27;</span>, <span class="string">&#x27;ImportError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;ImportWarning&#x27;</span>, <span class="string">&#x27;IndentationError&#x27;</span>, <span class="string">&#x27;IndexError&#x27;</span>, <span class="string">&#x27;InterruptedError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;IsADirectoryError&#x27;</span>, <span class="string">&#x27;KeyError&#x27;</span>, <span class="string">&#x27;KeyboardInterrupt&#x27;</span>, <span class="string">&#x27;LookupError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;MemoryError&#x27;</span>, <span class="string">&#x27;NameError&#x27;</span>, <span class="string">&#x27;None&#x27;</span>, <span class="string">&#x27;NotADirectoryError&#x27;</span>, <span class="string">&#x27;NotImplemented&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;NotImplementedError&#x27;</span>, <span class="string">&#x27;OSError&#x27;</span>, <span class="string">&#x27;OverflowError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;PendingDeprecationWarning&#x27;</span>, <span class="string">&#x27;PermissionError&#x27;</span>, <span class="string">&#x27;ProcessLookupError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;ReferenceError&#x27;</span>, <span class="string">&#x27;ResourceWarning&#x27;</span>, <span class="string">&#x27;RuntimeError&#x27;</span>, <span class="string">&#x27;RuntimeWarning&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;StopIteration&#x27;</span>, <span class="string">&#x27;SyntaxError&#x27;</span>, <span class="string">&#x27;SyntaxWarning&#x27;</span>, <span class="string">&#x27;SystemError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;SystemExit&#x27;</span>, <span class="string">&#x27;TabError&#x27;</span>, <span class="string">&#x27;TimeoutError&#x27;</span>, <span class="string">&#x27;True&#x27;</span>, <span class="string">&#x27;TypeError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;UnboundLocalError&#x27;</span>, <span class="string">&#x27;UnicodeDecodeError&#x27;</span>, <span class="string">&#x27;UnicodeEncodeError&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;UnicodeError&#x27;</span>, <span class="string">&#x27;UnicodeTranslateError&#x27;</span>, <span class="string">&#x27;UnicodeWarning&#x27;</span>, <span class="string">&#x27;UserWarning&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;ValueError&#x27;</span>, <span class="string">&#x27;Warning&#x27;</span>, <span class="string">&#x27;ZeroDivisionError&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;__build_class__&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;__debug__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__package__&#x27;</span>, <span class="string">&#x27;abs&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;all&#x27;</span>, <span class="string">&#x27;any&#x27;</span>, <span class="string">&#x27;ascii&#x27;</span>, <span class="string">&#x27;bin&#x27;</span>, <span class="string">&#x27;bool&#x27;</span>, <span class="string">&#x27;bytearray&#x27;</span>, <span class="string">&#x27;bytes&#x27;</span>, <span class="string">&#x27;callable&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;chr&#x27;</span>, <span class="string">&#x27;classmethod&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;complex&#x27;</span>, <span class="string">&#x27;copyright&#x27;</span>, <span class="string">&#x27;credits&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;delattr&#x27;</span>, <span class="string">&#x27;dict&#x27;</span>, <span class="string">&#x27;dir&#x27;</span>, <span class="string">&#x27;divmod&#x27;</span>, <span class="string">&#x27;enumerate&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;exit&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;filter&#x27;</span>, <span class="string">&#x27;float&#x27;</span>, <span class="string">&#x27;format&#x27;</span>, <span class="string">&#x27;frozenset&#x27;</span>, <span class="string">&#x27;getattr&#x27;</span>, <span class="string">&#x27;globals&#x27;</span>, <span class="string">&#x27;hasattr&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;hash&#x27;</span>, <span class="string">&#x27;help&#x27;</span>, <span class="string">&#x27;hex&#x27;</span>, <span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;input&#x27;</span>, <span class="string">&#x27;int&#x27;</span>, <span class="string">&#x27;isinstance&#x27;</span>, <span class="string">&#x27;issubclass&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;iter&#x27;</span>, <span class="string">&#x27;len&#x27;</span>, <span class="string">&#x27;license&#x27;</span>, <span class="string">&#x27;list&#x27;</span>, <span class="string">&#x27;locals&#x27;</span>, <span class="string">&#x27;map&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;memoryview&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;next&#x27;</span>, <span class="string">&#x27;object&#x27;</span>, <span class="string">&#x27;oct&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;ord&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;print&#x27;</span>, <span class="string">&#x27;property&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;quit&#x27;</span>, <span class="string">&#x27;range&#x27;</span>, <span class="string">&#x27;repr&#x27;</span>, <span class="string">&#x27;reversed&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;set&#x27;</span>, <span class="string">&#x27;setattr&#x27;</span>, <span class="string">&#x27;slice&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;sorted&#x27;</span>, <span class="string">&#x27;staticmethod&#x27;</span>, <span class="string">&#x27;str&#x27;</span>, <span class="string">&#x27;sum&#x27;</span>, <span class="string">&#x27;super&#x27;</span>, <span class="string">&#x27;tuple&#x27;</span>, <span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;vars&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;zip&#x27;</span>]</span><br></pre></td></tr></table></figure>
<h2 id="6-4-包">6.4. 包</h2>
<p>包是通过使用“带点号模块名”来构造 Python 模块命名空间的一种方式。 例如，模块名 <code>A.B</code> 表示名为 <code>A</code> 的包中名为 <code>B</code> 的子模块。 就像使用模块可以让不同模块的作者不必担心彼此的全局变量名一样，使用带点号模块名也可以让 NumPy 或 Pillow 等多模块包的作者也不必担心彼此的模块名冲突。</p>
<p>假设要为统一处理声音文件与声音数据设计一个模块集（“包”）。声音文件的格式很多（通常以扩展名来识别，例如：<code>.wav</code>，<code>.aiff</code>，<code>.au</code>），因此，为了不同文件格式之间的转换，需要创建和维护一个不断增长的模块集合。为了实现对声音数据的不同处理（例如，混声、添加回声、均衡器功能、创造人工立体声效果），还要编写无穷无尽的模块流。下面这个分级文件树展示了这个包的架构：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sound/                          Top-level package</span><br><span class="line">      __init__.py               Initialize the sound package</span><br><span class="line">      formats/                  Subpackage <span class="keyword">for</span> file <span class="built_in">format</span> conversions</span><br><span class="line">              __init__.py</span><br><span class="line">              wavread.py</span><br><span class="line">              wavwrite.py</span><br><span class="line">              aiffread.py</span><br><span class="line">              aiffwrite.py</span><br><span class="line">              auread.py</span><br><span class="line">              auwrite.py</span><br><span class="line">              ...</span><br><span class="line">      effects/                  Subpackage <span class="keyword">for</span> sound effects</span><br><span class="line">              __init__.py</span><br><span class="line">              echo.py</span><br><span class="line">              surround.py</span><br><span class="line">              reverse.py</span><br><span class="line">              ...</span><br><span class="line">      filters/                  Subpackage <span class="keyword">for</span> filters</span><br><span class="line">              __init__.py</span><br><span class="line">              equalizer.py</span><br><span class="line">              vocoder.py</span><br><span class="line">              karaoke.py</span><br><span class="line">              ...</span><br></pre></td></tr></table></figure>
<p>导入包时，Python 搜索 <code>sys.path</code> 里的目录，查找包的子目录。</p>
<p>需要有 <code>__init__.py</code> 文件才能让 Python 将包含该文件的目录当作包来处理（除非使用 <a href="https://docs.python.org/zh-cn/3.11/glossary.html#term-namespace-package">namespace package</a>，这是一个相对高级的特性）。 这可以防止重名的目录如 <code>string</code> 在无意中屏蔽后继出现在模块搜索路径中的有效模块。 在最简单的情况下，<code>__init__.py</code> 可以只是一个空文件，但它也可以执行包的初始化代码或设置 <code>__all__</code> 变量，这将在稍后详细描述。</p>
<p>还可以从包中导入单个模块，例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sound.effects.echo</span><br></pre></td></tr></table></figure>
<p>这将加载子模块 <code>sound.effects.echo</code>。 它必须通过其全名来引用。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sound.effects.echo.echofilter(<span class="built_in">input</span>, output, delay=<span class="number">0.7</span>, atten=<span class="number">4</span>)</span><br></pre></td></tr></table></figure>
<p>另一种导入子模块的方法是 ：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sound.effects <span class="keyword">import</span> echo</span><br></pre></td></tr></table></figure>
<p>这也会加载子模块 <code>echo</code>，并使其不必加包前缀，因此可按如下方式使用:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">echo.echofilter(<span class="built_in">input</span>, output, delay=<span class="number">0.7</span>, atten=<span class="number">4</span>)</span><br></pre></td></tr></table></figure>
<p>Import 语句的另一种变体是直接导入所需的函数或变量：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sound.effects.echo <span class="keyword">import</span> echofilter</span><br></pre></td></tr></table></figure>
<p>同样，这将加载子模块 <code>echo</code>，但这使其函数 <code>echofilter()</code> 直接可用:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">echofilter(<span class="built_in">input</span>, output, delay=<span class="number">0.7</span>, atten=<span class="number">4</span>)</span><br></pre></td></tr></table></figure>
<p>注意，使用 <code>from package import item</code> 时，item 可以是包的子模块（或子包），也可以是包中定义的函数、类或变量等其他名称。<code>import</code> 语句首先测试包中是否定义了 item；如果未在包中定义，则假定 item 是模块，并尝试加载。如果找不到 item，则触发 <a href="https://docs.python.org/zh-cn/3.11/library/exceptions.html#ImportError"><code>ImportError</code></a> 异常。</p>
<p>相反，使用 <code>import item.subitem.subsubitem</code> 句法时，除最后一项外，每个 item 都必须是包；最后一项可以是模块或包，但不能是上一项中定义的类、函数或变量。</p>
<h3 id="6-4-1-从包中导入">6.4.1. 从包中导入 *</h3>
<p>使用 <code>from sound.effects import *</code> 时会发生什么？你可能希望它会查找并导入包的所有子模块，但事实并非如此。因为这将花费很长的时间，并且可能会产生你不想要的副作用，如果这种副作用被你设计为只有在导入某个特定的子模块时才应该发生。</p>
<p>唯一的解决办法是提供包的显式索引。<a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#import"><code>import</code></a> 语句使用如下惯例：如果包的 <code>__init__.py</code> 代码定义了列表 <code>__all__</code>，运行 <code>from package import *</code> 时，它就是被导入的模块名列表。发布包的新版本时，包的作者应更新此列表。如果包的作者认为没有必要在包中执行导入 * 操作，也可以不提供此列表。例如，<code>sound/effects/__init__.py</code> 文件可以包含以下代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__all__ = [<span class="string">&quot;echo&quot;</span>, <span class="string">&quot;surround&quot;</span>, <span class="string">&quot;reverse&quot;</span>]</span><br></pre></td></tr></table></figure>
<p>这意味着 <code>from sound.effects import *</code> 将导入 <code>sound.effects</code> 包的三个命名子模块。</p>
<p>请注意子模块可能会受到本地定义名称的影响。 例如，如果你在 <code>sound/effects/__init__.py</code> 文件中添加了一个 <code>reverse</code> 函数，<code>from sound.effects import *</code> 将只导入 <code>echo</code> 和 <code>surround</code> 这两个子模块，但 <strong>不会</strong> 导入 <code>reverse</code> 子模块，因为它被本地定义的 <code>reverse</code> 函数所遮挡:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">__all__ = [</span><br><span class="line">    <span class="string">&quot;echo&quot;</span>,      <span class="comment"># refers to the &#x27;echo.py&#x27; file</span></span><br><span class="line">    <span class="string">&quot;surround&quot;</span>,  <span class="comment"># refers to the &#x27;surround.py&#x27; file</span></span><br><span class="line">    <span class="string">&quot;reverse&quot;</span>,   <span class="comment"># !!! refers to the &#x27;reverse&#x27; function now !!!</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reverse</span>(<span class="params">msg: <span class="built_in">str</span></span>):  <span class="comment"># &lt;-- this name shadows the &#x27;reverse.py&#x27; submodule</span></span><br><span class="line">    <span class="keyword">return</span> msg[::-<span class="number">1</span>]    <span class="comment">#     in the case of a &#x27;from sound.effects import *&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如果没有定义 <code>__all__</code>，<code>from sound.effects import *</code> 语句 <em>不会</em> 把包 <code>sound.effects</code> 中的所有子模块都导入到当前命名空间；它只是确保包 <code>sound.effects</code> 已被导入（可能还会运行 <code>__init__.py</code> 中的任何初始化代码），然后再导入包中定义的任何名称。 这包括由 <code>__init__.py</code> 定义的任何名称（以及显式加载的子模块）。 它还包括先前 <a href="https://docs.python.org/zh-cn/3.11/reference/simple_stmts.html#import"><code>import</code></a> 语句显式加载的包里的任何子模块。 请看以下代码:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sound.effects.echo</span><br><span class="line"><span class="keyword">import</span> sound.effects.surround</span><br><span class="line"><span class="keyword">from</span> sound.effects <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure>
<p>在本例中，<code>echo</code> 和 <code>surround</code> 模块被导入到当前命名空间，因为在执行 <code>from...import</code> 语句时它们已在 <code>sound.effects</code> 包中定义了。 （当定义了 <code>__all__</code> 时也是如此）。</p>
<p>虽然，可以把模块设计为用 <code>import *</code> 时只导出遵循指定模式的名称，但仍不提倡在生产代码中使用这种做法。</p>
<p>记住，使用 <code>from package import specific_submodule</code> 没有任何问题！ 实际上，除了导入模块使用不同包的同名子模块之外，这种方式是推荐用法。</p>
<h3 id="6-4-2-相对导入">6.4.2. 相对导入</h3>
<p>当包由多个子包构成（如示例中的 <code>sound</code> 包）时，可以使用绝对导入来引用同级包的子模块。 例如，如果 <code>sound.filters.vocoder</code> 模块需要使用 <code>sound.effects</code> 包中的 <code>echo</code> 模块，它可以使用 <code>from sound.effects import echo</code>。</p>
<p>你还可以编写相对导入代码，即使用 <code>from module import name</code> 形式的 import 语句。 这些导入使用前导点号来表示相对导入所涉及的当前包和上级包。 例如对于 <code>surround</code> 模块，可以使用:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> echo</span><br><span class="line"><span class="keyword">from</span> .. <span class="keyword">import</span> formats</span><br><span class="line"><span class="keyword">from</span> ..filters <span class="keyword">import</span> equalizer</span><br></pre></td></tr></table></figure>
<p>注意，相对导入基于当前模块名。因为主模块名永远是 <code>&quot;__main__&quot;</code> ，所以如果计划将一个模块用作 Python 应用程序的主模块，那么该模块内的导入语句必须始终使用绝对导入。</p>
<h3 id="6-4-3-多目录中的包">6.4.3. 多目录中的包</h3>
<p>包还支持一个特殊属性 <a href="https://docs.python.org/zh-cn/3.11/reference/import.html#path__"><code>__path__</code></a> 。在包的 <code>__init__.py</code> 中的代码被执行前，该属性被初始化为一个只含一项的列表，该项是一个字符串，是 <strong>init</strong>.py 所在目录的名称。可以修改此变量；这样做会改变在此包中搜索模块和子包的方式。</p>
<p>这个功能虽然不常用，但可用于扩展包中的模块集。</p>
<h1>7. 输入与输出</h1>
<p>程序输出有几种显示方式；数据既可以输出供人阅读的形式，也可以写入文件备用。本章探讨一些可用的方式。</p>
<h2 id="7-1-更复杂的输出格式">7.1. 更复杂的输出格式</h2>
<p>到目前为止我们已遇到过两种写入值的方式: <em>表达式语句</em> 和 <a href="https://docs.python.org/zh-cn/3/library/functions.html#print"><code>print()</code></a> 函数。 （第三种方式是使用文件对象的 <a href="https://docs.python.org/zh-cn/3/library/io.html#io.TextIOBase.write"><code>write()</code></a> 方法；标准输出文件可以被引用为 <code>sys.stdout</code>。 更多相关信息请参阅标准库参考）。</p>
<p>对输出格式的控制不只是打印空格分隔的值，还需要更多方式。格式化输出包括以下几种方法。</p>
<ul>
<li>
<p>使用 <a href="https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#tut-f-strings">格式化字符串字面值</a> ，要在字符串开头的引号/三引号前添加 <code>f</code> 或 <code>F</code> 。在这种字符串中，可以在 <code>&#123;</code> 和 <code>&#125;</code> 字符之间输入引用的变量，或字面值的 Python 表达式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>year = <span class="number">2016</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>event = <span class="string">&#x27;Referendum&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">f&#x27;Results of the <span class="subst">&#123;year&#125;</span> <span class="subst">&#123;event&#125;</span>&#x27;</span></span><br><span class="line"><span class="string">&#x27;Results of the 2016 Referendum&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>字符串的 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.format"><code>str.format()</code></a> 方法需要更多手动操作。该方法也用 <code>&#123;</code> 和 <code>&#125;</code> 标记替换变量的位置，虽然这种方法支持详细的格式化指令，但需要提供格式化信息。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>yes_votes = <span class="number">42_572_654</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>no_votes = <span class="number">43_132_495</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>percentage = yes_votes / (yes_votes + no_votes)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;&#123;:-9&#125; YES votes  &#123;:2.2%&#125;&#x27;</span>.<span class="built_in">format</span>(yes_votes, percentage)</span><br><span class="line"><span class="string">&#x27; 42572654 YES votes  49.67%&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>最后，还可以用字符串切片和合并操作完成字符串处理操作，创建任何排版布局。字符串类型还支持将字符串按给定列宽进行填充，这些方法也很有用。</p>
</li>
</ul>
<p>如果不需要花哨的输出，只想快速显示变量进行调试，可以用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#repr"><code>repr()</code></a> 或 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str"><code>str()</code></a> 函数把值转化为字符串。</p>
<p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str"><code>str()</code></a> 函数返回供人阅读的值，<a href="https://docs.python.org/zh-cn/3/library/functions.html#repr"><code>repr()</code></a> 则生成适于解释器读取的值（如果没有等效的语法，则强制执行 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#SyntaxError"><code>SyntaxError</code></a>）。对于没有支持供人阅读展示结果的对象， <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str"><code>str()</code></a> 返回与 <a href="https://docs.python.org/zh-cn/3/library/functions.html#repr"><code>repr()</code></a> 相同的值。一般情况下，数字、列表或字典等结构的值，使用这两个函数输出的表现形式是一样的。字符串有两种不同的表现形式。</p>
<p>示例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;Hello, world.&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">str</span>(s)</span><br><span class="line"><span class="string">&#x27;Hello, world.&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">repr</span>(s)</span><br><span class="line"><span class="string">&quot;&#x27;Hello, world.&#x27;&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">str</span>(<span class="number">1</span>/<span class="number">7</span>)</span><br><span class="line"><span class="string">&#x27;0.14285714285714285&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">10</span> * <span class="number">3.25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = <span class="number">200</span> * <span class="number">200</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;The value of x is &#x27;</span> + <span class="built_in">repr</span>(x) + <span class="string">&#x27;, and y is &#x27;</span> + <span class="built_in">repr</span>(y) + <span class="string">&#x27;...&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(s)</span><br><span class="line">The value of x <span class="keyword">is</span> <span class="number">32.5</span>, <span class="keyword">and</span> y <span class="keyword">is</span> <span class="number">40000.</span>..</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># The repr() of a string adds string quotes and backslashes:</span></span><br><span class="line"><span class="meta">... </span>hello = <span class="string">&#x27;hello, world\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hellos = <span class="built_in">repr</span>(hello)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(hellos)</span><br><span class="line"><span class="string">&#x27;hello, world\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># The argument to repr() may be any Python object:</span></span><br><span class="line"><span class="meta">... </span><span class="built_in">repr</span>((x, y, (<span class="string">&#x27;spam&#x27;</span>, <span class="string">&#x27;eggs&#x27;</span>)))</span><br><span class="line"><span class="string">&quot;(32.5, 40000, (&#x27;spam&#x27;, &#x27;eggs&#x27;))&quot;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/string.html#module-string"><code>string</code></a> 模块包含 <a href="https://docs.python.org/zh-cn/3/library/string.html#string.Template"><code>Template</code></a> 类，提供了将值替换为字符串的另一种方法。该类使用 <code>$x</code> 占位符，并用字典的值进行替换，但对格式控制的支持比较有限。</p>
<h3 id="7-1-1-格式化字符串字面值">7.1.1. 格式化字符串字面值</h3>
<p><a href="https://docs.python.org/zh-cn/3/reference/lexical_analysis.html#f-strings">格式化字符串字面值</a> （简称为 f-字符串）在字符串前加前缀 <code>f</code> 或 <code>F</code>，通过 <code>&#123;expression&#125;</code> 表达式，把 Python 表达式的值添加到字符串内。</p>
<p>格式说明符是可选的，写在表达式后面，可以更好地控制格式化值的方式。下例将 pi 舍入到小数点后三位：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">f&#x27;The value of pi is approximately <span class="subst">&#123;math.pi:<span class="number">.3</span>f&#125;</span>.&#x27;</span>)</span><br><span class="line">The value of pi <span class="keyword">is</span> approximately <span class="number">3.142</span>.</span><br></pre></td></tr></table></figure>
<p>在 <code>':'</code> 后传递整数，为该字段设置最小字符宽度，常用于列对齐：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>table = &#123;<span class="string">&#x27;Sjoerd&#x27;</span>: <span class="number">4127</span>, <span class="string">&#x27;Jack&#x27;</span>: <span class="number">4098</span>, <span class="string">&#x27;Dcab&#x27;</span>: <span class="number">7678</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> name, phone <span class="keyword">in</span> table.items():</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;name:<span class="number">10</span>&#125;</span> ==&gt; <span class="subst">&#123;phone:10d&#125;</span>&#x27;</span>)</span><br><span class="line">...</span><br><span class="line">Sjoerd     ==&gt;       <span class="number">4127</span></span><br><span class="line">Jack       ==&gt;       <span class="number">4098</span></span><br><span class="line">Dcab       ==&gt;       <span class="number">7678</span></span><br></pre></td></tr></table></figure>
<p>还有一些修饰符可以在格式化前转换值。 <code>'!a'</code> 应用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#ascii"><code>ascii()</code></a> ，<code>'!s'</code> 应用 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str"><code>str()</code></a>，<code>'!r'</code> 应用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#repr"><code>repr()</code></a>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>animals = <span class="string">&#x27;eels&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">f&#x27;My hovercraft is full of <span class="subst">&#123;animals&#125;</span>.&#x27;</span>)</span><br><span class="line">My hovercraft <span class="keyword">is</span> full of eels.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">f&#x27;My hovercraft is full of <span class="subst">&#123;animals!r&#125;</span>.&#x27;</span>)</span><br><span class="line">My hovercraft <span class="keyword">is</span> full of <span class="string">&#x27;eels&#x27;</span>.</span><br></pre></td></tr></table></figure>
<p><code>=</code> 说明符可被用于将一个表达式扩展为表达式文本、等号再加表达式求值结果的形式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>bugs = <span class="string">&#x27;roaches&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>count = <span class="number">13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>area = <span class="string">&#x27;living room&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">f&#x27;Debugging <span class="subst">&#123;bugs=&#125;</span> <span class="subst">&#123;count=&#125;</span> <span class="subst">&#123;area=&#125;</span>&#x27;</span>)</span><br><span class="line">Debugging bugs=<span class="string">&#x27;roaches&#x27;</span> count=<span class="number">13</span> area=<span class="string">&#x27;living room&#x27;</span></span><br></pre></td></tr></table></figure>
<p>请参阅 <a href="https://docs.python.org/zh-cn/3/whatsnew/3.8.html#bpo-36817-whatsnew">自说明型表达式</a> 以了解 <code>=</code> 说明符的更多信息。 有关这些格式说明的详情，请查看针对 <a href="https://docs.python.org/zh-cn/3/library/string.html#formatspec">格式规格迷你语言</a> 的参考指南。</p>
<h3 id="7-1-2-字符串-format-方法">7.1.2. 字符串 format() 方法</h3>
<p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.format"><code>str.format()</code></a> 方法的基本用法如下所示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;We are the &#123;&#125; who say &quot;&#123;&#125;!&quot;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;knights&#x27;</span>, <span class="string">&#x27;Ni&#x27;</span>))</span><br><span class="line">We are the knights who say <span class="string">&quot;Ni!&quot;</span></span><br></pre></td></tr></table></figure>
<p>花括号及之内的字符（称为格式字段）被替换为传递给 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.format"><code>str.format()</code></a> 方法的对象。花括号中的数字表示传递给 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.format"><code>str.format()</code></a> 方法的对象所在的位置。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125; and &#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;spam&#x27;</span>, <span class="string">&#x27;eggs&#x27;</span>))</span><br><span class="line">spam <span class="keyword">and</span> eggs</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;&#123;1&#125; and &#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;spam&#x27;</span>, <span class="string">&#x27;eggs&#x27;</span>))</span><br><span class="line">eggs <span class="keyword">and</span> spam</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.format"><code>str.format()</code></a> 方法中使用关键字参数名引用值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;This &#123;food&#125; is &#123;adjective&#125;.&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line"><span class="meta">... </span>      food=<span class="string">&#x27;spam&#x27;</span>, adjective=<span class="string">&#x27;absolutely horrible&#x27;</span>))</span><br><span class="line">This spam <span class="keyword">is</span> absolutely horrible.</span><br></pre></td></tr></table></figure>
<p>位置参数和关键字参数可以任意组合：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;The story of &#123;0&#125;, &#123;1&#125;, and &#123;other&#125;.&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;Bill&#x27;</span>, <span class="string">&#x27;Manfred&#x27;</span>,</span><br><span class="line"><span class="meta">... </span>                                                   other=<span class="string">&#x27;Georg&#x27;</span>))</span><br><span class="line">The story of Bill, Manfred, <span class="keyword">and</span> Georg.</span><br></pre></td></tr></table></figure>
<p>如果不想分拆较长的格式字符串，最好按名称引用变量进行格式化，不要按位置。这项操作可以通过传递字典，并用方括号 <code>'[]'</code> 访问键来完成。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>table = &#123;<span class="string">&#x27;Sjoerd&#x27;</span>: <span class="number">4127</span>, <span class="string">&#x27;Jack&#x27;</span>: <span class="number">4098</span>, <span class="string">&#x27;Dcab&#x27;</span>: <span class="number">8637678</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;Jack: &#123;0[Jack]:d&#125;; Sjoerd: &#123;0[Sjoerd]:d&#125;; &#x27;</span></span><br><span class="line"><span class="meta">... </span>      <span class="string">&#x27;Dcab: &#123;0[Dcab]:d&#125;&#x27;</span>.<span class="built_in">format</span>(table))</span><br><span class="line">Jack: <span class="number">4098</span>; Sjoerd: <span class="number">4127</span>; Dcab: <span class="number">8637678</span></span><br></pre></td></tr></table></figure>
<p>这也可以通过将 <code>table</code> 字典作为采用 <code>**</code> 标记的关键字参数传入来实现。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>table = &#123;<span class="string">&#x27;Sjoerd&#x27;</span>: <span class="number">4127</span>, <span class="string">&#x27;Jack&#x27;</span>: <span class="number">4098</span>, <span class="string">&#x27;Dcab&#x27;</span>: <span class="number">8637678</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;Jack: &#123;Jack:d&#125;; Sjoerd: &#123;Sjoerd:d&#125;; Dcab: &#123;Dcab:d&#125;&#x27;</span>.<span class="built_in">format</span>(**table))</span><br><span class="line">Jack: <span class="number">4098</span>; Sjoerd: <span class="number">4127</span>; Dcab: <span class="number">8637678</span></span><br></pre></td></tr></table></figure>
<p>与内置函数 <a href="https://docs.python.org/zh-cn/3/library/functions.html#vars"><code>vars()</code></a> 结合使用时，这种方式非常实用，可以返回包含所有局部变量的字典。</p>
<p>举个例子，以下几行代码将产生一组整齐的数据列，包含给定的整数及其平方与立方:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;&#123;0:2d&#125; &#123;1:3d&#125; &#123;2:4d&#125;&#x27;</span>.<span class="built_in">format</span>(x, x*x, x*x*x))</span><br><span class="line">...</span><br><span class="line"> <span class="number">1</span>   <span class="number">1</span>    <span class="number">1</span></span><br><span class="line"> <span class="number">2</span>   <span class="number">4</span>    <span class="number">8</span></span><br><span class="line"> <span class="number">3</span>   <span class="number">9</span>   <span class="number">27</span></span><br><span class="line"> <span class="number">4</span>  <span class="number">16</span>   <span class="number">64</span></span><br><span class="line"> <span class="number">5</span>  <span class="number">25</span>  <span class="number">125</span></span><br><span class="line"> <span class="number">6</span>  <span class="number">36</span>  <span class="number">216</span></span><br><span class="line"> <span class="number">7</span>  <span class="number">49</span>  <span class="number">343</span></span><br><span class="line"> <span class="number">8</span>  <span class="number">64</span>  <span class="number">512</span></span><br><span class="line"> <span class="number">9</span>  <span class="number">81</span>  <span class="number">729</span></span><br><span class="line"><span class="number">10</span> <span class="number">100</span> <span class="number">1000</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.format"><code>str.format()</code></a> 进行字符串格式化的完整概述详见 <a href="https://docs.python.org/zh-cn/3/library/string.html#formatstrings">格式字符串语法</a> 。</p>
<h3 id="7-1-3-手动格式化字符串">7.1.3. 手动格式化字符串</h3>
<p>下面是使用手动格式化方式实现的同一个平方和立方的表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="built_in">repr</span>(x).rjust(<span class="number">2</span>), <span class="built_in">repr</span>(x*x).rjust(<span class="number">3</span>), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="comment"># Note use of &#x27;end&#x27; on previous line</span></span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="built_in">repr</span>(x*x*x).rjust(<span class="number">4</span>))</span><br><span class="line">...</span><br><span class="line"> <span class="number">1</span>   <span class="number">1</span>    <span class="number">1</span></span><br><span class="line"> <span class="number">2</span>   <span class="number">4</span>    <span class="number">8</span></span><br><span class="line"> <span class="number">3</span>   <span class="number">9</span>   <span class="number">27</span></span><br><span class="line"> <span class="number">4</span>  <span class="number">16</span>   <span class="number">64</span></span><br><span class="line"> <span class="number">5</span>  <span class="number">25</span>  <span class="number">125</span></span><br><span class="line"> <span class="number">6</span>  <span class="number">36</span>  <span class="number">216</span></span><br><span class="line"> <span class="number">7</span>  <span class="number">49</span>  <span class="number">343</span></span><br><span class="line"> <span class="number">8</span>  <span class="number">64</span>  <span class="number">512</span></span><br><span class="line"> <span class="number">9</span>  <span class="number">81</span>  <span class="number">729</span></span><br><span class="line"><span class="number">10</span> <span class="number">100</span> <span class="number">1000</span></span><br></pre></td></tr></table></figure>
<p>（注意，每列之间的空格是通过使用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#print"><code>print()</code></a> 添加的：它总在其参数间添加空格。）</p>
<p>字符串对象的 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.rjust"><code>str.rjust()</code></a> 方法通过在左侧填充空格，对给定宽度字段中的字符串进行右对齐。同类方法还有 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.ljust"><code>str.ljust()</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.center"><code>str.center()</code></a> 。这些方法不写入任何内容，只返回一个新字符串，如果输入的字符串太长，它们不会截断字符串，而是原样返回；虽然这种方式会弄乱列布局，但也比另一种方法好，后者在显示值时可能不准确（如果真的想截断字符串，可以使用 <code>x.ljust(n)[:n]</code> 这样的切片操作 。）</p>
<p>另一种方法是 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.zfill"><code>str.zfill()</code></a> ，该方法在数字字符串左边填充零，且能识别正负号：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;12&#x27;</span>.zfill(<span class="number">5</span>)</span><br><span class="line"><span class="string">&#x27;00012&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;-3.14&#x27;</span>.zfill(<span class="number">7</span>)</span><br><span class="line"><span class="string">&#x27;-003.14&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;3.14159265359&#x27;</span>.zfill(<span class="number">5</span>)</span><br><span class="line"><span class="string">&#x27;3.14159265359&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="7-1-4-旧式字符串格式化方法">7.1.4. 旧式字符串格式化方法</h3>
<p>% 运算符（求余符）也可用于字符串格式化。给定 <code>'string' % values</code>，则 <code>string</code> 中的 <code>%</code> 实例会以零个或多个 <code>values</code> 元素替换。此操作被称为字符串插值。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&#x27;The value of pi is approximately %5.3f.&#x27;</span> % math.pi)</span><br><span class="line">The value of pi <span class="keyword">is</span> approximately <span class="number">3.142</span>.</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#old-string-formatting">printf 风格的字符串格式化</a> 小节介绍更多相关内容。</p>
<h2 id="7-2-读写文件">7.2. 读写文件</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/functions.html#open"><code>open()</code></a> 返回一个 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-file-object">file object</a> ，最常使用的是两个位置参数和一个关键字参数：<code>open(filename, mode, encoding=None)</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="built_in">open</span>(<span class="string">&#x27;workfile&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>第一个实参是文件名字符串。第二个实参是包含描述文件使用方式字符的字符串。</p>
<p><em>mode</em> 的值包括 <code>'r'</code> ，表示文件只能读取；<code>'w'</code> 表示只能写入（现有同名文件会被覆盖）；<code>'a'</code> 表示打开文件并追加内容，任何写入的数据会自动添加到文件末尾。<code>'r+'</code> 表示打开文件进行读写。<em>mode</em> 实参是可选的，省略时的默认值为 <code>'r'</code>。</p>
<p>通常情况下，文件是以 <em>text mode</em> 打开的，也就是说，你从文件中读写字符串，这些字符串是以特定的 <em>encoding</em> 编码的。如果没有指定 <em>encoding</em> ，默认的是与平台有关的（见 <a href="https://docs.python.org/zh-cn/3/library/functions.html#open"><code>open()</code></a> ）。因为 UTF-8 是现代事实上的标准，除非你知道你需要使用一个不同的编码，否则建议使用 <code>encoding=&quot;utf-8&quot;</code> 。</p>
<p>在模式后面加上一个 <code>'b'</code> ，可以用 <em>binary mode</em> 打开文件。二进制模式的数据是以 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#bytes"><code>bytes</code></a> 对象的形式读写的。在二进制模式下打开文件时，你不能指定 <em>encoding</em> 。</p>
<p>在文本模式下读取文件时，默认把平台特定的行结束符（Unix 上为 <code>\n</code>, Windows 上为 <code>\r\n</code>）转换为 <code>\n</code>。在文本模式下写入数据时，默认把 <code>\n</code> 转换回平台特定结束符。这种操作方式在后台修改文件数据对文本文件来说没有问题，但会破坏 <code>JPEG</code> 或 <code>EXE</code> 等二进制文件中的数据。注意，在读写此类文件时，一定要使用二进制模式。</p>
<p>在处理文件对象时，最好使用 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#with"><code>with</code></a> 关键字。优点是，子句体结束后，文件会正确关闭，即便触发异常也可以。而且，使用 <code>with</code> 相比等效的 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a>-<a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#finally"><code>finally</code></a> 代码块要简短得多：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;workfile&#x27;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="meta">... </span>    read_data = f.read()</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># We can check that the file has been automatically closed.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.closed</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p>如果没有使用 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#with"><code>with</code></a> 关键字，则应调用 <code>f.close()</code> 关闭文件，即可释放文件占用的系统资源。</p>
<p>警告：调用 <code>f.write()</code> 时，未使用 <code>with</code> 关键字，或未调用 <code>f.close()</code>，即使程序正常退出，也<strong>可能</strong> 导致 <code>f.write()</code> 的参数没有完全写入磁盘。</p>
<p>通过 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#with"><code>with</code></a> 语句，或调用 <code>f.close()</code> 关闭文件对象后，再次使用该文件对象将会失败。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.close()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ValueError: I/O operation on closed file.</span><br></pre></td></tr></table></figure>
<h3 id="7-2-1-文件对象的方法">7.2.1. 文件对象的方法</h3>
<p>本节下文中的例子假定已创建 <code>f</code> 文件对象。</p>
<p><code>f.read(size)</code> 可用于读取文件内容，它会读取一些数据，并返回字符串（文本模式），或字节串对象（在二进制模式下）。 <em>size</em> 是可选的数值参数。省略 <em>size</em> 或 <em>size</em> 为负数时，读取并返回整个文件的内容；文件大小是内存的两倍时，会出现问题。<em>size</em> 取其他值时，读取并返回最多 <em>size</em> 个字符（文本模式）或 <em>size</em> 个字节（二进制模式）。如已到达文件末尾，<code>f.read()</code> 返回空字符串（<code>''</code>）。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read()</span><br><span class="line"><span class="string">&#x27;This is the entire file.\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read()</span><br><span class="line"><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p><code>f.readline()</code> 从文件中读取单行数据；字符串末尾保留换行符（<code>\n</code>），只有在文件不以换行符结尾时，文件的最后一行才会省略换行符。这种方式让返回值清晰明确；只要 <code>f.readline()</code> 返回空字符串，就表示已经到达了文件末尾，空行使用 <code>'\n'</code> 表示，该字符串只包含一个换行符。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readline()</span><br><span class="line"><span class="string">&#x27;This is the first line of the file.\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readline()</span><br><span class="line"><span class="string">&#x27;Second line of the file\n&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.readline()</span><br><span class="line"><span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>从文件中读取多行时，可以用循环遍历整个文件对象。这种操作能高效利用内存，快速，且代码简单：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(line, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">...</span><br><span class="line">This <span class="keyword">is</span> the first line of the file.</span><br><span class="line">Second line of the file</span><br></pre></td></tr></table></figure>
<p>如需以列表形式读取文件中的所有行，可以用 <code>list(f)</code> 或 <code>f.readlines()</code>。</p>
<p><code>f.write(string)</code> 把 <em>string</em> 的内容写入文件，并返回写入的字符数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">&#x27;This is a test\n&#x27;</span>)</span><br><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure>
<p>写入其他类型的对象前，要先把它们转化为字符串（文本模式）或字节对象（二进制模式）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>value = (<span class="string">&#x27;the answer&#x27;</span>, <span class="number">42</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="built_in">str</span>(value)  <span class="comment"># convert the tuple to string</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(s)</span><br><span class="line"><span class="number">18</span></span><br></pre></td></tr></table></figure>
<p><code>f.tell()</code> 返回整数，给出文件对象在文件中的当前位置，表示为二进制模式下时从文件开始的字节数，以及文本模式下的意义不明的数字。</p>
<p><code>f.seek(offset, whence)</code> 可以改变文件对象的位置。通过向参考点添加 <em>offset</em> 计算位置；参考点由 <em>whence</em> 参数指定。 <em>whence</em> 值为 0 时，表示从文件开头计算，1 表示使用当前文件位置，2 表示使用文件末尾作为参考点。省略 <em>whence</em> 时，其默认值为 0，即使用文件开头作为参考点。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>f = <span class="built_in">open</span>(<span class="string">&#x27;workfile&#x27;</span>, <span class="string">&#x27;rb+&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.write(<span class="string">b&#x27;0123456789abcdef&#x27;</span>)</span><br><span class="line"><span class="number">16</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.seek(<span class="number">5</span>)      <span class="comment"># Go to the 6th byte in the file</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read(<span class="number">1</span>)</span><br><span class="line"><span class="string">b&#x27;5&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.seek(-<span class="number">3</span>, <span class="number">2</span>)  <span class="comment"># Go to the 3rd byte before the end</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f.read(<span class="number">1</span>)</span><br><span class="line"><span class="string">b&#x27;d&#x27;</span></span><br></pre></td></tr></table></figure>
<p>在文本文件（模式字符串未使用 <code>b</code> 时打开的文件）中，只允许相对于文件开头搜索（使用 <code>seek(0, 2)</code> 搜索到文件末尾是个例外），唯一有效的 <em>offset</em> 值是能从 <code>f.tell()</code> 中返回的，或 0。其他 <em>offset</em> 值都会产生未定义的行为。</p>
<p>文件对象还有一些额外的方法，如使用频率较低的 <a href="https://docs.python.org/zh-cn/3/library/io.html#io.IOBase.isatty"><code>isatty()</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/io.html#io.IOBase.truncate"><code>truncate()</code></a> 等；有关文件对象的完整指南请查阅标准库参考。</p>
<h3 id="7-2-2-使用-json-保存结构化数据">7.2.2. 使用 <a href="https://docs.python.org/zh-cn/3/library/json.html#module-json"><code>json</code></a> 保存结构化数据</h3>
<p>字符串可以很容易地写入文件或从文件中读取。 数字则更麻烦一些，因为 <a href="https://docs.python.org/zh-cn/3/library/io.html#io.TextIOBase.read"><code>read()</code></a> 方法只返回字符串，而字符串必须传给 <a href="https://docs.python.org/zh-cn/3/library/functions.html#int"><code>int()</code></a> 这样的函数，它接受 <code>'123'</code> 这样的字符串并返回其数值 123。 当你想要保存嵌套列表和字典等更复杂的数据类型时，手动执行解析和序列化操作将会变得非常复杂。</p>
<p>Python 允许你使用流行的数据交换格式 <a href="https://json.org/">JSON (JavaScript Object Notation)</a>，而不是让用户持续编写和调试代码来将复杂的数据类型存入文件中。 标准库模块 <a href="https://docs.python.org/zh-cn/3/library/json.html#module-json"><code>json</code></a> 可以接受带有层级结构的 Python 数据，并将其转换为字符串表示形式；这个过程称为 <em>serializing</em>。 根据字符串表示形式重建数据则称为 <em>deserializing</em>。 在序列化和反序列化之间，用于代表对象的字符串可以存储在文件或数据库中，或者通过网络连接发送到远端主机。</p>
<p>JSON 格式通常用于现代应用程序的数据交换。程序员早已对它耳熟能详，可谓是交互操作的不二之选。</p>
<p>只需一行简单的代码即可查看某个对象的 JSON 字符串表现形式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> json</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = [<span class="number">1</span>, <span class="string">&#x27;simple&#x27;</span>, <span class="string">&#x27;list&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>json.dumps(x)</span><br><span class="line"><span class="string">&#x27;[1, &quot;simple&quot;, &quot;list&quot;]&#x27;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/json.html#json.dumps"><code>dumps()</code></a> 函数还有一个变体， <a href="https://docs.python.org/zh-cn/3/library/json.html#json.dump"><code>dump()</code></a> ，它只将对象序列化为 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-text-file">text file</a> 。因此，如果 <code>f</code> 是 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-text-file">text file</a> 对象，可以这样做：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">json.dump(x, f)</span><br></pre></td></tr></table></figure>
<p>要再次解码对象，如果 <code>f</code> 是已打开、供读取的 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-binary-file">binary file</a> 或 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-text-file">text file</a> 对象：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = json.load(f)</span><br></pre></td></tr></table></figure>
<p>JSON文件必须以UTF-8编码。当打开JSON文件作为一个 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-text-file">text file</a> 用于读写时，使用 <code>encoding=&quot;utf-8&quot;</code> 。</p>
<p>这种简单的序列化技术可以处理列表和字典，但在 JSON 中序列化任意类的实例，则需要付出额外努力。<a href="https://docs.python.org/zh-cn/3/library/json.html#module-json"><code>json</code></a> 模块的参考包含对此的解释。</p>
<p>参见</p>
<p><a href="https://docs.python.org/zh-cn/3/library/pickle.html#module-pickle"><code>pickle</code></a> - 封存模块</p>
<p>与 <a href="https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#tut-json">JSON</a> 不同，<em>pickle</em> 是一种允许对复杂 Python 对象进行序列化的协议。因此，它为 Python 所特有，不能用于与其他语言编写的应用程序通信。默认情况下它也是不安全的：如果解序化的数据是由手段高明的攻击者精心设计的，这种不受信任来源的 pickle 数据可以执行任意代码。</p>
<h1>8. 错误和异常</h1>
<p>至此，本教程还未深入介绍错误信息，但如果您尝试过本教程前文中的例子，应该已经看到过一些错误信息。错误可（至少）被分为两种：<em>语法错误</em> 和 <em>异常</em>。</p>
<h2 id="8-1-语法错误">8.1. 语法错误</h2>
<p>语法错误又称解析错误，是学习 Python 时最常见的错误：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> <span class="literal">True</span> <span class="built_in">print</span>(<span class="string">&#x27;Hello world&#x27;</span>)</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span> <span class="built_in">print</span>(<span class="string">&#x27;Hello world&#x27;</span>)</span><br><span class="line">                   ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure>
<p>解析器会复现出现句法错误的代码行，并用小“箭头”指向行里检测到的第一个错误。错误是由箭头 <em>上方</em> 的 token 触发的（至少是在这里检测出的）：本例中，在 <a href="https://docs.python.org/zh-cn/3/library/functions.html#print"><code>print()</code></a> 函数中检测到错误，因为，在它前面缺少冒号（<code>':'</code>） 。错误信息还输出文件名与行号，在使用脚本文件时，就可以知道去哪里查错。</p>
<h2 id="8-2-异常">8.2. 异常</h2>
<p>即使语句或表达式使用了正确的语法，执行时仍可能触发错误。执行时检测到的错误称为 <em>异常</em>，异常不一定导致严重的后果：很快我们就能学会如何处理 Python 的异常。大多数异常不会被程序处理，而是显示下列错误信息：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">10</span> * (<span class="number">1</span>/<span class="number">0</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ZeroDivisionError: division by zero</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4</span> + spam*<span class="number">3</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;spam&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;2&#x27;</span> + <span class="number">2</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: can only concatenate <span class="built_in">str</span> (<span class="keyword">not</span> <span class="string">&quot;int&quot;</span>) to <span class="built_in">str</span></span><br></pre></td></tr></table></figure>
<p>错误信息的最后一行说明程序遇到了什么类型的错误。异常有不同的类型，而类型名称会作为错误信息的一部分中打印出来：上述示例中的异常类型依次是：<a href="https://docs.python.org/zh-cn/3/library/exceptions.html#ZeroDivisionError"><code>ZeroDivisionError</code></a>， <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#NameError"><code>NameError</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#TypeError"><code>TypeError</code></a>。作为异常类型打印的字符串是发生的内置异常的名称。对于所有内置异常都是如此，但对于用户定义的异常则不一定如此（虽然这种规范很有用）。标准的异常类型是内置的标识符（不是保留关键字）。</p>
<p>此行其余部分根据异常类型，结合出错原因，说明错误细节。</p>
<p>错误信息开头用堆栈回溯形式展示发生异常的语境。一般会列出源代码行的堆栈回溯；但不会显示从标准输入读取的行。</p>
<p><a href="https://docs.python.org/zh-cn/3/library/exceptions.html#bltin-exceptions">内置异常</a> 列出了内置异常及其含义。</p>
<h2 id="8-3-异常的处理">8.3. 异常的处理</h2>
<p>可以编写程序处理选定的异常。下例会要求用户一直输入内容，直到输入有效的整数，但允许用户中断程序（使用 Control-C 或操作系统支持的其他操作）；注意，用户中断程序会触发 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#KeyboardInterrupt"><code>KeyboardInterrupt</code></a> 异常。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;Please enter a number: &quot;</span>))</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">break</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">except</span> ValueError:</span><br><span class="line"><span class="meta">... </span>        <span class="built_in">print</span>(<span class="string">&quot;Oops!  That was no valid number.  Try again...&quot;</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 语句的工作原理如下：</p>
<ul>
<li>首先，执行 <em>try 子句</em> （<a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 和 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except"><code>except</code></a> 关键字之间的（多行）语句）。</li>
<li>如果没有触发异常，则跳过 <em>except 子句</em>，<a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 语句执行完毕。</li>
<li>如果在执行 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 子句时发生了异常，则跳过该子句中剩下的部分。 如果异常的类型与 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except"><code>except</code></a> 关键字后指定的异常相匹配，则会执行 <em>except 子句</em>，然后跳到 try/except 代码块之后继续执行。</li>
<li>如果发生的异常与 <em>except 子句</em> 中指定的异常不匹配，则它会被传递到外层的 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 语句中；如果没有找到处理句柄，则它是一个 <em>未处理异常</em> 且执行将停止并输出一条错误消息。</li>
</ul>
<p><a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 语句可以有多个 <em>except 子句</em> 来为不同的异常指定处理程序。 但最多只有一个处理程序会被执行。 处理程序只处理对应的 <em>try 子句</em> 中发生的异常，而不处理同一 <code>try</code> 语句内其他处理程序中的异常。 <em>except 子句</em> 可以用带圆括号的元组来指定多个异常，例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">... </span><span class="keyword">except</span> (RuntimeError, TypeError, NameError):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p>如果发生的异常与 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except"><code>except</code></a> 子句中的类是同一个类或是它的基类时，则该类与该异常相兼容（反之则不成立 — 列出派生类的 <em>except 子句</em> 与基类不兼容）。 例如，下面的代码将依次打印 B, C, D:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">Exception</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(<span class="title class_ inherited__">B</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">D</span>(<span class="title class_ inherited__">C</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cls <span class="keyword">in</span> [B, C, D]:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">raise</span> cls()</span><br><span class="line">    <span class="keyword">except</span> D:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;D&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> C:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;C&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> B:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;B&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>请注意如果颠倒 <em>except 子句</em> 的顺序（把 <code>except B</code> 放在最前），则会输出 B, B, B — 即触发了第一个匹配的 <em>except 子句</em>。</p>
<p>发生异常时，它可能具有关联值，即异常 <em>参数</em> 。是否需要参数，以及参数的类型取决于异常的类型。</p>
<p><em>except 子句</em> 可能会在异常名称后面指定一个变量。 这个变量将被绑定到异常实例，该实例通常会有一个存储参数的 <code>args</code> 属性。 为了方便起见，内置异常类型定义了 <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__str__"><code>__str__()</code></a> 来打印所有参数而不必显式地访问 <code>.args</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> Exception(<span class="string">&#x27;spam&#x27;</span>, <span class="string">&#x27;eggs&#x27;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span> Exception <span class="keyword">as</span> inst:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="built_in">type</span>(inst))    <span class="comment"># the exception type</span></span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(inst.args)     <span class="comment"># arguments stored in .args</span></span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(inst)          <span class="comment"># __str__ allows args to be printed directly,</span></span><br><span class="line"><span class="meta">... </span>                         <span class="comment"># but may be overridden in exception subclasses</span></span><br><span class="line"><span class="meta">... </span>    x, y = inst.args     <span class="comment"># unpack args</span></span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;x =&#x27;</span>, x)</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;y =&#x27;</span>, y)</span><br><span class="line">...</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;Exception&#x27;</span>&gt;</span><br><span class="line">(<span class="string">&#x27;spam&#x27;</span>, <span class="string">&#x27;eggs&#x27;</span>)</span><br><span class="line">(<span class="string">&#x27;spam&#x27;</span>, <span class="string">&#x27;eggs&#x27;</span>)</span><br><span class="line">x = spam</span><br><span class="line">y = eggs</span><br></pre></td></tr></table></figure>
<p>未处理异常的 <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__str__"><code>__str__()</code></a> 输出会被打印为该异常消息的最后部分 (‘detail’)。</p>
<p><a href="https://docs.python.org/zh-cn/3/library/exceptions.html#BaseException"><code>BaseException</code></a> 是所有异常的共同基类。它的一个子类， <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#Exception"><code>Exception</code></a> ，是所有非致命异常的基类。不是 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#Exception"><code>Exception</code></a> 的子类的异常通常不被处理，因为它们被用来指示程序应该终止。它们包括由 <a href="https://docs.python.org/zh-cn/3/library/sys.html#sys.exit"><code>sys.exit()</code></a> 引发的 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#SystemExit"><code>SystemExit</code></a> ，以及当用户希望中断程序时引发的 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#KeyboardInterrupt"><code>KeyboardInterrupt</code></a> 。</p>
<p><a href="https://docs.python.org/zh-cn/3/library/exceptions.html#Exception"><code>Exception</code></a> 可以被用作通配符，捕获（几乎）一切。然而，好的做法是，尽可能具体地说明我们打算处理的异常类型，并允许任何意外的异常传播下去。</p>
<p>处理 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#Exception"><code>Exception</code></a> 最常见的模式是打印或记录异常，然后重新提出（允许调用者也处理异常）:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;myfile.txt&#x27;</span>)</span><br><span class="line">    s = f.readline()</span><br><span class="line">    i = <span class="built_in">int</span>(s.strip())</span><br><span class="line"><span class="keyword">except</span> OSError <span class="keyword">as</span> err:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;OS error:&quot;</span>, err)</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Could not convert data to an integer.&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Unexpected <span class="subst">&#123;err=&#125;</span>, <span class="subst">&#123;<span class="built_in">type</span>(err)=&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">raise</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> … <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except"><code>except</code></a> 语句具有可选的 <em>else 子句</em>，该子句如果存在，它必须放在所有 <em>except 子句</em> 之后。 它适用于 <em>try 子句</em> 没有引发异常但又必须要执行的代码。 例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> arg <span class="keyword">in</span> sys.argv[<span class="number">1</span>:]:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        f = <span class="built_in">open</span>(arg, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> OSError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;cannot open&#x27;</span>, arg)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(arg, <span class="string">&#x27;has&#x27;</span>, <span class="built_in">len</span>(f.readlines()), <span class="string">&#x27;lines&#x27;</span>)</span><br><span class="line">        f.close()</span><br></pre></td></tr></table></figure>
<p>使用 <code>else</code> 子句比向 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 子句添加额外的代码要好，可以避免意外捕获非 <code>try</code> … <code>except</code> 语句保护的代码触发的异常。</p>
<p>异常处理程序不仅会处理在 <em>try 子句</em> 中立刻发生的异常，还会处理在 <em>try 子句</em> 中调用（包括间接调用）的函数。 例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">this_fails</span>():</span><br><span class="line"><span class="meta">... </span>    x = <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    this_fails()</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> err:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;Handling run-time error:&#x27;</span>, err)</span><br><span class="line">...</span><br><span class="line">Handling run-time error: division by zero</span><br></pre></td></tr></table></figure>
<h2 id="8-4-触发异常">8.4. 触发异常</h2>
<p><a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#raise"><code>raise</code></a> 语句支持强制触发指定的异常。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">raise</span> NameError(<span class="string">&#x27;HiThere&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: HiThere</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#raise"><code>raise</code></a> 唯一的参数就是要触发的异常。这个参数必须是异常实例或异常类（派生自 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#BaseException"><code>BaseException</code></a> 类，例如 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#Exception"><code>Exception</code></a> 或其子类）。如果传递的是异常类，将通过调用没有参数的构造函数来隐式实例化：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">raise</span> ValueError  <span class="comment"># shorthand for &#x27;raise ValueError()&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如果只想判断是否触发了异常，但并不打算处理该异常，则可以使用更简单的 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#raise"><code>raise</code></a> 语句重新触发异常：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> NameError(<span class="string">&#x27;HiThere&#x27;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span> NameError:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;An exception flew by!&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span></span><br><span class="line">...</span><br><span class="line">An exception flew by!</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: HiThere</span><br></pre></td></tr></table></figure>
<h2 id="8-5-异常链">8.5. 异常链</h2>
<p>如果一个未处理的异常发生在 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except"><code>except</code></a> 部分内，它将会有被处理的异常附加到它上面，并包括在错误信息中:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">open</span>(<span class="string">&quot;database.sqlite&quot;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span> OSError:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;unable to handle error&quot;</span>)</span><br><span class="line">...</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">FileNotFoundError: [Errno <span class="number">2</span>] No such file <span class="keyword">or</span> directory: <span class="string">&#x27;database.sqlite&#x27;</span></span><br><span class="line"></span><br><span class="line">During handling of the above exception, another exception occurred:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">RuntimeError: unable to handle error</span><br></pre></td></tr></table></figure>
<p>为了表明一个异常是另一个异常的直接后果， <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#raise"><code>raise</code></a> 语句允许一个可选的 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#raise"><code>from</code></a> 子句:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># exc must be exception instance or None.</span></span><br><span class="line"><span class="keyword">raise</span> RuntimeError <span class="keyword">from</span> exc</span><br></pre></td></tr></table></figure>
<p>转换异常时，这种方式很有用。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> ConnectionError</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    func()</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span> ConnectionError <span class="keyword">as</span> exc:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> RuntimeError(<span class="string">&#x27;Failed to open database&#x27;</span>) <span class="keyword">from</span> exc</span><br><span class="line">...</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> func</span><br><span class="line">ConnectionError</span><br><span class="line"></span><br><span class="line">The above exception was the direct cause of the following exception:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">RuntimeError: Failed to <span class="built_in">open</span> database</span><br></pre></td></tr></table></figure>
<p>它还允许使用 <code>from None</code> 表达禁用自动异常链:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">open</span>(<span class="string">&#x27;database.sqlite&#x27;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span> OSError:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> RuntimeError <span class="keyword">from</span> <span class="literal">None</span></span><br><span class="line">...</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">4</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">RuntimeError</span><br></pre></td></tr></table></figure>
<p>异常链机制详见 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#bltin-exceptions">内置异常</a>。</p>
<h2 id="8-6-用户自定义异常">8.6. 用户自定义异常</h2>
<p>程序可以通过创建新的异常类命名自己的异常（Python 类的内容详见 <a href="https://docs.python.org/zh-cn/3/tutorial/classes.html#tut-classes">类</a>）。不论是以直接还是间接的方式，异常都应从 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#Exception"><code>Exception</code></a> 类派生。</p>
<p>异常类可以被定义成能做其他类所能做的任何事，但通常应当保持简单，它往往只提供一些属性，允许相应的异常处理程序提取有关错误的信息。</p>
<p>大多数异常命名都以 “Error” 结尾，类似标准异常的命名。</p>
<p>许多标准模块定义了自己的异常，以报告他们定义的函数中可能出现的错误。</p>
<h2 id="8-7-定义清理操作">8.7. 定义清理操作</h2>
<p><a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 语句还有一个可选子句，用于定义在所有情况下都必须要执行的清理操作。例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> KeyboardInterrupt</span><br><span class="line"><span class="meta">... </span><span class="keyword">finally</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;Goodbye, world!&#x27;</span>)</span><br><span class="line">...</span><br><span class="line">Goodbye, world!</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">KeyboardInterrupt</span><br></pre></td></tr></table></figure>
<p>如果存在 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#finally"><code>finally</code></a> 子句，则 <code>finally</code> 子句是 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 语句结束前执行的最后一项任务。不论 <code>try</code> 语句是否触发异常，都会执行 <code>finally</code> 子句。以下内容介绍了几种比较复杂的触发异常情景：</p>
<ul>
<li>如果执行 <code>try</code> 子句期间触发了某个异常，则某个 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except"><code>except</code></a> 子句应处理该异常。如果该异常没有 <code>except</code> 子句处理，在 <code>finally</code> 子句执行后会被重新触发。</li>
<li><code>except</code> 或 <code>else</code> 子句执行期间也会触发异常。 同样，该异常会在 <code>finally</code> 子句执行之后被重新触发。</li>
<li>如果 <code>finally</code> 子句中包含 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#break"><code>break</code></a>、<a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#continue"><code>continue</code></a> 或 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#return"><code>return</code></a> 等语句，异常将不会被重新引发。</li>
<li>如果执行 <code>try</code> 语句时遇到 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#break"><code>break</code></a>,、<a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#continue"><code>continue</code></a> 或 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#return"><code>return</code></a> 语句，则 <code>finally</code> 子句在执行 <code>break</code>、<code>continue</code> 或 <code>return</code> 语句之前执行。</li>
<li>如果 <code>finally</code> 子句中包含 <code>return</code> 语句，则返回值来自 <code>finally</code> 子句的某个 <code>return</code> 语句的返回值，而不是来自 <code>try</code> 子句的 <code>return</code> 语句的返回值。</li>
</ul>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">bool_return</span>():</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">finally</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bool_return()</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p>这是一个比较复杂的例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">x, y</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        result = x / y</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line"><span class="meta">... </span>        <span class="built_in">print</span>(<span class="string">&quot;division by zero!&quot;</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="built_in">print</span>(<span class="string">&quot;result is&quot;</span>, result)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">finally</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="built_in">print</span>(<span class="string">&quot;executing finally clause&quot;</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>divide(<span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line">result <span class="keyword">is</span> <span class="number">2.0</span></span><br><span class="line">executing <span class="keyword">finally</span> clause</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>divide(<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line">division by zero!</span><br><span class="line">executing <span class="keyword">finally</span> clause</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>divide(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">executing <span class="keyword">finally</span> clause</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">3</span>, <span class="keyword">in</span> divide</span><br><span class="line">TypeError: unsupported operand <span class="built_in">type</span>(s) <span class="keyword">for</span> /: <span class="string">&#x27;str&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;str&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如上所示，任何情况下都会执行 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#finally"><code>finally</code></a> 子句。<a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except"><code>except</code></a> 子句不处理两个字符串相除触发的 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#TypeError"><code>TypeError</code></a>，因此会在 <code>finally</code> 子句执行后被重新触发。</p>
<p>在实际应用程序中，<a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#finally"><code>finally</code></a> 子句对于释放外部资源（例如文件或者网络连接）非常有用，无论是否成功使用资源。</p>
<h2 id="8-8-预定义的清理操作">8.8. 预定义的清理操作</h2>
<p>某些对象定义了不需要该对象时要执行的标准清理操作。无论使用该对象的操作是否成功，都会执行清理操作。比如，下例要打开一个文件，并输出文件内容：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">open</span>(<span class="string">&quot;myfile.txt&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(line, end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>这个代码的问题在于，执行完代码后，文件在一段不确定的时间内处于打开状态。在简单脚本中这没有问题，但对于较大的应用程序来说可能会出问题。<a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#with"><code>with</code></a> 语句支持以及时、正确的清理的方式使用文件对象：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;myfile.txt&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        <span class="built_in">print</span>(line, end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>语句执行完毕后，即使在处理行时遇到问题，都会关闭文件 <em>f</em>。和文件一样，支持预定义清理操作的对象会在文档中指出这一点。</p>
<h2 id="8-9-引发和处理多个不相关的异常">8.9. 引发和处理多个不相关的异常</h2>
<p>在有些情况下，有必要报告几个已经发生的异常。这通常是在并发框架中当几个任务并行失败时的情况，但也有其他的用例，有时需要是继续执行并收集多个错误而不是引发第一个异常。</p>
<p>内置的 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#ExceptionGroup"><code>ExceptionGroup</code></a> 打包了一个异常实例的列表，这样它们就可以一起被引发。它本身就是一个异常，所以它可以像其他异常一样被捕获。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">f</span>():</span><br><span class="line"><span class="meta">... </span>    excs = [OSError(<span class="string">&#x27;error 1&#x27;</span>), SystemError(<span class="string">&#x27;error 2&#x27;</span>)]</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> ExceptionGroup(<span class="string">&#x27;there were problems&#x27;</span>, excs)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>f()</span><br><span class="line">  + Exception Group Traceback (most recent call last):</span><br><span class="line">  |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">3</span>, <span class="keyword">in</span> f</span><br><span class="line">  | ExceptionGroup: there were problems</span><br><span class="line">  +-+---------------- <span class="number">1</span> ----------------</span><br><span class="line">    | OSError: error <span class="number">1</span></span><br><span class="line">    +---------------- <span class="number">2</span> ----------------</span><br><span class="line">    | SystemError: error <span class="number">2</span></span><br><span class="line">    +------------------------------------</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    f()</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">f&#x27;caught <span class="subst">&#123;<span class="built_in">type</span>(e)&#125;</span>: e&#x27;</span>)</span><br><span class="line">...</span><br><span class="line">caught &lt;<span class="keyword">class</span> <span class="string">&#x27;ExceptionGroup&#x27;</span>&gt;: e</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>通过使用 <code>except*</code> 代替 <code>except</code> ，我们可以有选择地只处理组中符合某种类型的异常。在下面的例子中，显示了一个嵌套的异常组，每个 <code>except*</code> 子句都从组中提取了某种类型的异常，而让所有其他的异常传播到其他子句，并最终被重新引发。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">f</span>():</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> ExceptionGroup(</span><br><span class="line"><span class="meta">... </span>        <span class="string">&quot;group1&quot;</span>,</span><br><span class="line"><span class="meta">... </span>        [</span><br><span class="line"><span class="meta">... </span>            OSError(<span class="number">1</span>),</span><br><span class="line"><span class="meta">... </span>            SystemError(<span class="number">2</span>),</span><br><span class="line"><span class="meta">... </span>            ExceptionGroup(</span><br><span class="line"><span class="meta">... </span>                <span class="string">&quot;group2&quot;</span>,</span><br><span class="line"><span class="meta">... </span>                [</span><br><span class="line"><span class="meta">... </span>                    OSError(<span class="number">3</span>),</span><br><span class="line"><span class="meta">... </span>                    RecursionError(<span class="number">4</span>)</span><br><span class="line"><span class="meta">... </span>                ]</span><br><span class="line"><span class="meta">... </span>            )</span><br><span class="line"><span class="meta">... </span>        ]</span><br><span class="line"><span class="meta">... </span>    )</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    f()</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span>* OSError <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;There were OSErrors&quot;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span>* SystemError <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&quot;There were SystemErrors&quot;</span>)</span><br><span class="line">...</span><br><span class="line">There were OSErrors</span><br><span class="line">There were SystemErrors</span><br><span class="line">  + Exception Group Traceback (most recent call last):</span><br><span class="line">  |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> f</span><br><span class="line">  | ExceptionGroup: group1</span><br><span class="line">  +-+---------------- <span class="number">1</span> ----------------</span><br><span class="line">    | ExceptionGroup: group2</span><br><span class="line">    +-+---------------- <span class="number">1</span> ----------------</span><br><span class="line">      | RecursionError: <span class="number">4</span></span><br><span class="line">      +------------------------------------</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>注意，嵌套在一个异常组中的异常必须是实例，而不是类型。这是因为在实践中，这些异常通常是那些已经被程序提出并捕获的异常，其模式如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>excs = []</span><br><span class="line"><span class="meta">... </span><span class="keyword">for</span> test <span class="keyword">in</span> tests:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        test.run()</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>        excs.append(e)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> excs:</span><br><span class="line"><span class="meta">... </span>   <span class="keyword">raise</span> ExceptionGroup(<span class="string">&quot;Test Failures&quot;</span>, excs)</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="8-10-用注释细化异常情况">8.10. 用注释细化异常情况</h2>
<p>当一个异常被创建以引发时，它通常被初始化为描述所发生错误的信息。在有些情况下，在异常被捕获后添加信息是很有用的。为了这个目的，异常有一个 <code>add_note(note)</code> 方法接受一个字符串，并将其添加到异常的注释列表。标准的回溯在异常之后按照它们被添加的顺序呈现包括所有的注释。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> TypeError(<span class="string">&#x27;bad type&#x27;</span>)</span><br><span class="line"><span class="meta">... </span><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>    e.add_note(<span class="string">&#x27;Add some information&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    e.add_note(<span class="string">&#x27;Add some more information&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span></span><br><span class="line">...</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: bad <span class="built_in">type</span></span><br><span class="line">Add some information</span><br><span class="line">Add some more information</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>例如，当把异常收集到一个异常组时，我们可能想为各个错误添加上下文信息。在下文中，组中的每个异常都有一个说明，指出这个错误是什么时候发生的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">def</span> <span class="title function_">f</span>():</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">raise</span> OSError(<span class="string">&#x27;operation failed&#x27;</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>excs = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        f()</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>        e.add_note(<span class="string">f&#x27;Happened in Iteration <span class="subst">&#123;i+<span class="number">1</span>&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>        excs.append(e)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">raise</span> ExceptionGroup(<span class="string">&#x27;We have some problems&#x27;</span>, excs)</span><br><span class="line">  + Exception Group Traceback (most recent call last):</span><br><span class="line">  |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  | ExceptionGroup: We have some problems (<span class="number">3</span> sub-exceptions)</span><br><span class="line">  +-+---------------- <span class="number">1</span> ----------------</span><br><span class="line">    | Traceback (most recent call last):</span><br><span class="line">    |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">3</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> f</span><br><span class="line">    | OSError: operation failed</span><br><span class="line">    | Happened <span class="keyword">in</span> Iteration <span class="number">1</span></span><br><span class="line">    +---------------- <span class="number">2</span> ----------------</span><br><span class="line">    | Traceback (most recent call last):</span><br><span class="line">    |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">3</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> f</span><br><span class="line">    | OSError: operation failed</span><br><span class="line">    | Happened <span class="keyword">in</span> Iteration <span class="number">2</span></span><br><span class="line">    +---------------- <span class="number">3</span> ----------------</span><br><span class="line">    | Traceback (most recent call last):</span><br><span class="line">    |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">3</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    |   File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">2</span>, <span class="keyword">in</span> f</span><br><span class="line">    | OSError: operation failed</span><br><span class="line">    | Happened <span class="keyword">in</span> Iteration <span class="number">3</span></span><br><span class="line">    +------------------------------------</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<h1>9. 类</h1>
<p>类提供了把数据和功能绑定在一起的方法。创建新类时创建了新的对象 <em>类型</em>，从而能够创建该类型的新 <em>实例</em>。实例具有能维持自身状态的属性，还具有能修改自身状态的方法（由其所属的类来定义）。</p>
<p>和其他编程语言相比，Python 的类只使用了很少的新语法和语义。Python 的类有点类似于 C++ 和 Modula-3 中类的结合体，而且支持面向对象编程（OOP）的所有标准特性：类的继承机制支持多个基类、派生的类能覆盖基类的方法、类的方法能调用基类中的同名方法。对象可包含任意数量和类型的数据。和模块一样，类也支持 Python 动态特性：在运行时创建，创建后还可以修改。</p>
<p>如果用 C++ 术语来描述的话，类成员（包括数据成员）通常为 <em>public</em> （例外的情况见下文 <a href="https://docs.python.org/zh-cn/3/tutorial/classes.html#tut-private">私有变量</a>），所有成员函数都为 <em>virtual</em> 。与 Modula-3 中一样，没有用于从对象的方法中引用本对象成员的简写形式：方法函数在声明时，有一个显式的第一个参数代表本对象，该参数由方法调用隐式提供。与在 Smalltalk 中一样，Python 的类也是对象，这为导入和重命名提供了语义支持。与 C+ 和 Modula-3 不同，Python 的内置类型可以用作基类，供用户扩展。此外，与 C++ 一样，具有特殊语法的内置运算符（算术运算符、下标等）都可以为类实例重新定义由于缺乏关于类的公认术语，本章中偶尔会使用 Smalltalk 和 C++ 的术语。本章还会使用 Modula-3 的术语，Modula-3 的面向对象语义比 C++ 更接近 Python，但估计听说过这门语言的读者很少。</p>
<h2 id="9-1-名称和对象">9.1. 名称和对象</h2>
<p>对象之间相互独立，多个名称（甚至是多个作用域内的多个名称）可以绑定到同一对象。这在其他语言中通常被称为别名。Python 初学者通常不容易理解这个概念，处理数字、字符串、元组等不可变基本类型时，可以不必理会。但是，对于涉及可变对象（如列表、字典，以及大多数其他类型）的 Python 代码的语义，别名可能会产生意料之外的效果。这样做，通常是为了让程序受益，因为别名在某些方面就像指针。例如，传递对象的代价很小，因为实现只传递一个指针；如果函数修改了作为参数传递的对象，调用者就可以看到更改——无需像 Pascal 那样用两个不同的机制来传参。</p>
<h2 id="9-2-Python-作用域和命名空间">9.2. Python 作用域和命名空间</h2>
<p>在介绍类前，首先要介绍 Python 的作用域规则。类定义对命名空间有一些巧妙的技巧，了解作用域和命名空间的工作机制有利于加强对类的理解。并且，即便对于高级 Python 程序员，这方面的知识也很有用。</p>
<p>接下来，我们先了解一些定义。</p>
<p><em>namespace</em> （命名空间）是从名称到对象的映射。现在，大多数命名空间都使用 Python 字典实现，但除非涉及到性能优化，我们一般不会关注这方面的事情，而且将来也可能会改变这种方式。命名空间的例子有：内置名称集合（包括 <a href="https://docs.python.org/zh-cn/3/library/functions.html#abs"><code>abs()</code></a> 函数以及内置异常的名称等）；一个模块的全局名称；一个函数调用中的局部名称。对象的属性集合也是命名空间的一种形式。关于命名空间的一个重要知识点是，不同命名空间中的名称之间绝对没有关系；例如，两个不同的模块都可以定义 <code>maximize</code> 函数，且不会造成混淆。用户使用函数时必须要在函数名前面加上模块名。</p>
<p>点号之后的名称是 <strong>属性</strong>。例如，表达式 <code>z.real</code> 中，<code>real</code> 是对象 <code>z</code> 的属性。严格来说，对模块中名称的引用是属性引用：表达式 <code>modname.funcname</code> 中，<code>modname</code> 是模块对象，<code>funcname</code> 是模块的属性。模块属性和模块中定义的全局名称之间存在直接的映射：它们共享相同的命名空间！</p>
<blockquote>
<p>存在一个例外。 模块对象有一个秘密的只读属性 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#object.__dict__"><code>__dict__</code></a>，它返回用于实现模块命名空间的字典；<a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#object.__dict__"><code>__dict__</code></a> 是属性但不是全局名称。 显然，使用这个将违反命名空间实现的抽象，应当仅被用于事后调试器之类的场合。</p>
</blockquote>
<p>属性可以是只读的或者可写的。 在后一种情况下，可以对属性进行赋值。 模块属性是可写的：你可以写入 <code>modname.the_answer = 42</code> 。 也可以使用 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#del"><code>del</code></a> 语句删除可写属性。 例如，<code>del modname.the_answer</code> 将从名为 <code>modname</code> 对象中移除属性 <code>the_answer</code>。</p>
<p>命名空间是在不同时刻创建的，且拥有不同的生命周期。内置名称的命名空间是在 Python 解释器启动时创建的，永远不会被删除。模块的全局命名空间在读取模块定义时创建；通常，模块的命名空间也会持续到解释器退出。从脚本文件读取或交互式读取的，由解释器顶层调用执行的语句是 <a href="https://docs.python.org/zh-cn/3/library/__main__.html#module-__main__"><code>__main__</code></a> 模块调用的一部分，也拥有自己的全局命名空间。内置名称实际上也在模块里，即 <a href="https://docs.python.org/zh-cn/3/library/builtins.html#module-builtins"><code>builtins</code></a> 。</p>
<p>函数的局部命名空间在函数被调用时被创建，并在函数返回或抛出未在函数内被处理的异常时，被删除。（实际上，用“遗忘”来描述实际发生的情况会更好一些。）当然，每次递归调用都有自己的局部命名空间。</p>
<p>一个命名空间的 <em>作用域</em> 是 Python 代码中的一段文本区域，从这个区域可直接访问该命名空间。“可直接访问”的意思是，该文本区域内的名称在被非限定引用时，查找名称的范围，是包括该命名空间在内的。</p>
<p>作用域虽然是被静态确定的，但会被动态使用。执行期间的任何时刻，都会有 3 或 4 个“命名空间可直接访问”的嵌套作用域：</p>
<ul>
<li>最内层作用域，包含局部名称，并首先在其中进行搜索</li>
<li>那些外层闭包函数的作用域，包含“非局部、非全局”的名称，从最靠内层的那个作用域开始，逐层向外搜索。</li>
<li>倒数第二层作用域，包含当前模块的全局名称</li>
<li>最外层（最后搜索）的作用域，是内置名称的命名空间</li>
</ul>
<p>如果一个名称被声明为全局，则所有引用和赋值都将直接指向“倒数第二层作用域”，即包含模块的全局名称的作用域。 要重新绑定在最内层作用域以外找到的变量，可以使用 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#nonlocal"><code>nonlocal</code></a> 语句；如果未使用 nonlocal 声明，这些变量将为只读（尝试写入这样的变量将在最内层作用域中创建一个 <em>新的</em> 局部变量，而使得同名的外部变量保持不变）。</p>
<p>通常，当前局部作用域将（按字面文本）引用当前函数的局部名称。在函数之外，局部作用域引用与全局作用域一致的命名空间：模块的命名空间。 类定义在局部命名空间内再放置另一个命名空间。</p>
<p>划重点，作用域是按字面文本确定的：模块内定义的函数的全局作用域就是该模块的命名空间，无论该函数从什么地方或以什么别名被调用。另一方面，实际的名称搜索是在运行时动态完成的。但是，Python 正在朝着“编译时静态名称解析”的方向发展，因此不要过于依赖动态名称解析！（局部变量已经是被静态确定了。）</p>
<p>Python 有一个特殊规定。如果不存在生效的 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#global"><code>global</code></a> 或 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#nonlocal"><code>nonlocal</code></a> 语句，则对名称的赋值总是会进入最内层作用域。赋值不会复制数据，只是将名称绑定到对象。删除也是如此：语句 <code>del x</code> 从局部作用域引用的命名空间中移除对 <code>x</code> 的绑定。所有引入新名称的操作都是使用局部作用域：尤其是 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#import"><code>import</code></a> 语句和函数定义会在局部作用域中绑定模块或函数名称。</p>
<p><a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#global"><code>global</code></a> 语句用于表明特定变量在全局作用域里，并应在全局作用域中重新绑定；<a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#nonlocal"><code>nonlocal</code></a> 语句表明特定变量在外层作用域中，并应在外层作用域中重新绑定。</p>
<h3 id="9-2-1-作用域和命名空间示例">9.2.1. 作用域和命名空间示例</h3>
<p>下例演示了如何引用不同作用域和名称空间，以及 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#global"><code>global</code></a> 和 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#nonlocal"><code>nonlocal</code></a> 对变量绑定的影响：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">scope_test</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_local</span>():</span><br><span class="line">        spam = <span class="string">&quot;local spam&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_nonlocal</span>():</span><br><span class="line">        <span class="keyword">nonlocal</span> spam</span><br><span class="line">        spam = <span class="string">&quot;nonlocal spam&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">do_global</span>():</span><br><span class="line">        <span class="keyword">global</span> spam</span><br><span class="line">        spam = <span class="string">&quot;global spam&quot;</span></span><br><span class="line"></span><br><span class="line">    spam = <span class="string">&quot;test spam&quot;</span></span><br><span class="line">    do_local()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;After local assignment:&quot;</span>, spam)</span><br><span class="line">    do_nonlocal()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;After nonlocal assignment:&quot;</span>, spam)</span><br><span class="line">    do_global()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;After global assignment:&quot;</span>, spam)</span><br><span class="line"></span><br><span class="line">scope_test()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;In global scope:&quot;</span>, spam)</span><br></pre></td></tr></table></figure>
<p>示例代码的输出是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">After local assignment: test spam</span><br><span class="line">After <span class="keyword">nonlocal</span> assignment: <span class="keyword">nonlocal</span> spam</span><br><span class="line">After <span class="keyword">global</span> assignment: <span class="keyword">nonlocal</span> spam</span><br><span class="line">In <span class="keyword">global</span> scope: <span class="keyword">global</span> spam</span><br></pre></td></tr></table></figure>
<p>注意，<strong>局部</strong> 赋值（这是默认状态）不会改变 <em>scope_test</em> 对 <em>spam</em> 的绑定。 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#nonlocal"><code>nonlocal</code></a> 赋值会改变 <em>scope_test</em> 对 <em>spam</em> 的绑定，而 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#global"><code>global</code></a> 赋值会改变模块层级的绑定。</p>
<p>而且，<a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#global"><code>global</code></a> 赋值前没有 <em>spam</em> 的绑定。</p>
<h2 id="9-3-初探类">9.3. 初探类</h2>
<p>类引入了一点新语法，三种新的对象类型和一些新语义。</p>
<h3 id="9-3-1-类定义语法">9.3.1. 类定义语法</h3>
<p>最简单的类定义形式如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ClassName</span>:</span><br><span class="line">    &lt;statement-<span class="number">1</span>&gt;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    &lt;statement-N&gt;</span><br></pre></td></tr></table></figure>
<p>与函数定义 (<a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#def"><code>def</code></a> 语句) 一样，类定义必须先执行才能生效。把类定义放在 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#if"><code>if</code></a> 语句的分支里或函数内部试试。</p>
<p>在实践中，类定义内的语句通常都是函数定义，但也可以是其他语句。这部分内容稍后再讨论。类里的函数定义一般是特殊的参数列表，这是由方法调用的约定规范所指明的 — 同样，稍后再解释。</p>
<p>当进入类定义时，将创建一个新的命名空间，并将其用作局部作用域 — 因此，所有对局部变量的赋值都是在这个新命名空间之内。 特别的，函数定义会绑定到这里的新函数名称。</p>
<p>当 (从结尾处) 正常离开类定义时，将创建一个 <em>类对象</em>。 这基本上是一个围绕类定义所创建的命名空间的包装器；我们将在下一节中了解有关类对象的更多信息。 原始的 (在进入类定义之前有效的) 作用域将重新生效，类对象将在这里与类定义头所给出的类名称进行绑定 (在这个示例中为 <code>ClassName</code>)。</p>
<h3 id="9-3-2-Class-对象">9.3.2. Class 对象</h3>
<p>类对象支持两种操作：属性引用和实例化。</p>
<p><em>属性引用</em> 使用 Python 中所有属性引用所使用的标准语法: <code>obj.name</code>。 有效的属性名称是类对象被创建时存在于类命名空间中的所有名称。 因此，如果类定义是这样的:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;A simple example class&quot;&quot;&quot;</span></span><br><span class="line">    i = <span class="number">12345</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>
<p>那么 <code>MyClass.i</code> 和 <code>MyClass.f</code> 就是有效的属性引用，将分别返回一个整数和一个函数对象。 类属性也可以被赋值，因此可以通过赋值来更改 <code>MyClass.i</code> 的值。 <code>__doc__</code> 也是一个有效的属性，将返回所属类的文档字符串: <code>&quot;A simple example class&quot;</code>。</p>
<p>类的 <em>实例化</em> 使用函数表示法。 可以把类对象视为是返回该类的一个新实例的不带参数的函数。 举例来说（假设使用上述的类）:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = MyClass()</span><br></pre></td></tr></table></figure>
<p>创建类的新 <em>实例</em> 并将此对象分配给局部变量 <code>x</code>。</p>
<p>实例化操作 (“调用”类对象) 会创建一个空对象。 许多类都希望创建的对象实例是根据特定初始状态定制的。 因此一个类可能会定义名为 <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__init__"><code>__init__()</code></a> 的特殊方法，就像这样:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">    self.data = []</span><br></pre></td></tr></table></figure>
<p>当一个类定义了 <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__init__"><code>__init__()</code></a> 方法时，类的实例化会自动为新创建的类实例发起调用 <code>__init__()</code>。 因此在这个例子中，可以通过以下语句获得一个已初始化的新实例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = MyClass()</span><br></pre></td></tr></table></figure>
<p>当然，<a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__init__"><code>__init__()</code></a> 方法还有一些参数用于实现更高的灵活性。 在这种情况下，提供给类实例化运算符的参数将被传递给 <code>__init__()</code>。 例如，</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">class</span> <span class="title class_">Complex</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, realpart, imagpart</span>):</span><br><span class="line"><span class="meta">... </span>        self.r = realpart</span><br><span class="line"><span class="meta">... </span>        self.i = imagpart</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = Complex(<span class="number">3.0</span>, -<span class="number">4.5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.r, x.i</span><br><span class="line">(<span class="number">3.0</span>, -<span class="number">4.5</span>)</span><br></pre></td></tr></table></figure>
<h3 id="9-3-3-实例对象">9.3.3. 实例对象</h3>
<p>现在我们能用实例对象做什么？ 实例对象所能理解的唯一操作是属性引用。 有两种有效的属性名称：数据属性和方法。</p>
<p><em>数据属性</em> 对应于 Smalltalk 中的“实例变量”，以及 C++ 中的“数据成员”。 数据属性不需要声明；就像局部变量一样，它们将在首次被赋值时产生。 举例来说，如果 <code>x</code> 是上面创建的 <code>MyClass</code> 的实例，则以下代码将打印数值 <code>16</code>，且不保留任何追踪信息:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x.counter = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> x.counter &lt; <span class="number">10</span>:</span><br><span class="line">    x.counter = x.counter * <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(x.counter)</span><br><span class="line"><span class="keyword">del</span> x.counter</span><br></pre></td></tr></table></figure>
<p>另一类实例属性引用称为 <em>方法</em>。 方法是“从属于”对象的函数。 （在 Python 中，方法这个术语并不是类实例所特有的：其他对象也可以有方法。 例如，列表对象具有 append, insert, remove, sort 等方法。 然而，在以下讨论中，我们使用方法一词将专指类实例对象的方法，除非另外显式地说明。）</p>
<p>实例对象的有效方法名称依赖于其所属的类。 根据定义，一个类中所有是函数对象的属性都是定义了其实例的相应方法。 因此在我们的示例中，<code>x.f</code> 是有效的方法引用，因为 <code>MyClass.f</code> 是一个函数，而 <code>x.i</code> 不是方法，因为 <code>MyClass.i</code> 不是函数。 但是 <code>x.f</code> 与 <code>MyClass.f</code> 并不是一回事 — 它是一个 <em>方法对象</em>，不是函数对象。</p>
<h3 id="9-3-4-方法对象">9.3.4. 方法对象</h3>
<p>通常，方法在绑定后立即被调用:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x.f()</span><br></pre></td></tr></table></figure>
<p>在 <code>MyClass</code> 示例中，这将返回字符串 <code>'hello world'</code>。 但是，方法并不是必须立即调用: <code>x.f</code> 是一个方法对象，它可以被保存起来以后再调用。 例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">xf = x.f</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(xf())</span><br></pre></td></tr></table></figure>
<p>将持续打印 <code>hello world</code>，直到结束。</p>
<p>当一个方法被调用时究竟会发生什么？ 你可能已经注意到尽管 <code>f()</code> 的函数定义指定了一个参数，但上面调用 <code>x.f()</code> 时却没有带参数。 这个参数发生了什么事？ 当一个需要参数的函数在不附带任何参数的情况下被调用时 Python 肯定会引发异常 — 即使参数实际上没有被使用…</p>
<p>实际上，你可能已经猜到了答案：方法的特殊之处就在于实例对象会作为函数的第一个参数被传入。 在我们的示例中，调用 <code>x.f()</code> 其实就相当于 <code>MyClass.f(x)</code>。 总之，调用一个具有 <em>n</em> 个参数的方法就相当于调用再多一个参数的对应函数，这个参数值为方法所属实例对象，位置在其他参数之前。</p>
<p>总而言之，方法的运作方式如下。 当一个实例的非数据属性被引用时，将搜索该实例所属的类。 如果名称表示一个属于函数对象的有效类属性，则指向实例对象和函数对象的引用将被打包为一个方法对象。 当传入一个参数列表调用该方法对象时，将基于实例对象和参数列表构造一个新的参数列表，并传入这个新参数列表调用相应的函数对象。</p>
<h3 id="9-3-5-类和实例变量">9.3.5. 类和实例变量</h3>
<p>一般来说，实例变量用于每个实例的唯一数据，而类变量用于类的所有实例共享的属性和方法:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line"></span><br><span class="line">    kind = <span class="string">&#x27;canine&#x27;</span>         <span class="comment"># class variable shared by all instances</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name    <span class="comment"># instance variable unique to each instance</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = Dog(<span class="string">&#x27;Fido&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e = Dog(<span class="string">&#x27;Buddy&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.kind                  <span class="comment"># shared by all dogs</span></span><br><span class="line"><span class="string">&#x27;canine&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e.kind                  <span class="comment"># shared by all dogs</span></span><br><span class="line"><span class="string">&#x27;canine&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.name                  <span class="comment"># unique to d</span></span><br><span class="line"><span class="string">&#x27;Fido&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e.name                  <span class="comment"># unique to e</span></span><br><span class="line"><span class="string">&#x27;Buddy&#x27;</span></span><br></pre></td></tr></table></figure>
<p>正如 <a href="https://docs.python.org/zh-cn/3/tutorial/classes.html#tut-object">名称和对象</a> 中已讨论过的，共享数据可能在涉及 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-mutable">mutable</a> 对象例如列表和字典的时候导致令人惊讶的结果。 例如以下代码中的 <em>tricks</em> 列表不应该被用作类变量，因为所有的 <em>Dog</em> 实例将只共享一个单独的列表:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line"></span><br><span class="line">    tricks = []             <span class="comment"># mistaken use of a class variable</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_trick</span>(<span class="params">self, trick</span>):</span><br><span class="line">        self.tricks.append(trick)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = Dog(<span class="string">&#x27;Fido&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e = Dog(<span class="string">&#x27;Buddy&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.add_trick(<span class="string">&#x27;roll over&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e.add_trick(<span class="string">&#x27;play dead&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.tricks                <span class="comment"># unexpectedly shared by all dogs</span></span><br><span class="line">[<span class="string">&#x27;roll over&#x27;</span>, <span class="string">&#x27;play dead&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>正确的类设计应该使用实例变量:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.tricks = []    <span class="comment"># creates a new empty list for each dog</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_trick</span>(<span class="params">self, trick</span>):</span><br><span class="line">        self.tricks.append(trick)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = Dog(<span class="string">&#x27;Fido&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e = Dog(<span class="string">&#x27;Buddy&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.add_trick(<span class="string">&#x27;roll over&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e.add_trick(<span class="string">&#x27;play dead&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.tricks</span><br><span class="line">[<span class="string">&#x27;roll over&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>e.tricks</span><br><span class="line">[<span class="string">&#x27;play dead&#x27;</span>]</span><br></pre></td></tr></table></figure>
<h2 id="9-4-补充说明">9.4. 补充说明</h2>
<p>如果同样的属性名称同时出现在实例和类中，则属性查找会优先选择实例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">class</span> <span class="title class_">Warehouse</span>:</span><br><span class="line"><span class="meta">... </span>   purpose = <span class="string">&#x27;storage&#x27;</span></span><br><span class="line"><span class="meta">... </span>   region = <span class="string">&#x27;west&#x27;</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>w1 = Warehouse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(w1.purpose, w1.region)</span><br><span class="line">storage west</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>w2 = Warehouse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>w2.region = <span class="string">&#x27;east&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(w2.purpose, w2.region)</span><br><span class="line">storage east</span><br></pre></td></tr></table></figure>
<p>数据属性可以被方法以及一个对象的普通用户（“客户端”）所引用。 换句话说，类不能用于实现纯抽象数据类型。 实际上，在 Python 中没有任何东西能强制隐藏数据 — 它是完全基于约定的。 （而在另一方面，用 C 语言编写的 Python 实现则可以完全隐藏实现细节，并在必要时控制对象的访问；此特性可以通过用 C 编写 Python 扩展来使用。）</p>
<p>客户端应当谨慎地使用数据属性 — 客户端可能通过直接操作数据属性的方式破坏由方法所维护的固定变量。 请注意客户端可以向一个实例对象添加他们自己的数据属性而不会影响方法的可用性，只要保证避免名称冲突 — 再次提醒，在此使用命名约定可以省去许多令人头痛的麻烦。</p>
<p>在方法内部引用数据属性（或其他方法！）并没有简便方式。 我发现这实际上提升了方法的可读性：当浏览一个方法代码时，不会存在混淆局部变量和实例变量的机会。</p>
<p>方法的第一个参数常常被命名为 <code>self</code>。 这也不过就是一个约定: <code>self</code> 这一名称在 Python 中绝对没有特殊含义。 但是要注意，不遵循此约定会使得你的代码对其他 Python 程序员来说缺乏可读性，而且也可以想像一个 <em>类浏览器</em> 程序的编写可能会依赖于这样的约定。</p>
<p>任何一个作为类属性的函数都为该类的实例定义了一个相应方法。 函数定义的文本并非必须包含于类定义之内：将一个函数对象赋值给一个局部变量也是可以的。 例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Function defined outside the class</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f1</span>(<span class="params">self, x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(x, x+y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>:</span><br><span class="line">    f = f1</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">g</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"></span><br><span class="line">    h = g</span><br></pre></td></tr></table></figure>
<p>现在 <code>f</code>、<code>g</code> 和 <code>h</code> 都 <code>C</code> 类的指向函数对象的属性，因此它们都是 <code>C</code> 实例的方法 — 其中 <code>h</code> 与 <code>g</code> 完全等价。 但请注意这种做法通常只会使程序的阅读者感到迷惑。</p>
<p>方法可以通过使用 <code>self</code> 参数的方法属性调用其他方法:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Bag</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.data = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">self, x</span>):</span><br><span class="line">        self.data.append(x)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">addtwice</span>(<span class="params">self, x</span>):</span><br><span class="line">        self.add(x)</span><br><span class="line">        self.add(x)</span><br></pre></td></tr></table></figure>
<p>方法可以通过与普通函数相同的方式引用全局名称。与方法相关联的全局作用域就是包含该方法的定义语句的模块。（类永远不会被用作全局作用域。）尽管一个人很少会有好的理由在方法中使用全局作用域中的数据，全局作用域依然存在许多合理的使用场景：举个例子，导入到全局作用域的函数和模块可以被方法所使用，定义在全局作用域中的函数和类也一样。通常，包含该方法的类本身就定义在全局作用域中，而在下一节中我们将会发现，为何有些时候方法需要引用其所属类。</p>
<p>每个值都是一个对象，因此具有 <em>类</em> （也称为 <em>类型</em>），并存储为 <code>object.__class__</code> 。</p>
<h2 id="9-5-继承">9.5. 继承</h2>
<p>当然，如果不支持继承，语言特性就不值得称为“类”。派生类定义的语法如下所示:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedClassName</span>(<span class="title class_ inherited__">BaseClassName</span>):</span><br><span class="line">    &lt;statement-<span class="number">1</span>&gt;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    &lt;statement-N&gt;</span><br></pre></td></tr></table></figure>
<p>名称 <code>BaseClassName</code> 必须定义于可从包含所派生的类的定义的作用域访问的命名空间中。 作为基类名称的替代，也允许使用其他任意表达式。 例如，当基类定义在另一个模块中时，这就会很有用处:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedClassName</span>(modname.BaseClassName):</span><br></pre></td></tr></table></figure>
<p>派生类定义的执行过程与基类相同。 当构造类对象时，基类会被记住。 此信息将被用来解析属性引用：如果请求的属性在类中找不到，搜索将转往基类中进行查找。 如果基类本身也派生自其他某个类，则此规则将被递归地应用。</p>
<p>派生类的实例化没有任何特殊之处: <code>DerivedClassName()</code> 会创建该类的一个新实例。 方法引用将按以下方式解析：搜索相应的类属性，如有必要将按基类继承链逐步向下查找，如果产生了一个函数对象则方法引用就生效。</p>
<p>派生类可能会重写其基类的方法。 因为方法在调用同一对象的其他方法时没有特殊权限，所以基类方法在尝试调用调用同一基类中定义的另一方法时，可能实际上调用是该基类的派生类中定义的方法。（对 C++ 程序员的提示：Python 中所有的方法实际上都是 <code>virtual</code> 方法。）</p>
<p>在派生类中的重写方法实际上可能想要扩展而非简单地替换同名的基类方法。 有一种方式可以简单地直接调用基类方法：即调用 <code>BaseClassName.methodname(self, arguments)</code>。 有时这对客户端来说也是有用的。 （请注意仅当此基类可在全局作用域中以 <code>BaseClassName</code> 的名称被访问时方可使用此方式。）</p>
<p>Python有两个内置函数可被用于继承机制：</p>
<ul>
<li>使用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#isinstance"><code>isinstance()</code></a> 来检查一个实例的类型: <code>isinstance(obj, int)</code> 仅会在 <code>obj.__class__</code> 为 <a href="https://docs.python.org/zh-cn/3/library/functions.html#int"><code>int</code></a> 或某个派生自 <a href="https://docs.python.org/zh-cn/3/library/functions.html#int"><code>int</code></a> 的类时为 <code>True</code>。</li>
<li>使用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#issubclass"><code>issubclass()</code></a> 来检查类的继承关系: <code>issubclass(bool, int)</code> 为 <code>True</code>，因为 <a href="https://docs.python.org/zh-cn/3/library/functions.html#bool"><code>bool</code></a> 是 <a href="https://docs.python.org/zh-cn/3/library/functions.html#int"><code>int</code></a> 的子类。 但是，<code>issubclass(float, int)</code> 为 <code>False</code>，因为 <a href="https://docs.python.org/zh-cn/3/library/functions.html#float"><code>float</code></a> 不是 <a href="https://docs.python.org/zh-cn/3/library/functions.html#int"><code>int</code></a> 的子类。</li>
</ul>
<h3 id="9-5-1-多重继承">9.5.1. 多重继承</h3>
<p>Python 也支持一种多重继承。 带有多个基类的类定义语句如下所示:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedClassName</span>(Base1, Base2, Base3):</span><br><span class="line">    &lt;statement-<span class="number">1</span>&gt;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    &lt;statement-N&gt;</span><br></pre></td></tr></table></figure>
<p>对于多数目的来说，在最简单的情况下，你可以认为搜索从父类所继承属性的操作是深度优先、从左到右的，当层次结构存在重叠时不会在同一个类中搜索两次。 因此，如果某个属性在 <code>DerivedClassName</code> 中找不到，就会在 <code>Base1</code> 中搜索它，然后（递归地）在 <code>Base1</code> 的基类中搜索，如果在那里也找不到，就将在 <code>Base2</code> 中搜索，依此类推。</p>
<p>真实情况比这个更复杂一些；方法解析顺序会动态改变以支持对 <a href="https://docs.python.org/zh-cn/3/library/functions.html#super"><code>super()</code></a> 的协同调用。 这种方式在某些其他多重继承型语言中被称为后续方法调用，它比单继承型语言中的 super 调用更强大。</p>
<p>动态改变顺序是有必要的，因为所有多重继承的情况都会显示出一个或更多的菱形关联（即至少有一个父类可通过多条路径被最底层类所访问）。 例如，所有类都是继承自 <a href="https://docs.python.org/zh-cn/3/library/functions.html#object"><code>object</code></a>，因此任何多重继承的情况都提供了一条以上的路径可以通向 <a href="https://docs.python.org/zh-cn/3/library/functions.html#object"><code>object</code></a>。 为了确保基类不会被访问一次以上，动态算法会用一种特殊方式将搜索顺序线性化， 保留每个类所指定的从左至右的顺序，只调用每个父类一次，并且保持单调（即一个类可以被子类化而不影响其父类的优先顺序）。 总而言之，这些特性使得设计具有多重继承的可靠且可扩展的类成为可能。 要了解更多细节，请参阅 <a href="https://www.python.org/download/releases/2.3/mro/%E3%80%82">https://www.python.org/download/releases/2.3/mro/。</a></p>
<h2 id="9-6-私有变量">9.6. 私有变量</h2>
<p>那种仅限从一个对象内部访问的“私有”实例变量在 Python 中并不存在。 但是，大多数 Python 代码都遵循这样一个约定：带有一个下划线的名称 (例如 <code>_spam</code>) 应该被当作是 API 的非公有部分 (无论它是函数、方法或是数据成员)。 这应当被视为一个实现细节，可能不经通知即加以改变。</p>
<p>由于存在对于类私有成员的有效使用场景（例如避免名称与子类所定义的名称相冲突），因此存在对此种机制的有限支持，称为 <em>名称改写</em>。 任何形式为 <code>__spam</code> 的标识符（至少带有两个前缀下划线，至多一个后缀下划线）的文本将被替换为 <code>_classname__spam</code>，其中 <code>classname</code> 为去除了前缀下划线的当前类名称。 这种改写不考虑标识符的句法位置，只要它出现在类定义内部就会进行。</p>
<p>名称改写有助于让子类重写方法而不破坏类内方法调用。例如:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Mapping</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, iterable</span>):</span><br><span class="line">        self.items_list = []</span><br><span class="line">        self.__update(iterable)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, iterable</span>):</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> iterable:</span><br><span class="line">            self.items_list.append(item)</span><br><span class="line"></span><br><span class="line">    __update = update   <span class="comment"># private copy of original update() method</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MappingSubclass</span>(<span class="title class_ inherited__">Mapping</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, keys, values</span>):</span><br><span class="line">        <span class="comment"># provides new signature for update()</span></span><br><span class="line">        <span class="comment"># but does not break __init__()</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">zip</span>(keys, values):</span><br><span class="line">            self.items_list.append(item)</span><br></pre></td></tr></table></figure>
<p>上面的示例即使在 <code>MappingSubclass</code> 引入了一个 <code>__update</code> 标识符的情况下也不会出错，因为它会在 <code>Mapping</code> 类中被替换为 <code>_Mapping__update</code> 而在 <code>MappingSubclass</code> 类中被替换为 <code>_MappingSubclass__update</code>。</p>
<p>请注意，改写规则的设计主要是为了避免意外冲突；访问或修改被视为私有的变量仍然是可能的。这在特殊情况下甚至会很有用，例如在调试器中。</p>
<p>请注意传递给 <code>exec()</code> 或 <code>eval()</code> 的代码不会将发起调用类的类名视作当前类；这类似于 <code>global</code> 语句的效果，因此这种效果仅限于同时经过字节码编译的代码。 同样的限制也适用于 <code>getattr()</code>, <code>setattr()</code> 和 <code>delattr()</code>，以及对于 <code>__dict__</code> 的直接引用。</p>
<h2 id="9-7-杂项说明">9.7. 杂项说明</h2>
<p>有时具有类似于 Pascal “record” 或 C “struct” 的数据类型是很有用的，将一些带名称的数据项捆绑在一起。 实现这一目标的理想方式是使用 <a href="https://docs.python.org/zh-cn/3/library/dataclasses.html#module-dataclasses"><code>dataclasses</code></a>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> dataclasses <span class="keyword">import</span> dataclass</span><br><span class="line"></span><br><span class="line"><span class="meta">@dataclass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span>:</span><br><span class="line">    name: <span class="built_in">str</span></span><br><span class="line">    dept: <span class="built_in">str</span></span><br><span class="line">    salary: <span class="built_in">int</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>john = Employee(<span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;computer lab&#x27;</span>, <span class="number">1000</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>john.dept</span><br><span class="line"><span class="string">&#x27;computer lab&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>john.salary</span><br><span class="line"><span class="number">1000</span></span><br></pre></td></tr></table></figure>
<p>一段期望使用特定抽象数据类型的 Python 代码通常可以通过传入一个模拟了该数据类型的方法的类作为替代。 例如，如果你有一个基于文件对象来格式化某些数据的函数，你可以定义一个带有 <a href="https://docs.python.org/zh-cn/3/library/io.html#io.TextIOBase.read"><code>read()</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/io.html#io.TextIOBase.readline"><code>readline()</code></a> 方法以便从字典串缓冲区获取数据的类，并将其作为参数传入。</p>
<p><a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#instance-methods">实例方法对象</a> 也具有属性: <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#method.__self__"><code>m.__self__</code></a> 就是带有 <code>m()</code> 方法的实例对象，而 <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#method.__func__"><code>m.__func__</code></a> 就是该方法所对应的 <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#user-defined-funcs">函数对象</a>。</p>
<h2 id="9-8-迭代器">9.8. 迭代器</h2>
<p>到目前为止，您可能已经注意到大多数容器对象都可以使用 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#for"><code>for</code></a> 语句:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]:</span><br><span class="line">    <span class="built_in">print</span>(element)</span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>):</span><br><span class="line">    <span class="built_in">print</span>(element)</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> &#123;<span class="string">&#x27;one&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;two&#x27;</span>:<span class="number">2</span>&#125;:</span><br><span class="line">    <span class="built_in">print</span>(key)</span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> <span class="string">&quot;123&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span>(char)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">open</span>(<span class="string">&quot;myfile.txt&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(line, end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>这种访问风格清晰、简洁又方便。 迭代器的使用非常普遍并使得 Python 成为一个统一的整体。 在幕后，<a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#for"><code>for</code></a> 语句会在容器对象上调用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#iter"><code>iter()</code></a>。 该函数返回一个定义了 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#iterator.__next__"><code>__next__()</code></a> 方法的迭代器对象，此方法将逐一访问容器中的元素。 当元素用尽时，<a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#iterator.__next__"><code>__next__()</code></a> 将引发 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#StopIteration"><code>StopIteration</code></a> 异常来通知终止 <code>for</code> 循环。 你可以使用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#next"><code>next()</code></a> 内置函数来调用 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#iterator.__next__"><code>__next__()</code></a> 方法；这个例子显示了它的运作方式:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>it = <span class="built_in">iter</span>(s)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>it</span><br><span class="line">&lt;str_iterator <span class="built_in">object</span> at <span class="number">0x10c90e650</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(it)</span><br><span class="line"><span class="string">&#x27;a&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(it)</span><br><span class="line"><span class="string">&#x27;b&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(it)</span><br><span class="line"><span class="string">&#x27;c&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">next</span>(it)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    <span class="built_in">next</span>(it)</span><br><span class="line">StopIteration</span><br></pre></td></tr></table></figure>
<p>了解了迭代器协议背后的机制后，就可以轻松地为你的类添加迭代器行为了。 定义 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#container.__iter__"><code>__iter__()</code></a> 方法用于返回一个带有 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#iterator.__next__"><code>__next__()</code></a> 方法的对象。 如果类已定义了 <code>__next__()</code>，那么 <code>__iter__()</code> 可以简单地返回 <code>self</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Reverse</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Iterator for looping over a sequence backwards.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, data</span>):</span><br><span class="line">        self.data = data</span><br><span class="line">        self.index = <span class="built_in">len</span>(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__iter__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__next__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.index == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> StopIteration</span><br><span class="line">        self.index = self.index - <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self.data[self.index]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>rev = Reverse(<span class="string">&#x27;spam&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">iter</span>(rev)</span><br><span class="line">&lt;__main__.Reverse <span class="built_in">object</span> at <span class="number">0x00A1DB50</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> char <span class="keyword">in</span> rev:</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(char)</span><br><span class="line">...</span><br><span class="line">m</span><br><span class="line">a</span><br><span class="line">p</span><br><span class="line">s</span><br></pre></td></tr></table></figure>
<h2 id="9-9-生成器">9.9. 生成器</h2>
<p><a href="https://docs.python.org/zh-cn/3/glossary.html#term-generator">生成器</a> 是一个用于创建迭代器的简单而强大的工具。 它们的写法类似于标准的函数，但当它们要返回数据时会使用 <a href="https://docs.python.org/zh-cn/3/reference/simple_stmts.html#yield"><code>yield</code></a> 语句。 每次在生成器上调用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#next"><code>next()</code></a> 时，它会从上次离开的位置恢复执行（它会记住上次执行语句时的所有数据值）。 一个显示如何非常容易地创建生成器的示例如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">reverse</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">yield</span> data[index]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> char <span class="keyword">in</span> reverse(<span class="string">&#x27;golf&#x27;</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(char)</span><br><span class="line">...</span><br><span class="line">f</span><br><span class="line">l</span><br><span class="line">o</span><br><span class="line">g</span><br></pre></td></tr></table></figure>
<p>可以用生成器来完成的任何功能同样可以通用前一节所描述的基于类的迭代器来完成。 但生成器的写法更为紧凑，因为它会自动创建 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#iterator.__iter__"><code>__iter__()</code></a> 和 <a href="https://docs.python.org/zh-cn/3/reference/expressions.html#generator.__next__"><code>__next__()</code></a> 方法。</p>
<p>另一个关键特性在于局部变量和执行状态会在每次调用之间自动保存。 这使得该函数相比使用 <code>self.index</code> 和 <code>self.data</code> 这种实例变量的方式更易编写且更为清晰。</p>
<p>除了会自动创建方法和保存程序状态，当生成器终结时，它们还会自动引发 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#StopIteration"><code>StopIteration</code></a>。 这些特性结合在一起，使得创建迭代器能与编写常规函数一样容易。</p>
<h2 id="9-10-生成器表达式">9.10. 生成器表达式</h2>
<p>某些简单的生成器可以写成简洁的表达式代码，所用语法类似列表推导式，但外层为圆括号而非方括号。 这种表达式被设计用于生成器将立即被外层函数所使用的情况。 生成器表达式相比完整的生成器更紧凑但较不灵活，相比等效的列表推导式则更为节省内存。</p>
<p>示例:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sum</span>(i*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>))                 <span class="comment"># sum of squares</span></span><br><span class="line"><span class="number">285</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>xvec = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>yvec = [<span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sum</span>(x*y <span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">zip</span>(xvec, yvec))         <span class="comment"># dot product</span></span><br><span class="line"><span class="number">260</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unique_words = <span class="built_in">set</span>(word <span class="keyword">for</span> line <span class="keyword">in</span> page  <span class="keyword">for</span> word <span class="keyword">in</span> line.split())</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>valedictorian = <span class="built_in">max</span>((student.gpa, student.name) <span class="keyword">for</span> student <span class="keyword">in</span> graduates)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>data = <span class="string">&#x27;golf&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(data[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)-<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>))</span><br><span class="line">[<span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;g&#x27;</span>]</span><br></pre></td></tr></table></figure>
<h1>10. 标准库简介</h1>
<h2 id="10-1-操作系统接口">10.1. 操作系统接口</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/os.html#module-os"><code>os</code></a> 模块提供了许多与操作系统交互的函数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.getcwd()      <span class="comment"># Return the current working directory</span></span><br><span class="line"><span class="string">&#x27;C:\\Python312&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.chdir(<span class="string">&#x27;/server/accesslogs&#x27;</span>)   <span class="comment"># Change current working directory</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>os.system(<span class="string">&#x27;mkdir today&#x27;</span>)   <span class="comment"># Run the command mkdir in the system shell</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>一定要使用 <code>import os</code> 而不是 <code>from os import *</code> 。这将避免内建的 <a href="https://docs.python.org/zh-cn/3/library/functions.html#open"><code>open()</code></a> 函数被 <a href="https://docs.python.org/zh-cn/3/library/os.html#os.open"><code>os.open()</code></a> 隐式替换掉，因为它们的使用方式大不相同。</p>
<p>内置的 <a href="https://docs.python.org/zh-cn/3/library/functions.html#dir"><code>dir()</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/functions.html#help"><code>help()</code></a> 函数可用作交互式辅助工具，用于处理大型模块，如 <a href="https://docs.python.org/zh-cn/3/library/os.html#module-os"><code>os</code></a>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dir</span>(os)</span><br><span class="line">&lt;returns a <span class="built_in">list</span> of <span class="built_in">all</span> module functions&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">help</span>(os)</span><br><span class="line">&lt;returns an extensive manual page created <span class="keyword">from</span> the module<span class="string">&#x27;s docstrings&gt;</span></span><br></pre></td></tr></table></figure>
<p>对于日常文件和目录管理任务， <a href="https://docs.python.org/zh-cn/3/library/shutil.html#module-shutil"><code>shutil</code></a> 模块提供了更易于使用的更高级别的接口:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> shutil</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>shutil.copyfile(<span class="string">&#x27;data.db&#x27;</span>, <span class="string">&#x27;archive.db&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;archive.db&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>shutil.move(<span class="string">&#x27;/build/executables&#x27;</span>, <span class="string">&#x27;installdir&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;installdir&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="10-2-文件通配符">10.2. 文件通配符</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/glob.html#module-glob"><code>glob</code></a> 模块提供了一个在目录中使用通配符搜索创建文件列表的函数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> glob</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>glob.glob(<span class="string">&#x27;*.py&#x27;</span>)</span><br><span class="line">[<span class="string">&#x27;primes.py&#x27;</span>, <span class="string">&#x27;random.py&#x27;</span>, <span class="string">&#x27;quote.py&#x27;</span>]</span><br></pre></td></tr></table></figure>
<h2 id="10-3-命令行参数">10.3. 命令行参数</h2>
<p>一般的工具脚本常常需要处理命令行参数。 这些参数以列表形式存储在 <a href="https://docs.python.org/zh-cn/3/library/sys.html#module-sys"><code>sys</code></a> 模块的 <em>argv</em> 属性中。 举例来说，让我们查看下面的 <code>demo.py</code> 文件:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># File demo.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="built_in">print</span>(sys.argv)</span><br></pre></td></tr></table></figure>
<p>以下是在命令行中运行 <code>python demo.py one two three</code> 输出的结果:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;demo.py&#x27;</span>, <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/argparse.html#module-argparse"><code>argparse</code></a> 模块提供了一种更复杂的机制来处理命令行参数。 以下脚本可提取一个或多个文件名，并可选择要显示的行数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser(</span><br><span class="line">    prog=<span class="string">&#x27;top&#x27;</span>,</span><br><span class="line">    description=<span class="string">&#x27;Show top lines from each file&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;filenames&#x27;</span>, nargs=<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-l&#x27;</span>, <span class="string">&#x27;--lines&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">10</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"><span class="built_in">print</span>(args)</span><br></pre></td></tr></table></figure>
<p>当在通过 <code>python top.py --lines=5 alpha.txt beta.txt</code> 在命令行运行时，该脚本会将 <code>args.lines</code> 设为 <code>5</code> 并将 <code>args.filenames</code> 设为 <code>['alpha.txt', 'beta.txt']</code>。</p>
<h2 id="10-4-错误输出重定向和程序终止">10.4. 错误输出重定向和程序终止</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/sys.html#module-sys"><code>sys</code></a> 模块还具有 <em>stdin</em> ， <em>stdout</em> 和 <em>stderr</em> 的属性。后者对于发出警告和错误消息非常有用，即使在 <em>stdout</em> 被重定向后也可以看到它们:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.stderr.write(<span class="string">&#x27;Warning, log file not found starting a new one\n&#x27;</span>)</span><br><span class="line">Warning, log file <span class="keyword">not</span> found starting a new one</span><br></pre></td></tr></table></figure>
<p>终止脚本的最直接方法是使用 <code>sys.exit()</code> 。</p>
<h2 id="10-5-字符串模式匹配">10.5. 字符串模式匹配</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/re.html#module-re"><code>re</code></a> 模块为高级字符串处理提供正则表达式工具。对于复杂的匹配和操作，正则表达式提供简洁，优化的解决方案:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.findall(<span class="string">r&#x27;\bf[a-z]*&#x27;</span>, <span class="string">&#x27;which foot or hand fell fastest&#x27;</span>)</span><br><span class="line">[<span class="string">&#x27;foot&#x27;</span>, <span class="string">&#x27;fell&#x27;</span>, <span class="string">&#x27;fastest&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.sub(<span class="string">r&#x27;(\b[a-z]+) \1&#x27;</span>, <span class="string">r&#x27;\1&#x27;</span>, <span class="string">&#x27;cat in the the hat&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;cat in the hat&#x27;</span></span><br></pre></td></tr></table></figure>
<p>当只需要简单的功能时，首选字符串方法因为它们更容易阅读和调试:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;tea for too&#x27;</span>.replace(<span class="string">&#x27;too&#x27;</span>, <span class="string">&#x27;two&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;tea for two&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="10-6-数学">10.6. 数学</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/math.html#module-math"><code>math</code></a> 模块提供对浮点数学的底层C库函数的访问:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.cos(math.pi / <span class="number">4</span>)</span><br><span class="line"><span class="number">0.70710678118654757</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.log(<span class="number">1024</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">10.0</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/random.html#module-random"><code>random</code></a> 模块提供了进行随机选择的工具:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> random</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.choice([<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>])</span><br><span class="line"><span class="string">&#x27;apple&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.sample(<span class="built_in">range</span>(<span class="number">100</span>), <span class="number">10</span>)   <span class="comment"># sampling without replacement</span></span><br><span class="line">[<span class="number">30</span>, <span class="number">83</span>, <span class="number">16</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">81</span>, <span class="number">41</span>, <span class="number">50</span>, <span class="number">18</span>, <span class="number">33</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.random()    <span class="comment"># random float</span></span><br><span class="line"><span class="number">0.17970987693706186</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>random.randrange(<span class="number">6</span>)    <span class="comment"># random integer chosen from range(6)</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/statistics.html#module-statistics"><code>statistics</code></a> 模块计算数值数据的基本统计属性（均值，中位数，方差等）:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> statistics</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>data = [<span class="number">2.75</span>, <span class="number">1.75</span>, <span class="number">1.25</span>, <span class="number">0.25</span>, <span class="number">0.5</span>, <span class="number">1.25</span>, <span class="number">3.5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>statistics.mean(data)</span><br><span class="line"><span class="number">1.6071428571428572</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>statistics.median(data)</span><br><span class="line"><span class="number">1.25</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>statistics.variance(data)</span><br><span class="line"><span class="number">1.3720238095238095</span></span><br></pre></td></tr></table></figure>
<p>SciPy项目 &lt;<a href="https://scipy.org/">https://scipy.org</a>&gt; 有许多其他模块用于数值计算。</p>
<h2 id="10-7-互联网访问">10.7. 互联网访问</h2>
<p>有许多模块可用于访问互联网和处理互联网协议。其中两个最简单的 <a href="https://docs.python.org/zh-cn/3/library/urllib.request.html#module-urllib.request"><code>urllib.request</code></a> 用于从URL检索数据，以及 <a href="https://docs.python.org/zh-cn/3/library/smtplib.html#module-smtplib"><code>smtplib</code></a> 用于发送邮件:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">with</span> urlopen(<span class="string">&#x27;http://worldtimeapi.org/api/timezone/etc/UTC.txt&#x27;</span>) <span class="keyword">as</span> response:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">for</span> line <span class="keyword">in</span> response:</span><br><span class="line"><span class="meta">... </span>        line = line.decode()             <span class="comment"># Convert bytes to a str</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">if</span> line.startswith(<span class="string">&#x27;datetime&#x27;</span>):</span><br><span class="line"><span class="meta">... </span>            <span class="built_in">print</span>(line.rstrip())         <span class="comment"># Remove trailing newline</span></span><br><span class="line">...</span><br><span class="line">datetime: <span class="number">2022</span>-01-01T01:<span class="number">36</span>:<span class="number">47.689215</span>+<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>server = smtplib.SMTP(<span class="string">&#x27;localhost&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>server.sendmail(<span class="string">&#x27;soothsayer@example.org&#x27;</span>, <span class="string">&#x27;jcaesar@example.org&#x27;</span>,</span><br><span class="line"><span class="meta">... </span><span class="string">&quot;&quot;&quot;To: jcaesar@example.org</span></span><br><span class="line"><span class="string"><span class="meta">... </span>From: soothsayer@example.org</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string"><span class="meta">... </span>Beware the Ides of March.</span></span><br><span class="line"><span class="string"><span class="meta">... </span>&quot;&quot;&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>server.quit()</span><br></pre></td></tr></table></figure>
<p>（请注意，第二个示例需要在localhost上运行的邮件服务器。）</p>
<h2 id="10-8-日期和时间">10.8. 日期和时间</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/datetime.html#module-datetime"><code>datetime</code></a> 模块提供了以简单和复杂的方式操作日期和时间的类。虽然支持日期和时间算法，但实现的重点是有效的成员提取以进行输出格式化和操作。该模块还支持可感知时区的对象。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># dates are easily constructed and formatted</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> datetime <span class="keyword">import</span> date</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now = date.today()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now</span><br><span class="line">datetime.date(<span class="number">2003</span>, <span class="number">12</span>, <span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now.strftime(<span class="string">&quot;%m-%d-%y. %d %b %Y is a %A on the %d day of %B.&quot;</span>)</span><br><span class="line"><span class="string">&#x27;12-02-03. 02 Dec 2003 is a Tuesday on the 02 day of December.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># dates support calendar arithmetic</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>birthday = date(<span class="number">1964</span>, <span class="number">7</span>, <span class="number">31</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>age = now - birthday</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>age.days</span><br><span class="line"><span class="number">14368</span></span><br></pre></td></tr></table></figure>
<h2 id="10-9-数据压缩">10.9. 数据压缩</h2>
<p>常见的数据存档和压缩格式由模块直接支持，包括：<a href="https://docs.python.org/zh-cn/3/library/zlib.html#module-zlib"><code>zlib</code></a>, <a href="https://docs.python.org/zh-cn/3/library/gzip.html#module-gzip"><code>gzip</code></a>, <a href="https://docs.python.org/zh-cn/3/library/bz2.html#module-bz2"><code>bz2</code></a>, <a href="https://docs.python.org/zh-cn/3/library/lzma.html#module-lzma"><code>lzma</code></a>, <a href="https://docs.python.org/zh-cn/3/library/zipfile.html#module-zipfile"><code>zipfile</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/tarfile.html#module-tarfile"><code>tarfile</code></a>。:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> zlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">b&#x27;witch which has which witches wrist watch&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(s)</span><br><span class="line"><span class="number">41</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = zlib.compress(s)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(t)</span><br><span class="line"><span class="number">37</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zlib.decompress(t)</span><br><span class="line"><span class="string">b&#x27;witch which has which witches wrist watch&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>zlib.crc32(s)</span><br><span class="line"><span class="number">226805979</span></span><br></pre></td></tr></table></figure>
<h2 id="10-10-性能测量">10.10. 性能测量</h2>
<p>一些Python用户对了解同一问题的不同方法的相对性能产生了浓厚的兴趣。 Python提供了一种可以立即回答这些问题的测量工具。</p>
<p>例如，元组封包和拆包功能相比传统的交换参数可能更具吸引力。<a href="https://docs.python.org/zh-cn/3/library/timeit.html#module-timeit"><code>timeit</code></a> 模块可以快速演示在运行效率方面一定的优势:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> timeit <span class="keyword">import</span> Timer</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Timer(<span class="string">&#x27;t=a; a=b; b=t&#x27;</span>, <span class="string">&#x27;a=1; b=2&#x27;</span>).timeit()</span><br><span class="line"><span class="number">0.57535828626024577</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Timer(<span class="string">&#x27;a,b = b,a&#x27;</span>, <span class="string">&#x27;a=1; b=2&#x27;</span>).timeit()</span><br><span class="line"><span class="number">0.54962537085770791</span></span><br></pre></td></tr></table></figure>
<p>与 <a href="https://docs.python.org/zh-cn/3/library/timeit.html#module-timeit"><code>timeit</code></a> 的精细粒度级别相反， <a href="https://docs.python.org/zh-cn/3/library/profile.html#module-profile"><code>profile</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/profile.html#module-pstats"><code>pstats</code></a> 模块提供了用于在较大的代码块中识别时间关键部分的工具。</p>
<h2 id="10-11-质量控制">10.11. 质量控制</h2>
<p>开发高质量软件的一种方法是在开发过程中为每个函数编写测试，并在开发过程中经常运行这些测试。</p>
<p><a href="https://docs.python.org/zh-cn/3/library/doctest.html#module-doctest"><code>doctest</code></a> 模块提供了一个工具，用于扫描模块并验证程序文档字符串中嵌入的测试。测试构造就像将典型调用及其结果剪切并粘贴到文档字符串一样简单。这通过向用户提供示例来改进文档，并且它允许doctest模块确保代码保持对文档的真实:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">average</span>(<span class="params">values</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Computes the arithmetic mean of a list of numbers.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; print(average([20, 30, 70]))</span></span><br><span class="line"><span class="string">    40.0</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(values) / <span class="built_in">len</span>(values)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> doctest</span><br><span class="line">doctest.testmod()   <span class="comment"># automatically validate the embedded tests</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/unittest.html#module-unittest"><code>unittest</code></a> 模块不像 <a href="https://docs.python.org/zh-cn/3/library/doctest.html#module-doctest"><code>doctest</code></a> 模块那样易于使用，但它允许在一个单独的文件中维护更全面的测试集:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestStatisticalFunctions</span>(unittest.TestCase):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_average</span>(<span class="params">self</span>):</span><br><span class="line">        self.assertEqual(average([<span class="number">20</span>, <span class="number">30</span>, <span class="number">70</span>]), <span class="number">40.0</span>)</span><br><span class="line">        self.assertEqual(<span class="built_in">round</span>(average([<span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>]), <span class="number">1</span>), <span class="number">4.3</span>)</span><br><span class="line">        <span class="keyword">with</span> self.assertRaises(ZeroDivisionError):</span><br><span class="line">            average([])</span><br><span class="line">        <span class="keyword">with</span> self.assertRaises(TypeError):</span><br><span class="line">            average(<span class="number">20</span>, <span class="number">30</span>, <span class="number">70</span>)</span><br><span class="line"></span><br><span class="line">unittest.main()  <span class="comment"># Calling from the command line invokes all tests</span></span><br></pre></td></tr></table></figure>
<h2 id="10-12-自带电池">10.12. 自带电池</h2>
<p>Python有“自带电池”的理念。通过其包的复杂和强大功能可以最好地看到这一点。例如:</p>
<ul>
<li><a href="https://docs.python.org/zh-cn/3/library/xmlrpc.client.html#module-xmlrpc.client"><code>xmlrpc.client</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/xmlrpc.server.html#module-xmlrpc.server"><code>xmlrpc.server</code></a> 模块使得实现远程过程调用变成了小菜一碟。 尽管存在于模块名称中，但用户不需要直接了解或处理 XML。</li>
<li><a href="https://docs.python.org/zh-cn/3/library/email.html#module-email"><code>email</code></a> 包是一个用于管理电子邮件的库，包括MIME和其他符合 <a href="https://datatracker.ietf.org/doc/html/rfc2822.html"><strong>RFC 2822</strong></a> 规范的邮件文档。与 <a href="https://docs.python.org/zh-cn/3/library/smtplib.html#module-smtplib"><code>smtplib</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/poplib.html#module-poplib"><code>poplib</code></a> 不同（它们实际上做的是发送和接收消息），电子邮件包提供完整的工具集，用于构建或解码复杂的消息结构（包括附件）以及实现互联网编码和标头协议。</li>
<li><a href="https://docs.python.org/zh-cn/3/library/json.html#module-json"><code>json</code></a> 包为解析这种流行的数据交换格式提供了强大的支持。 <a href="https://docs.python.org/zh-cn/3/library/csv.html#module-csv"><code>csv</code></a> 模块支持以逗号分隔值格式直接读取和写入文件，这种格式通常为数据库和电子表格所支持。 XML 处理由 <a href="https://docs.python.org/zh-cn/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree"><code>xml.etree.ElementTree</code></a> ， <a href="https://docs.python.org/zh-cn/3/library/xml.dom.html#module-xml.dom"><code>xml.dom</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/xml.sax.html#module-xml.sax"><code>xml.sax</code></a> 包支持。这些模块和软件包共同大大简化了 Python 应用程序和其他工具之间的数据交换。</li>
<li><a href="https://docs.python.org/zh-cn/3/library/sqlite3.html#module-sqlite3"><code>sqlite3</code></a> 模块是 SQLite 数据库库的包装器，提供了一个可以使用稍微非标准的 SQL 语法更新和访问的持久数据库。</li>
<li>国际化由许多模块支持，包括 <a href="https://docs.python.org/zh-cn/3/library/gettext.html#module-gettext"><code>gettext</code></a> ， <a href="https://docs.python.org/zh-cn/3/library/locale.html#module-locale"><code>locale</code></a> ，以及 <a href="https://docs.python.org/zh-cn/3/library/codecs.html#module-codecs"><code>codecs</code></a> 包。</li>
</ul>
<h1>11. 标准库简介 —— 第二部分</h1>
<p>第二部分涵盖了专业编程所需要的更高级的模块。这些模块很少用在小脚本中。</p>
<h2 id="11-1-格式化输出">11.1. 格式化输出</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/reprlib.html#module-reprlib"><code>reprlib</code></a> 模块提供了一个定制化版本的 <a href="https://docs.python.org/zh-cn/3/library/functions.html#repr"><code>repr()</code></a> 函数，用于缩略显示大型或深层嵌套的容器对象:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> reprlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reprlib.<span class="built_in">repr</span>(<span class="built_in">set</span>(<span class="string">&#x27;supercalifragilisticexpialidocious&#x27;</span>))</span><br><span class="line"><span class="string">&quot;&#123;&#x27;a&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;, &#x27;g&#x27;, ...&#125;&quot;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/pprint.html#module-pprint"><code>pprint</code></a> 模块提供了更加复杂的打印控制，其输出的内置对象和用户自定义对象能够被解释器直接读取。当输出结果过长而需要折行时，“美化输出机制”会添加换行符和缩进，以更清楚地展示数据结构:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> pprint</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = [[[[<span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;cyan&#x27;</span>], <span class="string">&#x27;white&#x27;</span>, [<span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;red&#x27;</span>]], [[<span class="string">&#x27;magenta&#x27;</span>,</span><br><span class="line"><span class="meta">... </span>    <span class="string">&#x27;yellow&#x27;</span>], <span class="string">&#x27;blue&#x27;</span>]]]</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pprint.pprint(t, width=<span class="number">30</span>)</span><br><span class="line">[[[[<span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;cyan&#x27;</span>],</span><br><span class="line">   <span class="string">&#x27;white&#x27;</span>,</span><br><span class="line">   [<span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;red&#x27;</span>]],</span><br><span class="line">  [[<span class="string">&#x27;magenta&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>],</span><br><span class="line">   <span class="string">&#x27;blue&#x27;</span>]]]</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/textwrap.html#module-textwrap"><code>textwrap</code></a> 模块能够格式化文本段落，以适应给定的屏幕宽度:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> textwrap</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>doc = <span class="string">&quot;&quot;&quot;The wrap() method is just like fill() except that it returns</span></span><br><span class="line"><span class="string"><span class="meta">... </span>a list of strings instead of one big string with newlines to separate</span></span><br><span class="line"><span class="string"><span class="meta">... </span>the wrapped lines.&quot;&quot;&quot;</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(textwrap.fill(doc, width=<span class="number">40</span>))</span><br><span class="line">The wrap() method <span class="keyword">is</span> just like fill()</span><br><span class="line"><span class="keyword">except</span> that it returns a <span class="built_in">list</span> of strings</span><br><span class="line">instead of one big string <span class="keyword">with</span> newlines</span><br><span class="line">to separate the wrapped lines.</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/locale.html#module-locale"><code>locale</code></a> 模块处理与特定地域文化相关的数据格式。locale 模块的 format 函数包含一个 grouping 属性，可直接将数字格式化为带有组分隔符的样式:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> locale</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>locale.setlocale(locale.LC_ALL, <span class="string">&#x27;English_United States.1252&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;English_United States.1252&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>conv = locale.localeconv()          <span class="comment"># get a mapping of conventions</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">1234567.8</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>locale.format_string(<span class="string">&quot;%d&quot;</span>, x, grouping=<span class="literal">True</span>)</span><br><span class="line"><span class="string">&#x27;1,234,567&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>locale.format_string(<span class="string">&quot;%s%.*f&quot;</span>, (conv[<span class="string">&#x27;currency_symbol&#x27;</span>],</span><br><span class="line"><span class="meta">... </span>                     conv[<span class="string">&#x27;frac_digits&#x27;</span>], x), grouping=<span class="literal">True</span>)</span><br><span class="line"><span class="string">&#x27;$1,234,567.80&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="11-2-模板">11.2. 模板</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/string.html#module-string"><code>string</code></a> 模块包含一个通用的 <a href="https://docs.python.org/zh-cn/3/library/string.html#string.Template"><code>Template</code></a> 类，具有适用于最终用户的简化语法。它允许用户在不更改应用逻辑的情况下定制自己的应用。</p>
<p>上述格式化操作是通过占位符实现的，占位符由 <code>$</code> 加上合法的 Python 标识符（只能包含字母、数字和下划线）构成。一旦使用花括号将占位符括起来，就可以在后面直接跟上更多的字母和数字而无需空格分割。<code>$$</code> 将被转义成单个字符 <code>$</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> string <span class="keyword">import</span> Template</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = Template(<span class="string">&#x27;$&#123;village&#125;folk send $$10 to $cause.&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t.substitute(village=<span class="string">&#x27;Nottingham&#x27;</span>, cause=<span class="string">&#x27;the ditch fund&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;Nottinghamfolk send $10 to the ditch fund.&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如果在字典或关键字参数中未提供某个占位符的值，那么 <a href="https://docs.python.org/zh-cn/3/library/string.html#string.Template.substitute"><code>substitute()</code></a> 方法将抛出 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#KeyError"><code>KeyError</code></a>。对于邮件合并类型的应用，用户提供的数据有可能是不完整的，此时使用 <a href="https://docs.python.org/zh-cn/3/library/string.html#string.Template.safe_substitute"><code>safe_substitute()</code></a> 方法更加合适 —— 如果数据缺失，它会直接将占位符原样保留。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = Template(<span class="string">&#x27;Return the $item to $owner.&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = <span class="built_in">dict</span>(item=<span class="string">&#x27;unladen swallow&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t.substitute(d)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  ...</span><br><span class="line">KeyError: <span class="string">&#x27;owner&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t.safe_substitute(d)</span><br><span class="line"><span class="string">&#x27;Return the unladen swallow to $owner.&#x27;</span></span><br></pre></td></tr></table></figure>
<p>Template 的子类可以自定义分隔符。例如，以下是某个照片浏览器的批量重命名功能，采用了百分号作为日期、照片序号和照片格式的占位符:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> time, os.path</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>photofiles = [<span class="string">&#x27;img_1074.jpg&#x27;</span>, <span class="string">&#x27;img_1076.jpg&#x27;</span>, <span class="string">&#x27;img_1077.jpg&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">class</span> <span class="title class_">BatchRename</span>(<span class="title class_ inherited__">Template</span>):</span><br><span class="line"><span class="meta">... </span>    delimiter = <span class="string">&#x27;%&#x27;</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fmt = <span class="built_in">input</span>(<span class="string">&#x27;Enter rename style (%d-date %n-seqnum %f-format):  &#x27;</span>)</span><br><span class="line">Enter rename style (%d-date %n-seqnum %f-<span class="built_in">format</span>):  Ashley_%n%f</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = BatchRename(fmt)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>date = time.strftime(<span class="string">&#x27;%d%b%y&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i, filename <span class="keyword">in</span> <span class="built_in">enumerate</span>(photofiles):</span><br><span class="line"><span class="meta">... </span>    base, ext = os.path.splitext(filename)</span><br><span class="line"><span class="meta">... </span>    newname = t.substitute(d=date, n=i, f=ext)</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125; --&gt; &#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(filename, newname))</span><br><span class="line"></span><br><span class="line">img_1074.jpg --&gt; Ashley_0.jpg</span><br><span class="line">img_1076.jpg --&gt; Ashley_1.jpg</span><br><span class="line">img_1077.jpg --&gt; Ashley_2.jpg</span><br></pre></td></tr></table></figure>
<p>模板的另一个应用是将程序逻辑与多样的格式化输出细节分离开来。这使得对 XML 文件、纯文本报表和 HTML 网络报表使用自定义模板成为可能。</p>
<h2 id="11-3-使用二进制数据记录格式">11.3. 使用二进制数据记录格式</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/struct.html#module-struct"><code>struct</code></a> 模块提供了 <a href="https://docs.python.org/zh-cn/3/library/struct.html#struct.pack"><code>pack()</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/struct.html#struct.unpack"><code>unpack()</code></a> 函数，用于处理不定长度的二进制记录格式。下面的例子展示了在不使用 <a href="https://docs.python.org/zh-cn/3/library/zipfile.html#module-zipfile"><code>zipfile</code></a> 模块的情况下，如何循环遍历一个 ZIP 文件的所有头信息。Pack 代码 <code>&quot;H&quot;</code> 和 <code>&quot;I&quot;</code> 分别代表两字节和四字节无符号整数。<code>&quot;&lt;&quot;</code> 代表它们是标准尺寸的小端字节序:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;myfile.zip&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line">start = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):                      <span class="comment"># show the first 3 file headers</span></span><br><span class="line">    start += <span class="number">14</span></span><br><span class="line">    fields = struct.unpack(<span class="string">&#x27;&lt;IIIHH&#x27;</span>, data[start:start+<span class="number">16</span>])</span><br><span class="line">    crc32, comp_size, uncomp_size, filenamesize, extra_size = fields</span><br><span class="line"></span><br><span class="line">    start += <span class="number">16</span></span><br><span class="line">    filename = data[start:start+filenamesize]</span><br><span class="line">    start += filenamesize</span><br><span class="line">    extra = data[start:start+extra_size]</span><br><span class="line">    <span class="built_in">print</span>(filename, <span class="built_in">hex</span>(crc32), comp_size, uncomp_size)</span><br><span class="line"></span><br><span class="line">    start += extra_size + comp_size     <span class="comment"># skip to the next header</span></span><br></pre></td></tr></table></figure>
<h2 id="11-4-多线程">11.4. 多线程</h2>
<p>线程是一种对于非顺序依赖的多个任务进行解耦的技术。多线程可以提高应用的响应效率，当接收用户输入的同时，保持其他任务在后台运行。一个有关的应用场景是，将 I/O 和计算运行在两个并行的线程中。</p>
<p>以下代码展示了高阶的 <a href="https://docs.python.org/zh-cn/3/library/threading.html#module-threading"><code>threading</code></a> 模块如何在后台运行任务，且不影响主程序的继续运行:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threading, zipfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AsyncZip</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, infile, outfile</span>):</span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.infile = infile</span><br><span class="line">        self.outfile = outfile</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        f = zipfile.ZipFile(self.outfile, <span class="string">&#x27;w&#x27;</span>, zipfile.ZIP_DEFLATED)</span><br><span class="line">        f.write(self.infile)</span><br><span class="line">        f.close()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Finished background zip of:&#x27;</span>, self.infile)</span><br><span class="line"></span><br><span class="line">background = AsyncZip(<span class="string">&#x27;mydata.txt&#x27;</span>, <span class="string">&#x27;myarchive.zip&#x27;</span>)</span><br><span class="line">background.start()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The main program continues to run in foreground.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">background.join()    <span class="comment"># Wait for the background task to finish</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Main program waited until background was done.&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>多线程应用面临的主要挑战是，相互协调的多个线程之间需要共享数据或其他资源。为此，threading 模块提供了多个同步操作原语，包括线程锁、事件、条件变量和信号量。</p>
<p>尽管这些工具非常强大，但微小的设计错误却可以导致一些难以复现的问题。因此，实现多任务协作的首选方法是将所有对资源的请求集中到一个线程中，然后使用 <a href="https://docs.python.org/zh-cn/3/library/queue.html#module-queue"><code>queue</code></a> 模块向该线程供应来自其他线程的请求。 应用程序使用 <a href="https://docs.python.org/zh-cn/3/library/queue.html#queue.Queue"><code>Queue</code></a> 对象进行线程间通信和协调，更易于设计，更易读，更可靠。</p>
<h2 id="11-5-日志记录">11.5. 日志记录</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/logging.html#module-logging"><code>logging</code></a> 模块提供功能齐全且灵活的日志记录系统。在最简单的情况下，日志消息被发送到文件或 <code>sys.stderr</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.debug(<span class="string">&#x27;Debugging information&#x27;</span>)</span><br><span class="line">logging.info(<span class="string">&#x27;Informational message&#x27;</span>)</span><br><span class="line">logging.warning(<span class="string">&#x27;Warning:config file %s not found&#x27;</span>, <span class="string">&#x27;server.conf&#x27;</span>)</span><br><span class="line">logging.error(<span class="string">&#x27;Error occurred&#x27;</span>)</span><br><span class="line">logging.critical(<span class="string">&#x27;Critical error -- shutting down&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>这会产生以下输出:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">WARNING:root:Warning:config file server.conf <span class="keyword">not</span> found</span><br><span class="line">ERROR:root:Error occurred</span><br><span class="line">CRITICAL:root:Critical error -- shutting down</span><br></pre></td></tr></table></figure>
<p>默认情况下，informational 和 debugging 消息被压制，输出会发送到标准错误流。其他输出选项包括将消息转发到电子邮件，数据报，套接字或 HTTP 服务器。新的过滤器可以根据消息优先级选择不同的路由方式：<a href="https://docs.python.org/zh-cn/3/library/logging.html#logging.DEBUG"><code>DEBUG</code></a>，<a href="https://docs.python.org/zh-cn/3/library/logging.html#logging.INFO"><code>INFO</code></a>，<a href="https://docs.python.org/zh-cn/3/library/logging.html#logging.WARNING"><code>WARNING</code></a>，<a href="https://docs.python.org/zh-cn/3/library/logging.html#logging.ERROR"><code>ERROR</code></a>，和 <a href="https://docs.python.org/zh-cn/3/library/logging.html#logging.CRITICAL"><code>CRITICAL</code></a>。</p>
<p>日志系统可以直接从 Python 配置，也可以从用户配置文件加载，以便自定义日志记录而无需更改应用程序。</p>
<h2 id="11-6-弱引用">11.6. 弱引用</h2>
<p>Python 会自动进行内存管理（对大多数对象进行引用计数并使用 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-garbage-collection">garbage collection</a> 来清除循环引用）。 当某个对象的最后一个引用被移除后不久就会释放其所占用的内存。</p>
<p>此方式对大多数应用来说都适用，但偶尔也必须在对象持续被其他对象所使用时跟踪它们。 不幸的是，跟踪它们将创建一个会令其永久化的引用。 <a href="https://docs.python.org/zh-cn/3/library/weakref.html#module-weakref"><code>weakref</code></a> 模块提供的工具可以不必创建引用就能跟踪对象。 当对象不再需要时，它将自动从一个弱引用表中被移除，并为弱引用对象触发一个回调。 典型应用包括对创建开销较大的对象进行缓存:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> weakref, gc</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">class</span> <span class="title class_">A</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, value</span>):</span><br><span class="line"><span class="meta">... </span>        self.value = value</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> <span class="built_in">str</span>(self.value)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = A(<span class="number">10</span>)                   <span class="comment"># create a reference</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = weakref.WeakValueDictionary()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;primary&#x27;</span>] = a            <span class="comment"># does not create a reference</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;primary&#x27;</span>]                <span class="comment"># fetch the object if it is still alive</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> a                       <span class="comment"># remove the one reference</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>gc.collect()                <span class="comment"># run garbage collection right away</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&#x27;primary&#x27;</span>]                <span class="comment"># entry was automatically removed</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    d[<span class="string">&#x27;primary&#x27;</span>]                <span class="comment"># entry was automatically removed</span></span><br><span class="line">  File <span class="string">&quot;C:/python312/lib/weakref.py&quot;</span>, line <span class="number">46</span>, <span class="keyword">in</span> __getitem__</span><br><span class="line">    o = self.data[key]()</span><br><span class="line">KeyError: <span class="string">&#x27;primary&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="11-7-用于操作列表的工具">11.7. 用于操作列表的工具</h2>
<p>许多对于数据结构的需求可以通过内置列表类型来满足。 但是，有时也会需要具有不同效费比的替代实现。</p>
<p><a href="https://docs.python.org/zh-cn/3/library/array.html#module-array"><code>array</code></a> 模块提供了一种 <a href="https://docs.python.org/zh-cn/3/library/array.html#array.array"><code>array()</code></a> 对象，它类似于列表，但只能存储类型一致的数据且存储密度更高。下面演示了一个用双字节无符号整数数组来储存整数的例子（类型码为 <code>&quot;H&quot;</code>），而通常的用 Python 的 int 对象来储存整数的列表，每个表项通常要使用 16 个字节：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> array <span class="keyword">import</span> array</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = array(<span class="string">&#x27;H&#x27;</span>, [<span class="number">4000</span>, <span class="number">10</span>, <span class="number">700</span>, <span class="number">22222</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sum</span>(a)</span><br><span class="line"><span class="number">26932</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">array(<span class="string">&#x27;H&#x27;</span>, [<span class="number">10</span>, <span class="number">700</span>])</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/collections.html#module-collections"><code>collections</code></a> 模块提供了一种 <a href="https://docs.python.org/zh-cn/3/library/collections.html#collections.deque"><code>deque()</code></a> 对象，它类似于列表，但从左端添加和弹出的速度较快，而在中间查找的速度较慢。 此种对象适用于实现队列和广度优先树搜索:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = deque([<span class="string">&quot;task1&quot;</span>, <span class="string">&quot;task2&quot;</span>, <span class="string">&quot;task3&quot;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.append(<span class="string">&quot;task4&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&quot;Handling&quot;</span>, d.popleft())</span><br><span class="line">Handling task1</span><br><span class="line">unsearched = deque([starting_node])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">breadth_first_search</span>(<span class="params">unsearched</span>):</span><br><span class="line">    node = unsearched.popleft()</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> gen_moves(node):</span><br><span class="line">        <span class="keyword">if</span> is_goal(m):</span><br><span class="line">            <span class="keyword">return</span> m</span><br><span class="line">        unsearched.append(m)</span><br></pre></td></tr></table></figure>
<p>在替代的列表实现以外，标准库也提供了其他工具，例如 <a href="https://docs.python.org/zh-cn/3/library/bisect.html#module-bisect"><code>bisect</code></a> 模块具有用于操作有序列表的函数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> bisect</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>scores = [(<span class="number">100</span>, <span class="string">&#x27;perl&#x27;</span>), (<span class="number">200</span>, <span class="string">&#x27;tcl&#x27;</span>), (<span class="number">400</span>, <span class="string">&#x27;lua&#x27;</span>), (<span class="number">500</span>, <span class="string">&#x27;python&#x27;</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>bisect.insort(scores, (<span class="number">300</span>, <span class="string">&#x27;ruby&#x27;</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>scores</span><br><span class="line">[(<span class="number">100</span>, <span class="string">&#x27;perl&#x27;</span>), (<span class="number">200</span>, <span class="string">&#x27;tcl&#x27;</span>), (<span class="number">300</span>, <span class="string">&#x27;ruby&#x27;</span>), (<span class="number">400</span>, <span class="string">&#x27;lua&#x27;</span>), (<span class="number">500</span>, <span class="string">&#x27;python&#x27;</span>)]</span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/heapq.html#module-heapq"><code>heapq</code></a> 模块提供了基于常规列表来实现堆的函数。 最小值的条目总是保持在位置零。 这对于需要重复访问最小元素而不希望运行完整列表排序的应用来说非常有用:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> heapq <span class="keyword">import</span> heapify, heappop, heappush</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>data = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>heapify(data)                      <span class="comment"># rearrange the list into heap order</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>heappush(data, -<span class="number">5</span>)                 <span class="comment"># add a new entry</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[heappop(data) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]  <span class="comment"># fetch the three smallest entries</span></span><br><span class="line">[-<span class="number">5</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<h2 id="11-8-十进制浮点运算">11.8. 十进制浮点运算</h2>
<p><a href="https://docs.python.org/zh-cn/3/library/decimal.html#module-decimal"><code>decimal</code></a> 模块提供了一种 <a href="https://docs.python.org/zh-cn/3/library/decimal.html#decimal.Decimal"><code>Decimal</code></a> 数据类型用于十进制浮点运算。 相比内置的 <a href="https://docs.python.org/zh-cn/3/library/functions.html#float"><code>float</code></a> 二进制浮点实现，该类特别适用于</p>
<ul>
<li>财务应用和其他需要精确十进制表示的用途，</li>
<li>控制精度，</li>
<li>控制四舍五入以满足法律或监管要求，</li>
<li>跟踪有效小数位，或</li>
<li>用户期望结果与手工完成的计算相匹配的应用程序。</li>
</ul>
<p>例如，使用十进制浮点和二进制浮点数计算70美分手机和5％税的总费用，会产生的不同结果。如果结果四舍五入到最接近的分数差异会更大:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> decimal <span class="keyword">import</span> *</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">round</span>(Decimal(<span class="string">&#x27;0.70&#x27;</span>) * Decimal(<span class="string">&#x27;1.05&#x27;</span>), <span class="number">2</span>)</span><br><span class="line">Decimal(<span class="string">&#x27;0.74&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">round</span>(<span class="number">.70</span> * <span class="number">1.05</span>, <span class="number">2</span>)</span><br><span class="line"><span class="number">0.73</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/decimal.html#decimal.Decimal"><code>Decimal</code></a> 表示的结果会保留尾部的零，并根据具有两个有效位的被乘数自动推出四个有效位。 Decimal 可以模拟手工运算来避免当二进制浮点数无法精确表示十进制数时会导致的问题。</p>
<p>精确表示特性使得 <a href="https://docs.python.org/zh-cn/3/library/decimal.html#decimal.Decimal"><code>Decimal</code></a> 类能够执行对于二进制浮点数来说不适用的模运算和相等性检测:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>Decimal(<span class="string">&#x27;1.00&#x27;</span>) % Decimal(<span class="string">&#x27;.10&#x27;</span>)</span><br><span class="line">Decimal(<span class="string">&#x27;0.00&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1.00</span> % <span class="number">0.10</span></span><br><span class="line"><span class="number">0.09999999999999995</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sum</span>([Decimal(<span class="string">&#x27;0.1&#x27;</span>)]*<span class="number">10</span>) == Decimal(<span class="string">&#x27;1.0&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> == <span class="number">1.0</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/decimal.html#module-decimal"><code>decimal</code></a> 模块提供了运算所需要的足够精度:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>getcontext().prec = <span class="number">36</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Decimal(<span class="number">1</span>) / Decimal(<span class="number">7</span>)</span><br><span class="line">Decimal(<span class="string">&#x27;0.142857142857142857142857142857142857&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h1>12. 虚拟环境和包</h1>
<h2 id="12-1-概述">12.1. 概述</h2>
<p>Python应用程序通常会使用不在标准库内的软件包和模块。应用程序有时需要特定版本的库，因为应用程序可能需要修复特定的错误，或者可以使用库的过时版本的接口编写应用程序。</p>
<p>这意味着一个Python安装可能无法满足每个应用程序的要求。如果应用程序A需要特定模块的1.0版本但应用程序B需要2.0版本，则需求存在冲突，安装版本1.0或2.0将导致某一个应用程序无法运行。</p>
<p>这个问题的解决方案是创建一个 <a href="https://docs.python.org/zh-cn/3/glossary.html#term-virtual-environment">virtual environment</a>，一个目录树，其中安装有特定Python版本，以及许多其他包。</p>
<p>然后，不同的应用将可以使用不同的虚拟环境。 要解决先前需求相冲突的例子，应用程序 A 可以拥有自己的 安装了 1.0 版本的虚拟环境，而应用程序 B 则拥有安装了 2.0 版本的另一个虚拟环境。 如果应用程序 B 要求将某个库升级到 3.0 版本，也不会影响应用程序 A 的环境。</p>
<h2 id="12-2-创建虚拟环境">12.2. 创建虚拟环境</h2>
<p>用于创建和管理虚拟环境的模块称为 <a href="https://docs.python.org/zh-cn/3/library/venv.html#module-venv"><code>venv</code></a>。<a href="https://docs.python.org/zh-cn/3/library/venv.html#module-venv"><code>venv</code></a> 通常会安装你可用的最新版本的 Python。如果您的系统上有多个版本的 Python，您可以通过运行 <code>python3</code> 或您想要的任何版本来选择特定的Python版本。</p>
<p>要创建虚拟环境，请确定要放置它的目录，并将 <a href="https://docs.python.org/zh-cn/3/library/venv.html#module-venv"><code>venv</code></a> 模块作为脚本运行目录路径:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -m venv tutorial-env</span><br></pre></td></tr></table></figure>
<p>这将创建 <code>tutorial-env</code> 目录，如果它不存在的话，并在其中创建包含 Python 解释器副本和各种支持文件的目录。</p>
<p>虚拟环境的常用目录位置是 <code>.venv</code>。 这个名称通常会令该目录在你的终端中保持隐藏，从而避免需要对所在目录进行额外解释的一般名称。 它还能防止与某些工具所支持的 <code>.env</code> 环境变量定义文件发生冲突。</p>
<p>创建虚拟环境后，您可以激活它。</p>
<p>在Windows上，运行:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tutorial-env\Scripts\activate</span><br></pre></td></tr></table></figure>
<p>在Unix或MacOS上，运行:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">source tutorial-env/<span class="built_in">bin</span>/activate</span><br></pre></td></tr></table></figure>
<p>（这个脚本是为bash shell编写的。如果你使用 <strong>csh</strong> 或 <strong>fish</strong> shell，你应该改用 <code>activate.csh</code> 或 <code>activate.fish</code> 脚本。）</p>
<p>激活虚拟环境将改变你所用终端的提示符，以显示你正在使用的虚拟环境，并修改环境以使 <code>python</code> 命令所运行的将是已安装的特定 Python 版本。 例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ source ~/envs/tutorial-env/<span class="built_in">bin</span>/activate</span><br><span class="line">(tutorial-env) $ python</span><br><span class="line">Python <span class="number">3.5</span><span class="number">.1</span> (default, May  <span class="number">6</span> <span class="number">2016</span>, <span class="number">10</span>:<span class="number">59</span>:<span class="number">36</span>)</span><br><span class="line">  ...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path</span><br><span class="line">[<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;/usr/local/lib/python35.zip&#x27;</span>, ...,</span><br><span class="line"><span class="string">&#x27;~/envs/tutorial-env/lib/python3.5/site-packages&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>要撤销激活一个虚拟环境，请输入:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>
<p>到终端。</p>
<h2 id="12-3-使用pip管理包">12.3. 使用pip管理包</h2>
<p>你可以使用一个名为 <strong>pip</strong> 的程序来安装、升级和移除软件包。 默认情况下 <code>pip</code> 将从 <a href="https://pypi.org/">Python Package Index</a> 安装软件包。 你可以在你的 web 浏览器中查看 Python Package Index。</p>
<p><code>pip</code> 有许多子命令: “install”, “uninstall”, “freeze” 等等。 （请在 <a href="https://docs.python.org/zh-cn/3/installing/index.html#installing-index">安装 Python 模块</a> 指南页查看完整的 <code>pip</code> 文档。）</p>
<p>您可以通过指定包的名称来安装最新版本的包：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(tutorial-env) $ python -m pip install novas</span><br><span class="line">Collecting novas</span><br><span class="line">  Downloading novas-<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span>.tar.gz (136kB)</span><br><span class="line">Installing collected packages: novas</span><br><span class="line">  Running setup.py install <span class="keyword">for</span> novas</span><br><span class="line">Successfully installed novas-<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span></span><br></pre></td></tr></table></figure>
<p>您还可以通过提供包名称后跟 <code>==</code> 和版本号来安装特定版本的包：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(tutorial-env) $ python -m pip install requests==<span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">Collecting requests==<span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">  Using cached requests-<span class="number">2.6</span><span class="number">.0</span>-py2.py3-none-<span class="built_in">any</span>.whl</span><br><span class="line">Installing collected packages: requests</span><br><span class="line">Successfully installed requests-<span class="number">2.6</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<p>如果你重新运行这个命令，<code>pip</code> 会注意到已经安装了所请求的版本因而不做任何事。 你可以提供不同的版本号来获取相应版本，或者你可以运行 <code>python -m pip install --upgrade</code> 以将软件包升级到最新版本:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(tutorial-env) $ python -m pip install --upgrade requests</span><br><span class="line">Collecting requests</span><br><span class="line">Installing collected packages: requests</span><br><span class="line">  Found existing installation: requests <span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">    Uninstalling requests-<span class="number">2.6</span><span class="number">.0</span>:</span><br><span class="line">      Successfully uninstalled requests-<span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">Successfully installed requests-<span class="number">2.7</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<p><code>python -m pip uninstall</code> 后跟一个或多个要从虚拟环境中删除的包所对应的名称。</p>
<p><code>python -m pip show</code> 将显示有关某个特定包的信息:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(tutorial-env) $ python -m pip show requests</span><br><span class="line">---</span><br><span class="line">Metadata-Version: <span class="number">2.0</span></span><br><span class="line">Name: requests</span><br><span class="line">Version: <span class="number">2.7</span><span class="number">.0</span></span><br><span class="line">Summary: Python HTTP <span class="keyword">for</span> Humans.</span><br><span class="line">Home-page: http://python-requests.org</span><br><span class="line">Author: Kenneth Reitz</span><br><span class="line">Author-email: me@kennethreitz.com</span><br><span class="line">License: Apache <span class="number">2.0</span></span><br><span class="line">Location: /Users/akuchling/envs/tutorial-env/lib/python3<span class="number">.4</span>/site-packages</span><br><span class="line">Requires:</span><br></pre></td></tr></table></figure>
<p><code>python -m pip list</code> 将显示所有在虚拟环境中安装的包:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(tutorial-env) $ python -m pip <span class="built_in">list</span></span><br><span class="line">novas (<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span>)</span><br><span class="line">numpy (<span class="number">1.9</span><span class="number">.2</span>)</span><br><span class="line">pip (<span class="number">7.0</span><span class="number">.3</span>)</span><br><span class="line">requests (<span class="number">2.7</span><span class="number">.0</span>)</span><br><span class="line">setuptools (<span class="number">16.0</span>)</span><br></pre></td></tr></table></figure>
<p><code>python -m pip freeze</code> 将产生一个类似的已安装包列表，但其输出会使用 <code>python -m pip install</code> 所期望的格式。 一个常见的约定是将此列表放在 <code>requirements.txt</code> 文件中:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(tutorial-env) $ python -m pip freeze &gt; requirements.txt</span><br><span class="line">(tutorial-env) $ cat requirements.txt</span><br><span class="line">novas==<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">numpy==<span class="number">1.9</span><span class="number">.2</span></span><br><span class="line">requests==<span class="number">2.7</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<p>然后可以将 <code>requirements.txt</code> 提交给版本控制并作为应用程序的一部分提供。然后用户可以使用 <code>install -r</code> 安装所有必需的包：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(tutorial-env) $ python -m pip install -r requirements.txt</span><br><span class="line">Collecting novas==<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span> (<span class="keyword">from</span> -r requirements.txt (line <span class="number">1</span>))</span><br><span class="line">  ...</span><br><span class="line">Collecting numpy==<span class="number">1.9</span><span class="number">.2</span> (<span class="keyword">from</span> -r requirements.txt (line <span class="number">2</span>))</span><br><span class="line">  ...</span><br><span class="line">Collecting requests==<span class="number">2.7</span><span class="number">.0</span> (<span class="keyword">from</span> -r requirements.txt (line <span class="number">3</span>))</span><br><span class="line">  ...</span><br><span class="line">Installing collected packages: novas, numpy, requests</span><br><span class="line">  Running setup.py install <span class="keyword">for</span> novas</span><br><span class="line">Successfully installed novas-<span class="number">3.1</span><span class="number">.1</span><span class="number">.3</span> numpy-<span class="number">1.9</span><span class="number">.2</span> requests-<span class="number">2.7</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<p><code>pip</code> 有更多的选项。 有关 <code>pip</code> 的完整文档请查阅 <a href="https://docs.python.org/zh-cn/3/installing/index.html#installing-index">安装 Python 模块</a> 指南。 当你编写了一个软件包并希望将其放在 Python Package Index 中时，请查阅 <a href="https://packaging.python.org/en/latest/tutorials/packaging-projects/">Python packaging user guide</a>。</p>
<h1>13. 接下来？</h1>
<p>阅读本教程可能会增强您对使用Python的兴趣 - 您应该热衷于应用Python来解决您的实际问题。你应该去哪里了解更多？</p>
<p>本教程是Python文档集的一部分。其他文档：</p>
<ul>
<li>
<p><a href="https://docs.python.org/zh-cn/3/library/index.html#library-index">Python 标准库</a>:</p>
<p>你应当浏览一下本手册，其中提供了有关标准库中的类型、函数和模块的完整（但简洁）的参考资料。 标准 Python 分发版包括 <em>许多</em> 附加代码。 这些模块可以完成读取 Unix 邮箱，通过 HTTP 获取文档，生成随机数，解析命令行选项，压缩数据以及许多其他任务。 浏览标准库参考将使你了解有哪些可用的功能。</p>
</li>
<li>
<p><a href="https://docs.python.org/zh-cn/3/installing/index.html#installing-index">安装 Python 模块</a> 解释了怎么安装由其他Python开发者编写的模块。</p>
</li>
<li>
<p><a href="https://docs.python.org/zh-cn/3/reference/index.html#reference-index">Python 语言参考手册</a>: Python的语法和语义的详细解释。尽管阅读完非常繁重，但作为语言本身的完整指南是有用的。</p>
</li>
</ul>
<p>更多Python资源：</p>
<ul>
<li>
<p><a href="https://www.python.org/">https://www.python.org</a>: Python 主网站。 它包含代码、文档和指向全网 Python 相关网页的链接。</p>
</li>
<li>
<p><a href="https://docs.python.org/">https://docs.python.org</a> ：快速访问Python的文档。</p>
</li>
<li>
<p><a href="https://pypi.org/">https://pypi.org</a>: The Python Package Index，以前也被昵称为 Cheese Shop [<a href="https://docs.python.org/zh-cn/3/tutorial/whatnow.html#id2">1]</a>，是可下载用户自制 Python 模块的索引。 当你要开始发布代码时，你可以在此处进行注册以便其他人能找到它。</p>
<blockquote>
<p>“Cheese Shop”是 Monty Python 的一个短剧：一位顾客来到一家奶酪商店，但无论他要哪种奶酪，店员都说没有货。</p>
</blockquote>
</li>
<li>
<p><a href="https://code.activestate.com/recipes/langs/python/">https://code.activestate.com/recipes/langs/python/</a> ：Python Cookbook是一个相当大的代码示例集，更多的模块和有用的脚本。特别值得一看的贡献收集在一本名为Python Cookbook（O’Reilly＆Associates，ISBN 0-596-00797-3）的书中。</p>
</li>
<li>
<p><a href="https://pyvideo.org/">https://pyvideo.org</a> 收集了来自研讨会和用户组会议的 Python 相关视频的链接。</p>
</li>
<li>
<p><a href="https://scipy.org/">https://scipy.org</a> ：Scientific Python 项目包含用于快速矩阵计算和操作的模块，以及用于诸如线性代数，傅里叶变换，非线性求解器，随机数分布，统计分析等的一系列包。</p>
</li>
</ul>
<p>对于与Python相关的问题和问题报告，您可以发布到新闻组 <em>comp.lang.python</em> ，或者将它们发送到邮件列表python-<a href="mailto:list@python.org">list@python.org</a>。新闻组和邮件列表是互通的，因此发布到一个地方将自动转发给另一个。每天有数百个帖子，询问（和回答）问题，建议新功能，以及宣布新模块。邮件列表档案可在 <a href="https://mail.python.org/pipermail/">https://mail.python.org/pipermail/</a> 上找到。</p>
<p>在发问之前，请务必查看以下列表 <a href="https://docs.python.org/zh-cn/3/faq/index.html#faq-index">常见问题</a> （或简写为 FAQ）。常见问题包含了很多一次又一次被提出的问题及其答案，所以可能已经包含了您的问题解决方案。</p>
<h1>14. 交互式编辑和编辑历史</h1>
<p>某些版本的 Python 解释器支持编辑当前输入行和编辑历史记录，类似 Korn shell 和 GNU Bash shell 的功能 。这个功能使用了 <a href="https://tiswww.case.edu/php/chet/readline/rltop.html">GNU Readline</a> 来实现，一个支持多种编辑方式的库。这个库有它自己的文档，在这里我们就不重复说明了。</p>
<h2 id="14-1-Tab-补全和编辑历史">14.1. Tab 补全和编辑历史</h2>
<p>在解释器启动的时候变量和模块名补全功能将 <a href="https://docs.python.org/zh-cn/3/library/site.html#rlcompleter-config">自动启用</a> 以便在按下 Tab 键时发起调用补全函数；它会查找 Python 语句名称、当前局部变量和可用的模块名称。 对于带点号的表达式如 <code>string.a</code>，它会对该表达式最后一个 <code>'.'</code> 之前的部分求值然后根据结果对象的属性给出补全建议。 请注意如果具有 <a href="https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__getattr__"><code>__getattr__()</code></a> 方法的对象是该表达式的一部分这可能会执行应用程序定义的代码。 默认配置还会将你的编辑历史保存到你的用户目录下名为 <code>.python_history</code> 的文件。 该历史在下一次交互式解释器会话期间将继续可用。</p>
<h2 id="14-2-默认交互式解释器的替代品">14.2. 默认交互式解释器的替代品</h2>
<p>Python 解释器与早期版本的相比，向前迈进了一大步；无论怎样，还有些希望的功能：如果能在编辑连续行时建议缩进（解析器知道接下来是否需要缩进符号），那将很棒。补全机制可以使用解释器的符号表。有命令去检查（甚至建议）括号，引号以及其他符号是否匹配。</p>
<p>一个可选的增强型交互式解释器是 <a href="https://ipython.org/">IPython</a>，它已经存在了有一段时间，它具有 tab 补全，探索对象和高级历史记录管理功能。它还可以彻底定制并嵌入到其他应用程序中。另一个相似的增强型交互式环境是 <a href="https://bpython-interpreter.org/">bpython</a>。</p>
<h1>15. 浮点算术：争议和限制</h1>
<p>浮点数在计算机硬件中是以基数为 2 (二进制) 的小数来表示的。 例如，<strong>十进制</strong> 小数 <code>0.625</code> 的值为 6/10 + 2/100 + 5/1000，而同样的 <strong>二进制</strong> 小数 <code>0.101</code> 的值为 1/2 + 0/4 + 1/8。 这两个小数具有相同的值，唯一的区别在于第一个写成了基数为 10 的小数形式，而第二个则写成的基数为 2 的小数形式。</p>
<p>不幸的是，大多数的十进制小数都不能精确地表示为二进制小数。这导致在大多数情况下，你输入的十进制浮点数都只能近似地以二进制浮点数形式储存在计算机中。</p>
<p>用十进制来理解这个问题显得更加容易一些。考虑分数 1/3 。我们可以得到它在十进制下的一个近似值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.3</span><br></pre></td></tr></table></figure>
<p>或者，更近似的，:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.33</span><br></pre></td></tr></table></figure>
<p>或者，更近似的，:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.333</span><br></pre></td></tr></table></figure>
<p>以此类推。结果是无论你写下多少的数字，它都永远不会等于 1/3 ，只是更加更加地接近 1/3 。</p>
<p>同样的道理，无论你使用多少位以 2 为基数的数码，十进制的 0.1 都无法精确地表示为一个以 2 为基数的小数。 在以 2 为基数的情况下， 1/10 是一个无限循环小数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0.0001100110011001100110011001100110011001100110011...</span><br></pre></td></tr></table></figure>
<p>在任何一个位置停下，你都只能得到一个近似值。因此，在今天的大部分架构上，浮点数都只能近似地使用二进制小数表示，对应分数的分子使用每 8 字节的前 53 位表示，分母则表示为 2 的幂次。在 1/10 这个例子中，相应的二进制分数是 <code>3602879701896397 / 2 ** 55</code> ，它很接近 1/10 ，但并不是 1/10 。</p>
<p>由于值的显示方式大多数用户都不会意识到这个差异的存在。 Python 只会打印计算机中存储的二进制值的十进制近似值。 在大部分计算机中，如果 Python 要把 0.1 的二进制值对应的准确的十进制值打印出来，将会显示成这样:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span></span><br><span class="line"><span class="number">0.1000000000000000055511151231257827021181583404541015625</span></span><br></pre></td></tr></table></figure>
<p>这比大多数人认为有用的数位更多，因此 Python 通过改为显示舍入值来保留可管理的数位:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">1</span> / <span class="number">10</span></span><br><span class="line"><span class="number">0.1</span></span><br></pre></td></tr></table></figure>
<p>牢记，即使输出的结果看起来好像就是 1/10 的精确值，实际储存的值只是最接近 1/10 的计算机可表示的二进制分数。</p>
<p>有趣的是，有许多不同的十进制数共享相同的最接近的近似二进制小数。例如， <code>0.1</code> 、 <code>0.10000000000000001</code> 、 <code>0.1000000000000000055511151231257827021181583404541015625</code> 全都近似于 <code>3602879701896397 / 2 ** 55</code> 。由于所有这些十进制值都具有相同的近似值，因此可以显示其中任何一个，同时仍然保留不变的 <code>eval(repr(x)) == x</code> 。</p>
<p>在历史上，Python 提示符和内置的 <a href="https://docs.python.org/zh-cn/3/library/functions.html#repr"><code>repr()</code></a> 函数会选择具有 17 位有效数字的来显示，即 <code>0.10000000000000001</code>。 从 Python 3.1 开始，Python（在大多数系统上）现在能够选择这些表示中最短的并简单地显示 <code>0.1</code> 。</p>
<p>请注意这种情况是二进制浮点数的本质特性：它不是 Python 的错误，也不是你代码中的错误。 你会在所有支持你的硬件中的浮点运算的语言中发现同样的情况（虽然某些语言在默认状态或所有输出模块下都不会 <em>显示</em> 这种差异）。</p>
<p>想要更美观的输出，你可能会希望使用字符串格式化来产生限定长度的有效位数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">format</span>(math.pi, <span class="string">&#x27;.12g&#x27;</span>)  <span class="comment"># give 12 significant digits</span></span><br><span class="line"><span class="string">&#x27;3.14159265359&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">format</span>(math.pi, <span class="string">&#x27;.2f&#x27;</span>)   <span class="comment"># give 2 digits after the point</span></span><br><span class="line"><span class="string">&#x27;3.14&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">repr</span>(math.pi)</span><br><span class="line"><span class="string">&#x27;3.141592653589793&#x27;</span></span><br></pre></td></tr></table></figure>
<p>必须重点了解的是，这在实际上只是一个假象：你只是将真正的机器码值进行了舍入操作再 <em>显示</em> 而已。</p>
<p>一个假象还可能导致另一个假象。 例如，由于这个 0.1 并非真正的 1/10，将三个 0.1 的值相加也无法恰好得到 0.3:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> == <span class="number">0.3</span></span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p>而且，由于这个 0.1 无法精确表示 1/10 而这个 0.3 也无法精确表示 3/10 的值，使用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#round"><code>round()</code></a> 函数进行预先舍入也是没用的:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">round</span>(<span class="number">0.1</span>, <span class="number">1</span>) + <span class="built_in">round</span>(<span class="number">0.1</span>, <span class="number">1</span>) + <span class="built_in">round</span>(<span class="number">0.1</span>, <span class="number">1</span>) == <span class="built_in">round</span>(<span class="number">0.3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p>虽然这些数字无法精确表示其所要代表的实际值，但是可以使用 <a href="https://docs.python.org/zh-cn/3/library/math.html#math.isclose"><code>math.isclose()</code></a> 函数来进行不精确的值比较:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.isclose(<span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span>, <span class="number">0.3</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p>或者，也可以使用 <a href="https://docs.python.org/zh-cn/3/library/functions.html#round"><code>round()</code></a> 函数来大致地比较近似程度：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">round</span>(math.pi, ndigits=<span class="number">2</span>) == <span class="built_in">round</span>(<span class="number">22</span> / <span class="number">7</span>, ndigits=<span class="number">2</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p>二进制浮点运算会有许多这样令人惊讶的情况。 有关 “0.1” 的问题会在下面 “表示性错误” 一节中更精确详细地描述。 请参阅 <a href="https://jvns.ca/blog/2023/01/13/examples-of-floating-point-problems/">Examples of Floating Point Problems</a> 获取针对二进制浮点运算机制及在实践中各种常见问题的概要说明。 还可参阅 <a href="http://www.indowsway.com/floatingpoint.htm">The Perils of Floating Point</a> 获取其他常见意外现象的更完整介绍。</p>
<p>正如那篇文章的结尾所言，“对此问题并无简单的答案。” 但是也不必过于担心浮点数的问题！ Python 浮点运算中的错误是从浮点运算硬件继承而来，而在大多数机器上每次浮点运算得到的 2**53 数码位都会被作为 1 个整体来处理。 这对大多数任务来说都已足够，但你确实需要记住它并非十进制算术，且每次浮点运算都可能会导致新的舍入错误。</p>
<p>虽然病态的情况确实存在，但对于大多数正常的浮点运算使用来说，你只需简单地将最终显示的结果舍入为你期望的十进制数值即可得到你期望的结果。 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str"><code>str()</code></a> 通常已足够，对于更精度的控制可参看 <a href="https://docs.python.org/zh-cn/3/library/string.html#formatstrings">格式字符串语法</a> 中 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#str.format"><code>str.format()</code></a> 方法的格式描述符。</p>
<p>对于需要精确十进制表示的使用场景，请尝试使用 <a href="https://docs.python.org/zh-cn/3/library/decimal.html#module-decimal"><code>decimal</code></a> 模块，该模块实现了适合会计应用和高精度应用的十进制运算。</p>
<p>另一种形式的精确运算由 <a href="https://docs.python.org/zh-cn/3/library/fractions.html#module-fractions"><code>fractions</code></a> 模块提供支持，该模块实现了基于有理数的算术运算（因此可以精确表示像 1/3 这样的数值）。</p>
<p>如果你是浮点运算的重度用户那么你应当了解一下 NumPy 包以及由 SciPy 项目所提供的许多其他数学和统计运算包。 参见 &lt;<a href="https://scipy.org/">https://scipy.org</a>&gt;。</p>
<p>Python 还提供了一些工具可能在你 <em>确实</em> 想要知道一个浮点数的精确值的少数情况下提供帮助。 例如 <a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#float.as_integer_ratio"><code>float.as_integer_ratio()</code></a> 方法会将浮点数值表示为一个分数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = <span class="number">3.14159</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.as_integer_ratio()</span><br><span class="line">(<span class="number">3537115888337719</span>, <span class="number">1125899906842624</span>)</span><br></pre></td></tr></table></figure>
<p>由于这个比值是精确的，它可以被用来无损地重建原始值:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x == <span class="number">3537115888337719</span> / <span class="number">1125899906842624</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/stdtypes.html#float.hex"><code>float.hex()</code></a> 方法会以十六进制（以 16 为基数）来表示浮点数，同样能给出保存在你的计算机中的精确值:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.<span class="built_in">hex</span>()</span><br><span class="line"><span class="string">&#x27;0x1.921f9f01b866ep+1&#x27;</span></span><br></pre></td></tr></table></figure>
<p>这种精确的十六进制表示形式可被用来精确地重建浮点数值:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x == <span class="built_in">float</span>.fromhex(<span class="string">&#x27;0x1.921f9f01b866ep+1&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p>由于这种表示法是精确的，它适用于跨越不同版本（平台无关）的 Python 移植数值，以及与支持相同格式的其他语言（例如 Java 和 C99）交换数据.</p>
<p>另一个有用的工具是 <a href="https://docs.python.org/zh-cn/3/library/functions.html#sum"><code>sum()</code></a> 函数，它能够帮助减少求和过程中的精度损失。 它会在数值被添加到总计值的时候为中间舍入步骤使用扩展的精度。 这可以更好地保持总体精确度，使得错误不会积累到能够影响最终总计值的程度:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> + <span class="number">0.1</span> == <span class="number">1.0</span></span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sum</span>([<span class="number">0.1</span>] * <span class="number">10</span>) == <span class="number">1.0</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/math.html#math.fsum"><code>math.fsum()</code></a> 更进一步地会在数值被添加到总计值的时候跟踪“丢失的数位”以使得结果只执行一次舍入。 此函数要比 <a href="https://docs.python.org/zh-cn/3/library/functions.html#sum"><code>sum()</code></a> 慢但在大量输入几乎相互抵销导致最终总计值接近零的少见场景中将会更为精确:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>arr = [-<span class="number">0.10430216751806065</span>, -<span class="number">266310978.67179024</span>, <span class="number">143401161448607.16</span>,</span><br><span class="line"><span class="meta">... </span>       -<span class="number">143401161400469.7</span>, <span class="number">266262841.31058735</span>, -<span class="number">0.003244936839808227</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">float</span>(<span class="built_in">sum</span>(<span class="built_in">map</span>(Fraction, arr)))   <span class="comment"># Exact summation with single rounding</span></span><br><span class="line"><span class="number">8.042173697819788e-13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.fsum(arr)                   <span class="comment"># Single rounding</span></span><br><span class="line"><span class="number">8.042173697819788e-13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">sum</span>(arr)                         <span class="comment"># Multiple roundings in extended precision</span></span><br><span class="line"><span class="number">8.042178034628478e-13</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>total = <span class="number">0.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> x <span class="keyword">in</span> arr:</span><br><span class="line"><span class="meta">... </span>    total += x                   <span class="comment"># Multiple roundings in standard precision</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>total                            <span class="comment"># Straight addition has no correct digits!</span></span><br><span class="line">-<span class="number">0.0051575902860057365</span></span><br></pre></td></tr></table></figure>
<h2 id="15-1-表示性错误">15.1. 表示性错误</h2>
<p>本小节将详细解释 “0.1” 的例子，并说明你可以怎样亲自对此类情况进行精确分析。 假定前提是已基本熟悉二进制浮点表示法。</p>
<p><em>表示性错误</em> 是指某些（其实是大多数）十进制小数无法以二进制（以 2 为基数的计数制）精确表示这一事实造成的错误。 这就是为什么 Python（或者 Perl、C、C++、Java、Fortran 以及许多其他语言）经常不会显示你所期待的精确十进制数值的主要原因。</p>
<p>为什么会这样？ 1/10 是无法用二进制小数精确表示的。 至少从 2000 年起，几乎所有机器都使用 IEEE 754 二进制浮点运算标准，而几乎所有系统平台都将 Python 浮点数映射为 IEEE 754 binary64 “双精度” 值。 IEEE 754 binary64 值包含 53 位精度，因此在输入时计算机会尽量将 0.1 转换为以 <em>J</em>/2**<em>N</em> 形式所能表示的最接近的小数，其中 <em>J</em> 为恰好包含 53 比特位的整数。 重新将</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span> / <span class="number">10</span> ~= J / (<span class="number">2</span>**N)</span><br></pre></td></tr></table></figure>
<p>写为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">J ~= <span class="number">2</span>**N / <span class="number">10</span></span><br></pre></td></tr></table></figure>
<p>并且由于 <em>J</em> 恰好有 53 位 (即 <code>&gt;= 2**52</code> 但 <code>&lt; 2**53</code>)，<em>N</em> 的最佳值为 56:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span>**<span class="number">52</span> &lt;=  <span class="number">2</span>**<span class="number">56</span> // <span class="number">10</span>  &lt; <span class="number">2</span>**<span class="number">53</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p>也就是说，56 是唯一能使 <em>J</em> 恰好有 53 位的 <em>N</em> 值。 这样 <em>J</em> 可能的最佳就是舍入之后的商:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>q, r = <span class="built_in">divmod</span>(<span class="number">2</span>**<span class="number">56</span>, <span class="number">10</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure>
<p>由于余数超于 10 的一半，所以最佳近似值可通过向上舍入获得:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>q+<span class="number">1</span></span><br><span class="line"><span class="number">7205759403792794</span></span><br></pre></td></tr></table></figure>
<p>因此在 IEEE 754 双精度下可能达到的 1/10 的最佳近似值为:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">7205759403792794</span> / <span class="number">2</span> ** <span class="number">56</span></span><br></pre></td></tr></table></figure>
<p>分子和分母都除以二则结果小数为:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">3602879701896397</span> / <span class="number">2</span> ** <span class="number">55</span></span><br></pre></td></tr></table></figure>
<p>请注意由于我们做了向上舍入，这个结果实际上略大于 1/10；如果我们没有向上舍入，则商将会略小于 1/10。 但无论如何它都不会是 <em>精确的</em> 1/10！</p>
<p>因此计算机永远不会 “看到” 1/10: 它实际看到的就是上面所给出的小数，即它能达到的最佳 IEEE 754 双精度近似值:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">0.1</span> * <span class="number">2</span> ** <span class="number">55</span></span><br><span class="line"><span class="number">3602879701896397.0</span></span><br></pre></td></tr></table></figure>
<p>如果我们将该小数乘以 10**55，我们可以看到该值输出 55 个十进制数位:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3602879701896397</span> * <span class="number">10</span> ** <span class="number">55</span> // <span class="number">2</span> ** <span class="number">55</span></span><br><span class="line"><span class="number">1000000000000000055511151231257827021181583404541015625</span></span><br></pre></td></tr></table></figure>
<p>这意味着存储在计算机中的确切数字等于十进制数值 0.1000000000000000055511151231257827021181583404541015625。 许多语言（包括较旧版本的 Python）都不会显示这个完整的十进制数值，而是将结果舍入到 17 位有效数字:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">format</span>(<span class="number">0.1</span>, <span class="string">&#x27;.17f&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;0.10000000000000001&#x27;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://docs.python.org/zh-cn/3/library/fractions.html#module-fractions"><code>fractions</code></a> 和 <a href="https://docs.python.org/zh-cn/3/library/decimal.html#module-decimal"><code>decimal</code></a> 模块使得这样的计算更为容易:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> fractions <span class="keyword">import</span> Fraction</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Fraction.from_float(<span class="number">0.1</span>)</span><br><span class="line">Fraction(<span class="number">3602879701896397</span>, <span class="number">36028797018963968</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">0.1</span>).as_integer_ratio()</span><br><span class="line">(<span class="number">3602879701896397</span>, <span class="number">36028797018963968</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Decimal.from_float(<span class="number">0.1</span>)</span><br><span class="line">Decimal(<span class="string">&#x27;0.1000000000000000055511151231257827021181583404541015625&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">format</span>(Decimal.from_float(<span class="number">0.1</span>), <span class="string">&#x27;.17&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;0.10000000000000001&#x27;</span></span><br></pre></td></tr></table></figure>
<h1>16. 附录</h1>
<h2 id="16-1-交互模式">16.1. 交互模式</h2>
<h3 id="16-1-1-错误处理">16.1.1. 错误处理</h3>
<p>当发生错误时，解释器会打印错误消息和栈回溯。 在交互模式下，将返回到主提示符；当输入是来自文件的时候，它将在打印栈回溯之后退出并附带一个非零的退出状态码。 （由 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 语句中 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#except"><code>except</code></a> 子句所处理的异常在此上下文中不属于错误。） 有些错误属于无条件致命错误，会导致程序附带非零状态码退出；这适用于内部一致性丧失以及某些内存耗尽的情况等。 所有错误消息都将被写入到标准错误流；来自被执行命令的正常输出测会被写入到标准输出。</p>
<p>将中断字符（通常为 Control-C 或 Delete ）键入主要或辅助提示符会取消输入并返回主提示符。在执行命令时键入中断引发的 <a href="https://docs.python.org/zh-cn/3/library/exceptions.html#KeyboardInterrupt"><code>KeyboardInterrupt</code></a> 异常，可以由 <a href="https://docs.python.org/zh-cn/3/reference/compound_stmts.html#try"><code>try</code></a> 语句处理。</p>
<blockquote>
<p>GNU Readline 包的问题可能会阻止这种情况。</p>
</blockquote>
<h3 id="16-1-2-可执行的Python脚本">16.1.2. 可执行的Python脚本</h3>
<p>在 BSD 等类Unix系统上，Python 脚本可以像 shell 脚本一样直接执行，通过在第一行添加：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3.5</span></span><br></pre></td></tr></table></figure>
<p>（假设解释器位于用户的 <code>PATH</code> ）脚本的开头，并将文件设置为可执行。 <code>#!</code> 必须是文件的前两个字符。在某些平台上，第一行必须以Unix样式的行结尾（<code>'\n'</code>）结束，而不是以Windows（<code>'\r\n'</code>）行结尾。注意，“散列字符”，或者说“磅字符”， <code>'#'</code> ，在Python中代表注释开始。</p>
<p>可以使用 <strong>chmod</strong> 命令为脚本提供可执行模式或权限。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ chmod +x myscript.py</span><br></pre></td></tr></table></figure>
<p>在Windows系统上，没有“可执行模式”的概念。 Python安装程序自动将 <code>.py</code> 文件与 <code>python.exe</code> 相关联，这样双击Python文件就会将其作为脚本运行。扩展也可以是 <code>.pyw</code> ，在这种情况下，会隐藏通常出现的控制台窗口。</p>
<h3 id="16-1-3-交互式启动文件">16.1.3. 交互式启动文件</h3>
<p>当您以交互模式使用 Python 时，您可能会希望在每次启动解释器时，解释器先执行几条您预先编写的命令，然后您再以交互模式继续使用。您可以通过将名为 <a href="https://docs.python.org/zh-cn/3/using/cmdline.html#envvar-PYTHONSTARTUP"><code>PYTHONSTARTUP</code></a> 的环境变量设置为包含启动命令的文件的文件名来实现。这类似于 Unix shell 的 <code>.profile</code> 功能。</p>
<p>Python 只有在交互模式时，才会读取此文件，而非在从脚本读指令或是将 <code>/dev/tty</code> 显式作为被运行的 Python 脚本的文件名时（后者反而表现得像一个交互式会话）。这个文件与交互式指令共享相同的命名空间，所以它定义或导入的对象可以在交互式会话中直接使用。您也可以在该文件中更改提示符 <code>sys.ps1</code> 和 <code>sys.ps2</code>。</p>
<p>如果您想 <em>从当前目录中</em> 读取一个额外的启动文件，您可以在上文所说的全局启动文件中编写像 <code>if os.path.isfile('.pythonrc.py'): exec(open('.pythonrc.py').read())</code> 这样的代码。如果要在脚本中使用启动文件，则必须在脚本中显式执行此操作：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">filename = os.environ.get(<span class="string">&#x27;PYTHONSTARTUP&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> filename <span class="keyword">and</span> os.path.isfile(filename):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename) <span class="keyword">as</span> fobj:</span><br><span class="line">        startup_file = fobj.read()</span><br><span class="line">    <span class="built_in">exec</span>(startup_file)</span><br></pre></td></tr></table></figure>
<h3 id="16-1-4-定制模块">16.1.4. 定制模块</h3>
<p>Python 提供了两个钩子供你进行自定义: sitecustomize 和 usercustomize。 要了解它是如何工作的，首先需要找到用户 site-packages 目录的位置。 启动 Python 并运行以下代码:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> site</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>site.getusersitepackages()</span><br><span class="line"><span class="string">&#x27;/home/user/.local/lib/python3.5/site-packages&#x27;</span></span><br></pre></td></tr></table></figure>
<p>现在，您可以在该目录中创建一个名为 <code>usercustomize.py</code> 的文件，并将所需内容放入其中。它会影响Python的每次启动，除非它以 <a href="https://docs.python.org/zh-cn/3/using/cmdline.html#cmdoption-s"><code>-s</code></a> 选项启动，以禁用自动导入。</p>
<p>sitecustomize 的工作方式相同，但通常由计算机管理员在全局 site-packages 目录中创建，并在 usercustomize 之前导入。 更多细节请参阅 <a href="https://docs.python.org/zh-cn/3/library/site.html#module-site"><code>site</code></a> 模块的文档。</p>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构Notes</title>
    <url>/butterflyblog/2023/09/30/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Notes/</url>
    <content><![CDATA[<h1>数据结构Notes</h1>
<blockquote>
<p>来源：数据结构课程总结</p>
<p>2023.9~2024.1@isSeymour</p>
</blockquote>
<h2 id="一、线性表">一、线性表</h2>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20230930213805446.png" alt="image-20230930213805446" style="zoom:80%;" /> 
<h3 id="1-1-顺序表">1.1 顺序表</h3>
<blockquote>
<p>元素位置从1开始作为参数 i 传入（不是从0开始）。</p>
</blockquote>
<h4 id="定义、声明">定义、声明</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIST_INIT_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIST_INCREMENT 10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;	<span class="comment">// !!!这里可以把int改成你自己需要的任何类型，结构体也可以</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ElemType* elem;	<span class="comment">// 顺序表元素首地址</span></span><br><span class="line">    <span class="type">int</span> length;		<span class="comment">// 当前顺序表长度</span></span><br><span class="line">    <span class="type">int</span> listsize;	<span class="comment">// 顺序表容量</span></span><br><span class="line">&#125; sqlist;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;	<span class="comment">// 函数返回状态</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FALSE 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INFEASIBLE -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化、销毁、清空</span></span><br><span class="line">Status <span class="title function_">InitList</span><span class="params">(sqlist* L)</span>;</span><br><span class="line">Status <span class="title function_">DestroyList</span><span class="params">(sqlist* L)</span>;</span><br><span class="line">Status <span class="title function_">ClearList</span><span class="params">(sqlist* L)</span>;</span><br><span class="line"><span class="comment">// 求长度、取元素</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ListLength</span><span class="params">(sqlist L)</span>;</span><br><span class="line">Status <span class="title function_">GetElem</span><span class="params">(sqlist L, <span class="type">int</span> i, ElemType* e)</span>;</span><br><span class="line"><span class="comment">// 插入、删除</span></span><br><span class="line">Status <span class="title function_">ListInsert</span><span class="params">(sqlist* L, <span class="type">int</span> i, ElemType e)</span>;</span><br><span class="line">Status <span class="title function_">ListDelete</span><span class="params">(sqlist* L, <span class="type">int</span> i, ElemType* e)</span>;</span><br><span class="line"><span class="comment">// 更多</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">LocateElem</span><span class="params">(sqlist L, ElemType e, Status (*compare)(ElemType e1, ElemType e2))</span>;</span><br><span class="line">Status <span class="title function_">PriorElem</span><span class="params">(sqlist L, ElemType cur_e, ElemType* pre_e)</span>;</span><br><span class="line">Status <span class="title function_">NextElem</span><span class="params">(sqlist L, ElemType cur_e, ElemType* next_e)</span>;</span><br><span class="line">Status <span class="title function_">ListTraverse</span><span class="params">(sqlist L, Status (*visit)(ElemType e))</span>;</span><br></pre></td></tr></table></figure>
<h4 id="初始化、销毁、清空">初始化、销毁、清空</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Status <span class="title function_">InitList</span><span class="params">(sqlist* L)</span></span><br><span class="line">&#123;</span><br><span class="line">    L-&gt;elem = (ElemType*)<span class="built_in">malloc</span>(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">    <span class="keyword">if</span> (L-&gt;elem == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">    L-&gt;length = <span class="number">0</span>;</span><br><span class="line">    L-&gt;listsize = LIST_INIT_SIZE;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">DestroyList</span><span class="params">(sqlist* L)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (L-&gt;elem)</span><br><span class="line">        <span class="built_in">free</span>(L-&gt;elem);</span><br><span class="line">    L-&gt;length = <span class="number">0</span>;</span><br><span class="line">    L-&gt;listsize = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">ClearList</span><span class="params">(sqlist* L)</span></span><br><span class="line">&#123;</span><br><span class="line">    L-&gt;length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="求长度、取元素">求长度、取元素</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ListLength</span><span class="params">(sqlist L)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> L.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">GetElem</span><span class="params">(sqlist L, <span class="type">int</span> i, ElemType* e)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; L.length)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">    *e = L.elem[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="插入、删除">插入、删除</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 将元素插入顺序表指定位置</span></span><br><span class="line"><span class="comment"> * @param L 顺序表</span></span><br><span class="line"><span class="comment"> * @param i 指定位置</span></span><br><span class="line"><span class="comment"> * @param e 待插入元素</span></span><br><span class="line"><span class="comment"> * @return Status </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Status <span class="title function_">ListInsert</span><span class="params">(sqlist* L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">    ElemType *p, *q;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; L-&gt;length + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (L-&gt;length &gt;= L-&gt;listsize) &#123;</span><br><span class="line">        ElemType* newbase;</span><br><span class="line">        newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize + LIST_INCREMENT) * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">        <span class="keyword">if</span> (!newbase)</span><br><span class="line">            <span class="keyword">return</span> OVERFLOW;</span><br><span class="line"></span><br><span class="line">        L-&gt;elem = newbase;</span><br><span class="line">        L-&gt;listsize += LIST_INCREMENT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    q = &amp;(L-&gt;elem[i - <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (p = &amp;(L-&gt;elem[L-&gt;length - <span class="number">1</span>]); p &gt;= q; --p)</span><br><span class="line">        *(p + <span class="number">1</span>) = *p;</span><br><span class="line"></span><br><span class="line">    *q = e;</span><br><span class="line">    L-&gt;length++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">ListDelete</span><span class="params">(sqlist* L, <span class="type">int</span> i, ElemType* e)</span></span><br><span class="line">&#123;</span><br><span class="line">    ElemType *p, *q;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span> || i &gt; L-&gt;length)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">    p = &amp;(L-&gt;elem[i - <span class="number">1</span>]);</span><br><span class="line">    *e = *p;</span><br><span class="line">    q = &amp;(L-&gt;elem[L-&gt;length - <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (++p; p &lt;= q; ++p)</span><br><span class="line">        *(p - <span class="number">1</span>) = *p;</span><br><span class="line"></span><br><span class="line">    L-&gt;length--;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="更多">更多</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 查找指定元素是否存在于顺序表中，</span></span><br><span class="line"><span class="comment"> *        若存在则返回其位置</span></span><br><span class="line"><span class="comment"> * @param L 顺序表</span></span><br><span class="line"><span class="comment"> * @param e 指定元素</span></span><br><span class="line"><span class="comment"> * @param compare 元素间判断相等的函数</span></span><br><span class="line"><span class="comment"> * @return int </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">LocateElem</span><span class="params">(sqlist L, ElemType e, Status (*compare)(ElemType e1, ElemType e2))</span></span><br><span class="line">&#123;</span><br><span class="line">    ElemType* p = L.elem;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= L.length &amp;&amp; (*compare)(*p++, e) == FALSE)</span><br><span class="line">        i++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (i &lt;= L.length) ? i : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">PriorElem</span><span class="params">(sqlist L, ElemType cur_e, ElemType* pre_e)</span></span><br><span class="line">&#123;</span><br><span class="line">    ElemType* p = L.elem;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= L.length &amp;&amp; *p != cur_e) &#123;</span><br><span class="line">        i++;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">1</span> || i &gt; L.length)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">    *pre_e = *--p;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">NextElem</span><span class="params">(sqlist L, ElemType cur_e, ElemType* next_e)</span></span><br><span class="line">&#123;</span><br><span class="line">    ElemType* p = L.elem;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt; L.length &amp;&amp; *p != cur_e) &#123;</span><br><span class="line">        i++;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i &gt;= L.length)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">    *next_e = *++p;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line">Status <span class="title function_">ListTraverse</span><span class="params">(sqlist L, Status (*visit)(ElemType e))</span></span><br><span class="line">&#123;</span><br><span class="line">    ElemType* p = L.elem;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= L.length &amp;&amp; (*visit)(*p++) == TRUE)</span><br><span class="line">        i++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i &lt;= L.length)</span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="main">main</h4>
<blockquote>
<p>程序并不完整，这里只是给出在main中使用的一般流程</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    sqlist L;</span><br><span class="line">    <span class="type">int</span> n, x;</span><br><span class="line">    InitList(&amp;L);</span><br><span class="line">    </span><br><span class="line">	......</span><br><span class="line">    </span><br><span class="line">    DestroyList(&amp;L);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="1-2-单链表">1.2 单链表</h3>
<h4 id="定义、声明-2">定义、声明</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">	<span class="type">int</span> p;</span><br><span class="line">	<span class="type">int</span> e;</span><br><span class="line">&#125; Equation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> Equation ElemType;	<span class="comment">// 指定自己的元素类型 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">	ElemType data;	<span class="comment">// 单链表数据域 </span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span>	<span class="comment">// 单链表指针域 </span></span><br><span class="line">&#125; LNode, *LinkList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;	<span class="comment">// 函数返回状态 </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FALSE 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INFEASIBLE -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化（有头结点） </span></span><br><span class="line">Status <span class="title function_">InitLink</span><span class="params">(LinkList &amp;L)</span>;</span><br><span class="line"><span class="comment">// 销毁</span></span><br><span class="line">Status <span class="title function_">DestroyLink</span><span class="params">(LinkList &amp;L)</span>; </span><br><span class="line"><span class="comment">// 求表长</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ListLength</span><span class="params">(LinkList &amp;L)</span>; </span><br><span class="line"><span class="comment">// 查找第i个元素，返回元素地址 （从i=1作为第一个元素 ） </span></span><br><span class="line">LNode* <span class="title function_">GetElem</span><span class="params">(LinkList &amp;L, <span class="type">int</span> i)</span>; </span><br><span class="line"><span class="comment">// 插入（尾插法）插入成为第i个 </span></span><br><span class="line">Status <span class="title function_">ListInsert</span><span class="params">(LinkList &amp;L, <span class="type">int</span> i, ElemType data)</span>; </span><br><span class="line"><span class="comment">// 删除 （删除第i个元素） </span></span><br><span class="line">Status <span class="title function_">ListDelete</span><span class="params">(LinkList &amp;L, <span class="type">int</span> i)</span>; </span><br></pre></td></tr></table></figure>
<h4 id="初始化、销毁">初始化、销毁</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Status <span class="title function_">InitLink</span><span class="params">(LinkList &amp;L)</span></span><br><span class="line">&#123;</span><br><span class="line">	L = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">	L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">DestroyLink</span><span class="params">(LinkList &amp;L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LNode *p = L, *t;</span><br><span class="line">	<span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		t = p-&gt;next;</span><br><span class="line">		<span class="built_in">free</span>(p);</span><br><span class="line">		p = t;</span><br><span class="line">	 &#125; </span><br><span class="line">	 <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="求表长、查找元素">求表长、查找元素</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Status <span class="title function_">ListLength</span><span class="params">(LinkList &amp;L)</span></span><br><span class="line">&#123;</span><br><span class="line">	LNode *p = L-&gt;next;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(p)</span><br><span class="line">	&#123;</span><br><span class="line">		count++;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LNode* <span class="title function_">GetElem</span><span class="params">(LinkList &amp;L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(i&lt;<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//printf(&quot;a&quot;);</span></span><br><span class="line">	<span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">	LNode *p = L;</span><br><span class="line">	<span class="keyword">while</span>(p!=<span class="literal">NULL</span> &amp;&amp; j&lt;i)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">		j++;</span><br><span class="line">		<span class="comment">//printf(&quot;b&quot;);</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> p;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="插入、删除-2">插入、删除</h4>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Status <span class="title function_">ListInsert</span><span class="params">(LinkList &amp;L, <span class="type">int</span> i, ElemType data)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(i&lt;<span class="number">1</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	&#125;</span><br><span class="line">	LNode *newnode = (LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">	newnode-&gt;data = data;</span><br><span class="line">	newnode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	LNode *t = GetElem(L, i<span class="number">-1</span>);</span><br><span class="line">	<span class="keyword">if</span>(t)</span><br><span class="line">	&#123;</span><br><span class="line">		newnode-&gt;next = t-&gt;next;</span><br><span class="line">		t-&gt;next = newnode;</span><br><span class="line">		<span class="keyword">return</span> OK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status <span class="title function_">LinkDelete</span><span class="params">(LinkList &amp;L, <span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">	LNode *t1 = GetElem(L, i<span class="number">-1</span>);</span><br><span class="line">	LNode *t2 = GetElem(L, i);</span><br><span class="line">	<span class="keyword">if</span>(t1 &amp;&amp; t2)</span><br><span class="line">	&#123;</span><br><span class="line">		t1-&gt;next = t2-&gt;next;</span><br><span class="line">		<span class="built_in">free</span>(t2);</span><br><span class="line">		<span class="keyword">return</span> OK;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ERROR;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="main-2">main</h4>
<blockquote>
<p>程序并不完整，这里只是给出在main中使用的一般流程</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	LinkList L1, L2, L3, L4;</span><br><span class="line">	InitLink(L1), InitLink(L2), InitLink(L3), InitLink(L4);</span><br><span class="line">    </span><br><span class="line">	......</span><br><span class="line">	</span><br><span class="line">	DestroyLink(L1), DestroyLink(L2), DestroyLink(L3), DestroyLink(L4);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h2 id="二、栈和队列">二、栈和队列</h2>
<h3 id="2-1-栈（顺序栈）">2.1 栈（顺序栈）</h3>
<h4 id="定义、声明-3">定义、声明</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> STACK_INIT_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STACK_INCREMENT 10 </span></span><br><span class="line"><span class="comment">// 注意：这里define是不能加;的，书上错误了</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> SElemType;</span><br><span class="line"><span class="comment">// 顺序栈 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">	SElemType *top;		<span class="comment">// 栈顶指针 </span></span><br><span class="line">	SElemType *base;	<span class="comment">// 栈底指针 </span></span><br><span class="line">	<span class="type">int</span> stacksize;		<span class="comment">// 当前已分配的存储空间，以元素为单位 </span></span><br><span class="line">&#125; SqStack;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitStack</span><span class="params">(SqStack &amp;S)</span></span>;		<span class="comment">// 初始化空栈 </span></span><br><span class="line"><span class="function">Status <span class="title">DestroyStack</span><span class="params">(SqStack &amp;S)</span></span>;	<span class="comment">// 销毁栈  </span></span><br><span class="line"><span class="function">Status <span class="title">ClearStack</span><span class="params">(SqStack &amp;S)</span></span>;		<span class="comment">// 清空栈 </span></span><br><span class="line"><span class="function">Status <span class="title">StackEmpty</span><span class="params">(SqStack S)</span></span>;		<span class="comment">// 栈是否为空 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StackLength</span><span class="params">(SqStack S)</span></span>;			<span class="comment">// 栈长度（元素个数） </span></span><br><span class="line"><span class="function">Status <span class="title">GetTop</span><span class="params">(SqStack S, SElemType &amp;e)</span></span>;<span class="comment">// 若栈不空，用e返回S的栈顶元素，返回OK，否则返回ERROR </span></span><br><span class="line"><span class="function">Status <span class="title">Push</span><span class="params">(SqStack &amp;S, SElemType e)</span></span>;	<span class="comment">// 插入元素e为新的栈顶元素 </span></span><br><span class="line"><span class="function">Status <span class="title">Pop</span><span class="params">(SqStack &amp;S, SElemType &amp;e)</span></span>;	<span class="comment">// 若栈不空，删除栈顶元素，用e接住，返回OK，否则返回ERROR</span></span><br><span class="line"><span class="function">Status <span class="title">StackTraverse</span><span class="params">(SqStack S, Status (* visit)(SElemType *p))</span></span>;	<span class="comment">// 从栈底到栈顶依次对栈中每个元素调用函数visit() </span></span><br></pre></td></tr></table></figure>
<h4 id="初始化、销毁-2">初始化、销毁</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化空栈 </span></span><br><span class="line"><span class="function">Status <span class="title">InitStack</span><span class="params">(SqStack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	S.base = (SElemType *)<span class="built_in">malloc</span>(STACK_INIT_SIZE * <span class="built_in">sizeof</span>(SElemType));</span><br><span class="line">	<span class="keyword">if</span>(!S.base)</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);	<span class="comment">// 分配失败 </span></span><br><span class="line">	S.top = S.base;</span><br><span class="line">	S.stacksize = STACK_INIT_SIZE;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 销毁栈 </span></span><br><span class="line"><span class="function">Status <span class="title">DestroyStack</span><span class="params">(SqStack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(S.base)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">free</span>(S.base);</span><br><span class="line">		S.base = S.top = <span class="literal">NULL</span>;</span><br><span class="line">		S.stacksize = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="清空、查空、长度、顶元素">清空、查空、长度、顶元素</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 清空栈</span></span><br><span class="line"><span class="function">Status <span class="title">ClearStack</span><span class="params">(SqStack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(S.base)</span><br><span class="line">		S.top = S.base;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 栈是否为空 </span></span><br><span class="line"><span class="function">Status <span class="title">StackEmpty</span><span class="params">(SqStack S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(S.top == S.base)</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 栈长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">StackLength</span><span class="params">(SqStack S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> S.top - S.base;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取栈顶元素 </span></span><br><span class="line"><span class="function">Status <span class="title">GetTop</span><span class="params">(SqStack S, SElemType &amp;e)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(S.top == S.base)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	e = *(S.top - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="入栈、出栈">入栈、出栈</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 入栈</span></span><br><span class="line"><span class="function">Status <span class="title">Push</span><span class="params">(SqStack &amp;S, SElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 先看是否栈满</span></span><br><span class="line">	<span class="keyword">if</span>(S.top - S.base &gt;= S.stacksize)</span><br><span class="line">	&#123;</span><br><span class="line">		S.base = (SElemType *)<span class="built_in">realloc</span>(S.base, (S.stacksize + STACK_INCREMENT) * <span class="built_in">sizeof</span>(SElemType));</span><br><span class="line">		<span class="keyword">if</span>(!S.base)</span><br><span class="line">			<span class="built_in">exit</span>(OVERFLOW);	<span class="comment">// 分配失败 </span></span><br><span class="line">		S.top = S.base + S.stacksize;</span><br><span class="line">		S.stacksize += STACK_INCREMENT;</span><br><span class="line">	 &#125; </span><br><span class="line">	*S.top = e;</span><br><span class="line">	S.top++;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 出栈 </span></span><br><span class="line"><span class="function">Status <span class="title">Pop</span><span class="params">(SqStack &amp;S, SElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(S.top == S.base)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	S.top--;</span><br><span class="line">	e = *S.top;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="更多-2">更多</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 遍历调用visit</span></span><br><span class="line"><span class="function">Status <span class="title">StackTraverse</span><span class="params">(SqStack S, Status (* visit)(SElemType *p))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(S.base == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	SElemType *p1 = S.top;</span><br><span class="line">	SElemType *p2 = S.base;</span><br><span class="line">	<span class="keyword">while</span>(p1 &gt; p2)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">visit</span>(p2);</span><br><span class="line">		p2++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h3 id="2-2-队列（链式队列）">2.2 队列（链式队列）</h3>
<h4 id="定义、声明-4">定义、声明</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 链式队列 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> QElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">QNode</span>&#123;</span><br><span class="line">	QElemType data;</span><br><span class="line">	<span class="keyword">struct</span> <span class="title class_">QNode</span> *next;</span><br><span class="line">&#125;QNode, *QueuePtr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">	QueuePtr front;	<span class="comment">// 队头指针</span></span><br><span class="line">	QueuePtr rear;	<span class="comment">// 队尾指针 </span></span><br><span class="line">&#125; LinkQueue;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InitQueue</span><span class="params">(LinkQueue &amp;Q)</span></span>;		<span class="comment">// 初始化</span></span><br><span class="line"><span class="function">Status <span class="title">DestroyQueue</span><span class="params">(LinkQueue &amp;Q)</span></span>;	<span class="comment">// 销毁 </span></span><br><span class="line"><span class="function">Status <span class="title">ClearQueue</span><span class="params">(LinkQueue &amp;Q)</span></span>;	<span class="comment">// 清空</span></span><br><span class="line"><span class="function">Status <span class="title">QueueEmpty</span><span class="params">(LinkQueue Q)</span></span>;		<span class="comment">// 是否为空 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">QueueLength</span><span class="params">(LinkQueue Q)</span></span>;		<span class="comment">// 队列长度 </span></span><br><span class="line"><span class="function">Status <span class="title">GetHead</span><span class="params">(LinkQueue Q, QElemType &amp;e)</span></span>;	<span class="comment">// 获取队头元素 </span></span><br><span class="line"><span class="function">Status <span class="title">EnQueue</span><span class="params">(LinkQueue &amp;Q, QElemType e)</span></span>;	<span class="comment">// e到队尾排队 </span></span><br><span class="line"><span class="function">Status <span class="title">DeQueue</span><span class="params">(LinkQueue &amp;Q, QElemType &amp;e)</span></span>;	<span class="comment">// 队头e离开</span></span><br></pre></td></tr></table></figure>
<h4 id="初始化、销毁-3">初始化、销毁</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="function">Status <span class="title">InitQueue</span><span class="params">(LinkQueue &amp;Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 申请头结点出来 </span></span><br><span class="line">	Q.front = Q.rear = (QueuePtr)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(QNode));</span><br><span class="line">	<span class="keyword">if</span>(!Q.front)</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">	Q.front-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 销毁</span></span><br><span class="line"><span class="function">Status <span class="title">DestroyQueue</span><span class="params">(LinkQueue &amp;Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 连带头结点，全部销毁 </span></span><br><span class="line">	<span class="keyword">while</span>(Q.front)</span><br><span class="line">	&#123;</span><br><span class="line">		Q.rear = Q.front-&gt;next;</span><br><span class="line">		<span class="built_in">free</span>(Q.front);</span><br><span class="line">		Q.front = Q.rear;</span><br><span class="line">	 &#125; </span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="清空、为空、长度、队头">清空、为空、长度、队头</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 清空 </span></span><br><span class="line"><span class="function">Status <span class="title">ClearQueue</span><span class="params">(LinkQueue &amp;Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 头结点都没有，报错 </span></span><br><span class="line">	<span class="keyword">if</span>(!Q.front)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	<span class="comment">// 清空会留下头结点，置头结点的next为NULL，front/rear指向头结点</span></span><br><span class="line">	QueuePtr p = Q.front-&gt;next, t;</span><br><span class="line">	<span class="keyword">while</span>(p)</span><br><span class="line">	&#123;</span><br><span class="line">		t = p-&gt;next;</span><br><span class="line">		<span class="built_in">free</span>(p);</span><br><span class="line">		p = t;</span><br><span class="line">	 &#125; </span><br><span class="line">	Q.rear = Q.front;</span><br><span class="line">	Q.front-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否为空 </span></span><br><span class="line"><span class="function">Status <span class="title">QueueEmpty</span><span class="params">(LinkQueue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(Q.front == Q.rear)</span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 队列长度 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">QueueLength</span><span class="params">(LinkQueue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">	QueuePtr p = Q.front-&gt;next;</span><br><span class="line">	<span class="keyword">while</span>(p)</span><br><span class="line">	&#123;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">		len++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> len;</span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 获取队头元素</span></span><br><span class="line"><span class="function">Status <span class="title">GetHead</span><span class="params">(LinkQueue Q, QElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(!Q.front)</span><br><span class="line">		<span class="keyword">return</span> ERROR;	<span class="comment">// 没有头结点（未初始化） </span></span><br><span class="line">	<span class="keyword">if</span>(Q.front == Q.rear)</span><br><span class="line">		<span class="keyword">return</span> ERROR;	<span class="comment">// 没有元素 </span></span><br><span class="line">	e = Q.front-&gt;next-&gt;data;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="队尾排队、队头出队">队尾排队、队头出队</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// e到队尾排队 </span></span><br><span class="line"><span class="function">Status <span class="title">EnQueue</span><span class="params">(LinkQueue &amp;Q, QElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 申请空间 </span></span><br><span class="line">	QueuePtr p = (QueuePtr)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(QNode));</span><br><span class="line">	<span class="keyword">if</span>(!p)</span><br><span class="line">		<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">	<span class="comment">// 队尾排队 </span></span><br><span class="line">	p-&gt;data = e;</span><br><span class="line">	p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	Q.rear-&gt;next = p;</span><br><span class="line">	Q.rear = p;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 队头e离开</span></span><br><span class="line"><span class="function">Status <span class="title">DeQueue</span><span class="params">(LinkQueue &amp;Q, QElemType &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(!Q.front)</span><br><span class="line">		<span class="keyword">return</span> ERROR;	<span class="comment">// 没有头结点（未初始化）</span></span><br><span class="line">	<span class="keyword">if</span>(Q.front == Q.rear)</span><br><span class="line">		<span class="keyword">return</span> ERROR;	<span class="comment">// 没有元素</span></span><br><span class="line">	<span class="comment">// 队头离开 </span></span><br><span class="line">	QueuePtr p = Q.front-&gt;next;</span><br><span class="line">	e = p-&gt;data;</span><br><span class="line">	Q.front = p-&gt;next;</span><br><span class="line">	<span class="comment">// 队头元素同时是队尾元素，那么需要更新队尾指针 </span></span><br><span class="line">	<span class="keyword">if</span>(Q.rear == p)</span><br><span class="line">		Q.rear = Q.front;</span><br><span class="line">	<span class="built_in">free</span>(p);	<span class="comment">// 释放空间 </span></span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h2 id="三、树">三、树</h2>
<h3 id="3-1-二叉树">3.1 二叉树</h3>
<h4 id="二叉树的性质">二叉树的性质</h4>
<ol>
<li>
<p>非空二叉树上的叶子结点数等于度为 2 的结点数加 1 。</p>
<p><strong><code>n0 = n2 +1</code></strong></p>
</li>
<li>
<p>非空二叉树上<strong>第 k 层</strong>上至多有 <strong>2^k-1^</strong> 个结点（k&gt;=1)</p>
</li>
<li>
<p><strong>高度为 h</strong> 的二叉树至多有 <strong>2^h^ - 1</strong> 个结点（k&gt;=1）</p>
</li>
<li>
<p>对<strong>完全二叉树</strong>按从上到下、从左到右的顺序依次编号 1,2,…,n，则有以下关系：</p>
<ol>
<li>
<p>当 i&gt;1 时，结点 i 的双亲编号为 <strong><code>floor(i/2)</code></strong></p>
<p>i 为偶数，双亲编号为 i/2，它为双亲的左孩子；</p>
<p>i 为奇数，双亲编号为 (i-1)/2，它为双亲的右孩子。</p>
</li>
<li>
<p>当 2i &lt;= n 时，结点 i 的<strong>左孩子</strong>编号为 <strong>2i</strong>，否则无左孩子；</p>
<p>当 2i+1 &lt;= n 时，结点 i 的<strong>右孩子</strong>编号为 <strong>2i+1</strong>，否则无右孩子。</p>
</li>
<li>
<p>结点 i 所在层次（深度）为 <strong>floor( log~2~ i ) + 1</strong> 。</p>
</li>
</ol>
</li>
<li>
<p>具有 <strong>n 个结点</strong>（n&gt;0）的<strong>完全二叉树</strong>的高度为 <strong>ceiling( log~2~ (n+1) )</strong> 或 <strong>floor( log~2~ n ) + 1</strong> 。</p>
</li>
</ol>
<blockquote>
<ul>
<li>存储结构若采用顺序存储时，建议下标1开始，否则不满足条件4。</li>
<li>由于顺序存储空间利用率低，因此二叉树一般采用链式存储结构。</li>
</ul>
</blockquote>
<h4 id="定义、声明-5">定义、声明</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">//头文件需要添加</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义状态码 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OVERFLOW -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FALSE 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义元素数据类型 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> ElemType;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 二叉链表 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BiTNode</span>&#123;</span><br><span class="line">	ElemType data;	<span class="comment">// 数据域 </span></span><br><span class="line">	<span class="keyword">struct</span> <span class="title class_">BiTNode</span> *lchild, *rchild;	<span class="comment">// 左右孩子指针 </span></span><br><span class="line">&#125; BiTNode, *BiTree;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>含n个结点的二叉链表中，含有n+1个空链域，后续可作线索链表</p>
</blockquote>
<h4 id="构造、销毁、树空、访问">构造、销毁、树空、访问</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 构造空树</span></span><br><span class="line"><span class="function">Status <span class="title">InitTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	T = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 销毁树</span></span><br><span class="line"><span class="function">Status <span class="title">DestroyTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(T)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">DestroyTree</span>(T-&gt;lchild);</span><br><span class="line">		<span class="built_in">DestroyTree</span>(T-&gt;rchild);</span><br><span class="line">		<span class="built_in">free</span>(T);		</span><br><span class="line">	&#125;</span><br><span class="line">	T = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造树（具体重写）</span></span><br><span class="line"><span class="function">Status <span class="title">CreateBiTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 先序输入构造</span></span><br><span class="line">	<span class="type">char</span> ch;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">	<span class="keyword">if</span>(ch == <span class="string">&#x27;#&#x27;</span>)	<span class="comment">// #表示此处为空 </span></span><br><span class="line">		T = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(!(T = (BiTNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BiTNode))))</span><br><span class="line">			<span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">		T-&gt;data = ch;				<span class="comment">// 根结点 </span></span><br><span class="line">		<span class="built_in">CreateBiTree</span>(T-&gt;lchild);	<span class="comment">// 构造左子树 </span></span><br><span class="line">		<span class="built_in">CreateBiTree</span>(T-&gt;rchild); 	<span class="comment">// 构造右子树 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空树（与销毁等效）</span></span><br><span class="line"><span class="function">Status <span class="title">ClearTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(T)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">ClearTree</span>(T-&gt;lchild);</span><br><span class="line">		<span class="built_in">ClearTree</span>(T-&gt;rchild);</span><br><span class="line">		<span class="built_in">free</span>(T);</span><br><span class="line">	&#125;</span><br><span class="line">	T = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 树空</span></span><br><span class="line"><span class="function">Status <span class="title">TreeEmpty</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(T)</span><br><span class="line">		<span class="keyword">return</span> FALSE;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问一个结点 </span></span><br><span class="line"><span class="function">Status <span class="title">visit</span><span class="params">(BiTNode* T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>, T-&gt;data);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="递归：先、中、后序遍历">递归：先、中、后序遍历</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先序遍历（递归）</span></span><br><span class="line"><span class="function">Status <span class="title">PreOrder</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(T)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">visit</span>(T);</span><br><span class="line">		<span class="built_in">PreOrder</span>(T-&gt;lchild);</span><br><span class="line">		<span class="built_in">PreOrder</span>(T-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 中序遍历（递归）</span></span><br><span class="line"><span class="function">Status <span class="title">InOrder</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(T)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">InOrder</span>(T-&gt;lchild);</span><br><span class="line">		<span class="built_in">visit</span>(T);</span><br><span class="line">		<span class="built_in">InOrder</span>(T-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 后序遍历（递归）</span></span><br><span class="line"><span class="function">Status <span class="title">PostOrder</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(T)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">PostOrder</span>(T-&gt;lchild);</span><br><span class="line">		<span class="built_in">PostOrder</span>(T-&gt;rchild);</span><br><span class="line">		<span class="built_in">visit</span>(T);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="非递归：先、中、后序遍历">非递归：先、中、后序遍历</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先序遍历（非递归）</span></span><br><span class="line"><span class="function">Status <span class="title">PreOrder2</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	stack&lt;BiTree&gt; S;</span><br><span class="line">	BiTree p = T;</span><br><span class="line">	<span class="keyword">while</span>(p || !S.<span class="built_in">empty</span>())	<span class="comment">// p不空或栈不空 </span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(p)	<span class="comment">// 一路向左 </span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">visit</span>(p);		<span class="comment">// 先序 </span></span><br><span class="line">			S.<span class="built_in">push</span>(p);		</span><br><span class="line">			p = p-&gt;lchild;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>	<span class="comment">// 出栈，转向右子树 </span></span><br><span class="line">		&#123;</span><br><span class="line">			p = S.<span class="built_in">top</span>();</span><br><span class="line">			S.<span class="built_in">pop</span>();</span><br><span class="line">			p = p-&gt;rchild;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 中序遍历（非递归）</span></span><br><span class="line"><span class="function">Status <span class="title">InOrder2</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	stack&lt;BiTree&gt; S;</span><br><span class="line">	BiTree p = T;</span><br><span class="line">	<span class="keyword">while</span>(p || !S.<span class="built_in">empty</span>())	<span class="comment">// p不空或栈不空 </span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(p)	<span class="comment">// 一路向左 </span></span><br><span class="line">		&#123;</span><br><span class="line">			S.<span class="built_in">push</span>(p);</span><br><span class="line">			p = p-&gt;lchild;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>	<span class="comment">// 出栈，转向右子树 </span></span><br><span class="line">		&#123;</span><br><span class="line">			p = S.<span class="built_in">top</span>();</span><br><span class="line">			S.<span class="built_in">pop</span>();</span><br><span class="line">			<span class="built_in">visit</span>(p);		<span class="comment">// 中序</span></span><br><span class="line">			p = p-&gt;rchild;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 后序遍历（非递归）</span></span><br><span class="line"><span class="function">Status <span class="title">PostOrder2</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	stack&lt;BiTree&gt; S;</span><br><span class="line">	BiTree p = T;</span><br><span class="line">	BiTree r = <span class="literal">NULL</span>;	<span class="comment">// 辅助指针r 用于指向最近访问过的结点（为分清返回时是从左子树返回的还是从右子树返回的） </span></span><br><span class="line">	<span class="keyword">while</span>(p || !S.<span class="built_in">empty</span>())	<span class="comment">// p不空或栈不空 </span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(p)	<span class="comment">// 一路向左 </span></span><br><span class="line">		&#123;</span><br><span class="line">			S.<span class="built_in">push</span>(p);</span><br><span class="line">			p = p-&gt;lchild;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>	<span class="comment">// 出栈，向右转 </span></span><br><span class="line">		&#123;</span><br><span class="line">			p = S.<span class="built_in">top</span>();	<span class="comment">// 读栈顶，但不出栈 </span></span><br><span class="line">			<span class="keyword">if</span>(p-&gt;rchild &amp;&amp; p-&gt;rchild != r)</span><br><span class="line">				p = p-&gt;rchild;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				p = S.<span class="built_in">top</span>();</span><br><span class="line">				S.<span class="built_in">pop</span>();</span><br><span class="line">				<span class="built_in">visit</span>(p);</span><br><span class="line">				r = p;	<span class="comment">// 记录最近访问过的结点 </span></span><br><span class="line">				p = <span class="literal">NULL</span>;	<span class="comment">// 访问完后，重置p指针 </span></span><br><span class="line">			&#125; </span><br><span class="line">		 &#125; </span><br><span class="line">	 &#125; </span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="层次遍历">层次遍历</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 层次遍历</span></span><br><span class="line"><span class="function">Status <span class="title">LevelOrder</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 默认树至少有一个根结点</span></span><br><span class="line">	queue&lt;BiTree&gt; Q;</span><br><span class="line">	BiTNode *p = T;</span><br><span class="line">	Q.<span class="built_in">push</span>(p);</span><br><span class="line">	<span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		p = Q.<span class="built_in">front</span>();</span><br><span class="line">		Q.<span class="built_in">pop</span>();</span><br><span class="line">		<span class="built_in">visit</span>(p);</span><br><span class="line">		<span class="keyword">if</span>(p-&gt;lchild)</span><br><span class="line">			Q.<span class="built_in">push</span>(p-&gt;lchild);</span><br><span class="line">		<span class="keyword">if</span>(p-&gt;rchild)</span><br><span class="line">			Q.<span class="built_in">push</span>(p-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="示例">示例</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例：abc##d##ef### </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 构造空树</span></span><br><span class="line">	BiTree T = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="built_in">CreateBiTree</span>(T);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 层次遍历</span></span><br><span class="line">	<span class="built_in">LevelOrder</span>(T);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 销毁</span></span><br><span class="line">	<span class="built_in">DestroyTree</span>(T); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231112000855430.png" alt="image-20231112000855430" style="zoom:50%;" /> 
<h3 id="3-2-线索二叉树">3.2 线索二叉树</h3>
<ul>
<li>很少用</li>
</ul>
<h2 id="四、图">四、图</h2>
<h3 id="4-0-知识框架">4.0 知识框架</h3>
<ul>
<li>图的定义</li>
<li>图结构的存储
<ul>
<li>邻接矩阵法、邻接表法</li>
<li>邻接多重表、十字表</li>
</ul>
</li>
<li>图的遍历
<ul>
<li>DFS 深度优先遍历</li>
<li>BFS 广度优先遍历</li>
</ul>
</li>
<li>图的相关应用
<ul>
<li>最小生成树：Prim 算法、Kruskal 算法</li>
<li>最短路径：Dijkstra 算法、Floyd 算法</li>
<li>拓扑排序：AOV 网</li>
<li>关键路径：AOE 网</li>
</ul>
</li>
</ul>
<h3 id="4-1-图的基本概念">4.1 图的基本概念</h3>
<ul>
<li>
<p>图</p>
<p>图 G 由顶点集 V 和边集 E 组成，记为 <code>G = (V, E)</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">G = (V, E)</span><br><span class="line">V = &#123;1, 2, 3&#125;</span><br><span class="line">E = &#123;&lt;1,2&gt;, &lt;2,1&gt;, &lt;2,3&gt;&#125;</span><br></pre></td></tr></table></figure>
<p>注：线性表可以是空表，树可以是空树，但<strong>图不可以是空图</strong>。</p>
<p>就是说，图中不能一个顶点也没有，图的<strong>顶点集 V 一定非空</strong>，但边集 E 可以为空，此时图中只有顶点而没有边。</p>
</li>
<li>
<p>基本概念与术语</p>
<ul>
<li>
<p>方向性</p>
<ul>
<li>
<p>有向图</p>
<p>边是顶点的有序对。（弧）</p>
</li>
<li>
<p>无向图</p>
<p>边是顶点的无序对。（边）</p>
</li>
</ul>
</li>
<li>
<p>复杂度</p>
<ul>
<li>简单图
<ol>
<li>不存在重复边</li>
<li>不存在顶点到自身的边</li>
</ol>
</li>
<li>多重图</li>
</ul>
<p>注：学习中，只讨论简单图。</p>
</li>
<li>
<p>完全图（简单完全图）</p>
<ul>
<li>无向图：任意两个顶点之间都存在边。</li>
<li>有向图：任意两个顶点之间都存在方向相反的弧。</li>
</ul>
</li>
<li>
<p>子图与生成子图</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">G = (V, E)</span><br><span class="line">G&#x27; = (V&#x27;, E&#x27;)</span><br><span class="line"></span><br><span class="line">子图：</span><br><span class="line">V‘ 是 V 的子集，E&#x27; 是 E 的子集，则 G’ 是 G 的子图。</span><br><span class="line">生成子图：</span><br><span class="line">且满足 V(G&#x27;) = V(G)。（即，在子图的那些顶点的边是完全的，并不缺边）</span><br></pre></td></tr></table></figure>
<p>注：并非 V 和 E 的任何子集都能构成 G 的子图。因为可能这样的子集可能不是图。</p>
</li>
<li>
<p>连通</p>
<p>在无向图中讨论连通性，</p>
<p>在有向图中讨论强连通性。</p>
<ol>
<li>
<p>无向图</p>
<ul>
<li>
<p>连通</p>
<p>在<strong>无向图</strong>中，若从顶点 v 到顶点 w 有路径存在，则称 v 和 w 是<strong>连通</strong>的。</p>
</li>
<li>
<p>连通图</p>
<p>若图 G 中任意两个顶点都是连通的</p>
</li>
<li>
<p>连通分量（极大连通子图）</p>
<p>无向图中的<strong>极大连通子图</strong>，称为<strong>连通分量</strong>。</p>
</li>
</ul>
</li>
<li>
<p>有向图</p>
<ul>
<li>
<p>强连通</p>
<p>在<strong>有向图</strong>中，一对顶点v, w之间有相反的路径，则这两个顶点是强连通的。</p>
</li>
<li>
<p>强连通图</p>
<p>任何一对顶点都是强连通的</p>
</li>
<li>
<p>强连通分量（极大强连通子图）</p>
<p>有向图中的<strong>极大强连通子图</strong>，称为<strong>强连通分量</strong>。</p>
</li>
</ul>
</li>
</ol>
</li>
<li>
<p>生成树（连通图才有）</p>
<p>连通图的生成树，是包含图中全部顶点的一个极小连通子图。</p>
<blockquote>
<ul>
<li>
<p>极大连通子图</p>
<p>要求包含所有边</p>
</li>
<li>
<p>极小连通子图</p>
<p>既要图连通，又要边数最少。</p>
</li>
</ul>
</blockquote>
</li>
<li>
<p>生成森林（非连通图可以）</p>
<p>非连通图中，连通分量的生成树构成了非连通图的生成森林。</p>
</li>
</ul>
</li>
</ul>
<h3 id="4-2-图的存储及基本操作">4.2 图的存储及基本操作</h3>
<h4 id="4-2-1-邻接矩阵法（稠密图）">4.2.1 邻接矩阵法（稠密图）</h4>
<ul>
<li>
<p>介绍</p>
<p>用一个一维数组存储图中顶点的信息，</p>
<p>用一个二维数组存储图中边的信息（各顶点的邻接关系，该二维矩阵是邻接矩阵）。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000752334.png" alt="image-20231203000752334" style="zoom: 67%;" /> 
</li>
<li>
<p>适合：稠密图</p>
</li>
<li>
<p>代码</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_VERTEX_NUM 100		<span class="comment">// 最多顶点数</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> VertexType;		<span class="comment">// 顶点的数据类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> EdgeType;			<span class="comment">// 带权图中边上权值的数据类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">    VertexType Vex[MAX_VERTEX_NUM];	<span class="comment">// 顶点表</span></span><br><span class="line">    EdgeType Edge[MAX_VERTEX_NUM][MAX_VERTEX_NUM];	<span class="comment">// 边表，邻接矩阵</span></span><br><span class="line">    <span class="type">int</span> vexnum, arcnum;	<span class="comment">// 图的当前顶点数和弧数</span></span><br><span class="line">&#125; MGraph;</span><br></pre></td></tr></table></figure>
<h4 id="4-2-2-邻接表法（稀疏图）">4.2.2 邻接表法（稀疏图）</h4>
<ul>
<li>
<p>介绍</p>
<p>对图 G 中的每一个顶点 vi 建立一个单链表。</p>
<ul>
<li>
<p>边表（邻接表）：</p>
<p>第 i 个单链表中的结点表示依附于顶点 vi 的边（有向图则是以顶点 vi 为尾的弧），这个单链表就称为顶点 vi 的边表（有向图则是出边表）。</p>
<p>由邻接点域（adjvex）和指向下一条邻接边的指针域（nextarc）构成。</p>
</li>
<li>
<p>顶点表：</p>
<p>边表的头指针和顶点的数据信息采用顺序存储（称为顶点表）。</p>
<p>由顶点域（data）和指向第一条邻接边的指针（firstarc）构成。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000917358.png" alt="image-20231203000917358" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000951637.png" alt="image-20231203000951637" style="zoom:67%;" /> 
</li>
<li>
<p>适合：稀疏图</p>
</li>
<li>
<p>代码</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_VERTEX_NUM 100		<span class="comment">// 最多顶点数</span></span></span><br><span class="line"><span class="comment">// 边表结点</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">ArcNode</span>&#123;</span><br><span class="line">    <span class="type">int</span> adjvex;	<span class="comment">// 该弧所指向的顶点的位置</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">ArcNode</span> *next;	<span class="comment">// 指向下一条弧的指针</span></span><br><span class="line">    <span class="comment">// InfoType info;	// 网的边权值</span></span><br><span class="line">&#125;ArcNode;</span><br><span class="line"><span class="comment">// 顶点表结点</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">VNode</span>&#123;</span><br><span class="line">    VertexType data;	<span class="comment">// 顶点信息</span></span><br><span class="line">    ArcNode *first;		<span class="comment">// 指向第一个依附于该顶点的弧的指针</span></span><br><span class="line">&#125;VNode, AdjList[MAX_VERTEX_NUM];</span><br><span class="line"><span class="comment">// 邻接表</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">    AdjList vertices;	<span class="comment">// 邻接表</span></span><br><span class="line">    <span class="type">int</span> vexnum, arcnum;	<span class="comment">// 顶点数、弧数</span></span><br><span class="line">&#125;ALGraph;	<span class="comment">// 以邻接表存储的图类型</span></span><br></pre></td></tr></table></figure>
<h4 id="4-2-3-十字链表（有向图）">4.2.3 十字链表（有向图）</h4>
<ul>
<li>
<p>介绍</p>
<p>十字链表是<strong>有向图</strong>的一种<strong>链式</strong>存储结构。</p>
<p>在十字链表中，对应于有向图中的每条弧有一个结点，对应于每个顶点也有一个结点。</p>
<ul>
<li>
<p>弧结点：</p>
<p>tailvex 和 headvex 分别指向弧尾和弧头两个顶点的编号；</p>
<p>hlink 指向弧头相同的下一个弧结点；</p>
<p>tlink 指向弧尾相同的下一个弧结点；</p>
<p>info 存放该弧的相关信息。</p>
<p>注：这样做，弧头相同的弧就在同一个链表上，弧尾相同的弧也在同一个链表上。</p>
</li>
<li>
<p>顶点结点：</p>
<p>data 域存放该顶点的数据信息；</p>
<p>firstin 指向以该顶点为弧头的第一个弧结点；</p>
<p>firstout 指向以该顶点为弧尾的第一个弧结点。</p>
<p>注：顶点之间是顺序存储的。</p>
</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203001125465.png" alt="image-20231203001125465" style="zoom:67%;" /> 
<h4 id="4-2-4-邻接多重链表（无向图）">4.2.4 邻接多重链表（无向图）</h4>
<ul>
<li>
<p>介绍</p>
<p>邻接多重链表是<strong>无向图</strong>的另一种<strong>链式</strong>存储结构。</p>
<ul>
<li>
<p>边结点：</p>
<p>ivex 和 jvex 指示该边依附的两个顶点的编号；</p>
<p>ilink 指向下一个依附于顶点 ivex 的边；</p>
<p>jlink 指向下一个依附于顶点 jvex 的边；</p>
<p>info 存放该边的相关信息。</p>
</li>
<li>
<p>顶点结点：</p>
<p>data 存放该顶点的相关信息；</p>
<p>firstedge 指向第一条依附于该顶点的边。</p>
</li>
</ul>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203001159702.png" alt="image-20231203001159702" style="zoom:67%;" /> 
<p>注：在邻接多重链表中，所有依附于同一顶点的边串联在同一链表中，由于每条边依附于两个顶点，因此每个边结点同时链接在两个链表中。</p>
<p>对于无向图，其邻接多重链表和邻接表的差别仅在于，同一条边在邻接表中用两个结点表示，而在邻接多重链表中只有一个结点。</p>
<h3 id="4-3-图的遍历">4.3 图的遍历</h3>
<h4 id="4-3-1-广度优先搜索（BFS）">4.3.1 广度优先搜索（BFS）</h4>
<ul>
<li>
<p>介绍</p>
<p>广度优先搜索（Breadth-First-Search, BFS）</p>
<ul>
<li>
<p>基本思想：分层查找，逐层访问</p>
</li>
<li>
<p>辅助：队列，记录正在访问的顶点的下一层顶点</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203001359676.png" alt="image-20231203001359676" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203001425955.png" alt="image-20231203001425955" style="zoom:67%;" /> 
</li>
<li>
<p>代码</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> visited[MAX_VERTEX_NUM];	<span class="comment">// 访问标记数组</span></span><br><span class="line"><span class="comment">// 对图 G 进行广度优先遍历</span></span><br><span class="line"><span class="function">Status <span class="title">BFSTraverse</span><span class="params">(Graph G)</span>	</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;G.vexnum; i++)</span><br><span class="line">        visited[i] = FALSE;		<span class="comment">// 访问标记数组初始化</span></span><br><span class="line">    <span class="built_in">InitQueue</span>(Q);	<span class="comment">// 初始化辅助队列 Q</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;G.vexnum; i++)</span><br><span class="line">        <span class="keyword">if</span>(!visited[i])	<span class="comment">// 对每个连通分量调用一次 BFS</span></span><br><span class="line">            <span class="built_in">BFS</span>(G, i);	<span class="comment">// vi 未访问过，则从 vi 开始 BFS</span></span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 从顶点 v 出发，广度优先遍历图 G</span></span><br><span class="line"><span class="function">Status <span class="title">BFS</span><span class="params">(Graph G, <span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">visit</span>(v);			<span class="comment">// 访问初始顶点 v</span></span><br><span class="line">    visited[v] = TRUE;	<span class="comment">// 标记已访问</span></span><br><span class="line">    <span class="built_in">Enqueue</span>(Q, v);		<span class="comment">// 顶点 v 入队</span></span><br><span class="line">    <span class="comment">// 依次取队头访问</span></span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isEmpty</span>(Q))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">DeQueue</span>(Q, vh);	<span class="comment">// 队头 vh 出队</span></span><br><span class="line">        <span class="comment">// 检测 vh 所有的邻接点</span></span><br><span class="line">        <span class="keyword">for</span>(w=<span class="built_in">FirstNeighbor</span>(G, vh); w&gt;=<span class="number">0</span>; w=<span class="built_in">NextNeighbor</span>(G, vh, w))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!visited[w])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">visit</span>(w);</span><br><span class="line">                visited[w] = TRUE;</span><br><span class="line">                <span class="built_in">EnQueue</span>(Q, w);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>时间复杂度</p>
<p>下面 n 为顶点数 |V| ，m 为边数 |E| 。</p>
<ul>
<li>邻接矩阵：O(n^2^)</li>
<li>邻接表：O(n+m)</li>
</ul>
</li>
<li>
<p>应用</p>
<ul>
<li>求解单源最短路径问题</li>
<li>广度优先生成树</li>
</ul>
</li>
</ul>
<h4 id="4-3-2-深度优先搜索-DFS">4.3.2 深度优先搜索 DFS</h4>
<ul>
<li>
<p>介绍</p>
<p>深度优先搜索（Depth-First-Search, DFS）</p>
<ul>
<li>基本思想：向下深挖，到底回退一步</li>
<li>辅助：不需要（但本质上使用了栈，函数本身被压栈）</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203001247942.png" alt="image-20231203001247942" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203001322157.png" alt="image-20231203001322157" style="zoom:67%;" /> 
</li>
<li>
<p>代码</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> visited[MAX_VERTEX_NUM];	<span class="comment">// 访问标记数组</span></span><br><span class="line"><span class="comment">// 对图 G 进行深度优先遍历</span></span><br><span class="line"><span class="function">Status <span class="title">DFSTraverse</span><span class="params">(Graph G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v=<span class="number">0</span>; v&lt;G.vexnum; v++)</span><br><span class="line">        visited[v] = FALSE;	<span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v=<span class="number">0</span>; v&lt;G.vexnum; v++)</span><br><span class="line">        <span class="keyword">if</span>(!visited[v])</span><br><span class="line">            <span class="built_in">DFS</span>(G, v);</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 从顶点 v 出发，深度优先遍历图 G</span></span><br><span class="line"><span class="function">Status <span class="title">DFS</span><span class="params">(Graph G, <span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">visit</span>(v);</span><br><span class="line">    visited[v] = TRUE;</span><br><span class="line">    <span class="keyword">for</span>(w=<span class="built_in">FirstNeighbor</span>(G, V); w&gt;=<span class="number">0</span>; w=<span class="built_in">NextNeighbor</span>(G, v, w))</span><br><span class="line">        <span class="keyword">if</span>(!visited[w])</span><br><span class="line">            <span class="built_in">DFS</span>(G, w);</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>时间复杂度</p>
<p>下面 n 为顶点数 |V| ，m 为边数 |E| 。</p>
<ul>
<li>邻接矩阵：O(n^2^)</li>
<li>邻接表：O(n+m)</li>
</ul>
</li>
<li>
<p>应用</p>
<ul>
<li>深度优先生成树、生成森林</li>
</ul>
</li>
</ul>
<h4 id="4-3-3-遍历与连通性">4.3.3 遍历与连通性</h4>
<ul>
<li>
<p>图的遍历算法可以判断图的连通性。</p>
<ul>
<li>
<p>无向图</p>
<p>若是连通的，则从任意一个结点出发，仅需一次遍历就能访问图中的所有顶点；</p>
<p>若非连通，则从某个顶点出发，一次遍历只能访问到该顶点所在连通分量的所有顶点。</p>
</li>
<li>
<p>有向图</p>
<p>若从初始点到图中的每个顶点都有路径，则能够访问到图中的所有顶点；</p>
<p>否则，不能访问到所有顶点。</p>
</li>
</ul>
<p>注：故在 BFSTraverse 或 DFSTraverse 中添加了for 循环，再选取初始点，继续进行遍历，以防一次无法遍历图中的所有顶点。</p>
<ul>
<li>
<p>无向图</p>
<p>在 BFSTraverse / DFSTraverse 中调用 BFS / DFS 的次数，就是该图的连通分量数。</p>
</li>
<li>
<p>有向图</p>
<p>不能判断。</p>
<p>因为一个连通的有向图分为强连通的、非强连通的，它的连通子图也分强连通分量、非强连通分量。</p>
<p>其中，非强连通分量一次调用 BFS / DFS 也无法访问到该连通分量的所有顶点。</p>
</li>
</ul>
</li>
</ul>
<h3 id="4-4-图的应用">4.4 图的应用</h3>
<h4 id="4-4-1-最小生成树">4.4.1 最小生成树</h4>
<ul>
<li>
<p>介绍</p>
<ul>
<li>
<p>前提：连通图</p>
</li>
<li>
<p>生成树</p>
<p>一个连通图的生成树包含图的所有顶点，并且只含尽可能少的边。</p>
<ul>
<li>砍去一条边，则变成非连通图；增加一条边，则会形成图中的一条回路。</li>
</ul>
</li>
<li>
<p>最小生成树</p>
<p>对于一个带权连通无向图，生成树不同，每棵树的权（即树中所有边上的权值之和）也可能不同。</p>
<p>设 R 为图 G 的所有生成树的集合，若 T 为 R 中边的权值之和最小的那棵生成树，则称 T 为图 G 的最小生成树（Minimum-Spanning-Tree, MST）</p>
</li>
<li>
<p>最小生成树的性质</p>
<ul>
<li>
<p>最小生成树不唯一，可能多个。</p>
<p>若图 G 中的各边权值互不相等时，G 的最小生成树唯一。</p>
<p>若无向连通图 G 的边数比顶点数少1（即 G 本身是一棵树），则 G 的最小生成树是它本身。</p>
</li>
<li>
<p>最小生成树的边的权值之和总是唯一的。</p>
</li>
<li>
<p>最小生成树的边数为顶点数减1。</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>性质</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">假设 G = (V, E) 是一个带权连通无向图，U 是顶点集 V 的一个非空子集。</span><br><span class="line">若 (u, v) 是一条具有最小权值的边，其中 u ∈ U，v ∈ V-U，则必存在一棵包含边 (u, v) 的最小生成树。</span><br></pre></td></tr></table></figure>
<p>基于该性质的最小生成树算法主要有 Prim 算法和 Kruskal 算法（都基于贪心算法的策略）。</p>
<p>通用算法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">GENERIC_MST</span>(G)</span><br><span class="line">&#123;</span><br><span class="line">    T = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(T 未形成一棵生成树)</span><br><span class="line">    &#123;</span><br><span class="line">        找到一条最小代价边 (u,v) 并且加入 T 后不会产生回路;</span><br><span class="line">        T = T + (u,v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="Prim-算法">Prim 算法</h5>
<p>从顶点开始扩展最小生成树</p>
<p>核心：选顶点</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000627015.png" alt="image-20231203000627015" style="zoom:67%;" /> 
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">Prim</span><span class="params">(G, T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    V = <span class="built_in">GraphAllVertex</span>(G);</span><br><span class="line">    T = 空集;		<span class="comment">// 初始化空树</span></span><br><span class="line">    U = &#123; w &#125;;	<span class="comment">// 添加任意一个顶点 w</span></span><br><span class="line">    <span class="keyword">while</span>((V-U)!=空集)	<span class="comment">// 若不含所有顶点</span></span><br><span class="line">    &#123;</span><br><span class="line">        设(u,v)是使 u ∈ U 与 v ∈ (V-U)，且权值最小的边;</span><br><span class="line">        T = T + (u,v);	<span class="comment">// 边归入树</span></span><br><span class="line">        U = U +v;		<span class="comment">// 顶点归入树</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>时间复杂度</p>
<p>下面 n 为顶点数 |V| ，m 为边数 |E| 。</p>
<p><strong>O(n^2^)，不依赖于 m。</strong></p>
<p>适用：边稠密的图</p>
</li>
</ul>
<h5 id="Kruskal-算法">Kruskal 算法</h5>
<p>按权值的递增次序选择合适的边来构造最小生成树</p>
<p>核心：选边</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000557712.png" alt="image-20231203000557712" style="zoom:67%;" /> 
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">Kruskal</span><span class="params">(V, T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T = V;	<span class="comment">// 初始化树，仅含顶点</span></span><br><span class="line">    numS = n;	<span class="comment">// 连通分量数</span></span><br><span class="line">    <span class="keyword">while</span>(numS&gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        从 E 中取出权值最小的边 (u,v);</span><br><span class="line">        <span class="keyword">if</span>(v 和 u 属于 T 中不同的连通分量)</span><br><span class="line">        &#123;</span><br><span class="line">            T = T + (u,v);	<span class="comment">// 将此边加入生成树</span></span><br><span class="line">            numS--;			<span class="comment">// 连通分量数减1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>时间复杂度</p>
<p>下面 n 为顶点数 |V| ，m 为边数 |E| 。</p>
<p><strong>O(m log2 m)，不依赖于 n。</strong></p>
<p>适用：边稀疏而顶点多的图</p>
</li>
</ul>
</li>
</ul>
<h4 id="4-4-2-最短路径">4.4.2 最短路径</h4>
<ul>
<li>
<p>性质</p>
<p>两点之间的最短路径也包含了路径上其他项点间的最短路径。</p>
</li>
<li>
<p>带权有向图 G 的最短路径</p>
<ul>
<li>单源最短路径：求图中某一顶点到其他各顶点的最短路径——Dijkstra 算法</li>
<li>多源最短路径：求顶点间的最短路径——Floyd 算法</li>
</ul>
</li>
</ul>
<h5 id="单源最短路径——Dijkstra-算法">单源最短路径——Dijkstra 算法</h5>
<ul>
<li>懂原理即可</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000507715.png" alt="image-20231203000507715" style="zoom:67%;" /> 
<h5 id="多源最短路径——Floyd-算法">多源最短路径——Floyd 算法</h5>
<ul>
<li>懂原理即可</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000436927.png" alt="image-20231203000436927" style="zoom:67%;" /> 
<h4 id="4-4-3-拓扑排序、AOV网">4.4.3 拓扑排序、AOV网</h4>
<ul>
<li>
<p>AOV网</p>
<p>若用 有向无环图 DAG图表示一个工程，其顶点表示活动，有向边 &lt;vi, vj&gt; 表示活动 vi 必须先于活动 vj 进行的这样一种关系，则将这种有向图称为 顶点表示活动的网络（Activity On Vertex, AOV网）。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000216909.png" alt="image-20231203000216909" style="zoom:80%;" /> 
</li>
<li>
<p>拓扑排序</p>
<p>在图论中，由一个有向无环图的顶点组成的序列，当且仅当满足下列条件，称为该图的一个拓扑排序：</p>
<ol>
<li>每个顶点出现且只出现一次</li>
<li>若顶点 A 在序列中排在顶点 B 的前面，则在图中不存在从顶点 B 到顶点 A 的路径。</li>
</ol>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000130193.png" alt="image-20231203000130193" style="zoom:80%;" /> 
</li>
<li>
<p>每个 AOV 网都有一个或多个拓扑排序。</p>
</li>
<li>
<p>常用算法步骤：</p>
<ol>
<li>从 AOV 网中选择一个没有前驱的顶点并输出。</li>
<li>从网中删除该顶点和所有以它为起点的有向边。</li>
<li>重复步骤1 和步骤2 直到当前的 AOV 网为空或当前网中不存在无前驱的顶点为止。（后者说明有向图中存在环）</li>
</ol>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000259971.png" alt="image-20231203000259971" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000351663.png" alt="image-20231203000351663" style="zoom:67%;" /> 
</li>
<li>
<p>代码</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">TopologicalSort</span><span class="params">(Graph G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">InitStack</span>(S);	<span class="comment">// 初始化栈，存储入度为0的顶点</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;G.vexnum; i++)</span><br><span class="line">        <span class="keyword">if</span>(indegree[i]==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">Push</span>(S, i);	<span class="comment">// 将所有入度为0的顶点入栈</span></span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;	<span class="comment">// 计数，记录的当前已经输出的顶点数</span></span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isEmpty</span>(S))	<span class="comment">// 栈不空，则存在入度为0的顶点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> h;</span><br><span class="line">        <span class="built_in">Pop</span>(S, h);	<span class="comment">// 栈顶出栈</span></span><br><span class="line">        print[count++] = h;	<span class="comment">// 输出顶点 h</span></span><br><span class="line">        <span class="keyword">for</span>(p=G.vertices[h].firstarc; p; p=p-&gt;nextarc)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 将所有 h 指向的顶点的入度减1，并且将入度减为0的顶点压入栈S</span></span><br><span class="line">            v = p-&gt;adjvex;</span><br><span class="line">            <span class="keyword">if</span>(!(--indegree[v]))</span><br><span class="line">                <span class="built_in">Push</span>(S, v);	<span class="comment">//入度为0，入栈</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count&lt;G.vexnum)</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    	<span class="keyword">return</span> TRUE;	<span class="comment">// 拓扑排序成功</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>时间复杂度</p>
<p>下面 n 为顶点数 |V| ，m 为边数 |E| 。</p>
<ul>
<li>邻接矩阵：O(n^2^)</li>
<li>邻接表：O(n+m)</li>
</ul>
</li>
</ul>
<h4 id="4-4-4-关键路径、AOE网">4.4.4 关键路径、AOE网</h4>
<ul>
<li>
<p>AOE网</p>
<p>在带权有向图中，以顶点表示事件，以有向边表示活动，以边上的权值表示完成该活动的开销（比如时间），称为 用边表示活动的网络（Activity On Edge, AOE网）。</p>
<p>注：AOV 网和 AOE 网都是有向无环图，不同之处在于它们的边和顶点所代表的含义是不同的，且 AOE 网的边有权值，而 AOV 网的边无权值，仅代表顶点之间的前后关系。</p>
<ul>
<li>AOE 网的性质
<ol>
<li>只有在某顶点所代表的事件发生后，从该顶点出发的各有向边所代表的活动才能开始</li>
<li>只有在进入某顶点的各有向边所代表的活动都已经结束时，该顶点代表的事件才能发生</li>
</ol>
</li>
</ul>
</li>
<li>
<p>工程</p>
<p>工程开始：在 AOE 网中，仅有一个入度为0的顶点，是开始顶点（源点）。</p>
<p>工程结束：在 AOE 网中，仅有一个出度为0的顶点，是结束顶点（汇点）。</p>
</li>
<li>
<p>在 AOE 网中，一些活动是可以并行的。</p>
</li>
<li>
<p>关键路径</p>
<p>从源点到汇点的所有路径中，具有最大路径长度的路径，称为关键路径。</p>
<ul>
<li>
<p>关键活动：在关键路径上的活动</p>
</li>
<li>
<p>关键路径的长度：完成整个工程的最短时间</p>
</li>
</ul>
</li>
<li>
<p>概念</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">ai 活动：vj-&gt;<span class="function">vk</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function"><span class="title">ve</span><span class="params">(k)</span>	事件 vk 的最早发生时间 </span></span><br><span class="line"><span class="function"><span class="title">vl</span><span class="params">(k)</span>	事件 vk 的最迟发生时间 </span></span><br><span class="line"><span class="function"><span class="title">v</span><span class="params">(i)</span>	活动 ai 的最早开始时间 </span></span><br><span class="line"><span class="function"><span class="title">l</span><span class="params">(i)</span>	活动 ai 的最迟开始时间 </span></span><br><span class="line"><span class="function"><span class="title">d</span><span class="params">(i)</span> </span>= <span class="built_in">l</span>(i) - <span class="built_in">e</span>(i)	活动 ai 的差额空闲余量</span><br><span class="line">    </span><br><span class="line"><span class="built_in">l</span>(i) - <span class="built_in">e</span>(i) = <span class="number">0</span> ,即 <span class="built_in">l</span>(i) = <span class="built_in">e</span>(i) 的活动 ai 是 关键活动。</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231203000036051.png" alt="image-20231203000036051" style="zoom:80%;" /> 
</li>
<li>
<p>求关键路径的算法</p>
<ol>
<li>从源点出发，令 <strong>ve(源点) = 0</strong>，按<strong>拓扑有序求</strong>其余顶点的<strong>最早发生时间 ve()</strong></li>
<li>从汇点出发，令 <strong>vl(汇点) = ve(汇点)</strong>，按<strong>逆拓扑有序求</strong>其余顶点的<strong>最迟发生时间 vl()</strong></li>
<li>根据各顶点的 <strong>ve() 值求</strong>所有<strong>弧的最早开始时间 e()</strong></li>
<li>根据各顶点的 <strong>vl() 值求</strong>所有<strong>弧的最迟开始时间 l()</strong></li>
<li>求 AOE 网中所有活动的<strong>差额 d()</strong></li>
<li>找出<strong>所有 d() = 0 的活动</strong>，构成关键路径</li>
</ol>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231202235949828.png" alt="image-20231202235949828" style="zoom:80%;" /> 
<blockquote>
<ul>
<li>
<p>如何求 ve() ？</p>
<p>从 ve(1) = 0 开始按拓扑有序推进</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ve</span>(j) = Max i&#123; <span class="built_in">ve</span>(i) + Wij&#125;</span><br></pre></td></tr></table></figure>
<p>其中，&lt;i, j&gt; ∈ T， 2&lt;=j&lt;=n，T是所有以 j 为头的弧的集合。</p>
</li>
<li>
<p>如何求 vl() ？</p>
<p>从 vl(n) = ve(n) 开始按拓扑有序推进</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">vl</span>(i) = Min j&#123; <span class="built_in">vl</span>(j) - Wij&#125;</span><br></pre></td></tr></table></figure>
<p>其中，&lt;i, j&gt; ∈ S， 1&lt;=i&lt;=n-1，S是所有以 i 为尾的弧的集合。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/image-20231202235836706.png" alt="image-20231202235836706" style="zoom:80%;" /> 
</blockquote>
</li>
<li>
<p>注意：</p>
<ul>
<li>
<p>关键路径上的所有活动都是关键活动，因此可以通过加快关键活动来缩短整个工期。</p>
<p>但也不能任意缩短，因为一旦缩短到一定程度，该关键活动就可能变成非关键活动。</p>
</li>
<li>
<p>网中的关键路径并不唯一，对于有多条关键路径的网，只提高一条关键路径上的关键活动速度并不能缩短整个工程的工期。</p>
</li>
</ul>
</li>
</ul>
<h2 id="五、查找">五、查找</h2>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/12170.png" alt="0" style="zoom:67%;" /> 
<h3 id="5-0-知识框架">5.0 知识框架</h3>
<ul>
<li>
<p>基本概念</p>
<ul>
<li>静态查找（并不修改）</li>
<li>动态查找</li>
</ul>
</li>
<li>
<p>效率指标</p>
<ul>
<li>
<p>ASL平均查找长度</p>
<p>ASL = Σ PiCi</p>
</li>
</ul>
</li>
<li>
<p>查找</p>
<ul>
<li>线性结构
<ul>
<li>顺序查找</li>
<li>折半查找</li>
<li>分块查找</li>
</ul>
</li>
<li>树形结构
<ul>
<li>二叉排序树</li>
<li>平衡二叉树</li>
<li>红黑树</li>
<li>B树、B+树</li>
</ul>
</li>
<li>散列结构
<ul>
<li>散列表（性能分析、冲突处理）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="5-1-线性结构">5.1 线性结构</h3>
<h4 id="5-1-1-顺序查找">5.1.1 顺序查找</h4>
<ul>
<li>又称“线性查找”</li>
<li>适用：顺序表、链表</li>
<li>说明：引入“哨兵”</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">    Element *elem;</span><br><span class="line">    <span class="type">int</span> TableLen;</span><br><span class="line">&#125;SSTable;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Search_Seq</span><span class="params">(SSTable ST, ElemtType key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ST.elem[<span class="number">0</span>] = key;	<span class="comment">// 哨兵</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=ST.TableLen; ST.elem[i]!=key; --i)</span><br><span class="line">        ;</span><br><span class="line">    <span class="keyword">return</span> i;	<span class="comment">// 无论如何也会在0处退出循环</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>性能分析</p>
<ul>
<li>
<p>成功</p>
<p><code>ASL = (n+1)/2</code></p>
</li>
<li>
<p>失败</p>
<p><code>ASL = n+1</code></p>
</li>
</ul>
</li>
<li>
<p>优点：对数据元素存储没有要求，顺序存储、链式存储均可，且是无序存储</p>
</li>
<li>
<p>缺点：当n较大时，ASL较大，效率低</p>
</li>
</ul>
<blockquote>
<p>若查找前，已知关键字是有序的。</p>
<ul>
<li>
<p>成功情况相同；失败情况可以提早退出循环。</p>
</li>
<li>
<p><code>ASL失败 = n/2 + n/n+1</code></p>
<p>n为结点数目</p>
</li>
</ul>
</blockquote>
<h4 id="5-1-2-折半查找">5.1.2 折半查找</h4>
<ul>
<li>
<p>又称“二分查找”</p>
</li>
<li>
<p>适用：有序的顺序表！！！</p>
</li>
<li>
<p>基本思想：</p>
<p>将给定值 key 与表中间位置比较</p>
<ul>
<li>相等，成功</li>
<li>不相等，缩小范围到左半部或右半部，继续查找（若已经出现跨越部分的情况，说明找不到，退出）</li>
</ul>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Binary_Search</span><span class="params">(SSTable L, ElemType key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> low = <span class="number">0</span>, high = L.TableLen - <span class="number">1</span>, mid;</span><br><span class="line">    <span class="keyword">while</span>(low &lt;= high)</span><br><span class="line">    &#123;</span><br><span class="line">        mid = (low+high)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(L.elem[mid] == key)</span><br><span class="line">            <span class="keyword">return</span> mid;	<span class="comment">// 成功</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(L.elem[mid] &gt; key)</span><br><span class="line">            high = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            low = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;	<span class="comment">// 失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>性能分析</p>
<ul>
<li>
<p>成功</p>
<p><code>ASL = log2(n+1) - 1</code></p>
<p>树高：<code>h = log2(n+1) 向上取整</code></p>
<p>时间复杂度：<code>O(log2 n)</code></p>
</li>
</ul>
</li>
<li>
<p>优点：效率比顺序查找高</p>
</li>
<li>
<p>缺点：只适用于顺序存储，不能链式存储。并且要求元素按关键字有序排列。</p>
</li>
</ul>
<h4 id="5-1-3-分块查找">5.1.3 分块查找</h4>
<ul>
<li>
<p>又称“索引顺序查找”</p>
</li>
<li>
<p>吸收顺序查找和折半查找的优点，既有动态结构，又有快速查找</p>
</li>
<li>
<p>基本思想：</p>
<p>分块，块内无序，块间有序。</p>
</li>
<li>
<p>做法：</p>
<p>建立一个索引表，索引表的每个元素含有各块的最大关键字和各块的第一个元素的地址，索引表按关键字有序排序。</p>
</li>
<li>
<p>查找：</p>
<ul>
<li>第一步：确定所在块（顺序查找或折半查找均可）</li>
<li>第二步：块内顺序查找</li>
</ul>
</li>
<li>
<p>性能分析</p>
<p>长度 n 的查找表均匀分为 b 块，每块有 s 个记录，在等概论情况下。</p>
<p>若在块内和索引表中均采用顺序查找，则</p>
<p><code>ASL  = LI + LS = (b+1)/2 + (s+1)/2 = (s2 + 2s + n)/(2s)</code></p>
</li>
</ul>
<h3 id="5-2-树形结构">5.2 树形结构</h3>
<h4 id="5-2-1-二叉排序树-BST">5.2.1 二叉排序树 BST</h4>
<ul>
<li>
<p>二叉排序树</p>
<ul>
<li>要么是一棵空树</li>
<li>要么是一棵满足下列条件的二叉树
<ul>
<li>若左子树非空，左子树所有结点的值均小于根结点的值</li>
<li>若右子树非空，右子树所有结点的值均大于根结点的值</li>
<li>左右子树也是一棵二叉排序树</li>
</ul>
</li>
</ul>
</li>
<li>
<p>效果</p>
<p><code>左 &lt; 根 &lt; 右</code></p>
<p>中序遍历，得到递增的有序序列</p>
</li>
</ul>
<h5 id="构造">构造</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Creat_BST</span><span class="params">(BiTree &amp;T, KeyType str[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">BST_Insert</span>(T, str[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="插入">插入</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">BST_Insert</span><span class="params">(BiTree &amp;T, KeyType k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T == <span class="literal">NULL</span>)			<span class="comment">// 不存在，因此插入</span></span><br><span class="line">    &#123;</span><br><span class="line">        T = (BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">        T-&gt;data = k;</span><br><span class="line">        T-&gt;lchild = T-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> OK;	<span class="comment">// 插入成功</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k == T-&gt;data)	<span class="comment">// 已存在，不必插入</span></span><br><span class="line">        <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k &lt; T-&gt;data)	<span class="comment">// 插入到左子树</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">BST_Insert</span>(T-&gt;lchild, k);</span><br><span class="line">    <span class="keyword">else</span>					<span class="comment">// 插入到右子树</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">BST_Insert</span>(T-&gt;rchild, k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="查找">查找</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">BSNode *<span class="title">BST_Search</span><span class="params">(BiTree T, ElemType key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(T != <span class="literal">NULL</span> &amp;&amp; key != T-&gt;data)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span>(key &lt; T-&gt;data)</span><br><span class="line">           T = T-&gt;lchild;</span><br><span class="line">       <span class="keyword">else</span> </span><br><span class="line">           T = T-&gt;rchild;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> T;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="删除">删除</h5>
<p>三种情况，被删除结点是结点 Z。</p>
<ul>
<li>
<p>若 Z 是叶结点</p>
<p>直接删除</p>
</li>
<li>
<p>若 Z 只有一棵左子树或右子树</p>
<p>让 Z 的子树成为 Z 的父结点的子树，替代 Z 的位置</p>
</li>
<li>
<p>若 Z 同时有左、右子树</p>
<p>让 Z 的直接后继（或直接前驱）替代 Z，然后从二叉排序树中删去这个直接后继（或直接前驱），</p>
<p>由此，就转换成了第一、二种的情况。</p>
</li>
</ul>
<p>注意：删除时特别注意，可能会把 root 根结点都删除了，要随时更新 root 值（传引用）。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/12171-1.png" alt="1-1" style="zoom: 80%;" /> 
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 移除结点</span></span><br><span class="line"><span class="function">Status <span class="title">Remove</span><span class="params">(BSTree node, BSTree &amp;root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// node 待删除结点 root 根（！！！注意若是删除了根，要更改一下！） </span></span><br><span class="line">	<span class="keyword">if</span>(node == <span class="literal">NULL</span>)</span><br><span class="line">		<span class="keyword">return</span> ERROR;</span><br><span class="line">	<span class="comment">// 获取node 信息</span></span><br><span class="line">	BSTree pt = node-&gt;parent; </span><br><span class="line">	BSTree lc = node-&gt;lchild;</span><br><span class="line">	BSTree rc = node-&gt;rchild;</span><br><span class="line">	<span class="comment">// 检测node是parent的左孩子/右孩子 </span></span><br><span class="line">	<span class="type">int</span> left = (pt &amp;&amp; pt-&gt;lchild == node)? <span class="number">1</span> : <span class="number">0</span>;	<span class="comment">// 注意加一个pt先判断！要不然就可能使用NULL指针 </span></span><br><span class="line">	<span class="comment">// 情况1：node没有孩子（直接删除即可） </span></span><br><span class="line">	<span class="keyword">if</span>(lc == <span class="literal">NULL</span> &amp;&amp; rc == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(pt)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(left)</span><br><span class="line">				pt-&gt;lchild = <span class="literal">NULL</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				pt-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(node == root)</span><br><span class="line">			root = <span class="literal">NULL</span>;</span><br><span class="line">		<span class="keyword">delete</span> node;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 情况2：node有两个孩子（找到直接前驱front，替代node，删除front，就回到情况1.2了） </span></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(lc &amp;&amp; rc)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// 1.找到直接前驱front </span></span><br><span class="line">		BSTNode *front = <span class="built_in">FindFront</span>(node);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 2.替换掉node，成为了front（注意，不可直接node = front，错的！！！） </span></span><br><span class="line">		node-&gt;data = front-&gt;data;</span><br><span class="line">		node-&gt;cnt = front-&gt;cnt;</span><br><span class="line">		<span class="comment">//node-&gt;parent = front-&gt;parent;	// 不需要更改parent/child！！！ </span></span><br><span class="line">		<span class="comment">//node-&gt;lchild = front-&gt;lchild;</span></span><br><span class="line">		<span class="comment">//node-&gt;rchild = front-&gt;rchild;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 3.把front删除 </span></span><br><span class="line">		<span class="built_in">Remove</span>(front, root);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="comment">// 情况3：node只有一个孩子（孩子拉上来填补） </span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		BSTree c = (lc)? lc : rc;</span><br><span class="line">		<span class="keyword">if</span>(pt)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(left)</span><br><span class="line">				pt-&gt;lchild = c;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				pt-&gt;rchild = c;</span><br><span class="line">			c-&gt;parent = pt;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(node == root)</span><br><span class="line">			root = c;</span><br><span class="line">		<span class="keyword">delete</span> node;</span><br><span class="line">	 &#125; </span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="5-2-2-平衡二叉树-BBT-AVL">5.2.2 平衡二叉树 BBT / AVL</h4>
<ul>
<li>
<p>定义</p>
<p>任意结点的左右子树的高度差的绝对值不超过1，这种二叉排序树为平衡二叉树。</p>
</li>
<li>
<p>平衡因子</p>
<p>每个结点都有平衡因子</p>
<p>平衡因子 = 左子树高度 - 右子树高度</p>
<p>只可能是0、1、-1</p>
</li>
</ul>
<h5 id="平衡调整">平衡调整</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT0-0-0.png" alt="0-0-0" style="zoom: 67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT0-0-1.png" alt="0-0-1" style="zoom: 67%;" /> 
<h5 id="（1）LL型">（1）LL型</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-1-1.png" alt="1-1-1" style="zoom:60%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-1-2.png" alt="1-1-2" style="zoom:60%;" /> 
<h5 id="（2）RR型">（2）RR型</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-2-1.png" alt="1-2-1" style="zoom:60%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-2-2.png" alt="1-2-2" style="zoom:60%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-2-3.png" alt="1-2-3" style="zoom:60%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-2-4.png" alt="1-2-4" style="zoom:60%;" /> 
<h5 id="（3）LR型">（3）LR型</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-3-1.png" alt="1-3-1" style="zoom:60%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-3-2.png" alt="1-3-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-3-3.png" alt="1-3-3" style="zoom:67%;" /> 
<h5 id="（4）RL型">（4）RL型</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-4-1.png" alt="1-4-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-4-2.png" alt="1-4-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT1-4-3.png" alt="1-4-3" style="zoom:67%;" /> 
<h5 id="示例-2">示例</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT2-1-1.png" alt="2-1-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT2-1-2.png" alt="2-1-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT2-1-3.png" alt="2-1-3" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT2-1-4.png" alt="2-1-4" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT2-1-5.png" alt="2-1-5" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BBT2-1-6.png" alt="2-1-6" style="zoom:67%;" /> 
<h4 id="5-2-3-红黑树">5.2.3 红黑树</h4>
<h5 id="辨析">辨析</h5>
<blockquote>
<ul>
<li>不同的二叉排序树，主要区别在于：维护二叉树平衡的方式不同</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT0-0-2.png" alt="0-0-2" style="zoom: 33%;" /> 
<ul>
<li>
<p>所有平衡树的结点旋转算法都是通用的，包括左旋和右旋两种。</p>
<p>结点旋转的目的是，在保持二叉查找树的前提下，使树的结构变得平衡。</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT0-0-5.png" alt="0-0-5" style="zoom:67%;" /> 
</li>
<li>
<p>右旋</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT0-0-7.png" alt="0-0-7" style="zoom:67%;" /> 
</li>
<li>
<p>左旋</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT0-0-8.png" alt="0-0-8" style="zoom:67%;" /> 
</li>
</ul>
</blockquote>
<h5 id="定义">定义</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT0-0-3.png" alt="0-0-3" style="zoom:80%;" /> 
<h5 id="插入数据">插入数据</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT2-1-1.png" alt="2-1-1" style="zoom: 67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT2-1-2.png" alt="2-1-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT2-1-3.png" alt="2-1-3" style="zoom:67%;" /> 
<blockquote>
<p>疑问：为什么最初是染红，而不是染黑？</p>
<p>答：因为这样做，可以更少地违背红黑树的性质，更容易恢复红黑树应有的性质。</p>
</blockquote>
<h5 id="双红修正">双红修正</h5>
<ul>
<li>
<p>包含两种操作</p>
<ul>
<li>结点左右旋转</li>
<li>改变结点颜色</li>
</ul>
</li>
<li>
<p>双红修正是一个<strong>从底向上的循环过程</strong>。</p>
</li>
<li>
<p>一共包含<strong>三种场景</strong>：</p>
<ul>
<li>场景1：存在 uncle 结点</li>
<li>场景2-1：不存在 uncle 结点，自己是左孩子</li>
<li>场景2-2：不存在 uncle 结点，自己是右孩子</li>
</ul>
<p>注：黑色即被认为不存在。</p>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT3-0-4.png" alt="3-0-4" style="zoom:67%;" /> 
<h5 id="修正场景分析">修正场景分析</h5>
<ul>
<li><strong>场景1：存在 uncle 结点</strong></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT4-0-1.png" alt="4-0-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT4-0-2.png" alt="4-0-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT4-0-3.png" alt="4-0-3" style="zoom:67%;" /> 
<ul>
<li><strong>场景2：不存在 uncle 结点</strong></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT4-1-1.png" alt="4-1-1" style="zoom:67%;" /> 
<ul>
<li><strong>场景2-1：不存在 uncle 结点，自己是左孩子</strong></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT4-1-2.png" alt="4-1-2" style="zoom:67%;" /> 
<ul>
<li><strong>场景2-2：不存在 uncle 结点，自己是右孩子</strong></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT4-2-1.png" alt="4-2-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT4-2-2.png" alt="4-2-2" style="zoom: 80%;" /> 
<blockquote>
<p>其中，场景2-1 和场景2-2 的结果对比如下：</p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT4-2-9.png" alt="4-2-9" style="zoom: 67%;" /> 
</blockquote>
<h5 id="示例-3">示例</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT5-0-1.png" alt="5-0-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT5-0-2.png" alt="5-0-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT5-0-3.png" alt="5-0-3" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT5-0-4.png" alt="5-0-4" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/RBT5-0-5.png" alt="5-0-5" style="zoom:67%;" /> 
<h5 id="代码：数据结构">代码：数据结构</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 状态码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR 0 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 红黑 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLACK 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RED 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 红黑树结点 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">RBNode</span>&#123;</span><br><span class="line">	<span class="type">int</span> value;	<span class="comment">// 保存基本数据信息</span></span><br><span class="line">	<span class="type">int</span> color;	<span class="comment">// 结点颜色，BLACK 和 RED，默认BLACK</span></span><br><span class="line">	RBNode *left;	<span class="comment">// 左子树</span></span><br><span class="line">	RBNode *right;	<span class="comment">// 右子树</span></span><br><span class="line">	RBNode *parent;	<span class="comment">// 父结点</span></span><br><span class="line">	<span class="type">int</span> size;	<span class="comment">// 以该结点为根的树，包含了多少个子节点</span></span><br><span class="line">	<span class="type">int</span> cnt;	<span class="comment">// 相同结点的个数</span></span><br><span class="line">	<span class="comment">// 传入结点保存的数值，并初始化各个变量</span></span><br><span class="line">	<span class="built_in">RBNode</span>(<span class="type">int</span> _value)</span><br><span class="line">	&#123;</span><br><span class="line">		value = _value;</span><br><span class="line">		color = BLACK;</span><br><span class="line">		left = <span class="literal">NULL</span>;</span><br><span class="line">		right = <span class="literal">NULL</span>;</span><br><span class="line">		parent = <span class="literal">NULL</span>;</span><br><span class="line">		size = <span class="number">1</span>;</span><br><span class="line">		cnt = <span class="number">1</span>;</span><br><span class="line">	 &#125; </span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure>
<h5 id="代码：左旋、右旋">代码：左旋、右旋</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 左旋 </span></span><br><span class="line"><span class="comment">// 将传入的 X 结点进行左旋与当前树的根结点，在旋转过程中，更新根结点</span></span><br><span class="line"><span class="function">Status <span class="title">Left_Rotate</span><span class="params">(RBNode *x, RBNode *&amp;root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	RBNode *y = x-&gt;right;</span><br><span class="line">	x-&gt;right = y-&gt;left; </span><br><span class="line">	<span class="keyword">if</span>(y-&gt;left)</span><br><span class="line">		y-&gt;left-&gt;parent = x;</span><br><span class="line">	y-&gt;parent = x-&gt;parent;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 若恰好x就是根结点 </span></span><br><span class="line">	<span class="keyword">if</span>(!x-&gt;parent)</span><br><span class="line">		root = y;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(x == x-&gt;parent-&gt;left)</span><br><span class="line">			x-&gt;parent-&gt;left = y;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			x-&gt;parent-&gt;right = y;</span><br><span class="line">	&#125; </span><br><span class="line">	x-&gt;parent = y;</span><br><span class="line">	y-&gt;left = x;</span><br><span class="line">	<span class="comment">// 更新信息</span></span><br><span class="line">	<span class="built_in">update_node_size</span>(x);</span><br><span class="line">	<span class="built_in">update_node_size</span>(y); </span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 右旋 </span></span><br><span class="line"><span class="comment">// 将传入的 X 结点进行右旋与当前树的根结点，在旋转过程中，更新根结点</span></span><br><span class="line"><span class="function">Status <span class="title">Right_Rotate</span><span class="params">(RBNode *x, RBNode *&amp;root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	RBNode *y = x-&gt;left;</span><br><span class="line">	x-&gt;left = y-&gt;right; </span><br><span class="line">	<span class="keyword">if</span>(y-&gt;right)</span><br><span class="line">		y-&gt;right-&gt;parent = x;</span><br><span class="line">	y-&gt;parent = x-&gt;parent;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 若恰好x就是根结点 </span></span><br><span class="line">	<span class="keyword">if</span>(!x-&gt;parent)</span><br><span class="line">		root = y;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(x == x-&gt;parent-&gt;left)</span><br><span class="line">			x-&gt;parent-&gt;left = y;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			x-&gt;parent-&gt;right = y;</span><br><span class="line">	&#125; </span><br><span class="line">	x-&gt;parent = y;</span><br><span class="line">	y-&gt;right = x;</span><br><span class="line">	<span class="comment">// 更新信息</span></span><br><span class="line">	<span class="built_in">update_node_size</span>(x);</span><br><span class="line">	<span class="built_in">update_node_size</span>(y); </span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新信息 </span></span><br><span class="line"><span class="function">Status <span class="title">update_node_size</span><span class="params">(RBNode *node)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> size = node-&gt;cnt;</span><br><span class="line">	<span class="keyword">if</span>(node-&gt;left)</span><br><span class="line">		size += node-&gt;left-&gt;size;</span><br><span class="line">	<span class="keyword">if</span>(node-&gt;right)</span><br><span class="line">		size += node-&gt;right-&gt;size;</span><br><span class="line">	node-&gt;size = size;</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取node结点的uncle指针</span></span><br><span class="line"><span class="function">RBNode *<span class="title">uncle_node</span><span class="params">(RBNode *node)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	RBNode *parent = node-&gt;parent;</span><br><span class="line">	RBNode *grandparent = parent-&gt;parent;</span><br><span class="line">	<span class="keyword">if</span>(parent == grandparent-&gt;left)</span><br><span class="line">		<span class="keyword">return</span> grandparent-&gt;right;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> grandparent-&gt;left;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h5 id="代码：双红修正">代码：双红修正</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 核心：双红修正</span></span><br><span class="line"><span class="function">Status <span class="title">Fix_Double_Red</span><span class="params">(RBNode *node, RBNode *&amp;root)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// 从底向上修正的循环</span></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// 到根，返回 </span></span><br><span class="line">		<span class="keyword">if</span>(node == root)</span><br><span class="line">		&#123;</span><br><span class="line">			node-&gt;color = BLACK;</span><br><span class="line">			<span class="keyword">return</span> OK; </span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		RBNode *parent = node-&gt;parent;</span><br><span class="line">		<span class="comment">// 完成修正，返回 </span></span><br><span class="line">		<span class="keyword">if</span>(parent-&gt;color == BLACK)</span><br><span class="line">			<span class="keyword">return</span> OK;</span><br><span class="line">		RBNode *grandparent = node-&gt;parent-&gt;parent;</span><br><span class="line">		RBNode *uncle = <span class="built_in">uncle_node</span>(node);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 场景1 </span></span><br><span class="line">		<span class="keyword">if</span>(uncle &amp;&amp; uncle-&gt;color == RED)</span><br><span class="line">		&#123;</span><br><span class="line">			parent-&gt;color = BLACK;</span><br><span class="line">			uncle-&gt;color = BLACK;</span><br><span class="line">			grandparent-&gt;color = RED;</span><br><span class="line">			node = grandparent;</span><br><span class="line">		 &#125;</span><br><span class="line">		<span class="comment">// 场景2 </span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// 场景2-1</span></span><br><span class="line">			<span class="keyword">if</span>(parent == grandparent-&gt;left)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(node == parent-&gt;left)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">// 染色 旋转 </span></span><br><span class="line">					parent-&gt;color = BLACK;</span><br><span class="line">					grandparent-&gt;color = RED;</span><br><span class="line">					<span class="built_in">Right_Rotate</span>(grandparent, root);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">// 染色 两次旋转 </span></span><br><span class="line">					node-&gt;color = BLACK;</span><br><span class="line">					grandparent-&gt;color = RED;</span><br><span class="line">					<span class="built_in">Left_Rotate</span>(parent, root); </span><br><span class="line">					<span class="built_in">Right_Rotate</span>(grandparent, root);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 场景2-2</span></span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(node == parent-&gt;right)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">// 染色 旋转 </span></span><br><span class="line">					parent-&gt;color = BLACK;</span><br><span class="line">					grandparent-&gt;color = RED;</span><br><span class="line">					<span class="built_in">Left_Rotate</span>(grandparent, root);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="comment">// 染色 两次旋转 </span></span><br><span class="line">					node-&gt;color = BLACK;</span><br><span class="line">					grandparent-&gt;color = RED;</span><br><span class="line">					<span class="built_in">Right_Rotate</span>(parent, root); </span><br><span class="line">					<span class="built_in">Left_Rotate</span>(grandparent, root);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 完成场景2-1或2-2，就算完成了 </span></span><br><span class="line">			<span class="keyword">return</span> OK; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	 </span><br><span class="line">	<span class="comment">// 出错 </span></span><br><span class="line">	<span class="keyword">return</span> ERROR; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h5 id="代码：插入操作">代码：插入操作</h5>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 插入操作</span></span><br><span class="line"><span class="function">Status <span class="title">Node_Insert</span><span class="params">(RBNode *&amp;root, RBNode *node)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	RBNode *ptr = root;</span><br><span class="line">	<span class="keyword">while</span>(ptr != node)</span><br><span class="line">	&#123;</span><br><span class="line">		ptr-&gt;size++;</span><br><span class="line">		<span class="comment">// 如果当前插入结点值已经存在</span></span><br><span class="line">		<span class="keyword">if</span>(node-&gt;value == ptr-&gt;value)</span><br><span class="line">		&#123;</span><br><span class="line">			ptr-&gt;cnt++;</span><br><span class="line">			<span class="keyword">return</span> OK;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 若不存在，则继续寻找位置插入</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(node-&gt;value &lt; ptr-&gt;value)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!ptr-&gt;left)</span><br><span class="line">			&#123;</span><br><span class="line">				ptr-&gt;left = node;</span><br><span class="line">				node-&gt;parent = ptr;</span><br><span class="line">			&#125;</span><br><span class="line">			ptr = ptr-&gt;left;</span><br><span class="line">		 &#125; </span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(node-&gt;value &gt; ptr-&gt;value)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!ptr-&gt;right)</span><br><span class="line">			&#123;</span><br><span class="line">				ptr-&gt;right = node;</span><br><span class="line">				node-&gt;parent = ptr;</span><br><span class="line">			&#125;</span><br><span class="line">			ptr = ptr-&gt;right;</span><br><span class="line">		 &#125; </span><br><span class="line">	&#125;</span><br><span class="line">	node-&gt;color = RED;</span><br><span class="line">	<span class="built_in">Fix_Double_Red</span>(node, root);</span><br><span class="line">	<span class="keyword">return</span> OK;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure>
<h4 id="5-2-4-B树、B-树">5.2.4 B树、B+树</h4>
<h5 id="定义-2">定义</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BT0-0-1.png" alt="BT0-0-1"  /> 
<h5 id="查找-2">查找</h5>
<ul>
<li>查找包括两个基本操作
<ol>
<li>在B树中找结点</li>
<li>在结点内找关键字</li>
</ol>
</li>
</ul>
<h5 id="插入-2">插入</h5>
<ul>
<li>
<p>将关键字 key 插入 B树的过程：</p>
<ol>
<li>
<p>定位</p>
<p>利用前述的 B树查找算法，找到插入该关键字的最底层的某个非叶结点</p>
</li>
<li>
<p>插入</p>
<p>在B树中，每个非失败结点的关键字个数都在区间<code>[ m/2向上取整 - 1, m - 1]</code>内。</p>
<ul>
<li>插入后关键字个数小于 m：可以直接插入</li>
<li>否则：对结点进行分裂（B树高度+1）</li>
</ul>
</li>
</ol>
</li>
</ul>
<h5 id="删除-2">删除</h5>
<ul>
<li>三种情况
<ol>
<li>直接删除关键字（删除后仍然是满足最小关键字个数）</li>
<li>兄弟够借：借、调整</li>
<li>兄弟不够借：合并</li>
</ol>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BT0-0-2.png" alt="BT0-0-2" style="zoom: 33%;" /> 
<h5 id="B-树">B+树</h5>
<ul>
<li>
<p>主要差异</p>
<ol>
<li>
<p>在 B+树 中，具有 n 个关键字的结点只含有 n 棵子树，即每个关键字对应一棵子树；</p>
<p>而在B树 中，具有 n 个关键字的结点含有 n+1 棵子树。</p>
</li>
<li>
<p>在 B+树 中，每个结点（非根内部结点）的关键字个数 n 的范围是 <code>m/2向上取整  &lt;=  n  &lt;= m</code></p>
<p>（而根结点是<code>2 &lt;= n &lt;= m</code>）</p>
<p>在 B树 中，每个结点（非根内部结点）的关键字个数 n 的范围是 <code>m/2向上取整  &lt;=  n  &lt;= m-1</code></p>
<p>（而根结点是<code>1 &lt;= n &lt;= m-1</code>）</p>
</li>
<li>
<p>在 B+树 中，叶结点包含了全部关键字，非叶结点中出现的关键字也会出现在叶结点中；</p>
<p>而 B树 中，最外层的终端结点包含的关键字和其他结点包含的关键字是不重复的。</p>
</li>
<li>
<p>在 B+树 中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。</p>
</li>
</ol>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/BT0-1-1.png" alt="BT0-1-1" style="zoom:80%;" /> 
<h3 id="5-3-散列结构">5.3 散列结构</h3>
<h4 id="5-3-1-散列表（哈希表）">5.3.1 散列表（哈希表）</h4>
<ul>
<li>
<p>定义</p>
<p>根据关键字而直接进行访问的数据结构。</p>
<p>散列表建立了关键字和存储地址之间的一种直接映射关系。</p>
</li>
<li>
<p>时间复杂度</p>
<p>理想情况下，为<code>O(1)</code>，即与表中元素个数无关。</p>
</li>
<li>
<p>散列函数</p>
<p>一个把查找表中的关键字映射成该关键字对应的地址的函数。</p>
<p>记为 <code>Hash(key) = Addr</code></p>
</li>
<li>
<p>冲突</p>
<p>散列函数可能会把两个或两个以上的不同关键字映射到同一地址，称为冲突。</p>
</li>
<li>
<p>常用散列函数</p>
<ol>
<li>直接定址法</li>
<li>除留余数法</li>
<li>数字分析法</li>
<li>平方取中法</li>
<li>折叠法</li>
<li>伪随机数法</li>
</ol>
</li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash2-1-1.png" alt="2-1-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash2-2-1.png" alt="2-2-1" style="zoom:67%;" /> 
<h4 id="5-3-2-处理冲突">5.3.2 处理冲突</h4>
<ul>
<li><strong>开放定址法</strong></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash3-1-1.png" alt="3-1-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash3-1-2.png" alt="3-1-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash3-1-3.png" alt="3-1-3" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash4-1-1.png" alt="4-1-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash4-1-2.png" alt="4-1-2" style="zoom:67%;" /> 
<ul>
<li><strong>拉链法</strong></li>
</ul>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash5-1-1.png" alt="5-1-1" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash5-1-2.png" alt="5-1-2" style="zoom: 67%;" /> 
<blockquote>
<p>拉链法的优点：</p>
<ul>
<li>非同义词不会冲突，无“聚集”现象</li>
<li>链表上结点空间动态申请，更适合于表长不确定的情况</li>
</ul>
</blockquote>
<h4 id="5-3-3-散列表的查找">5.3.3 散列表的查找</h4>
<h5 id="流程">流程</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash6-1-1.png" alt="6-1-1" style="zoom:67%;" /> 
<h5 id="示例-4">示例</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash6-1-2.png" alt="6-1-2" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash6-2-1.png" alt="6-2-1" style="zoom:67%;" /> 
<h5 id="效率分析">效率分析</h5>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash6-2-3.png" alt="6-2-3" style="zoom: 67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/Hash6-2-4.png" alt="6-2-4" style="zoom:67%;" /> 
<h4 id="5-3-4-结论">5.3.4 结论</h4>
<ul>
<li><strong>散列表技术具有很好的平均性能</strong>，优于一些传统的技术</li>
<li><strong>链地址法</strong> 优于 开地址法</li>
<li><strong>除留余数法</strong>作散列函数 优于 其他类型函数</li>
</ul>
<h2 id="六、排序">六、排序</h2>
<h3 id="6-0-知识框架">6.0 知识框架</h3>
<ul>
<li>基本概念
<ul>
<li>稳定性</li>
<li>时间复杂度</li>
<li>空间复杂度</li>
<li>操作：比较、移动</li>
</ul>
</li>
<li>内部排序
<ul>
<li>插入排序
<ul>
<li>直接插入排序</li>
<li>折半插入排序</li>
<li>希尔排序</li>
</ul>
</li>
<li>交换排序
<ul>
<li>冒泡排序</li>
<li>快速排序</li>
</ul>
</li>
<li>选择排序
<ul>
<li>简单选择排序</li>
<li>堆排序</li>
</ul>
</li>
<li>归并排序</li>
<li>基数排序</li>
</ul>
</li>
<li>外部排序
<ul>
<li>多路归并排序</li>
</ul>
</li>
</ul>
<h3 id="6-1-插入排序">6.1 插入排序</h3>
<blockquote>
<ul>
<li>
<p>基本思想：</p>
<p>每次将一个待排序的记录按关键字大小插入前面已经排好序的子序列，直到全部记录插入完成。</p>
</li>
<li>
<p>根据寻找插入位置的不同方法，可以有：</p>
<p>直接插入排序、折半插入排序、希尔排序。</p>
</li>
<li>
<p>注：A[0]并不存储元素，从A[1]开始存储</p>
</li>
</ul>
</blockquote>
<h4 id="6-1-1-直接插入排序">6.1.1 直接插入排序</h4>
<ul>
<li>时间复杂度：<code>O(n^2)</code></li>
<li>空间复杂度：<code>O(1)</code></li>
<li>稳定性：稳定</li>
<li>适用：顺序存储、链式存储</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注：A[0]并不存储元素，从A[1]开始存储</span></span><br><span class="line"><span class="function">Status <span class="title">InsertSort</span><span class="params">(ElemType A[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;=n; i++)	<span class="comment">// 将A[2]-A[n]插入到前面已经排序的序列中</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(A[i] &lt; A[i<span class="number">-1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            A[<span class="number">0</span>] = A[i];	<span class="comment">// 复制为哨兵</span></span><br><span class="line">            <span class="keyword">for</span>(j=i<span class="number">-1</span>; A[<span class="number">0</span>]&lt;A[j]; j--)</span><br><span class="line">                A[j+<span class="number">1</span>] = A[j];	<span class="comment">// 逐个后挪</span></span><br><span class="line">            A[j+<span class="number">1</span>] = A[<span class="number">0</span>];	<span class="comment">// 直到找到插入位置，则复制进插入位置</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="6-1-2-折半插入排序">6.1.2 折半插入排序</h4>
<ul>
<li>时间复杂度：<code>O(n^2)</code></li>
<li>空间复杂度：<code>O(1)</code></li>
<li>稳定性：稳定</li>
<li>适用：仅 顺序存储</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注：A[0]并不存储元素，从A[1]开始存储</span></span><br><span class="line"><span class="function">Status <span class="title">InsertSort</span><span class="params">(ElemType A[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j, low, high, mid;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        A[<span class="number">0</span>] = A[i];</span><br><span class="line">        <span class="comment">// 先找位置</span></span><br><span class="line">        low = <span class="number">1</span>, high = i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(low &lt;= high)</span><br><span class="line">        &#123;</span><br><span class="line">            mid = (low+high)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(A[mid] &gt; A[<span class="number">0</span>])</span><br><span class="line">                high = mid<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                low = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 移动(应该插入到 high+1 的位置！)</span></span><br><span class="line">        <span class="keyword">for</span>(j=i<span class="number">-1</span>; j&gt;=high+<span class="number">1</span>; j--)</span><br><span class="line">            A[j+<span class="number">1</span>] = A[j];</span><br><span class="line">        A[high+<span class="number">1</span>] = A[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="6-1-3-希尔排序">6.1.3 希尔排序</h4>
<ul>
<li>又称“缩小增量排序”</li>
<li>基本思想：先将待排序表按间隔取记录，分割成若干<code>[i, i+d, i+2d, i+3d, ...]</code>的特殊子表，对各个子表分别进行直接插入排序，此时，就会总体呈现“基本有序”，再对全体记录（也相当于d=1）进行直接插入排序。</li>
<li>时间复杂度：<code>O(n^1.3)</code></li>
<li>空间复杂度：<code>O(1)</code></li>
<li>稳定性：不稳定</li>
<li>适用：仅 顺序存储</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注：A[0]并不存储元素，从A[1]开始存储</span></span><br><span class="line"><span class="function">Status <span class="title">ShellSort</span><span class="params">(ElemType A[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> dk, i, j;</span><br><span class="line">    <span class="keyword">for</span>(dk=n/<span class="number">2</span>; dk&gt;=<span class="number">1</span>; dk=dk/<span class="number">2</span>)	<span class="comment">// 增量变化，无统一规定</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=dk+<span class="number">1</span>; i&lt;=n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(A[i] &lt; A[i-dk])</span><br><span class="line">            &#123;</span><br><span class="line">                A[<span class="number">0</span>] = A[i];	<span class="comment">// 暂存</span></span><br><span class="line">                <span class="keyword">for</span>(j=i-dk; j&gt;<span class="number">0</span> &amp;&amp; A[<span class="number">0</span>]&lt;A[j]; j-=dk)</span><br><span class="line">                    A[j+dk] = A[j];	<span class="comment">// 向后挪</span></span><br><span class="line">                A[j+dk] = A[<span class="number">0</span>];	<span class="comment">// 插入</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-2-交换排序">6.2 交换排序</h3>
<blockquote>
<ul>
<li>
<p>基本思想：</p>
<p>根据序列中两个元素关键字的比较结果来对换这两个记录再序列中的位置。</p>
</li>
<li>
<p>有：</p>
<p>冒泡排序、快速排序</p>
</li>
</ul>
</blockquote>
<h4 id="6-2-1-冒泡排序">6.2.1 冒泡排序</h4>
<ul>
<li>
<p>基本思想：</p>
<p>从后往前，两两比较相邻元素，若是逆序则交换位置，此次结果会把最小的换到第一个位置。而后第一个元素不动，继续…</p>
<p>每一趟冒泡的结果是把序列中最小元素放到了序列的最终位置。下一趟冒泡时，前一趟已经确定的元素不再参与。如此最多做n-1趟就能把所有元素排好序。</p>
</li>
<li>
<p>优化：</p>
<p>若在某一趟中，没有发生任何交换，说明已经排序好了，可以提前结束。</p>
</li>
<li>
<p>时间复杂度：<code>O(n^2)</code></p>
</li>
<li>
<p>空间复杂度：<code>O(1)</code></p>
</li>
<li>
<p>稳定性：稳定</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">BubbleSort</span><span class="params">(ElemType A[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">true</span>;	<span class="comment">// 表示本趟冒泡是否发生交换</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span> &amp;&amp; flag; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=n<span class="number">-1</span>; j&gt;i; j--)</span><br><span class="line">            <span class="keyword">if</span>(A[j<span class="number">-1</span>] &gt; A[j])</span><br><span class="line">            	<span class="built_in">swap</span>(A[j<span class="number">-1</span>], A[j]), flag = <span class="literal">true</span>;	<span class="comment">// 交换</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/9ddea8abebb9f56912a35ed91123fad.png" alt="9ddea8abebb9f56912a35ed91123fad" style="zoom: 33%;" />  
<h4 id="6-2-2-快速排序">6.2.2 快速排序</h4>
<ul>
<li>
<p>基本思想：分治思想</p>
<p>在待排序表<code>L[1...n]</code>中任取一个元素<code>pivot</code>作为枢轴（基准，通常取首元素），通过一趟排序将待排序表划分为独立的两部分，前部分<code>L[1...k-1]</code>中元素均小于<code>pivot</code>，后部分<code>L[k+1...n]</code>均大于<code>pivot</code>，而<code>pivot</code>放在<code>L[k]</code>，这就是一次划分。然后分别递归地对两个子表重复上述过程，直到每部分内只有一个元素或空为止。</p>
</li>
<li>
<p>时间复杂度：<code>O(n log2 n)</code></p>
</li>
<li>
<p>空间复杂度：<code>O(log2 n)</code></p>
</li>
<li>
<p>稳定性：不稳定</p>
</li>
</ul>
<blockquote>
<p>快速排序不是自然排序（自然排序：最初序列越有序，则排序越快）</p>
<p>快速排序在最初序列有序时，反而是更慢！</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 快速排序</span></span><br><span class="line"><span class="function">Status <span class="title">QuickSort</span><span class="params">(ElemType A[], <span class="type">int</span> low, <span class="type">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(low &lt; high)	<span class="comment">// 递归跳出的条件</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 进行划分产生前部分、后部分，并返回 pivot 的位置 k</span></span><br><span class="line">        <span class="type">int</span> pivotpos = <span class="built_in">Partition</span>(A, low, high);</span><br><span class="line">        <span class="built_in">QuickSort</span>(A, low, pivotpos<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">QuickSort</span>(A, pivotpos+<span class="number">1</span>, high);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 一趟划分</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Partition</span><span class="params">(ElemType A[], <span class="type">int</span> low, <span class="type">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ElemType pivot = A[low];	<span class="comment">// 取第一个作为划分基准</span></span><br><span class="line">    <span class="keyword">while</span>(low &lt; high)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// low 空出来了，从 high 部找一个小于 pivot 的放到 low 部</span></span><br><span class="line">        <span class="keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot)</span><br><span class="line">            high--;</span><br><span class="line">        A[low] = A[high];</span><br><span class="line">        <span class="comment">// high 空出来了，从 low 部找一个小于 pivot 的放到 high 部</span></span><br><span class="line">        <span class="keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot)</span><br><span class="line">            low++;</span><br><span class="line">        A[high] = A[low];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// high = low = k</span></span><br><span class="line">    A[low] = pivot;</span><br><span class="line">    <span class="keyword">return</span> low;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/5ffe6ac0a5b2aab5eb6d87c07337e67.png" alt="5ffe6ac0a5b2aab5eb6d87c07337e67" style="zoom: 80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/4c600e427ab404877a56bb92c39084c.png" alt="4c600e427ab404877a56bb92c39084c" style="zoom: 80%;" /> 
<h3 id="6-3-选择排序">6.3 选择排序</h3>
<blockquote>
<ul>
<li>
<p>基本思想：</p>
<p>每一趟（如第 i 趟）在后面 <code>n-i+1</code>（ i =1,2,3,…,n-1）个排序元素中选取关键字最小的元素，作为有序子序列的第 i 个元素，直到第 n-1 趟做完，待排序元素只剩下 1 个，就排序完成了。</p>
</li>
</ul>
</blockquote>
<h4 id="6-3-1-简单选择排序">6.3.1 简单选择排序</h4>
<ul>
<li>时间复杂度：<code>O(n^2)</code></li>
<li>空间复杂度：<code>O(1)</code></li>
<li>稳定性：不稳定</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Status <span class="title">SelectSort</span><span class="params">(ElemType A[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> min = i;	<span class="comment">// 记录最小元素位置</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>; j&lt;n; j++)</span><br><span class="line">            <span class="keyword">if</span>(A[j] &lt; A[min])</span><br><span class="line">                min = j;	<span class="comment">// 更新最小元素位置</span></span><br><span class="line">        <span class="keyword">if</span>(min != i)</span><br><span class="line">            <span class="built_in">swap</span>(A[i], A[min]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/7bfdcb18bdb4c004a25b88b34c23ff2.png" alt="7bfdcb18bdb4c004a25b88b34c23ff2" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/7616d1cf28163599340d0682ed65fa8.png" alt="7616d1cf28163599340d0682ed65fa8" style="zoom:80%;" /> 
<h4 id="6-3-2-堆排序">6.3.2 堆排序</h4>
<ul>
<li>
<p>基本思想：</p>
<p>首先把所有元素生成初始调整成有序堆，堆顶必为最值（大根堆最大值，小根堆最小值），输出根，然后重新调整剩余堆，然后再输出堆，再调整堆…直到堆中1个元素也输出结束。</p>
<ul>
<li>问1：如何生成初始有序堆？</li>
<li>问2：如何调整剩余为有序堆？</li>
</ul>
</li>
<li>
<p>时间复杂度：<code>O(n log2 n)</code></p>
</li>
<li>
<p>空间复杂度：<code>O(1)</code></p>
</li>
<li>
<p>稳定性：不稳定</p>
</li>
</ul>
<blockquote>
<p>注：虽然堆排序的逻辑结构是树形结构，但是存储结构是顺序存储！！！</p>
<ul>
<li>
<p>为什么是“<strong>从 i=[n/2] 开始，到 i=1</strong>，反复调整堆”？</p>
<p>我们实际上需要从最后一个非叶子结点开始调整。</p>
<p>根据完全二叉树的特点推导！结点序号 n 的双亲一定是 n/2（整除）。</p>
<p>那么最后一个叶子结点应该是 n/2</p>
</li>
</ul>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注：A[0] 并不存储元素，从 A[1] 开始存储。下面以大根堆为例。</span></span><br><span class="line"><span class="comment">// 构建大根堆</span></span><br><span class="line"><span class="function">Status <span class="title">BuildMaxHeap</span><span class="params">(ElemType A[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=len/<span class="number">2</span>; i&gt;<span class="number">0</span>; i--)	<span class="comment">// 从 i=[n/2]~1，反复调整堆</span></span><br><span class="line">        <span class="built_in">HeadAdjust</span>(A, i, len);</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将元素A[k]为根的子树进行调整</span></span><br><span class="line"><span class="function">Status <span class="title">HeadAdjust</span><span class="params">(ElemType A[], <span class="type">int</span> k, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    A[<span class="number">0</span>] = A[k];	<span class="comment">// 暂存</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>*k; i&lt;=len; i*=<span class="number">2</span>)	<span class="comment">// 沿 key 较大的子节点向下筛选</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; len &amp;&amp; A[i] &lt; A[i+<span class="number">1</span>])</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span>(A[<span class="number">0</span>] &gt;= A[i])	<span class="comment">// 筛选结束</span></span><br><span class="line">            <span class="keyword">break</span>;	</span><br><span class="line">        <span class="keyword">else</span>				<span class="comment">// 调整最大的到此次的根上</span></span><br><span class="line">        &#123;</span><br><span class="line">            A[k] = A[i];</span><br><span class="line">            k = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    A[k] = A[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 堆排序</span></span><br><span class="line"><span class="function">Status <span class="title">HeapSort</span><span class="params">(ElemType A[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 初始构建堆</span></span><br><span class="line">    <span class="built_in">BuildMaxHeap</span>(A, len);</span><br><span class="line">    <span class="comment">// n-1趟的交换和建堆</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=len; i&gt;<span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Visit</span>(A[<span class="number">1</span>]);		<span class="comment">// 输出堆顶</span></span><br><span class="line">        <span class="built_in">swap</span>(A[i], A[<span class="number">1</span>]);		<span class="comment">// 把堆底元素元素拉到堆顶，len-1</span></span><br><span class="line">        <span class="built_in">HeadAdjust</span>(A, <span class="number">1</span>, i<span class="number">-1</span>);	<span class="comment">// 必然已经乱序，剩余len-1个重新调整堆序</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/37bd7e1041f686146db519cd501981d.png" alt="37bd7e1041f686146db519cd501981d" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/37864da25160f11ff7e723115a8d6b2.png" alt="37864da25160f11ff7e723115a8d6b2" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/e7676bd1a483ba9945aad697051c361.png" alt="e7676bd1a483ba9945aad697051c361" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/9e7af2b3b903070947afa68815bceed.png" alt="9e7af2b3b903070947afa68815bceed" style="zoom:67%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/f23e08dd45500cf31ddab149fdde9a7.png" alt="f23e08dd45500cf31ddab149fdde9a7" style="zoom:80%;" /> 
<h3 id="6-4-归并排序">6.4 归并排序</h3>
<blockquote>
<ul>
<li>
<p>基本思想：</p>
<p>将两个或两个以上的有序表合成一个新的有序表。</p>
<p>最初可以视为是 n 个有序子表，每个子表长度为1，两两合并，得到 <code>n/2 向上取整</code> 个长度为2或1的有序表；继续两两合并…直到合成为一个长度为n的有序表。</p>
</li>
</ul>
</blockquote>
<ul>
<li>
<p>又称“2 路归并排序”</p>
</li>
<li>
<p>时间复杂度：<code>O(n log2 n)</code></p>
</li>
<li>
<p>空间复杂度：<code>O(n)</code></p>
</li>
<li>
<p>稳定性：稳定</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 归并</span></span><br><span class="line"><span class="function">Status <span class="title">Merge</span><span class="params">(ElemType A[], <span class="type">int</span> low, <span class="type">int</span> mid, <span class="type">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ElemType *B = (ElemType*)<span class="built_in">malloc</span>( (n+<span class="number">1</span>) * <span class="built_in">sizeof</span>(ElemType) );	<span class="comment">// 辅助数组 B</span></span><br><span class="line">    <span class="comment">// 表A 的两段 [low...mid] 和 [mid+1...high] 各自有序，将它们合并为一个有序表</span></span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="comment">// A 中元素全复制到 B 中</span></span><br><span class="line">    <span class="keyword">for</span>(k=low; k&lt;=high; k++)</span><br><span class="line">        B[k] = A[k];	</span><br><span class="line">    <span class="comment">// 开始检测依次赋值</span></span><br><span class="line">    <span class="keyword">for</span>(i=low, j=mid+<span class="number">1</span>, k=i; i&lt;=mid &amp;&amp; j&lt;=high; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(B[i] &lt;= B[j])</span><br><span class="line">            A[k] = B[i++];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            A[k] = B[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 未检测完的部分（下面两个只会有一个成立）</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid)</span><br><span class="line">        A[k++] = B[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= high)</span><br><span class="line">        A[k++] = B[j++];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 归并排序</span></span><br><span class="line"><span class="function">Status <span class="title">MergeSort</span><span class="params">(ElemType A[], <span class="type">int</span> low, <span class="type">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(low &lt; high)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 从中间划分为两个子序列，并通过归并排序为有序</span></span><br><span class="line">        <span class="type">int</span> mid = (low+high)/<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">MergeSort</span>(A, low, mid);	</span><br><span class="line">        <span class="built_in">MergeSort</span>(A, mid+<span class="number">1</span>, high);</span><br><span class="line">        <span class="comment">// 两个有序归并为一个有序</span></span><br><span class="line">        <span class="built_in">Merge</span>(A, low, mid, high);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/e4506664fe529e308d5ba8d0a4e8a55.png" alt="e4506664fe529e308d5ba8d0a4e8a55" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/33a3c6f672cf7bb4a0a6bc5952d636d.png" alt="33a3c6f672cf7bb4a0a6bc5952d636d" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/55616562e80b0ed2e00ab7d30d678d1.png" alt="55616562e80b0ed2e00ab7d30d678d1" style="zoom:80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/9b2c1d374487d835e86a9fa9f8c5356.png" alt="9b2c1d374487d835e86a9fa9f8c5356" style="zoom:80%;" /> 
<h3 id="6-5-基数排序">6.5 基数排序</h3>
<blockquote>
<ul>
<li>
<p>基本思想：</p>
<p>借助多关键字排序的思想对单逻辑关键字进行排序。</p>
</li>
</ul>
</blockquote>
<ul>
<li>
<p>方法：</p>
<ul>
<li>最高位优先法（ MSD ）</li>
<li>最低位优先法（ LSD ）</li>
</ul>
</li>
<li>
<p>时间复杂度：<code>O( d*(n + r) )</code></p>
<p>其中，基数排序需要进行 d 趟分配和收集，每趟分配需要O(n)，收集需要O®。与序列初始状态无关（不是自然排序）。</p>
</li>
<li>
<p>空间复杂度：<code>O(r)</code></p>
<p>辅助 r 个队列，r 个队头指针，r 个队尾指针。</p>
</li>
<li>
<p>稳定性：稳定</p>
</li>
</ul>
<p><strong>示例1</strong></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/47ecdf0fafdfab8921c0ae110a43792.png" alt="47ecdf0fafdfab8921c0ae110a43792" style="zoom: 80%;" /> 
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/d7c4acfab4b8fcdb1df95c021c6e0d4.png" alt="d7c4acfab4b8fcdb1df95c021c6e0d4" style="zoom:80%;" /> 
<p><strong>示例2</strong></p>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/d22c44bdc983e85d90b2f2c7f92b7fa.png" alt="d22c44bdc983e85d90b2f2c7f92b7fa" style="zoom:80%;" /> 
<blockquote>
<ul>
<li>
<p>可以看到，基数排序是有很大优势的！</p>
</li>
<li>
<p>但是，基数排序并不是所有情况都适用！</p>
<p>前提必须知道需要比较的关键字类数（如个、十、百位一共3个），</p>
<p>且关键字数目必须有限（如每位只会是0-9这10个情况）。</p>
</li>
</ul>
</blockquote>
<h3 id="6-6-总结">6.6 总结</h3>
<h4 id="6-6-1-性能对比">6.6.1 性能对比</h4>
<img src="https://cdn.jsdelivr.net/gh/Seymour0314/PicGo/posts/DataStructure/0c8431e3163389e12c70643683c664c.png" alt="0c8431e3163389e12c70643683c664c" style="zoom:80%;" /> 
<h4 id="6-6-2-时间性能">6.6.2 时间性能</h4>
<ul>
<li><code>O(n)</code>
<ul>
<li>基数排序</li>
</ul>
</li>
<li><code>O(n log2 n)</code>
<ul>
<li>快速排序（最佳）</li>
<li>堆排序</li>
<li>归并排序</li>
</ul>
</li>
<li><code>O(n^2)</code>
<ul>
<li>直接插入排序（最佳）</li>
<li>冒泡排序</li>
<li>简单选择排序</li>
</ul>
</li>
</ul>
<blockquote>
<ol>
<li>
<p>当最初序列已经有序时，直接插入排序、冒泡排序能达到<code>O(n)</code>的效果；</p>
<p>而此时，快速排序反而退化为最差效果<code>O(n^2)</code>。</p>
</li>
<li>
<p>简单选择排序、堆排序、归并排序的时间性能与最初分布无关。</p>
</li>
</ol>
</blockquote>
<h4 id="6-6-3-空间性能">6.6.3 空间性能</h4>
<ul>
<li>
<p><code>O(1)</code></p>
<p>所有简单排序（直接插入、冒泡、简单选择）、堆排序</p>
</li>
<li>
<p><code>O(rd)</code></p>
<p>链式基数排序（队头队尾指针）</p>
</li>
<li>
<p><code>O(log n)</code></p>
<p>快速排序</p>
</li>
<li>
<p><code>O(n)</code></p>
<p>归并排序</p>
</li>
</ul>
<h4 id="6-6-4-稳定性">6.6.4 稳定性</h4>
<ol>
<li>
<p>当有多关键字排序时，必须采用稳定排序。</p>
</li>
<li>
<p>证明排序不稳定，只需要举出例子即可。</p>
</li>
<li>
<p>不稳定的排序有：</p>
<p>折半插入排序、希尔排序、快速排序、简单选择排序、堆排序</p>
</li>
</ol>
]]></content>
      <categories>
        <category>大学课程</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
</search>
