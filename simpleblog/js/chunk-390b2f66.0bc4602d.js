(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-390b2f66"],{"02e5":function(s,e,t){s.exports=t.p+"img/flex5.0ec9e81c.png"},5158:function(s,e,t){s.exports=t.p+"img/flex7.d0a495d6.png"},"594e":function(s,e,t){s.exports=t.p+"img/flex3.1b371590.png"},6873:function(s,e,t){s.exports=t.p+"img/flex6.aade7abc.png"},"94a2":function(s,e,t){s.exports=t.p+"img/flex2.4434f2a2.png"},9646:function(s,e,t){s.exports=t.p+"img/flex9.7c7bdb08.png"},a517:function(s,e,t){s.exports=t.p+"img/flex8.9f13f163.png"},bb1c:function(s,e,t){s.exports=t.p+"img/flex1.b144c233.png"},bfe1:function(s,e,t){s.exports=t.p+"img/flex10.0d93c40b.png"},c7c0:function(s,e,t){function a(){var s=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},e=[function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("div",{staticClass:"frontmatter-markdown"},[a("h1",[s._v("弹性盒子 flex 布局语法")]),s._v(" "),a("blockquote",[a("h4",[s._v("官网："),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_flexible_box_layout",target:"_blank"}},[s._v("Flex 布局")])]),s._v(" "),a("p",[s._v("传统为盒子模型布局，但有缺点，如：无法实现垂直居中")]),s._v(" "),a("p",[s._v("Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。")])]),s._v(" "),a("h3",[s._v("0x01 说明")]),s._v(" "),a("p",[a("strong",[s._v("任何一个容器都可以指定为Flex布局。")])]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("display")]),s._v(": flex;\n}\n")])]),s._v(" "),a("p",[s._v("行内元素也可以使用Flex布局。")]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("display")]),s._v(": inline-flex;\n}\n")])]),s._v(" "),a("p",[s._v("Webkit内核的浏览器，必须加上-webkit前缀。")]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("display")]),s._v(": -webkit-flex; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Safari */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("display")]),s._v(": flex;\n}\n")])]),s._v(" "),a("p",[s._v("注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。")]),s._v(" "),a("p",[s._v("它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。")]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("bb1c")}}),s._v(" "),a("ul",[a("li",[a("p",[s._v("容器默认存在两根轴：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("水平的主轴（main axis）")]),s._v(" "),a("blockquote",[a("p",[s._v("主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end")])])]),s._v(" "),a("li",[a("p",[s._v("垂直的交叉轴（cross axis）")]),s._v(" "),a("blockquote",[a("p",[s._v("交叉轴的开始位置叫做cross start，结束位置叫做cross end")])])])])]),s._v(" "),a("li",[a("p",[s._v("项目默认沿主轴排列。")])]),s._v(" "),a("li",[a("p",[s._v("单个项目占据的主轴空间叫做main size，")]),s._v(" "),a("p",[s._v("占据的交叉轴空间叫做cross size。")])])])])]),s._v(" "),a("h3",[s._v("0x02 容器属性")]),s._v(" "),a("h4",[s._v("2.1 flex-direction")]),s._v(" "),a("p",[s._v("决定主轴的方向（即项目的排列方向）")]),s._v(" "),a("ul",[a("li",[s._v("row（默认值）：主轴为水平方向，起点在左端。")]),s._v(" "),a("li",[s._v("row-reverse：主轴为水平方向，起点在右端。")]),s._v(" "),a("li",[s._v("column：主轴为垂直方向，起点在上沿。")]),s._v(" "),a("li",[s._v("column-reverse：主轴为垂直方向，起点在下沿。")])]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("flex-direction")]),s._v(": row | row-reverse | column | column-reverse;\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("94a2")}}),s._v(" "),a("h4",[s._v("2.2 flex-wrap")]),s._v(" "),a("p",[s._v("默认情况下，项目都排在一条线（又称”轴线”）上。")]),s._v(" "),a("p",[s._v("flex-wrap属性定义，如果一条轴线排不下，如何换行。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("nowrap（默认）：不换行")])]),s._v(" "),a("li",[a("p",[s._v("wrap：换行，第一行在上方")])]),s._v(" "),a("li",[a("p",[s._v("wrap-reverse：换行，第一行在下方")])])]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("flex-wrap")]),s._v(": nowrap | wrap | wrap-reverse;\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("594e")}}),s._v(" "),a("h4",[s._v("2.3 flex-flow")]),s._v(" "),a("p",[s._v("flex-flow属性是flex-direction属性和flex-wrap属性的简写形式")]),s._v(" "),a("p",[s._v("默认值为row nowrap")]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("flex-flow")]),s._v(": <flex-direction> <flex-wrap>;\n}\n")])]),s._v(" "),a("h4",[s._v("==2.4 justify-content==")]),s._v(" "),a("p",[s._v("定义了项目在主轴上的对齐方式")]),s._v(" "),a("p",[s._v("具体对齐方式与轴的方向有关，下面假设主轴为从左到右。")]),s._v(" "),a("ul",[a("li",[s._v("flex-start（默认值）：左对齐")]),s._v(" "),a("li",[s._v("flex-end：右对齐")]),s._v(" "),a("li",[s._v("center： 居中")]),s._v(" "),a("li",[s._v("space-between：两端对齐，项目之间的间隔都相等")]),s._v(" "),a("li",[s._v("space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍")])]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("justify-content")]),s._v(": flex-start | flex-end | center | space-between | space-around;\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("fed5"),alt:"img"}}),s._v(" "),a("h4",[s._v("2.5 align-items")]),s._v(" "),a("p",[s._v("定义项目在交叉轴上如何对齐")]),s._v(" "),a("p",[s._v("具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。")]),s._v(" "),a("ul",[a("li",[s._v("flex-start：交叉轴的起点对齐")]),s._v(" "),a("li",[s._v("flex-end：交叉轴的终点对齐")]),s._v(" "),a("li",[s._v("center：交叉轴的中点对齐")]),s._v(" "),a("li",[s._v("baseline: 项目的第一行文字的基线对齐")]),s._v(" "),a("li",[s._v("stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度")])]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("align-items")]),s._v(": flex-start | flex-end | center | baseline | stretch;\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("02e5"),alt:"img"}}),s._v(" "),a("h4",[s._v("2.6 align-content")]),s._v(" "),a("p",[s._v("定义了多根轴线的对齐方式。")]),s._v(" "),a("p",[s._v("如果项目只有一根轴线，该属性不起作用")]),s._v(" "),a("ul",[a("li",[s._v("flex-start：与交叉轴的起点对齐")]),s._v(" "),a("li",[s._v("flex-end：与交叉轴的终点对齐")]),s._v(" "),a("li",[s._v("center：与交叉轴的中点对齐")]),s._v(" "),a("li",[s._v("space-between：与交叉轴两端对齐，轴线之间的间隔平均分布")]),s._v(" "),a("li",[s._v("space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍")]),s._v(" "),a("li",[s._v("stretch（默认值）：轴线占满整个交叉轴")])]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".box")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("align-content")]),s._v(": flex-start | flex-end | center | space-between | space-around | stretch;\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("6873"),alt:"img"}}),s._v(" "),a("h3",[s._v("0x03 项目属性")]),s._v(" "),a("h4",[s._v("3.1 order")]),s._v(" "),a("p",[s._v("定义项目的排列顺序。")]),s._v(" "),a("p",[s._v("数值越小，排列越靠前，默认为0。")]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".item")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("order")]),s._v(": <integer>;\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("5158"),alt:"image-20230402163850395"}}),s._v(" "),a("h4",[s._v("3.2 flex-grow")]),s._v(" "),a("p",[s._v("定义项目的放大比例。")]),s._v(" "),a("p",[s._v("默认为0，即如果存在剩余空间，也不放大。")]),s._v(" "),a("blockquote",[a("p",[s._v("如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。")]),s._v(" "),a("p",[s._v("如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。")])]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".item")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("flex-grow")]),s._v(": <number>; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* default 0 */")]),s._v("\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("a517"),alt:"image-20230402163934529"}}),s._v(" "),a("h4",[s._v("3.3 flex-shrink")]),s._v(" "),a("p",[s._v("定义了项目的缩小比例。")]),s._v(" "),a("p",[s._v("默认为1，即如果空间不足，该项目将缩小。")]),s._v(" "),a("blockquote",[a("p",[s._v("如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。")]),s._v(" "),a("p",[s._v("如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。")]),s._v(" "),a("p",[s._v("负值对该属性无效。")])]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".item")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("flex-shrink")]),s._v(": <number>; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* default 1 */")]),s._v("\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("9646"),alt:"image-20230402164028190"}}),s._v(" "),a("h4",[s._v("3.4 flex-basis")]),s._v(" "),a("p",[s._v("定义了在分配多余空间之前，项目占据的主轴空间（main size）。")]),s._v(" "),a("p",[s._v("浏览器根据这个属性，计算主轴是否有多余空间。")]),s._v(" "),a("p",[s._v("它的默认值为auto，即项目的本来大小。")]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".item")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("flex-basis")]),s._v(": <length> | auto; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* default auto */")]),s._v("\n}\n")])]),s._v(" "),a("p",[s._v("它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。")]),s._v(" "),a("h4",[s._v("==3.5 flex==")]),s._v(" "),a("p",[s._v("flex属性是flex-grow, flex-shrink 和 flex-basis的简写。")]),s._v(" "),a("p",[s._v("默认值为0 1 auto。后两个属性可选。")]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".item")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("flex")]),s._v(": none | [ <"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'flex-grow'")]),s._v("> <"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'flex-shrink'")]),s._v(">? || <"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'flex-basis'")]),s._v("> ]\n}\n")])]),s._v(" "),a("p",[s._v("该属性有两个快捷值：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("auto (1 1 auto)")]),s._v(" "),a("p",[s._v("全都等比例放大或缩小")])]),s._v(" "),a("li",[a("p",[s._v("none (0 0 auto)")]),s._v(" "),a("p",[s._v("全都不放大缩小")])])]),s._v(" "),a("p",[s._v("建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")]),s._v(" "),a("h4",[s._v("3.6 align-self")]),s._v(" "),a("p",[s._v("允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。")]),s._v(" "),a("p",[s._v("默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。")]),s._v(" "),a("p",[s._v("该属性可能取6个值，除了auto，其他都与align-items属性完全一致。")]),s._v(" "),a("pre",[a("code",{pre:!0,attrs:{class:"hljs language-css"}},[a("span",{pre:!0,attrs:{class:"hljs-selector-class"}},[s._v(".item")]),s._v(" {\n  "),a("span",{pre:!0,attrs:{class:"hljs-attribute"}},[s._v("align-self")]),s._v(": auto | flex-start | flex-end | center | baseline | stretch;\n}\n")])]),s._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:t("bfe1"),alt:"img"}})])}];return{render:s,staticRenderFns:e}}const l=a();s.exports={attributes:{},vue:{component:{data:function(){return{templateRender:null}},render:function(s){return this.templateRender?this.templateRender():s("div","Rendering")},created:function(){this.templateRender=l.render,this.$options.staticRenderFns=l.staticRenderFns}}}}},fed5:function(s,e,t){s.exports=t.p+"img/flex4.b1beedef.png"}}]);
//# sourceMappingURL=chunk-390b2f66.0bc4602d.js.map